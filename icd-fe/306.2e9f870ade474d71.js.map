{"version":3,"file":"306.2e9f870ade474d71.js","mappings":"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","names":["DIR_DOCUMENT","InjectionToken","providedIn","factory","DIR_DOCUMENT_FACTORY","inject","DOCUMENT","RTL_LOCALE_PATTERN","Directionality","constructor","_document","this","value","change","EventEmitter","htmlDir","documentElement","dir","_resolveDirectionality","rawValue","toLowerCase","navigator","language","test","body","ngOnDestroy","complete","ɵfac","i0","ɵprov","BidiModule","ɵmod","ɵinj","MATERIAL_SANITY_CHECKS","MATERIAL_SANITY_CHECKS_FACTORY","MatCommonModule","highContrastModeDetector","_sanityChecks","_hasDoneGlobalChecks","_applyBodyHighContrastModeCssClasses","_checkIsEnabled","name","_isTestEnvironment","i1","mixinDisabled","base","args","super","_disabled","disabled","coerceBooleanProperty","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","classList","remove","add","mixinDisableRipple","_disableRipple","disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","tabIndex","coerceNumberProperty","mixinErrorState","errorState","updateErrorState","oldState","newState","errorStateMatcher","_defaultErrorStateMatcher","isErrorState","ngControl","control","_parentFormGroup","_parentForm","stateChanges","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","Observable","subscriber","_notifySubscriber","push","_markInitialized","forEach","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","LOCALE_ID","DateAdapter","_localeChanges","Subject","localeChanges","getValidDateOrNull","obj","isDateInstance","isValid","deserialize","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","max","MAT_DATE_FORMATS","ISO_8601_REGEX","range","length","valueFunction","valuesArray","Array","i","NativeDateAdapter","matDateLocale","_platform","useUtcForDisplay","getFullYear","getDayOfWeek","getDay","getMonthNames","style","dtf","Intl","DateTimeFormat","month","timeZone","_format","Date","getDateNames","day","getDayOfWeekNames","weekday","getYearName","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","getTime","createDate","result","today","parse","parseFormat","format","displayFormat","Error","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","isNaN","NaN","d","setFullYear","setHours","n","slice","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","i1$1","MAT_NATIVE_DATE_FORMATS","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","provide","useClass","MatNativeDateModule","useValue","imports","ErrorStateMatcher","form","touched","submitted","RippleRef","_renderer","element","config","_animationForciblyDisabledThroughCss","state","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","passiveEventOptions","normalizePassiveListenerOptions","passive","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","_ngZone","elementOrElementRef","platform","_isPointerDown","_activeRipples","Map","_pointerUpEventsRegistered","isBrowser","_containerElement","coerceElement","fadeInRipple","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","rect","distX","Math","abs","right","distY","bottom","sqrt","offsetX","offsetY","ripple","document","createElement","backgroundColor","transitionDuration","appendChild","computedStyles","window","getComputedStyle","userTransitionDuration","animationForciblyDisabledThroughCss","transitionProperty","rippleRef","transform","persistent","_mostRecentTransientRipple","eventListeners","runOutsideAngular","onTransitionEnd","_finishRippleTransition","onTransitionCancel","_destroyRipple","addEventListener","set","rippleEl","opacity","fadeOutAll","_getActiveRipples","fadeOutAllNonPersistent","setupTriggerEvents","_triggerElement","_removeTriggerEvents","_registerEvents","handleEvent","event","type","_onMousedown","_onTouchStart","_onPointerUp","_startFadeOutTransition","isMostRecentTransientRipple","get","delete","size","removeEventListener","isFakeMousedown","isFakeMousedownFromScreenReader","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","clientX","clientY","rippleConfig","isFakeTouchstartFromScreenReader","touches","changedTouches","terminateOnPointerUp","eventTypes","from","keys","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","_animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","trigger","_trigger","ngOnInit","launch","configOrX","ANIMATION_MODULE_TYPE","ɵdir","selectors","MatRippleModule","MatPseudoCheckbox","ɵcmp","MatPseudoCheckboxModule","MAT_OPTION_PARENT_COMPONENT","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_MatOptgroupBase","parent","_labelId","_inert","inertGroups","inputs","MAT_OPTGROUP","MatOptgroup","t","useExisting","ngContentSelectors","_c0","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","_MatOptionBase","_element","_changeDetectorRef","_parent","group","_selected","_active","_mostRecentViewValue","id","onSelectionChange","_stateChanges","multiple","selected","active","viewValue","_getHostElement","textContent","trim","select","markForCheck","_emitSelectionChangeEvent","deselect","focus","_origin","options","setActiveStyles","setInactiveStyles","getLabel","_handleKeydown","keyCode","ENTER","SPACE","hasModifierKey","_selectViaInteraction","preventDefault","_getAriaSelected","_getTabIndex","ngAfterViewChecked","emit","MatOption","changeDetectorRef","ctx","i3","styles","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","MatOptionModule","CommonModule","animationFrameProvider","schedule","callback","request","requestAnimationFrame","cancel","cancelAnimationFrame","delegate","handle","timestamp","undefined","Subscription","AnimationFrameScheduler","AsyncScheduler","flush","action","flushId","_scheduled","actions","error","shift","execute","delay","unsubscribe","AnimationFrameAction","AsyncAction","scheduler","work","requestAsyncId","recycleAsyncId","_a","resolved","nextHandle","activeHandles","findAndClearHandle","Immediate","setImmediate","cb","Promise","resolve","then","clearImmediate","immediateProvider","AsapScheduler","AsapAction","bind","ScrollDispatcher","_scrolled","_globalSubscription","_scrolledCount","scrollContainers","register","scrollable","has","elementScrolled","subscribe","deregister","scrollableReference","scrolled","auditTimeInMs","observer","_addGlobalListener","subscription","pipe","auditTime","_removeGlobalListener","of","_","container","ancestorScrolled","ancestors","getAncestorScrollContainers","filter","target","indexOf","scrollingContainers","_subscription","_scrollableContainsElement","_getWindow","defaultView","scrollableElement","getElementRef","parentElement","fromEvent","ViewportRuler","_change","_changeListener","_viewportSize","getViewportSize","_updateViewportSize","output","getViewportRect","scrollPosition","getViewportScrollPosition","documentRect","scrollTop","scrollY","scrollLeft","scrollX","throttleTime","innerWidth","innerHeight","CdkScrollableModule","ScrollingModule","Portal","attach","host","_attachedHost","detach","isAttached","setAttachedHost","ComponentPortal","component","viewContainerRef","injector","componentFactoryResolver","TemplatePortal","templateRef","context","origin","elementRef","DomPortal","ElementRef","BasePortalOutlet","_isDisposed","attachDomPortal","hasAttached","_attachedPortal","portal","attachComponentPortal","attachTemplatePortal","_invokeDisposeFn","dispose","setDisposeFn","fn","_disposeFn","DomPortalOutlet","outletElement","_componentFactoryResolver","_appRef","_defaultInjector","anchorNode","createComment","parentNode","insertBefore","replaceChild","componentFactory","resolveComponentFactory","componentRef","createComponent","destroy","create","Injector","attachView","hostView","viewCount","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","rootNodes","rootNode","detectChanges","index","CdkPortalOutlet","_viewContainerRef","attached","_getRootNode","attachedRef","_attachedRef","ref","clear","nodeType","ELEMENT_NODE","PortalModule","scrollBehaviorSupported","supportsScrollBehavior","BlockScrollStrategy","_viewportRuler","_previousHTMLStyles","_isEnabled","enable","_canBeEnabled","root","_previousScrollPosition","coerceCssPixelValue","disable","html","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","scroll","contains","viewport","scrollHeight","scrollWidth","CloseScrollStrategy","_scrollDispatcher","_config","_scrollSubscription","_detach","_overlayRef","run","overlayRef","stream","threshold","_initialScrollPosition","updatePosition","NoopScrollStrategy","isElementScrolledOutsideView","some","containerBounds","isElementClippedByScrolling","scrollContainerRect","RepositionScrollStrategy","scrollThrottle","autoClose","overlayRect","overlayElement","ScrollStrategyOptions","noop","close","block","reposition","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","key","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","BaseOverlayDispatcher","_attachedOverlays","splice","OverlayKeyboardDispatcher","_keydownListener","overlays","_keydownEvents","observers","keydownEvents","_isAttached","OverlayOutsideClickDispatcher","_cursorStyleIsSet","_pointerDownListener","_pointerDownEventTarget","_getEventTarget","_clickListener","_outsidePointerEvents","outsidePointerEvents","_addEventListeners","IOS","_cursorOriginalValue","cursor","OverlayContainer","getContainerElement","_createContainer","containerClass","oppositePlatformContainers","querySelectorAll","setAttribute","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_animationsDisabled","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","_backdropClickHandler","_backdropTransitionendHandler","_disposeBackdrop","_scrollStrategy","_positionStrategy","positionStrategy","backdropElement","hostElement","_previousHostParent","attachResult","_updateStackingOrder","_updateElementSize","_updateElementDirection","onStable","take","_togglePointerEvents","_attachBackdrop","_toggleClasses","onDestroy","detachBackdrop","detachmentResult","_detachContentWhenStable","_disposeScrollStrategy","backdropClick","attachments","detachments","getConfig","apply","updatePositionStrategy","strategy","updateSize","sizeConfig","setDirection","direction","addPanelClass","classes","removePanelClass","getDirection","updateScrollStrategy","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","nextSibling","backdropToDetach","_backdropTimeout","setTimeout","cssClasses","isAdd","coerceArray","c","takeUntil","merge","children","backdrop","clearTimeout","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","positions","_validatePositions","_boundingBox","_isInitialRender","_lastPosition","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","withScrollableContainers","scrollables","withPositions","withViewportMargin","margin","withFlexibleDimensions","flexibleDimensions","withGrowAfterOpen","growAfterOpen","withPush","canPush","withLockedPosition","isLocked","withDefaultOffsetX","offset","withDefaultOffsetY","withTransformOriginOn","selector","_transformOriginSelector","originX","startX","_isRtl","endX","originY","overlayStartX","overlayStartY","overlayX","overlayY","point","rawOverlayRect","overlay","getRoundedBoundingClientRect","_getOffset","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","horizontalFit","_pushOverlayOnScreen","start","overflowRight","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","previousHeight","previousWidth","_hasExactPosition","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","clientHeight","horizontalStyleProperty","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","cssClass","Element","destination","hasOwnProperty","input","units","split","parseFloat","clientRect","floor","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_alignItems","_xPosition","_xOffset","_width","_height","end","centerHorizontally","centerVertically","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","xPosition","xOffset","marginLeft","marginRight","marginTop","marginBottom","OverlayPositionBuilder","global","flexibleConnectedTo","nextUniqueId","Overlay","scrollStrategies","_positionBuilder","_injector","_directionality","_animationsModuleType","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","ApplicationRef","i5","i6","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","CdkConnectedOverlay","_overlay","scrollStrategyFactory","_dir","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","_attachSubscription","_detachSubscription","_positionSubscription","viewportMargin","open","disableClose","positionChange","overlayKeydown","overlayOutsideClick","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","lockPosition","ngOnChanges","changes","_attachOverlay","_detachOverlay","_createOverlay","_buildConfig","ESCAPE","_createPositionStrategy","currentPosition","_getFlexibleConnectedPositionStrategyOrigin","transformOriginSelector","takeWhile","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","deps","useFactory","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","OverlayModule","_r10","ctx_r9","ctx_r12","_r16","ctx_r15","ctx_r17","MAT_ERROR","matFormFieldAnimations","transitionMessages","transition","animate","MatFormFieldControl","_MAT_HINT","MatLabel","MatPlaceholder","MAT_PREFIX","MAT_SUFFIX","MatSuffix","_MatFormFieldBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_destroyed","_hideRequiredMarker","_showAlwaysAnimate","_subscriptAnimationState","_hintLabel","_hintLabelId","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","appearance","Boolean","hideRequiredMarker","_appearance","oldValue","_shouldAlwaysFloat","_canLabelFloat","hintLabel","_processHints","_floatLabel","_control","_explicitFormFieldControl","_controlNonStatic","_controlStatic","getLabelId","_hasFloatingLabel","getConnectedOverlayOrigin","_connectionContainerRef","ngAfterContentInit","_validateControlChild","controlType","startWith","_validatePlaceholders","_syncDescribedByIds","valueChanges","updateOutlineGap","_prefixChildren","_suffixChildren","_hintChildren","_errorChildren","ngAfterContentChecked","ngAfterViewInit","_shouldForward","prop","_hasPlaceholder","placeholder","_placeholderChild","_hasLabel","_labelChildNonStatic","_labelChildStatic","_shouldLabelFloat","shouldLabelFloat","_hideControlPlaceholder","_getDisplayedMessages","_animateAndLockLabel","_label","_validateHints","ids","userAriaDescribedBy","startHint","find","hint","align","endHint","setDescribedByIds","labelEl","outlineStartSelector","outlineGapSelector","gapElements","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","offsetWidth","outlineGapPadding","getRootNode","i2","dirIndex","_t","_c1","_c2","_c3","i4","changeDetection","MatFormFieldModule","ObserversModule","delayWhen","delayDurationSelector","subscriptionDelay","concat","ignoreElements","operate","createOperatorSubscriber","mergeMap","mapTo","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","option","_MatAutocompleteMixinBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","autoSelectActiveOption","_MatAutocompleteBase","defaults","_activeOptionChanges","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_classList","SAFARI","_autoActiveFirstOption","_autoSelectActiveOption","isOpen","coerceStringArray","className","_setVisibilityClasses","_keyManager","ActiveDescendantKeyManager","withWrap","_setVisibility","_setScrollTop","panel","_getScrollTop","_emitSelectEvent","_getPanelAriaLabelledby","labelId","ariaLabel","ariaLabelledby","_visibleClass","_hiddenClass","viewQuery","TemplateRef","MatAutocomplete","arguments","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatAutocompleteTrigger","multi","_MatAutocompleteTriggerBase","_zone","_formField","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","autocompleteAttribute","_overlayAttached","optionSelections","defer","autocomplete","switchMap","autocompleteDisabled","_setStrategyPositions","_destroyPanel","openPanel","closePanel","_resetLabel","_pendingAutoselectedOption","_closingActionsSubscription","panelClosingActions","tabOut","_getOutsideClickStream","activeOption","activeItem","clickTarget","formField","customOrigin","writeValue","_assignOptionValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","hasModifier","_resetActiveItem","prevActiveItem","isArrowKey","UP_ARROW","DOWN_ARROW","TAB","onKeydown","_canOpen","_scrollToOption","activeItemIndex","_valueBeforeAutoSelection","_handleInput","_previousValue","_handleFocus","_handleClick","shouldAnimate","_subscribeToClosingActions","firstStable","optionChanges","tap","due","asyncScheduler","duration","timer","wasOpen","_setValueAndClose","toDisplay","_updateNativeInputValue","toSelect","_clearPreviousSelectedOption","skip","_getConnectedElement","_getPanelWidth","_portal","template","_getOverlayConfig","_handleOverlayEvents","_getOverlayPosition","overlayPanelClass","belowPositions","_aboveClass","abovePositions","panelWidth","_getHostWidth","setFirstItemActive","setActiveItem","readOnly","labelCount","newScrollPosition","offsetTop","offsetHeight","stopPropagation","i2$1","MatAutocompleteModule","BUTTON_HOST_ATTRIBUTES","_MatButtonBase","MatButton","_focusMonitor","isRoundButton","_hasHostAttributes","isIconButton","attr","monitor","stopMonitoring","focusVia","_isRippleDisabled","attributes","attribute","hasAttribute","attrs","MatButtonModule","DataSource","isDataSource","connect","ConnectableObservable","_DisposeViewRepeaterStrategy","applyChanges","itemContextFactory","itemValueResolver","itemViewChanged","forEachOperation","record","adjustedPreviousIndex","currentIndex","view","operation","previousIndex","insertContext","move","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","compareWith","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","_markSelected","values","_verifyValueAssignment","_hasQueuedChanges","_emitChangeEvent","_unmarkSelected","setSelection","oldValues","newSelectedSet","toggle","isSelected","flushEvent","_unmarkAll","otherValue","isEmpty","hasValue","sort","predicate","isMultipleSelection","added","removed","_VIEW_REPEATER_STRATEGY","MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","MAT_BUTTON_TOGGLE_GROUP","MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","MatButtonToggleGroup","uniqueIdCounter","MatButtonToggleChange","_changeDetector","defaultOptions","_vertical","_controlValueAccessorChangeFn","_name","valueChange","_markButtonsForCheck","vertical","_selectionModel","newValue","_setSelectionByValue","_buttonToggles","checked","_syncButtonToggle","deferEvents","_updateModelValue","_isSelected","_isPrechecked","_rawValue","isArray","_clearSelection","_selectValue","correspondingOption","_markForCheck","MatButtonToggle","_MatButtonToggleBase","toggleGroup","_checked","parsedTabIndex","Number","buttonToggleGroup","buttonId","_buttonElement","_onButtonClick","newChecked","_isSingleSelector","_getButtonName","MatButtonToggleModule","listenerOptions","AutofillMonitor","_monitoredElements","elementOrRef","EMPTY","info","subject","listener","animationName","isAutofilled","unlisten","_info","TextFieldModule","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","_MatInputBase","MatInput","inputValueAccessor","_autofillMonitor","_uid","focused","autofilled","_type","_readonly","_neverEmptyInputTypes","getSupportedInputTypes","_iOSKeyupListener","el","selectionStart","selectionEnd","setSelectionRange","nodeName","_inputValueAccessor","_previousNativeValue","_isServer","_isNativeSelect","_isTextarea","_isInFormField","_id","required","_required","hasValidator","Validators","_validateType","readonly","ngDoCheck","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","_focusChanged","isFocused","_onInput","_previousPlaceholder","removeAttribute","_isNeverEmpty","_isBadInput","validity","badInput","empty","selectElement","firstOption","selectedIndex","label","onContainerClick","_isInlineSelect","MatInputModule","_r9","ctx_r8","ctx_r10","day_r1","_r5","ctx_r4","ctx_r6","_r8","ctx_r7","_r12","ctx_r11","ctx_r13","ctx_r14","MatDatepickerIntl","calendarLabel","openCalendarLabel","closeCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","startDateLabel","endDateLabel","formatYearRange","formatYearRangeLabel","MatCalendarCell","displayValue","enabled","compareValue","MatCalendarBody","_focusActiveCellAfterViewChecked","numCols","activeCell","isRange","cellAspectRatio","previewStart","previewEnd","selectedValueChange","previewChange","activeDateChange","_enterHandler","_skipNextFocus","cell","_getCellFromElement","_leaveHandler","_focusActiveCell","_cellClicked","_emitActiveDateChange","startValue","endValue","columnChanges","rows","_firstRowOffset","_cellPadding","_cellWidth","_isActiveCell","rowIndex","colIndex","cellNumber","movePreview","querySelector","_scheduleFocusActiveCellAfterViewChecked","_isRangeStart","isStart","_isRangeEnd","isEnd","_isInRange","isInRange","_isComparisonStart","comparisonStart","comparisonEnd","_isComparisonBridgeStart","previousCell","previousRow","_isComparisonBridgeEnd","_isComparisonEnd","nextCell","nextRow","_isInComparisonRange","_isComparisonIdentical","_isPreviewStart","_isPreviewEnd","_isInPreview","isTableCell","row","getAttribute","col","parseInt","node","rangeEnabled","DateRange","MatDateSelectionModel","selection","_adapter","_selectionChanged","selectionChanged","updateSelection","_isValidDateInstance","MatSingleDateSelectionModel","adapter","isComplete","MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER","Optional","SkipSelf","MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY","MAT_DATE_RANGE_SELECTION_STRATEGY","MatMonthView","_dateFormats","_dateAdapter","_rangeStrategy","_rerenderSubscription","selectedChange","_userSelection","_activeDate","activeDate","oldActiveDate","validDate","minDate","maxDate","_hasSameMonthAndYear","_init","_setRanges","_minDate","_maxDate","comparisonChange","firstChange","_dateSelected","selectedDate","_getDateFromDayOfMonth","rangeStartDate","rangeEndDate","_getDateInCurrentMonth","_previewStart","_previewEnd","_updateActiveDate","_handleCalendarBodyKeydown","LEFT_ARROW","RIGHT_ARROW","HOME","END","PAGE_UP","altKey","PAGE_DOWN","_selectionKeyPressed","_canSelect","_handleCalendarBodyKeyup","_todayDate","_getCellCompareValue","_monthLabel","monthLabel","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","_initWeekdays","_createWeekCells","_matCalendarBody","_previewChanged","previewRange","createPreview","dayOfMonth","firstDayOfWeek","narrowWeekdays","weekdays","long","narrow","_weekdays","daysInMonth","dateNames","_weeks","_shouldEnableDate","cellClasses","dateClass","dateFilter","d1","d2","selectedValue","_rangeStart","_rangeEnd","_isRange","_comparisonRangeStart","_comparisonRangeEnd","decls","encapsulation","yearsPerPage","MatMultiYearView","yearSelected","isSameMultiYearView","_setSelectedYear","_todayYear","minYearOfPage","getActiveOffset","_years","_createCellForYear","_yearSelected","selectedYear","_getDateFromYear","_getActiveCell","activeMonth","yearName","_shouldEnableYear","_selectedYear","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","euclideanModulo","a","b","MatYearView","monthSelected","_setSelectedMonth","_monthSelected","selectedMonth","_getDateFromMonth","_todayMonth","_getMonthInCurrentYear","_yearLabel","monthNames","_months","_createCellForMonth","normalizedDate","monthName","_shouldEnableMonth","activeYear","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","_selectedMonth","uniqueId","MatCalendarHeader","_intl","calendar","_buttonDescriptionId","periodButtonText","currentView","maxYearOfPage","minYearName","maxYearName","periodButtonLabel","prevButtonLabel","nextButtonLabel","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","_isSameView","nextEnabled","MatCalendar","_moveFocusOnNextTick","startView","viewChanged","_intlChanges","startAt","_startAt","_clampedActiveDate","_currentView","viewChangedResult","_calendarHeaderPortal","headerComponent","focusActiveCell","minDateChange","previousValue","maxDateChange","_getCurrentViewComponent","updateTodaysDate","_yearSelectedInMultiYearView","normalizedYear","_monthSelectedInYearView","normalizedMonth","_goToDateInView","monthView","yearView","multiYearView","matDatepickerAnimations","transformPanel","keyframes","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","_MatDatepickerContentBase","MatDatepickerContent","_globalModel","_rangeSelectionStrategy","intl","_subscriptions","_animationDone","_actionsPortal","_closeButtonText","_animationState","datepicker","touchUi","_calendar","_handleUserSelection","_model","newSelection","selectionFinished","_startExitAnimation","_getSelected","_applyPendingSelection","_assignActions","forceRerender","MatDatepickerBase","_inputStateChanges","_touchUi","yPosition","_restoreFocus","openedStream","closedStream","_opened","_focusedElementBeforeOpen","_backdropHarnessClass","datepickerInput","getStartValue","getThemePalette","restoreFocus","_panelClass","_getMinDate","_getMaxDate","_getDateFilter","_setConnectedPositions","_destroyOverlay","_selectYear","_selectMonth","_viewChanged","registerInput","registerActions","_componentRef","instance","removeActions","_getFocusedElementPierceShadowDom","_openOverlay","canRestoreFocus","completeClose","location","_forwardContentValues","_dialogLabelId","getOverlayLabelId","isDialog","_getDialogStrategy","_getDropdownStrategy","_getCloseStream","primaryX","secondaryX","primaryY","secondaryY","i9","MatDatepicker","MatDatepickerInputEvent","targetElement","MatDatepickerInputBase","dateChange","_validatorOnChange","_cvaOnChange","_valueChangesSubscription","_localeSubscription","_parseValidator","_lastValueValid","matDatepickerParse","text","_filterValidator","controlValue","_matchesFilter","matDatepickerFilter","_minValidator","matDatepickerMin","actual","_maxValidator","matDatepickerMax","_assignValueProgrammatically","_getValueFromModel","_pendingValue","_parentDisabled","blur","_getValidators","_registerModel","model","_assignValue","_shouldHandleChangeEvent","_isValidValue","_formatValue","dateInputsHaveChanged","registerOnValidatorChange","validate","_validator","_onKeydown","_openPopup","lastValueWasValid","hasChanged","_onBlur","_assignValueToModel","MAT_DATEPICKER_VALUE_ACCESSOR","MatDatepickerInput","MAT_DATEPICKER_VALIDATORS","NG_VALIDATORS","dateFormats","_closedSubscription","matDatepicker","_datepicker","_min","validValue","_max","_dateFilter","wasMatchingValue","modelValue","MatDatepickerToggleIcon","MatDatepickerToggle","_watchStateChanges","_open","datepickerStateChanged","inputStateChanged","datepickerToggled","MatDatepickerModule","A11yModule","policy","trustedHTMLFromString","getPolicy","ttWindow","trustedTypes","createPolicy","createHTML","s","getMatIconNameNotFoundError","iconName","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","svgText","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_resolvers","_defaultFontSetClass","addSvgIcon","addSvgIconInNamespace","addSvgIconLiteral","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","addSvgIconResolver","resolver","cleanLiteral","sanitize","SecurityContext","trustedLiteral","addSvgIconSet","addSvgIconSetInNamespace","addSvgIconSetLiteral","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","registerFontClassAlias","alias","classNames","classNameForFontAlias","setDefaultFontSetClass","getDefaultFontSetClass","getSvgIconFromUrl","safeUrl","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","getNamedSvgIcon","iconKey","_getSvgFromConfig","_getIconConfigFromResolvers","iconSetConfigs","_getSvgFromIconSetConfigs","throwError","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","catchError","err","errorMessage","message","handleError","forkJoin","foundIcon","toString","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","iconElement","cloneNode","_setSvgAttributes","_toSvgElement","_svgElementFromString","str","div","innerHTML","childNodes","viewBox","iconConfig","withCredentials","getMatIconNoHttpProviderError","inProgressFetch","req","responseType","finalize","share","configNamespace","svgElement","isSafeUrlWithOptions","_MatIconBase","MAT_ICON_DEFAULT_OPTIONS","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","funcIriPattern","MatIcon","_iconRegistry","ariaHidden","_inline","_previousFontSetClass","_currentIconFetch","fontSet","inline","svgIcon","_svgIcon","_updateSvgIcon","_clearSvgElement","_fontSet","_cleanupFontValue","_updateFontIconClasses","fontIcon","_fontIcon","_splitIconName","parts","cachedElements","_elementsWithExternalReferences","newPath","_previousPath","_prependPathToReferences","_usingFontIcon","_setSvgElement","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","child","elem","fontSetClasses","_previousFontIconClass","includes","elementsWithFuncIri","elementWithReference","match","rawName","_svgNamespace","_svgName","MatIconModule","ctx_r2","ctx_r5","matSelectAnimations","transformPanelWrap","query","animateChild","optional","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MatSelectChange","_MatSelectMixinBase","MAT_SELECT_TRIGGER","MatSelectTrigger","_MatSelectBase","_parentFormField","_liveAnnouncer","_defaultOptions","_panelOpen","_compareWith","o1","o2","_triggerAriaLabelledBy","_destroy","_valueId","_panelDoneAnimatingStream","_overlayPanelClass","_focused","_disableOptionCentering","disableOptionCentering","optionSelectionChanges","openedChange","_openedStream","o","_closedStream","selectionChange","valueAccessor","typeaheadDebounceInterval","_typeaheadDebounceInterval","_placeholder","_initializeSelection","_value","distinctUntilChanged","_panelDoneAnimating","_initKeyManager","_resetOptions","newAriaLabelledby","_getTriggerAriaLabelledby","_previousControl","withTypeAhead","withHorizontalOrientation","_highlightCorrectOption","triggerValue","selectedOptions","reverse","_handleOpenKeydown","_handleClosedKeydown","isOpenKey","manager","isTyping","previouslySelectedOption","selectedOption","announce","A","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","shiftKey","_onFocus","_onAttached","_overlayDir","_positioningSettled","_getPanelTheme","_selectOptionByValue","_sortValues","updateActiveItem","withVerticalOrientation","withHomeAndEnd","withAllowedModifierKeys","_scrollOptionIntoView","changedOrDestroyed","_onSelect","wasSelected","_propagateChanges","sortComparator","fallbackValue","valueToEmit","_getChangeEvent","_getAriaActiveDescendant","MatSelect","_scrollTop","_triggerFontSize","_transformOrigin","_positions","_calculateOverlayScroll","scrollBuffer","maxScroll","itemHeight","_getItemHeight","_triggerRect","fontSize","_calculateOverlayPosition","_calculateOverlayOffsetX","viewportSize","paddingWidth","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_PADDING_X","leftOverflow","rightOverflow","round","_calculateOverlayOffsetY","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","_getItemCount","_checkOverlayWithinViewport","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","items","selectedOptionOffset","i7","i8","MatSelectModule","PANEL_CLASS","passiveListenerOptions","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","_MatTooltipBase","_ariaDescriber","_viewInitialized","_pointerExitEventsInitialized","_cssClassPrefix","_showDelay","_hideDelay","touchGestures","_message","_passiveListeners","_updatePosition","_tooltipInstance","show","hide","_setupPointerEnterEventsIfNeeded","_mouseLeaveHideDelay","removeDescription","String","_isTooltipVisible","_updateTooltipMessage","describe","tooltipClass","_tooltipClass","_setTooltipClass","_touchstartTimeout","_cancelPendingAnimations","_tooltipComponent","afterHidden","isVisible","scrollableAncestors","_updateCurrentPositionClass","_handleBodyInteraction","disableTooltipInteractivity","_getOrigin","_addOffset","main","isLtr","originPosition","_invertPosition","overlayPosition","onMicrotaskEmpty","newPosition","_currentPosition","classPrefix","_platformSupportsMouseEvents","_setupPointerExitEventsIfNeeded","_disableNativeGesturesIfNecessary","_addListeners","exitListeners","newTarget","relatedTarget","_wheelListener","touchendListener","listeners","ANDROID","elementUnderPointer","elementFromPoint","gestures","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","MatTooltip","scrollDispatcher","ariaDescriber","focusMonitor","TooltipComponent","_TooltipComponentBase","animationMode","_closeOnInteraction","_isVisible","_onHide","_hideTimeoutId","_showTimeoutId","_toggleVisibility","_handleMouseLeave","_finalizeAnimation","_onShow","_handleAnimationEnd","_showAnimation","_hideAnimation","toVisible","tooltip","_tooltip","showClass","hideClass","getPropertyValue","_breakpointObserver","_isHandset","observe","Breakpoints","hostVars","MatTooltipModule","MatPaginatorIntl","itemsPerPageLabel","nextPageLabel","previousPageLabel","firstPageLabel","lastPageLabel","getRangeLabel","page","pageSize","startIndex","MAT_PAGINATOR_INTL_PROVIDER","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_DEFAULT_OPTIONS","_MatPaginatorMixinBase","_MatPaginatorBase","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","selectConfig","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","pageIndex","_updateDisplayedPageSizeOptions","p","_initialized","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","firstPage","lastPage","getNumberOfPages","maxPageIndex","ceil","_changePageSize","_nextButtonsDisabled","_previousButtonsDisabled","_displayedPageSizeOptions","MatPaginator","formFieldAppearance","_formFieldAppearance","MatPaginatorModule","_r0","_MatProgressSpinnerBase","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","MatProgressSpinner","viewportRuler","_diameter","mode","trackedDiameters","_diameters","_spinnerAnimationLabel","_getSpinnerAnimationLabel","head","_noopAnimations","_forceAnimations","strokeWidth","_styleRoot","_attachStyleNode","_strokeWidth","_getShadowRoot","_getCircleRadius","_getViewBox","_getStrokeCircumference","PI","_getStrokeDashOffset","_getCircleStrokeWidth","_getCircleTransformOrigin","scale","currentScale","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","_getAnimationText","strokeCircumference","replace","WeakMap","MatProgressSpinnerModule","mixinHasStickyInput","_sticky","_hasStickyChanged","sticky","v","prevValue","hasStickyChanged","resetStickyChanged","CDK_TABLE","CdkCellDef","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_setNameInput","stickyEnd","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","BaseCdkCell","columnDef","CdkHeaderCell","CdkCell","tableRole","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_currentSchedule","task","_createScheduleIfNeeded","scheduleEnd","_getScheduleObservable","isStable","BaseRowDef","_differs","_columnsDiffer","columns","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","headerCell","CdkFooterRowDef","footerCell","features","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkRowDef","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkHeaderRow","CdkRow","CdkNoDataRow","_contentClassName","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","stickyDirections","elementsToClear","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","_addStickyStyle","stickRows","rowsToStick","stickyStates","states","stickyOffsets","stickyCellHeights","elementsToStick","stickyOffset","borderedRowIndex","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","firstRowCells","widths","nextPosition","STICKY_POSITIONING_LISTENER","DataRowOutlet","HeaderRowOutlet","FooterRowOutlet","NoDataRowOutlet","CdkTable","role","_viewRepeater","_stickyPositioningListener","_onDestroy","_columnDefsByName","_customColumnDefs","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","contentChanged","viewChange","BehaviorSubject","MAX_VALUE","trackBy","_trackByFn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","data","_cacheRowDefs","_cacheColumnDefs","rowDefsChanged","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","_rowDefs","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_headerRowOutlet","_footerRowOutlet","def","_headerRowDefs","_footerRowDefs","_defaultRowDef","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","_adjustedPreviousIndex","_getEmbeddedViewArgs","item","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","forEachIdentityChange","$implicit","NgZone","addColumnDef","removeColumnDef","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","_stickyStyler","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","j","renderRow","cache","_getRowDefs","cachedRenderRows","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","when","columnsDiffReducer","acc","dataColumnsChanged","headerColumnsChanged","footerColumnsChanged","dataStream","isObservable","_renderRow","columnDefs","columnName","rowOutlet","renderedRows","rowDefs","outlet","cellTemplate","_getCellTemplates","renderIndex","count","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","_noDataRowOutlet","section","stickyCheckReducer","_noDataRow","shouldShow","array","CdkTableModule","MatTable","MatCellDef","MatHeaderCellDef","MatColumnDef","MatHeaderCell","MatCell","MatHeaderRowDef","MatRowDef","MatHeaderRow","MatRow","MatTableModule","_MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","sortHeaderId","_isNumberValue","numberValue","sortData","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","currentTerm","transformedFilter","_updateChangeSubscription","_filterData","_sort","paginator","_paginator","sortChange","pageChange","filteredData","combineLatest","orderedData","_orderData","paginatedData","_pageData","_updatePaginator","filteredDataLength","lastPageIndex","newPageIndex","MatTableDataSource","NestedTreeControl","BaseTreeControl","expansionModel","dataNode","_trackByValue","expand","collapse","isExpanded","toggleDescendants","collapseDescendants","expandDescendants","collapseAll","toBeProcessed","getDescendants","getChildren","expandAll","allNodes","dataNodes","accumulator","descendants","_getDescendants","childrenNodes","CDK_TREE_NODE_OUTLET_NODE","CdkTreeNodeOutlet","_node","CdkTreeNodeOutletContext","CdkTreeNodeDef","CdkTree","_levels","_nodeOutlet","_dataSubscription","defaultNodeDefs","_nodeDefs","_defaultNodeDef","renderNodeChanges","dataDiffer","parentData","insertNode","_getNodeDef","nodeData","level","treeControl","getLevel","CdkTreeNode","mostRecentTreeNode","_tree","_dataChanges","_role","_setRoleFromData","_parentNodeAriaLevel","getParentNodeAriaLevel","nodeElement","isNodeElement","CdkNestedTreeNode","tree","updateChildrenNodes","nodeOutlet","_clear","_getNodeOutlet","_children","CdkTreeNodeToggle","_treeNode","_recursive","recursive","_toggle","CdkTreeModule","_MatTreeNodeBase","MatTreeNode","MatTreeNodeDef","MatNestedTreeNode","differs","MatTreeNodeOutlet","MatTree","MatTreeNodeToggle","MatTreeModule","MatTreeNestedDataSource","collectionViewer","BASE","API_URL","BASE_URL","BASE_URL_ICD9","FEED_BACK_ICD","IcdService","httpClient","quickFeedback","feedbackData","appname","csrftoken","cookie","cookies","substring","decodeURIComponent","post","headers","submitFeedback","getListFeedback","getListFeedback10","getChapter","lang","getDetailModel","HttpHeaders","localStorage","getItem","getChildrenOfModel","getChapter_ICD9","getDetailModel_ICD9","getChildrenOfModel_ICD9","getDocumentList","category","getDocumentDetails","IcdServiceV1","SearchService","getIpAddress","client_ip","ip","console","log","apiUrl","q","vol1","vol3","append","getListTreeOfSearch","search_ICD9","getListTreeOfSearch_ICD9","SearchComponent","searchService","route","icdService","toastService","router","renderer","translate","FormControl","listen","e","toggleButton","menu","isShowResult","closeRec","handleDelInput","debouncedValue","searchResults","onSearch","isSearching","previousSearchQuery","chapter_vol","openRec","handleKeyDown","handleInputChange","searchTimer","unsubscriber","enterTimeout","searchItem","href","srcElement","HTMLAnchorElement","res","selectedItem","messageEvent","handleOpen","focusFunction","JSON","recommendBox","boxSearch","searchInput","DualVersionIcdComponent","viewportScroller","scroller","eventManager","isLeaf","content","setClickForCopy","icon","copyToClipboard","setClickForEdit","editContent","getElementsByClassName","field","senderName","senderEmail","getElementById","modalEdit","bootstrap","Modal","feedback","status","success","setItem","clipboard","writeText","catch","isActive","snapshot","queryParamMap","chapter","convertChapter","infoModel","userCommentList","toggleForm","showingComments","submitForm","getFeedbackData","captcha_image","captchaImageUrl","updateCaptchaImage","userCaptcha","handleSuccess","app","phone","email","captcha","newCaptchaImageUrl","nameMessage","emailMessage","phoneMessage","subjectMessage","code","is_leaf","span","htmlRoot","loaded","getChildrenOfTree","refreshTree","goToDetail","receiveMessage","$event","handleScrollTree","openItem","findnode","dtn","goToOpenTree","navigate","fragment","scrollIntoView","behavior","SearchIcd9Component","DualVersion9IcdComponent","Icd10Component","number","title","csrfToken","Icd9Component","InstructionIcd10Component","loadDocumentList","documents","showDocumentDetails","selectedDocument","selectedItemId","InstructionIcd9Component","SearchGlobalService","http","rec","apiUrlRec","param","apiSearch","evaluate","like","apiEvaluate","getEvaluate","apiGetEvaluate","getApp","apiUrlApp","SearchGlobalDetailComponent","sanitizer","nonNullable","childs","baseUrl","getSafeHtml","bypassSecurityTrustHtml","dataHtml","queryParams","params","searchQuery","appFilter","setValue","displayMode","getSearch","clickedElement","searchRecommend","loadData","startTime","isLoading","results","endTime","responseTime","idHis","searchResult","split_href","searchTreeResult","ICD9","ICD10","setActiveButton","isLoadingSearch","onLike","eve","onUnLike","onSearchItemClick","searchTerm","getData","offcanvas","Offcanvas","toLocaleLowerCase","SearchGlobalComponent","IcfService","API_ICF","getRoot","apiUrlRoot","searchICF","apiSearchICF","getListTreeOfSearch_ICF","apiUrlChapter","getBlock","apiUrlBlock","getCategory","apiUrlCategory","getChildrendModel","getDetailOfModel","SearchIcfComponent","ID","Code","Name","IcfComponent","ICFService","langue","DualVersionIcfComponent","icdServiceV1","InstructionIcfComponent","icfService","requiredArgs","TypeError","isDate","_typeof","prototype","call","toDate","argument","argStr","warn","stack","dirtyDate","toInteger","dirtyNumber","addMilliseconds","dirtyAmount","amount","subMilliseconds","startOfUTCISOWeek","weekStartsOn","getUTCDay","setUTCDate","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","getDefaultOptions","startOfUTCWeek","_ref","_ref2","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","RangeError","getUTCWeekYear","_options$firstWeekCon","firstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","addLeadingZeros","targetLength","sign","token","signedYear","lightFormatters","getUTCHours","getUTCMinutes","getUTCSeconds","numberOfDigits","milliseconds","getUTCMilliseconds","pow","formatTimezoneShort","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","G","localize","era","ordinalNumber","unit","Y","signedWeekYear","weekYear","R","u","Q","quarter","M","L","w","week","getUTCWeek","I","isoWeek","getUTCISOWeek","D","dayOfYear","getUTCDayOfYear","setUTCMonth","startOfYearTimestamp","E","dayOfWeek","localDayOfWeek","isoDayOfWeek","dayPeriodEnumValue","dayPeriod","B","h","H","K","k","m","S","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","O","z","T","dateLongFormatter","pattern","formatLong","timeLongFormatter","time","P","dateTimeFormat","matchResult","datePattern","timePattern","dateTime","getTimezoneOffsetInMilliseconds","utcDate","UTC","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","throwProtectedError","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","defaultWidth","formats","full","medium","short","formatRelativeLocale","lastWeek","yesterday","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","formattingValues","defaultFormattingWidth","_defaultWidth","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchedString","parsePatterns","defaultParseWidth","findIndex","findKey","valueCallback","rest","object","buildMatchPatternFn","parseResult","parsePattern","formatDistance","tokenValue","addSuffix","comparison","formatRelative","_date","_baseDate","_options","rem100","abbreviated","wide","am","pm","midnight","noon","morning","afternoon","evening","night","any","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","_ref4","_options$locale2","_options$locale2$opti","_ref5","_ref6","_ref7","_options$locale3","_options$locale3$opti","_defaultOptions$local3","_defaultOptions$local4","formatStr","defaultLocale","originalDate","formatterOptions","firstCharacter","longFormatter","longFormatters","cleanEscapedString","formatter","formatters","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","matched","reject","asyncGeneratorStep","_next","highcharts","loadHighcharts","default","all","DashboardService","API_DASHBOARD","API_VUNGHI","sysLineClients","sys_line_clients_api","sysUsagesClients","sys_line_usages_api","sysSun","sys_sun_api","heatMap","heat_api","line","line_api","nega","nega_api","ucodTable","ucud_table","ucodLine","ucud_line","ucodHeatMap","ucud_heat","ucodTextbox","ucud_text_box","textBox","text_api","sync","sync_api","table","table_api","disease","disease_api","hospital","hospital_api","group100","grid_api","vn","vn_api","bubble","bubble_api","categories","DashboardMccdComponent","myFormats","dashboardService","_formBuilder","vn_prov","total_death","day_gap","asc","vn_prov_d","prov_name","provNameArray","prov_name_s","hosArray","list_hos_s","disArray","list_dis_s","syncExtremes","thisChart","chart","Highcharts","each","charts","xAxis","setExtremes","stateGroupOptions","stateForm","_filterGroup","addHighlight","pointer","normalize","series","searchPoint","highlight","colorDef","getOptions","colors","at","initializeVietNam","getDisease","bubbleGroup","negaBar","syncChart","gridChart","getHospital","tNum","toFixed","reSync","startDate","endDate","viewType","getCodeUnknow","setDate","handleChartEvents","dom_chart","datasets","dataset","val","xData","spacingTop","spacingBottom","zooming","exporting","credits","legend","crosshair","events","yAxis","positioner","chartWidth","borderWidth","pointFormat","headerFormat","shadow","valueDecimals","plotOptions","marker","enabledThreshold","fillOpacity","valueSuffix","loop_length","chartX","onDisplayChange","reRenderGrid","onDisplayValueTypeChange","displayValueType","onDisplayValueCodeChange","displayValueCode","onViewTypeChange","reGenerate","getCode","dateType","paramDate","paramOnly","city","cityName","vn_code","onPageChange","sanitizeHTML","textBoxData","startDateChanged","endDateChanged","totalItems","totalRow","dataGroup100","onOptionSelected","city_main","getCity","list_dis","filteredDis","list_hos","TENCSKCB","filteredHos","formatDateLine","vi","formatDate2","formatDate","zoomType","fontFamily","fontWeight","subtitle","ontouchstart","area","fillColor","linearGradient","x1","y1","x2","y2","stops","setOpacity","lineWidth","hover","letter","names","onDateTypeChange","useHTML","packedbubble","minSize","maxSize","zMin","zMax","layoutAlgorithm","gravitationalConstant","splitSeries","seriesInteraction","dragBetweenSeries","parentNodeLimit","dataLabels","property","operator","textOutline","accessibility","valueDescriptionFormat","reversed","labels","step","description","opposite","linkedTo","rangeDescription","stacking","borderRadius","absY","mapChart","vnMap","mapNavigation","buttonOptions","verticalAlign","colorAxis","onOpenedChange1","isOpened","resetIP1","onOpenedChange2","resetIP2","onOpenedChange3","resetIP3","saveStateKey1","filteredProvName","a_code","saveStateKey2","onKeydownIP1","removeAccents","onKeydownIP2","onKeydownIP3","saveStateKey3","filterValue","DashboardUcodComponent","percent","ratio","date_now","generate","genTextBox","genTable","genLine","genHeat","formatDateCus","loadding","tableData_error","tableData","minColor","maxColor","layout","itemStyle","symbolHeight","getSeries","ToolsUcodComponent","version","change_lang","mccd","sex","age","age_unit1","partI","partI_desc","partII","partII_desc","warning","warning_desc","btn_run","conclusion","explanation","en","startDragging","isDragging","pageX","scrollContainer","offsetLeft","onMouseMove","stopDragging","toggleActive","updateDiagnosisData","diagnosisData","processCodes","codesArray","part","trimmedCode","note","onCodesIChange","onInputchange","onCodesIIChange","openModal","isModalVisible","closeModal","toggleLanguage","currentLanguage","updateLanguageContent","onSubmit","formData","FormData","ageUnit","validation","isValidInput","API_TOOL","response","tablerela","matrix","tablesection","desc","handleApiError","alert","messages","API_BASE","callDiagnoseApi","HttpParams","WhatNewService","getListWhatNew","getDetailWhatNew","NotificationComponent","whatNewService","Icd10v3Component","details","filteredRows","totalCount","totalPages","rowsPerPage","updateDisplayedRows","exportFile","selectedRows","actionMessage","csvData","convertToCSV","blob","Blob","link","URL","createObjectURL","download","click","searchKeyword","currentPage","performAction","selectedAction","addRow","editRow","deleteRows","newName","newDetails","resetForm","updateSelectedCount","selectedCount","toggleSelectAll","selectAll","editingRow","startEditing","displayedRows","goToPage","prevPage","userFeedback","feedbackMessage","API_BASE_LOINC","LoincService","list","page_size","ordering","retrieve","LoincTableService","PanelsAndFormsService","MAT_CHECKBOX_DEFAULT_OPTIONS","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","clickAction","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","MatCheckbox","MatCheckboxChange","_MatCheckboxMixinBase","_MatCheckboxBase","idPrefix","labelPosition","indeterminateChange","_currentAnimationClass","_currentCheckState","_indeterminate","_uniqueId","inputId","_syncIndeterminate","indeterminate","_transitionCheckState","_onLabelTextChange","_getAriaChecked","_getAnimationTargetElement","_getAnimationClassForCheckStateTransition","animationClass","_createChangeEvent","_inputElement","_handleInputClick","_onInteractionEvent","_animationClasses","uncheckedToChecked","checkedToIndeterminate","uncheckedToIndeterminate","checkedToUnchecked","indeterminateToChecked","indeterminateToUnchecked","nativeCheckbox","isChecked","focusOrigin","_onInputClick","_MatCheckboxRequiredValidatorModule","MatCheckboxModule","LoincListDisplayComponent","searching","sorting","paginating","primaryKey","emptySearchBox","getOrdering","loadingState","loincService","itemsPerPage","paginate","get_keys","verbose_name","isResultEmpty","LoincDetailDisplayComponent","LoincTableComponent","loincTableService","destroy$","getDetail","singleResult","headerFields","get_header_fields","isDetailView","fields","headerKeys","entries","long_common_name","getFeedbackURL","LoincPanelsFormsComponent","panelsAndFormsService","searchRoutes","SearchRoutingModule","RouterModule","toolRoutes","ToolsRoutingModule","notificationRoutes","NotificationRoutingModule","dashboardRoutes","DashboardRoutingModule","icd9Routes","Icd9RoutingModule","icd10Routes","ICD10RoutingModule","icfRoutes","ICFRoutingModule","loincRoutes","LoincRoutingModule","HighchartsChartModule","CustomPaginatorIntl","SearchGlobalModule","FormsModule","ReactiveFormsModule","PaginationModule","TableModule","ToolsModule","NotificationModule","DashboardModule","Icd9Module","OffcanvasModule","ButtonModule","Icd10Module","IcfModule","LoincModule","ListGroupModule"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/cdk/fesm2020/bidi.mjs","./node_modules/@angular/material/fesm2020/core.mjs","./node_modules/rxjs/dist/esm/internal/scheduler/animationFrameProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/animationFrame.js","./node_modules/rxjs/dist/esm/internal/scheduler/AnimationFrameScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AnimationFrameAction.js","./node_modules/rxjs/dist/esm/internal/util/Immediate.js","./node_modules/rxjs/dist/esm/internal/scheduler/immediateProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/asap.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsapScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsapAction.js","./node_modules/@angular/cdk/fesm2020/scrolling.mjs","./node_modules/@angular/cdk/fesm2020/portal.mjs","./node_modules/@angular/cdk/fesm2020/overlay.mjs","./node_modules/@angular/material/fesm2020/form-field.mjs","./node_modules/rxjs/dist/esm/internal/operators/delayWhen.js","./node_modules/rxjs/dist/esm/internal/operators/ignoreElements.js","./node_modules/@angular/material/fesm2020/autocomplete.mjs","./node_modules/rxjs/dist/esm/internal/operators/delay.js","./node_modules/@angular/material/fesm2020/button.mjs","./node_modules/@angular/cdk/fesm2020/collections.mjs","./node_modules/@angular/material/fesm2020/button-toggle.mjs","./node_modules/@angular/cdk/fesm2020/text-field.mjs","./node_modules/@angular/material/fesm2020/input.mjs","./node_modules/@angular/material/fesm2020/datepicker.mjs","./node_modules/@angular/material/fesm2020/icon.mjs","./node_modules/@angular/material/fesm2020/select.mjs","./node_modules/@angular/material/fesm2020/tooltip.mjs","./node_modules/@angular/material/fesm2020/paginator.mjs","./node_modules/@angular/material/fesm2020/progress-spinner.mjs","./node_modules/@angular/cdk/fesm2020/table.mjs","./node_modules/@angular/material/fesm2020/table.mjs","./node_modules/@angular/cdk/fesm2020/tree.mjs","./node_modules/@angular/material/fesm2020/tree.mjs","./src/shared/services/icd.service.ts","./src/shared/services/icdv1.service.ts","./src/shared/services/search.search.ts","./src/app/views/who/search/search.component.html","./src/app/views/who/search/search.component.ts","./src/app/views/who/DualVersionICD/dual-version-icd/dual-version-icd.component.html","./src/app/views/who/DualVersionICD/dual-version-icd/dual-version-icd.component.ts","./src/app/views/who/search-icd9/search-icd9.component.html","./src/app/views/who/search-icd9/search-icd9.component.ts","./src/app/views/who/DualVersionICD/dual-version9-icd/dual-version9-icd.component.html","./src/app/views/who/DualVersionICD/dual-version9-icd/dual-version9-icd.component.ts","./src/app/views/who/icd10/icd10.component.html","./src/app/views/who/icd10/icd10.component.ts","./src/app/views/who/icd9/icd9.component.html","./src/app/views/who/icd9/icd9.component.ts","./src/app/views/who/instruction-icd10/instruction-icd10.component.html","./src/app/views/who/instruction-icd10/instruction-icd10.component.ts","./src/app/views/who/instruction-icd9/instruction-icd9.component.html","./src/app/views/who/instruction-icd9/instruction-icd9.component.ts","./src/shared/services/search-global.service.ts","./src/app/views/who/search-global-detail/search-global-detail.component.html","./src/app/views/who/search-global-detail/search-global-detail.component.ts","./src/app/views/who/search-global/search-global.component.html","./src/app/views/who/search-global/search-global.component.ts","./src/shared/services/icf.service.ts","./src/app/views/who/search-icf/search-icf.component.html","./src/app/views/who/search-icf/search-icf.component.ts","./src/app/views/who/icf/icf.component.html","./src/app/views/who/icf/icf.component.ts","./src/app/views/who/DualVersionICD/dual-version-icf/dual-version-icf.component.html","./src/app/views/who/DualVersionICD/dual-version-icf/dual-version-icf.component.ts","./src/app/views/who/instruction-icf/instruction-icf.component.html","./src/app/views/who/instruction-icf/instruction-icf.component.ts","./node_modules/@babel/runtime/helpers/esm/typeof.js","./node_modules/date-fns/esm/_lib/requiredArgs/index.js","./node_modules/date-fns/esm/isDate/index.js","./node_modules/date-fns/esm/toDate/index.js","./node_modules/date-fns/esm/isValid/index.js","./node_modules/date-fns/esm/_lib/toInteger/index.js","./node_modules/date-fns/esm/addMilliseconds/index.js","./node_modules/date-fns/esm/subMilliseconds/index.js","./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","./node_modules/date-fns/esm/_lib/defaultOptions/index.js","./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","./node_modules/date-fns/esm/_lib/format/formatters/index.js","./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","./node_modules/date-fns/esm/_lib/protectedTokens/index.js","./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","./node_modules/date-fns/esm/_lib/defaultLocale/index.js","./node_modules/date-fns/esm/locale/en-US/index.js","./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","./node_modules/date-fns/esm/format/index.js","./node_modules/date-fns/esm/locale/vi/_lib/formatDistance/index.js","./node_modules/date-fns/esm/locale/vi/_lib/formatLong/index.js","./node_modules/date-fns/esm/locale/vi/_lib/formatRelative/index.js","./node_modules/date-fns/esm/locale/vi/index.js","./node_modules/date-fns/esm/locale/vi/_lib/localize/index.js","./node_modules/date-fns/esm/locale/vi/_lib/match/index.js","./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","./src/shared/highcharts.ts","./src/shared/services/dashboard.service.ts","./src/app/views/who/dashboard/dashboard-mccd/dashboard-mccd.component.html","./src/app/views/who/dashboard/dashboard-mccd/dashboard-mccd.component.ts","./src/app/views/who/dashboard/dashboard-ucod/dashboard-ucod.component.html","./src/app/views/who/dashboard/dashboard-ucod/dashboard-ucod.component.ts","./src/app/views/who/tools/tools-ucod/tools-ucod.component.ts","./src/app/views/who/tools/tools-ucod/tools-ucod.component.html","./src/shared/services/whatnew.service.ts","./src/app/views/who/notification/notification.component.html","./src/app/views/who/notification/notification.component.ts","./src/app/views/who/icd10v3/icd10v3.component.html","./src/app/views/who/icd10v3/icd10v3.component.ts","./src/shared/services/loinc.service.ts","./node_modules/@angular/material/fesm2020/checkbox.mjs","./src/app/views/who/loinc/loinc-list-display/loinc-list-display.component.html","./src/app/views/who/loinc/loinc-list-display/loinc-list-display.component.ts","./src/app/views/who/loinc/loinc-detail-display/loinc-detail-display.component.html","./src/app/views/who/loinc/loinc-detail-display/loinc-detail-display.component.ts","./src/app/views/who/loinc/loinc-table/loinc-table.component.html","./src/app/views/who/loinc/loinc-table/loinc-table.component.ts","./src/app/views/who/loinc/loinc-panels-forms/loinc-panels-forms.component.html","./src/app/views/who/loinc/loinc-panels-forms/loinc-panels-forms.component.ts","./src/app/views/who/who-routing.module.ts","./node_modules/highcharts-angular/fesm2020/highcharts-angular.mjs","./src/app/views/who/who.module.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = rawValue?.toLowerCase() || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Directionality, deps: [{ token: DIR_DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nDirectionality.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Directionality, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DIR_DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() {\n        return this._dir;\n    }\n    set dir(value) {\n        const previousValue = this._dir;\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this._dir = _resolveDirectionality(value);\n        this._rawDir = value;\n        if (previousValue !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nDir.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: Dir, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BidiModule {\n}\nBidiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBidiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: BidiModule, declarations: [Dir], exports: [Dir] });\nBidiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: BidiModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [Dir],\n                    declarations: [Dir],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n","import * as i0 from '@angular/core';\nimport { Version, InjectionToken, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, Output } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { _isTestEnvironment, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nconst VERSION = new Version('14.2.7');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, _sanityChecks, _document) {\n        this._sanityChecks = _sanityChecks;\n        this._document = _document;\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        if (!this._hasDoneGlobalChecks) {\n            this._hasDoneGlobalChecks = true;\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (this._checkIsEnabled('doctype')) {\n                    _checkDoctypeIsDefined(this._document);\n                }\n                if (this._checkIsEnabled('theme')) {\n                    _checkThemeIsPresent(this._document);\n                }\n                if (this._checkIsEnabled('version')) {\n                    _checkCdkVersionMatch();\n                }\n            }\n        }\n    }\n    /** Gets whether a specific sanity check is enabled. */\n    _checkIsEnabled(name) {\n        if (_isTestEnvironment()) {\n            return false;\n        }\n        if (typeof this._sanityChecks === 'boolean') {\n            return this._sanityChecks;\n        }\n        return !!this._sanityChecks[name];\n    }\n}\nMatCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCommonModule, deps: [{ token: i1.HighContrastModeDetector }, { token: MATERIAL_SANITY_CHECKS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.NgModule });\nMatCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule], exports: [BidiModule] });\nMatCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule, BidiModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MATERIAL_SANITY_CHECKS]\n                }] }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n    if (!doc.doctype) {\n        console.warn('Current document does not have a doctype. This may cause ' +\n            'some Angular Material components not to behave as expected.');\n    }\n}\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc) {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!doc.body || typeof getComputedStyle !== 'function') {\n        return;\n    }\n    const testElement = doc.createElement('div');\n    testElement.classList.add('mat-theme-loaded-marker');\n    doc.body.appendChild(testElement);\n    const computedStyle = getComputedStyle(testElement);\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n        console.warn('Could not find Angular Material core theme. Most Material ' +\n            'components may not work as expected. For more info refer ' +\n            'to the theming guide: https://material.angular.io/guide/theming');\n    }\n    testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n    if (VERSION.full !== VERSION$1.full) {\n        console.warn('The Angular Material version (' +\n            VERSION.full +\n            ') does not match ' +\n            'the Angular CDK version (' +\n            VERSION$1.full +\n            ').\\n' +\n            'Please ensure the versions of these two packages exactly match.');\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        get disabled() {\n            return this._disabled;\n        }\n        set disabled(value) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        get color() {\n            return this._color;\n        }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() {\n            return this._disableRipple;\n        }\n        set disableRipple(value) {\n            this._disableRipple = coerceBooleanProperty(value);\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n        get tabIndex() {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether the component is in an error state. */\n            this.errorState = false;\n        }\n        /** Updates the error state based on the provided error state matcher. */\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control : null;\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || (this.isDateInstance(value) && this.isValid(value))) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return (this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second));\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(matDateLocale, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        super();\n        /**\n         * @deprecated No longer being used. To be removed.\n         * @breaking-change 14.0.0\n         */\n        this.useUtcForDisplay = false;\n        super.setLocale(matDateLocale);\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n        return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n    }\n    getDateNames() {\n        const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n        return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getDayOfWeekNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n        return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getYearName(date) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value, parseFormat) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        const dtf = new Intl.DateTimeFormat(this.locale, { ...displayFormat, timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != (((this.getMonth(date) + months) % 12) + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate()),\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: NativeDateAdapter, deps: [{ token: MAT_DATE_LOCALE, optional: true }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nNativeDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: NativeDateAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: NativeDateAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_LOCALE]\n                }] }, { type: i1$1.Platform }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    },\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: NativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: NativeDateModule });\nNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: NativeDateModule, providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: NativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }],\n                }]\n        }] });\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatNativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatNativeDateModule, imports: [NativeDateModule] });\nMatNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatNativeDateModule, providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }], imports: [NativeDateModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatNativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NativeDateModule],\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nShowOnDirtyErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n            type: Injectable\n        }] });\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ErrorStateMatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatLine, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLine.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatLine, selector: \"[mat-line], [matLine]\", host: { classAttribute: \"mat-line\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatLine, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-line], [matLine]',\n                    host: { 'class': 'mat-line' },\n                }]\n        }] });\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    element.nativeElement.classList.toggle(className, isAdd);\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatLineModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatLineModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatLineModule, declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] });\nMatLineModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatLineModule, imports: [MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatLineModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatLine, MatCommonModule],\n                    declarations: [MatLine],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config, \n    /* Whether animations are forcibly disabled for ripples through CSS. */\n    _animationForciblyDisabledThroughCss = false) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n        /** Current state of the ripple. */\n        this.state = 3 /* RippleState.HIDDEN */;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n// TODO: import these values from `@material/ripple` eventually.\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /**\n         * Map of currently active ripple references.\n         * The ripple reference is mapped to its element event listeners.\n         * The reason why `| null` is used is that event listeners are added only\n         * when the condition is truthy (see the `_startFadeOutTransition` method).\n         */\n        this._activeRipples = new Map();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = (this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect());\n        const animationConfig = { ...defaultRippleAnimationConfig, ...config.animation };\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const enterDuration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${enterDuration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical to ensure that the `scale` animates properly.\n        // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n        // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n        const computedStyles = window.getComputedStyle(ripple);\n        const userTransitionProperty = computedStyles.transitionProperty;\n        const userTransitionDuration = computedStyles.transitionDuration;\n        // Note: We detect whether animation is forcibly disabled through CSS by the use of\n        // `transition: none`. This is technically unexpected since animations are controlled\n        // through the animation config, but this exists for backwards compatibility. This logic does\n        // not need to be super accurate since it covers some edge cases which can be easily avoided by users.\n        const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n            // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n            // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n            userTransitionDuration === '0s' ||\n            userTransitionDuration === '0s, 0s';\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n        // Start the enter animation by setting the transform/scale to 100%. The animation will\n        // execute as part of this statement because we forced a style recalculation before.\n        // Note: We use a 3d transform here in order to avoid an issue in Safari where\n        // the ripples aren't clipped when inside the shadow DOM (see #24028).\n        ripple.style.transform = 'scale3d(1, 1, 1)';\n        rippleRef.state = 0 /* RippleState.FADING_IN */;\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        let eventListeners = null;\n        // Do not register the `transition` event listener if fade-in and fade-out duration\n        // are set to zero. The events won't fire anyway and we can save resources here.\n        if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n            this._ngZone.runOutsideAngular(() => {\n                const onTransitionEnd = () => this._finishRippleTransition(rippleRef);\n                const onTransitionCancel = () => this._destroyRipple(rippleRef);\n                ripple.addEventListener('transitionend', onTransitionEnd);\n                // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n                // directly as otherwise we would keep it part of the ripple container forever.\n                // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n                ripple.addEventListener('transitioncancel', onTransitionCancel);\n                eventListeners = { onTransitionEnd, onTransitionCancel };\n            });\n        }\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.set(rippleRef, eventListeners);\n        // In case there is no fade-in transition duration, we need to manually call the transition\n        // end listener because `transitionend` doesn't fire if there is no transition.\n        if (animationForciblyDisabledThroughCss || !enterDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        // For ripples already fading out or hidden, this should be a noop.\n        if (rippleRef.state === 2 /* RippleState.FADING_OUT */ || rippleRef.state === 3 /* RippleState.HIDDEN */) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = { ...defaultRippleAnimationConfig, ...rippleRef.config.animation };\n        // This starts the fade-out transition and will fire the transition end listener that\n        // removes the ripple element from the DOM.\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* RippleState.FADING_OUT */;\n        // In case there is no fade-out transition duration, we need to manually call the\n        // transition end listener because `transitionend` doesn't fire if there is no transition.\n        if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._getActiveRipples().forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            this._registerEvents(pointerUpEvents);\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Method that will be called if the fade-in or fade-in transition completed. */\n    _finishRippleTransition(rippleRef) {\n        if (rippleRef.state === 0 /* RippleState.FADING_IN */) {\n            this._startFadeOutTransition(rippleRef);\n        }\n        else if (rippleRef.state === 2 /* RippleState.FADING_OUT */) {\n            this._destroyRipple(rippleRef);\n        }\n    }\n    /**\n     * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n     * is not held down anymore.\n     */\n    _startFadeOutTransition(rippleRef) {\n        const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n        const { persistent } = rippleRef.config;\n        rippleRef.state = 1 /* RippleState.VISIBLE */;\n        // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n        if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n            rippleRef.fadeOut();\n        }\n    }\n    /** Destroys the given ripple by removing it from the DOM and updating its state. */\n    _destroyRipple(rippleRef) {\n        const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n        this._activeRipples.delete(rippleRef);\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // If the current ref is the most recent transient ripple, unset it\n        // avoid memory leaks.\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        rippleRef.state = 3 /* RippleState.HIDDEN */;\n        if (eventListeners !== null) {\n            rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n            rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n        }\n        rippleRef.element.remove();\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._getActiveRipples().forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === 1 /* RippleState.VISIBLE */ ||\n                (ripple.config.terminateOnPointerUp && ripple.state === 0 /* RippleState.FADING_IN */);\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Registers event listeners for a given list of events. */\n    _registerEvents(eventTypes) {\n        this._ngZone.runOutsideAngular(() => {\n            eventTypes.forEach(type => {\n                this._triggerElement.addEventListener(type, this, passiveEventOptions);\n            });\n        });\n    }\n    _getActiveRipples() {\n        return Array.from(this._activeRipples.keys());\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            pointerDownEvents.forEach(type => {\n                this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n            });\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach(type => {\n                    this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n                });\n            }\n        }\n    }\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n        return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: {\n                ...this._globalOptions.animation,\n                ...(this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {}),\n                ...this.animation,\n            },\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, { ...this.rippleConfig, ...config });\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, { ...this.rippleConfig, ...configOrX });\n        }\n    }\n}\nMatRipple.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRipple, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i1$1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatRipple.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: { color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], radius: [\"matRippleRadius\", \"radius\"], animation: [\"matRippleAnimation\", \"animation\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"] }, host: { properties: { \"class.mat-ripple-unbounded\": \"unbounded\" }, classAttribute: \"mat-ripple\" }, exportAs: [\"matRipple\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1$1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { color: [{\n                type: Input,\n                args: ['matRippleColor']\n            }], unbounded: [{\n                type: Input,\n                args: ['matRippleUnbounded']\n            }], centered: [{\n                type: Input,\n                args: ['matRippleCentered']\n            }], radius: [{\n                type: Input,\n                args: ['matRippleRadius']\n            }], animation: [{\n                type: Input,\n                args: ['matRippleAnimation']\n            }], disabled: [{\n                type: Input,\n                args: ['matRippleDisabled']\n            }], trigger: [{\n                type: Input,\n                args: ['matRippleTrigger']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatRippleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRippleModule, declarations: [MatRipple], imports: [MatCommonModule], exports: [MatRipple, MatCommonModule] });\nMatRippleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatRipple, MatCommonModule],\n                    declarations: [MatRipple],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPseudoCheckbox, deps: [{ token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatPseudoCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: { state: \"state\", disabled: \"disabled\" }, host: { properties: { \"class.mat-pseudo-checkbox-indeterminate\": \"state === \\\"indeterminate\\\"\", \"class.mat-pseudo-checkbox-checked\": \"state === \\\"checked\\\"\", \"class.mat-pseudo-checkbox-disabled\": \"disabled\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-pseudo-checkbox\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPseudoCheckbox, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                        'class': 'mat-pseudo-checkbox',\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { state: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPseudoCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatPseudoCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPseudoCheckboxModule, declarations: [MatPseudoCheckbox], imports: [MatCommonModule], exports: [MatPseudoCheckbox] });\nMatPseudoCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPseudoCheckboxModule, imports: [MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPseudoCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatPseudoCheckbox],\n                    declarations: [MatPseudoCheckbox],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nconst _MatOptgroupMixinBase = mixinDisabled(class {\n});\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n    constructor(parent) {\n        super();\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n        this._inert = parent?.inertGroups ?? false;\n    }\n}\n_MatOptgroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatOptgroupBase, deps: [{ token: MAT_OPTION_PARENT_COMPONENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatOptgroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: _MatOptgroupBase, inputs: { label: \"label\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatOptgroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { label: [{\n                type: Input\n            }] } });\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n}\nMatOptgroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatOptgroup, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatOptgroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatOptgroup, selector: \"mat-optgroup\", inputs: { disabled: \"disabled\" }, host: { properties: { \"attr.role\": \"_inert ? null : \\\"group\\\"\", \"attr.aria-disabled\": \"_inert ? null : disabled.toString()\", \"attr.aria-labelledby\": \"_inert ? null : _labelId\", \"class.mat-optgroup-disabled\": \"disabled\" }, classAttribute: \"mat-optgroup\" }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], exportAs: [\"matOptgroup\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatOptgroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], host: {\n                        'class': 'mat-optgroup',\n                        '[attr.role]': '_inert ? null : \"group\"',\n                        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                        '[class.mat-optgroup-disabled]': 'disabled',\n                    }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass _MatOptionBase {\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n        return this._selected;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return !!(this._parent && this._parent.disableRipple);\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /** Selects the option. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Deselects the option. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\n_MatOptionBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatOptionBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatOptionBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: _MatOptionBase, inputs: { value: \"value\", id: \"id\", disabled: \"disabled\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatOptionBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, propDecorators: { value: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], onSelectionChange: [{\n                type: Output\n            }] } });\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n}\nMatOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_OPTION_PARENT_COMPONENT, optional: true }, { token: MAT_OPTGROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatOption, selector: \"mat-option\", host: { attributes: { \"role\": \"option\" }, listeners: { \"click\": \"_selectViaInteraction()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.tabindex\": \"_getTabIndex()\", \"class.mat-selected\": \"selected\", \"class.mat-option-multiple\": \"multiple\", \"class.mat-active\": \"active\", \"id\": \"id\", \"attr.aria-selected\": \"_getAriaSelected()\", \"attr.aria-disabled\": \"disabled.toString()\", \"class.mat-option-disabled\": \"disabled\" }, classAttribute: \"mat-option mat-focus-indicator\" }, exportAs: [\"matOption\"], usesInheritance: true, ngImport: i0, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.mat-option.mat-active::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{right:auto;left:16px}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                        'role': 'option',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[class.mat-selected]': 'selected',\n                        '[class.mat-option-multiple]': 'multiple',\n                        '[class.mat-active]': 'active',\n                        '[id]': 'id',\n                        '[attr.aria-selected]': '_getAriaSelected()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[class.mat-option-disabled]': 'disabled',\n                        '(click)': '_selectViaInteraction()',\n                        '(keydown)': '_handleKeydown($event)',\n                        'class': 'mat-option mat-focus-indicator',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.mat-option.mat-active::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{right:auto;left:16px}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }] }, { type: MatOptgroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTGROUP]\n                }] }]; } });\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatOptionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatOptionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatOptionModule, declarations: [MatOption, MatOptgroup], imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule], exports: [MatOption, MatOptgroup] });\nMatOptionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatOptionModule, imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatOptionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n                    exports: [MatOption, MatOptgroup],\n                    declarations: [MatOption, MatOptgroup],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines };\n","import { Subscription } from '../Subscription';\nexport const animationFrameProvider = {\n    schedule(callback) {\n        let request = requestAnimationFrame;\n        let cancel = cancelAnimationFrame;\n        const { delegate } = animationFrameProvider;\n        if (delegate) {\n            request = delegate.requestAnimationFrame;\n            cancel = delegate.cancelAnimationFrame;\n        }\n        const handle = request((timestamp) => {\n            cancel = undefined;\n            callback(timestamp);\n        });\n        return new Subscription(() => cancel === null || cancel === void 0 ? void 0 : cancel(handle));\n    },\n    requestAnimationFrame(...args) {\n        const { delegate } = animationFrameProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.requestAnimationFrame) || requestAnimationFrame)(...args);\n    },\n    cancelAnimationFrame(...args) {\n        const { delegate } = animationFrameProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.cancelAnimationFrame) || cancelAnimationFrame)(...args);\n    },\n    delegate: undefined,\n};\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\nexport const animationFrame = animationFrameScheduler;\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AnimationFrameScheduler extends AsyncScheduler {\n    flush(action) {\n        this._active = true;\n        const flushId = this._scheduled;\n        this._scheduled = undefined;\n        const { actions } = this;\n        let error;\n        action = action || actions.shift();\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions[0]) && action.id === flushId && actions.shift());\n        this._active = false;\n        if (error) {\n            while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { animationFrameProvider } from './animationFrameProvider';\nexport class AnimationFrameAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        var _a;\n        if (delay != null ? delay > 0 : this.delay > 0) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        const { actions } = scheduler;\n        if (id != null && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {\n            animationFrameProvider.cancelAnimationFrame(id);\n            scheduler._scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n","let nextHandle = 1;\nlet resolved;\nconst activeHandles = {};\nfunction findAndClearHandle(handle) {\n    if (handle in activeHandles) {\n        delete activeHandles[handle];\n        return true;\n    }\n    return false;\n}\nexport const Immediate = {\n    setImmediate(cb) {\n        const handle = nextHandle++;\n        activeHandles[handle] = true;\n        if (!resolved) {\n            resolved = Promise.resolve();\n        }\n        resolved.then(() => findAndClearHandle(handle) && cb());\n        return handle;\n    },\n    clearImmediate(handle) {\n        findAndClearHandle(handle);\n    },\n};\nexport const TestTools = {\n    pending() {\n        return Object.keys(activeHandles).length;\n    }\n};\n","import { Immediate } from '../util/Immediate';\nconst { setImmediate, clearImmediate } = Immediate;\nexport const immediateProvider = {\n    setImmediate(...args) {\n        const { delegate } = immediateProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.setImmediate) || setImmediate)(...args);\n    },\n    clearImmediate(handle) {\n        const { delegate } = immediateProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearImmediate) || clearImmediate)(handle);\n    },\n    delegate: undefined,\n};\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport const asapScheduler = new AsapScheduler(AsapAction);\nexport const asap = asapScheduler;\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this._active = true;\n        const flushId = this._scheduled;\n        this._scheduled = undefined;\n        const { actions } = this;\n        let error;\n        action = action || actions.shift();\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions[0]) && action.id === flushId && actions.shift());\n        this._active = false;\n        if (error) {\n            while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { immediateProvider } from './immediateProvider';\nexport class AsapAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        var _a;\n        if (delay != null ? delay > 0 : this.delay > 0) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        const { actions } = scheduler;\n        if (id != null && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {\n            immediateProvider.clearImmediate(id);\n            scheduler._scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n","import { coerceNumberProperty, coerceElement, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, Injectable, Optional, Inject, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, SkipSelf, ElementRef, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { getRtlScrollAxisType, supportsScrollBehavior, Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/cdk/collections';\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the virtual scrolling strategy. */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() {\n        /* no-op */\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() {\n        /* no-op */\n    }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(value) {\n        this._itemSize = coerceNumberProperty(value);\n    }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n        return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n        this._minBufferPx = coerceNumberProperty(value);\n    }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() {\n        return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n        this._maxBufferPx = coerceNumberProperty(value);\n    }\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFixedSizeVirtualScroll, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkFixedSizeVirtualScroll.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkFixedSizeVirtualScroll, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, providers: [\n        {\n            provide: VIRTUAL_SCROLL_STRATEGY,\n            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n        },\n    ], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFixedSizeVirtualScroll, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                    providers: [\n                        {\n                            provide: VIRTUAL_SCROLL_STRATEGY,\n                            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n                        },\n                    ],\n                }]\n        }], propDecorators: { itemSize: [{\n                type: Input\n            }], minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    constructor(_ngZone, _platform, document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0\n                ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer)\n                : this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while ((element = element.parentElement));\n        return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n        });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollDispatcher, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nScrollDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll')\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(observer)));\n    }\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* RtlScrollAxisType.NORMAL */) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* RtlScrollAxisType.INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* RtlScrollAxisType.NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* RtlScrollAxisType.INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* RtlScrollAxisType.NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkScrollable, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkScrollable.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkScrollable, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-scrollable], [cdkScrollable]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    constructor(_platform, ngZone, document) {\n        this._platform = _platform;\n        /** Stream of viewport change events. */\n        this._change = new Subject();\n        /** Event listener that will be used to handle the viewport change events. */\n        this._changeListener = (event) => {\n            this._change.next(event);\n        };\n        this._document = document;\n        ngZone.runOutsideAngular(() => {\n            if (_platform.isBrowser) {\n                const window = this._getWindow();\n                // Note that bind the events ourselves, rather than going through something like RxJS's\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n                window.addEventListener('resize', this._changeListener);\n                window.addEventListener('orientationchange', this._changeListener);\n            }\n            // Clear the cached position so that the viewport is re-measured next time it is required.\n            // We don't need to keep track of the subscription, because it is completed on destroy.\n            this.change().subscribe(() => (this._viewportSize = null));\n        });\n    }\n    ngOnDestroy() {\n        if (this._platform.isBrowser) {\n            const window = this._getWindow();\n            window.removeEventListener('resize', this._changeListener);\n            window.removeEventListener('orientationchange', this._changeListener);\n        }\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a ClientRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top ||\n            document.body.scrollTop ||\n            window.scrollY ||\n            documentElement.scrollTop ||\n            0;\n        const left = -documentRect.left ||\n            document.body.scrollLeft ||\n            window.scrollX ||\n            documentElement.scrollLeft ||\n            0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser\n            ? { width: window.innerWidth, height: window.innerHeight }\n            : { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ViewportRuler, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nViewportRuler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ViewportRuler, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ViewportRuler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst VIRTUAL_SCROLLABLE = new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the {@link CdkScrollable} to be used as scrolling container for virtual scrolling.\n */\nclass CdkVirtualScrollable extends CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    /**\n     * Measure the viewport size for the provided orientation.\n     *\n     * @param orientation The orientation to measure the size from.\n     */\n    measureViewportSize(orientation) {\n        const viewportEl = this.elementRef.nativeElement;\n        return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n}\nCdkVirtualScrollable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollable, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkVirtualScrollable.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkVirtualScrollable, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollable, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkVirtualScrollable {\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler, scrollable) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        this.scrollable = scrollable;\n        this._platform = inject(Platform);\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        this._appendOnly = false;\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n        /** A stream that emits whenever the rendered range changes. */\n        this.renderedRangeStream = this._renderedRangeSubject;\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        this._runAfterChangeDetection = [];\n        /** Subscription to changes in the viewport size. */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n        if (!this.scrollable) {\n            // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n            this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n            this.scrollable = this;\n        }\n    }\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n     * will be removed.\n     */\n    get appendOnly() {\n        return this._appendOnly;\n    }\n    set appendOnly(value) {\n        this._appendOnly = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        // Scrolling depends on the element dimensions which we can't get during SSR.\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        if (this.scrollable === this) {\n            super.ngOnInit();\n        }\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.scrollable\n                .elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            if (this.appendOnly) {\n                range = { start: 0, end: Math.max(this._renderedRange.end, range.end) };\n            }\n            this._renderedRangeSubject.next((this._renderedRange = range));\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // In appendOnly, we always start from the top\n        offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollable.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the scrollable (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        // This is to break the call cycle\n        let measureScrollOffset;\n        if (this.scrollable == this) {\n            measureScrollOffset = (_from) => super.measureScrollOffset(_from);\n        }\n        else {\n            measureScrollOffset = (_from) => this.scrollable.measureScrollOffset(_from);\n        }\n        return Math.max(0, measureScrollOffset(from ?? (this.orientation === 'horizontal' ? 'start' : 'top')) -\n            this.measureViewportOffset());\n    }\n    /**\n     * Measures the offset of the viewport from the scrolling container\n     * @param from The edge to measure from.\n     */\n    measureViewportOffset(from) {\n        let fromRect;\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const isRtl = this.dir?.value == 'rtl';\n        if (from == 'start') {\n            fromRect = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            fromRect = isRtl ? LEFT : RIGHT;\n        }\n        else if (from) {\n            fromRect = from;\n        }\n        else {\n            fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n        }\n        const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n        const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n        return viewportClientRect - scrollerClientRect;\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollViewport, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: VIRTUAL_SCROLL_STRATEGY, optional: true }, { token: i2.Directionality, optional: true }, { token: ScrollDispatcher }, { token: ViewportRuler }, { token: VIRTUAL_SCROLLABLE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkVirtualScrollViewport.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkVirtualScrollViewport, selector: \"cdk-virtual-scroll-viewport\", inputs: { orientation: \"orientation\", appendOnly: \"appendOnly\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, host: { properties: { \"class.cdk-virtual-scroll-orientation-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.cdk-virtual-scroll-orientation-vertical\": \"orientation !== \\\"horizontal\\\"\" }, classAttribute: \"cdk-virtual-scroll-viewport\" }, providers: [\n        {\n            provide: CdkScrollable,\n            useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n            deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n        },\n    ], viewQueries: [{ propertyName: \"_contentWrapper\", first: true, predicate: [\"contentWrapper\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollViewport, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-virtual-scroll-viewport', host: {\n                        'class': 'cdk-virtual-scroll-viewport',\n                        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: CdkScrollable,\n                            useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                            deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n                        },\n                    ], template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [VIRTUAL_SCROLL_STRATEGY]\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: ScrollDispatcher }, { type: ViewportRuler }, { type: CdkVirtualScrollable, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [VIRTUAL_SCROLLABLE]\n                }] }]; }, propDecorators: { orientation: [{\n                type: Input\n            }], appendOnly: [{\n                type: Input\n            }], scrolledIndexChange: [{\n                type: Output\n            }], _contentWrapper: [{\n                type: ViewChild,\n                args: ['contentWrapper', { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    constructor(\n    /** The view container to add items to. */\n    _viewContainerRef, \n    /** The template to use when stamping out new items. */\n    _template, \n    /** The set of available differs. */\n    _differs, \n    /** The strategy used to render items in the virtual scroll viewport. */\n    _viewRepeater, \n    /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewRepeater = _viewRepeater;\n        this._viewport = _viewport;\n        /** Emits when the rendered view of the data changes. */\n        this.viewChange = new Subject();\n        /** Subject that emits when a new DataSource instance is given. */\n        this._dataSourceChanges = new Subject();\n        /** Emits whenever the data in the current DataSource changes. */\n        this.dataStream = this._dataSourceChanges.pipe(\n        // Start off with null `DataSource`.\n        startWith(null), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /** The differ used to calculate changes to the data. */\n        this._differ = null;\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            if (this.viewChange.observers.length) {\n                ngZone.run(() => this.viewChange.next(this._renderedRange));\n            }\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn\n            ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)\n            : undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode\n            ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode)\n            : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false,\n            },\n            index,\n        };\n    }\n}\nCdkVirtualForOf.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualForOf, deps: [{ token: i0.ViewContainerRef }, { token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: _VIEW_REPEATER_STRATEGY }, { token: CdkVirtualScrollViewport, skipSelf: true }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkVirtualForOf.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkVirtualForOf, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualForOf, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: i2$1._RecycleViewRepeaterStrategy, decorators: [{\n                    type: Inject,\n                    args: [_VIEW_REPEATER_STRATEGY]\n                }] }, { type: CdkVirtualScrollViewport, decorators: [{\n                    type: SkipSelf\n                }] }, { type: i0.NgZone }]; }, propDecorators: { cdkVirtualForOf: [{\n                type: Input\n            }], cdkVirtualForTrackBy: [{\n                type: Input\n            }], cdkVirtualForTemplate: [{\n                type: Input\n            }], cdkVirtualForTemplateCacheSize: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nclass CdkVirtualScrollableElement extends CdkVirtualScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return (this.getElementRef().nativeElement.getBoundingClientRect()[from] -\n            this.measureScrollOffset(from));\n    }\n}\nCdkVirtualScrollableElement.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollableElement, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkVirtualScrollableElement.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkVirtualScrollableElement, selector: \"[cdkVirtualScrollingElement]\", host: { classAttribute: \"cdk-virtual-scrollable\" }, providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollableElement, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualScrollingElement]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }],\n                    host: {\n                        'class': 'cdk-virtual-scrollable',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nclass CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n    constructor(scrollDispatcher, ngZone, dir) {\n        super(new ElementRef(document.documentElement), scrollDispatcher, ngZone, dir);\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(document, 'scroll').pipe(takeUntil(this._destroyed)).subscribe(observer)));\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n}\nCdkVirtualScrollableWindow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollableWindow, deps: [{ token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkVirtualScrollableWindow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkVirtualScrollableWindow, selector: \"cdk-virtual-scroll-viewport[scrollWindow]\", providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollableWindow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[scrollWindow]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }],\n                }]\n        }], ctorParameters: function () { return [{ type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkScrollableModule {\n}\nCdkScrollableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkScrollableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkScrollableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkScrollableModule, declarations: [CdkScrollable], exports: [CdkScrollable] });\nCdkScrollableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkScrollableModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkScrollableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkScrollable],\n                    declarations: [CdkScrollable],\n                }]\n        }] });\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nScrollingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollingModule, declarations: [CdkFixedSizeVirtualScroll,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport,\n        CdkVirtualScrollableWindow,\n        CdkVirtualScrollableElement], imports: [BidiModule, CdkScrollableModule], exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport,\n        CdkVirtualScrollableWindow,\n        CdkVirtualScrollableElement] });\nScrollingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollingModule, imports: [BidiModule, CdkScrollableModule, BidiModule, CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, CdkScrollableModule],\n                    exports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                    declarations: [\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n","import * as i0 from '@angular/core';\nimport { ElementRef, Injector, Directive, EventEmitter, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (host == null) {\n                throwNullPortalOutletError();\n            }\n            if (host.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host != null) {\n            this._attachedHost = null;\n            host.detach();\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwNoPortalAttachedError();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    constructor(\n    /** The embedded template that will be used to instantiate an embedded View in the host. */\n    templateRef, \n    /** Reference to the ViewContainer into which the template will be stamped out. */\n    viewContainerRef, \n    /** Contextual data to be passed in to the embedded view. */\n    context, \n    /** The injector to use for the embedded view. */\n    injector) {\n        super();\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n        this.injector = injector;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    constructor() {\n        /** Whether this host has already been permanently disposed. */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!portal) {\n                throwNullPortalError();\n            }\n            if (this.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            if (this._isDisposed) {\n                throwPortalOutletAlreadyDisposedError();\n            }\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwUnknownPortalTypeError();\n        }\n    }\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param outletElement Element into which the content is projected.\n     * @param _componentFactoryResolver Used to resolve the component factory.\n     *   Only required when attaching component portals.\n     * @param _appRef Reference to the application. Only used in component portals when there\n     *   is no `ViewContainerRef` available.\n     * @param _defaultInjector Injector to use as a fallback when the portal being attached doesn't\n     *   have one. Only used for component portals.\n     * @param _document Reference to the document. Used when attaching a DOM portal. Will eventually\n     *   become a required parameter.\n     */\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        const resolver = (portal.componentFactoryResolver || this._componentFactoryResolver);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !resolver) {\n            throw Error('Cannot attach component portal to outlet without a ComponentFactoryResolver.');\n        }\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._appRef) {\n                throw Error('Cannot attach component portal to outlet without an ApplicationRef.');\n            }\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector || Injector.NULL);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                // Verify that the ApplicationRef has registered views before trying to detach a host view.\n                // This check also protects the `detachView` from being called on a destroyed ApplicationRef.\n                if (this._appRef.viewCount > 0) {\n                    this._appRef.detachView(componentRef.hostView);\n                }\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        this._attachedPortal = portal;\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        // Note that we want to detect changes after the nodes have been moved so that\n        // any directives inside the portal that are looking at the DOM inside a lifecycle\n        // hook won't be invoked too early.\n        viewRef.detectChanges();\n        this.setDisposeFn(() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        });\n        this._attachedPortal = portal;\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        this.outletElement.remove();\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkPortal, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkPortal.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkPortal, selector: \"[cdkPortal]\", exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortal]',\n                    exportAs: 'cdkPortal',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; } });\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: TemplatePortalDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTemplatePortalDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: TemplatePortalDirective, selector: \"[cdk-portal], [portal]\", providers: [\n        {\n            provide: CdkPortal,\n            useExisting: TemplatePortalDirective,\n        },\n    ], exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: TemplatePortalDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-portal], [portal]',\n                    exportAs: 'cdkPortal',\n                    providers: [\n                        {\n                            provide: CdkPortal,\n                            useExisting: TemplatePortalDirective,\n                        },\n                    ],\n                }]\n        }] });\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /** Whether the portal component is initialized. */\n        this._isInitialized = false;\n        /** Emits when a portal is attached to the outlet. */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /** Portal associated with the Portal outlet. */\n    get portal() {\n        return this._attachedPortal;\n    }\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal || null;\n    }\n    /** Component or view reference that is attached to the portal. */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        const viewContainerRef = portal.viewContainerRef != null ? portal.viewContainerRef : this._viewContainerRef;\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n        }\n        super.setDisposeFn(() => ref.destroy());\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        super.setDisposeFn(() => this._viewContainerRef.clear());\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /** Gets the root node of the portal outlet. */\n    _getRootNode() {\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (nativeElement.nodeType === nativeElement.ELEMENT_NODE\n            ? nativeElement\n            : nativeElement.parentNode);\n    }\n}\nCdkPortalOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkPortalOutlet, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nCdkPortalOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkPortalOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalOutlet]',\n                    exportAs: 'cdkPortalOutlet',\n                    inputs: ['portal: cdkPortalOutlet'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { attached: [{\n                type: Output\n            }] } });\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: PortalHostDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nPortalHostDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: PortalHostDirective, selector: \"[cdkPortalHost], [portalHost]\", inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, providers: [\n        {\n            provide: CdkPortalOutlet,\n            useExisting: PortalHostDirective,\n        },\n    ], exportAs: [\"cdkPortalHost\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: PortalHostDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalHost], [portalHost]',\n                    exportAs: 'cdkPortalHost',\n                    inputs: ['portal: cdkPortalHost'],\n                    providers: [\n                        {\n                            provide: CdkPortalOutlet,\n                            useExisting: PortalHostDirective,\n                        },\n                    ],\n                }]\n        }] });\nclass PortalModule {\n}\nPortalModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: PortalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPortalModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: PortalModule, declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] });\nPortalModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: PortalModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: PortalModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                    declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n * @deprecated Use `Injector.create` instead.\n * @breaking-change 11.0.0\n */\nclass PortalInjector {\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    get(token, notFoundValue) {\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n","import * as i1 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, Optional, ElementRef, ApplicationRef, ANIMATION_MODULE_TYPE, InjectionToken, Directive, EventEmitter, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { supportsScrollBehavior, _getEventTarget, _isTestEnvironment } from '@angular/cdk/platform';\nimport * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil, takeWhile } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollStrategyOptions, deps: [{ token: i1.ScrollDispatcher }, { token: i1.ViewportRuler }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nScrollStrategyOptions.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollStrategyOptions, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollStrategyOptions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.ScrollDispatcher }, { type: i1.ViewportRuler }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the possible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n}\nBaseOverlayDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: BaseOverlayDispatcher, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nBaseOverlayDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: BaseOverlayDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: BaseOverlayDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(document);\n        this._ngZone = _ngZone;\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    const keydownEvents = overlays[i]._keydownEvents;\n                    /** @breaking-change 14.0.0 _ngZone will be required. */\n                    if (this._ngZone) {\n                        this._ngZone.run(() => keydownEvents.next(event));\n                    }\n                    else {\n                        keydownEvents.next(event);\n                    }\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.runOutsideAngular(() => this._document.body.addEventListener('keydown', this._keydownListener));\n            }\n            else {\n                this._document.body.addEventListener('keydown', this._keydownListener);\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayKeyboardDispatcher, deps: [{ token: DOCUMENT }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayKeyboardDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayKeyboardDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayKeyboardDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(document);\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._cursorStyleIsSet = false;\n        /** Store pointerdown event target to track origin of click. */\n        this._pointerDownListener = (event) => {\n            this._pointerDownEventTarget = _getEventTarget(event);\n        };\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            const target = _getEventTarget(event);\n            // In case of a click event, we want to check the origin of the click\n            // (e.g. in case where a user starts a click inside the overlay and\n            // releases the click outside of it).\n            // This is done by using the event target of the preceding pointerdown event.\n            // Every click event caused by a pointer device has a preceding pointerdown\n            // event, unless the click was programmatically triggered (e.g. in a unit test).\n            const origin = event.type === 'click' && this._pointerDownEventTarget\n                ? this._pointerDownEventTarget\n                : target;\n            // Reset the stored pointerdown event target, to avoid having it interfere\n            // in subsequent events.\n            this._pointerDownEventTarget = null;\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n                // and proceed with the next overlay\n                if (overlayRef.overlayElement.contains(target) ||\n                    overlayRef.overlayElement.contains(origin)) {\n                    break;\n                }\n                const outsidePointerEvents = overlayRef._outsidePointerEvents;\n                /** @breaking-change 14.0.0 _ngZone will be required. */\n                if (this._ngZone) {\n                    this._ngZone.run(() => outsidePointerEvents.next(event));\n                }\n                else {\n                    outsidePointerEvents.next(event);\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.runOutsideAngular(() => this._addEventListeners(body));\n            }\n            else {\n                this._addEventListeners(body);\n            }\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            const body = this._document.body;\n            body.removeEventListener('pointerdown', this._pointerDownListener, true);\n            body.removeEventListener('click', this._clickListener, true);\n            body.removeEventListener('auxclick', this._clickListener, true);\n            body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n    _addEventListeners(body) {\n        body.addEventListener('pointerdown', this._pointerDownListener, true);\n        body.addEventListener('click', this._clickListener, true);\n        body.addEventListener('auxclick', this._clickListener, true);\n        body.addEventListener('contextmenu', this._clickListener, true);\n    }\n}\nOverlayOutsideClickDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayOutsideClickDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this._containerElement?.remove();\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        // TODO(crisbeto): remove the testing check once we have an overlay testing\n        // module or Angular starts tearing down the testing `NgModule`. See:\n        // https://github.com/angular/angular/issues/18831\n        if (this._platform.isBrowser || _isTestEnvironment()) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].remove();\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (_isTestEnvironment()) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayContainer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayContainer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher, _animationsDisabled = false) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsDisabled = _animationsDisabled;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        this._backdropTransitionendHandler = (event) => {\n            this._disposeBackdrop(event.target);\n        };\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        // Insert the host into the DOM before attaching the portal, otherwise\n        // the animations module will skip animations on repeat attachments.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        const attachResult = this._portalOutlet.attach(portal);\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        // TODO(crisbeto): the null check is here, because the portal outlet returns `any`.\n        // We should be guaranteed for the result to be `ComponentRef | EmbeddedViewRef`, but\n        // `instanceof EmbeddedViewRef` doesn't appear to work at the moment.\n        if (typeof attachResult?.onDestroy === 'function') {\n            // In most cases we control the portal and we know when it is being detached so that\n            // we can finish the disposal process. The exception is if the user passes in a custom\n            // `ViewContainerRef` that isn't destroyed through the overlay API. Note that we use\n            // `detach` here instead of `dispose`, because we don't know if the user intends to\n            // reattach the overlay at a later point. It also has the advantage of waiting for animations.\n            attachResult.onDestroy(() => {\n                if (this.hasAttached()) {\n                    // We have to delay the `detach` call, because detaching immediately prevents\n                    // other destroy hooks from running. This is likely a framework bug similar to\n                    // https://github.com/angular/angular/issues/46119\n                    this._ngZone.runOutsideAngular(() => Promise.resolve().then(() => this.detach()));\n                }\n            });\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this._disposeBackdrop(this._backdropElement);\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        this._host?.remove();\n        this._previousHostParent = this._pane = this._host = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = { ...this._config, ...sizeConfig };\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = { ...this._config, direction: dir };\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._animationsDisabled) {\n            this._backdropElement.classList.add('cdk-overlay-backdrop-noop-animation');\n        }\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (!this._animationsDisabled && typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        const backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        if (this._animationsDisabled) {\n            this._disposeBackdrop(backdropToDetach);\n            return;\n        }\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', this._backdropTransitionendHandler);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        this._backdropTimeout = this._ngZone.runOutsideAngular(() => setTimeout(() => {\n            this._disposeBackdrop(backdropToDetach);\n        }, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classes = coerceArray(cssClasses || []).filter(c => !!c);\n        if (classes.length) {\n            isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n        }\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._host.remove();\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n    /** Removes a backdrop element from the DOM. */\n    _disposeBackdrop(backdrop) {\n        if (backdrop) {\n            backdrop.removeEventListener('click', this._backdropClickHandler);\n            backdrop.removeEventListener('transitionend', this._backdropTransitionendHandler);\n            backdrop.remove();\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement === backdrop) {\n                this._backdropElement = null;\n            }\n        }\n        if (this._backdropTimeout) {\n            clearTimeout(this._backdropTimeout);\n            this._backdropTimeout = undefined;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef &&\n            overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satisfies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin, the overlay and the container to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        const containerRect = this._containerRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, containerRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos),\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        const lastPosition = this._lastPosition;\n        if (lastPosition) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n            const originPoint = this._getOriginPoint(this._originRect, this._containerRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n        else {\n            this.apply();\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, containerRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + originRect.width / 2;\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        // When zooming in Safari the container rectangle contains negative values for the position\n        // and we need to re-add them to the calculated coordinates.\n        if (containerRect.left < 0) {\n            x -= containerRect.left;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + originRect.height / 2;\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        // Normally the containerRect's top value would be zero, however when the overlay is attached to an input\n        // (e.g. in an autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        // Additionally, when zooming in Safari this fixes the vertical position.\n        if (containerRect.top < 0) {\n            y -= containerRect.top;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = x + overlay.width - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = y + overlay.height - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlay at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically || (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally || (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occurring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param rawOverlayRect Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y,\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - previousHeight / 2;\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) || (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) || (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - previousWidth / 2;\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stretches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - 2 * this._viewportMargin,\n            height: height - 2 * this._viewportMargin,\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breaking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the ClientRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width,\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return !units || units === 'px' ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `ClientRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `ClientRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height),\n    };\n}\nconst STANDARD_DROPDOWN_BELOW_POSITIONS = [\n    { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n    { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n    { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\n];\nconst STANDARD_DROPDOWN_ADJACENT_POSITIONS = [\n    { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' },\n    { originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' },\n    { originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._alignItems = '';\n        this._xPosition = '';\n        this._xOffset = '';\n        this._width = '';\n        this._height = '';\n        this._isDisposed = false;\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'left';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'right';\n        return this;\n    }\n    /**\n     * Sets the overlay to the start of the viewport, depending on the overlay direction.\n     * This will be to the left in LTR layouts and to the right in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    start(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'start';\n        return this;\n    }\n    /**\n     * Sets the overlay to the end of the viewport, depending on the overlay direction.\n     * This will be to the right in LTR layouts and to the left in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    end(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._xPosition = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        const xPosition = this._xPosition;\n        const xOffset = this._xOffset;\n        const isRtl = this._overlayRef.getConfig().direction === 'rtl';\n        let marginLeft = '';\n        let marginRight = '';\n        let justifyContent = '';\n        if (shouldBeFlushHorizontally) {\n            justifyContent = 'flex-start';\n        }\n        else if (xPosition === 'center') {\n            justifyContent = 'center';\n            if (isRtl) {\n                marginRight = xOffset;\n            }\n            else {\n                marginLeft = xOffset;\n            }\n        }\n        else if (isRtl) {\n            if (xPosition === 'left' || xPosition === 'end') {\n                justifyContent = 'flex-end';\n                marginLeft = xOffset;\n            }\n            else if (xPosition === 'right' || xPosition === 'start') {\n                justifyContent = 'flex-start';\n                marginRight = xOffset;\n            }\n        }\n        else if (xPosition === 'left' || xPosition === 'start') {\n            justifyContent = 'flex-start';\n            marginLeft = xOffset;\n        }\n        else if (xPosition === 'right' || xPosition === 'end') {\n            justifyContent = 'flex-end';\n            marginRight = xOffset;\n        }\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : marginLeft;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = shouldBeFlushHorizontally ? '0' : marginRight;\n        parentStyles.justifyContent = justifyContent;\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent =\n            parentStyles.alignItems =\n                styles.marginTop =\n                    styles.marginBottom =\n                        styles.marginLeft =\n                            styles.marginRight =\n                                styles.position =\n                                    '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayPositionBuilder, deps: [{ token: i1.ViewportRuler }, { token: DOCUMENT }, { token: i1$1.Platform }, { token: OverlayContainer }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayPositionBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayPositionBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayPositionBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }, { type: OverlayContainer }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher, _animationsModuleType) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsModuleType = _animationsModuleType;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher, this._animationsModuleType === 'NoopAnimations');\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Overlay, deps: [{ token: ScrollStrategyOptions }, { token: OverlayContainer }, { token: i0.ComponentFactoryResolver }, { token: OverlayPositionBuilder }, { token: OverlayKeyboardDispatcher }, { token: i0.Injector }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i5.Directionality }, { token: i6.Location }, { token: OverlayOutsideClickDispatcher }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlay.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Overlay });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: i0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: i0.Injector }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i5.Directionality }, { type: i6.Location }, { type: OverlayOutsideClickDispatcher }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }, {\n                    type: Optional\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n    },\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkOverlayOrigin, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkOverlayOrigin.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkOverlayOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                    exportAs: 'cdkOverlayOrigin',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Whether the overlay can be closed by user interaction. */\n        this.disableClose = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() {\n        return this._offsetX;\n    }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() {\n        return this._offsetY;\n    }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether or not the overlay should attach a backdrop. */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /** Whether or not the overlay should be locked when scrolling. */\n    get lockPosition() {\n        return this._lockPosition;\n    }\n    set lockPosition(value) {\n        this._lockPosition = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    get flexibleDimensions() {\n        return this._flexibleDimensions;\n    }\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    get growAfterOpen() {\n        return this._growAfterOpen;\n    }\n    set growAfterOpen(value) {\n        this._growAfterOpen = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    get push() {\n        return this._push;\n    }\n    set push(value) {\n        this._push = coerceBooleanProperty(value);\n    }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = (this._overlayRef = this._overlay.create(this._buildConfig()));\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            this.overlayOutsideClick.next(event);\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = (this._position =\n            this.positionStrategy || this._createPositionStrategy());\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop,\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._getFlexibleConnectedPositionStrategyOrigin());\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    _getFlexibleConnectedPositionStrategyOrigin() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef;\n        }\n        else {\n            return this.origin;\n        }\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this.positionChange.emit(position);\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkConnectedOverlay, deps: [{ token: Overlay }, { token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkConnectedOverlay.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: { origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkConnectedOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                    exportAs: 'cdkConnectedOverlay',\n                }]\n        }], ctorParameters: function () { return [{ type: Overlay }, { type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n                }] }, { type: i5.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { origin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOrigin']\n            }], positions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositions']\n            }], positionStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositionStrategy']\n            }], offsetX: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetX']\n            }], offsetY: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetY']\n            }], width: [{\n                type: Input,\n                args: ['cdkConnectedOverlayWidth']\n            }], height: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHeight']\n            }], minWidth: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinWidth']\n            }], minHeight: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinHeight']\n            }], backdropClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayBackdropClass']\n            }], panelClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPanelClass']\n            }], viewportMargin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayViewportMargin']\n            }], scrollStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayScrollStrategy']\n            }], open: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOpen']\n            }], disableClose: [{\n                type: Input,\n                args: ['cdkConnectedOverlayDisableClose']\n            }], transformOriginSelector: [{\n                type: Input,\n                args: ['cdkConnectedOverlayTransformOriginOn']\n            }], hasBackdrop: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHasBackdrop']\n            }], lockPosition: [{\n                type: Input,\n                args: ['cdkConnectedOverlayLockPosition']\n            }], flexibleDimensions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayFlexibleDimensions']\n            }], growAfterOpen: [{\n                type: Input,\n                args: ['cdkConnectedOverlayGrowAfterOpen']\n            }], push: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPush']\n            }], backdropClick: [{\n                type: Output\n            }], positionChange: [{\n                type: Output\n            }], attach: [{\n                type: Output\n            }], detach: [{\n                type: Output\n            }], overlayKeydown: [{\n                type: Output\n            }], overlayOutsideClick: [{\n                type: Output\n            }] } });\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass OverlayModule {\n}\nOverlayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOverlayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayModule, declarations: [CdkConnectedOverlay, CdkOverlayOrigin], imports: [BidiModule, PortalModule, ScrollingModule], exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule] });\nOverlayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayModule, providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER], imports: [BidiModule, PortalModule, ScrollingModule, ScrollingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, PortalModule, ScrollingModule],\n                    exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                    declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                    providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return (_document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null);\n    }\n}\nFullscreenOverlayContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: FullscreenOverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nFullscreenOverlayContainer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: FullscreenOverlayContainer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: FullscreenOverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, STANDARD_DROPDOWN_ADJACENT_POSITIONS, STANDARD_DROPDOWN_BELOW_POSITIONS, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition };\n","import * as i4 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Attribute, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i2 from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor(ariaLive, elementRef) {\n        this.id = `mat-error-${nextUniqueId$2++}`;\n        // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n        // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n        if (!ariaLive) {\n            elementRef.nativeElement.setAttribute('aria-live', 'polite');\n        }\n    }\n}\nMatError.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatError, deps: [{ token: 'aria-live', attribute: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatError.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatError, selector: \"mat-error\", inputs: { id: \"id\" }, host: { attributes: { \"aria-atomic\": \"true\" }, properties: { \"attr.id\": \"id\" }, classAttribute: \"mat-error\" }, providers: [{ provide: MAT_ERROR, useExisting: MatError }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatError, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-error',\n                    host: {\n                        'class': 'mat-error',\n                        '[attr.id]': 'id',\n                        'aria-atomic': 'true',\n                    },\n                    providers: [{ provide: MAT_ERROR, useExisting: MatError }],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['aria-live']\n                }] }, { type: i0.ElementRef }]; }, propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-5px)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFormFieldControl, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatFormFieldControl.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatFormFieldControl, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFormFieldControl, decorators: [{\n            type: Directive\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHint, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatHint.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatHint, selector: \"mat-hint\", inputs: { align: \"align\", id: \"id\" }, host: { properties: { \"class.mat-form-field-hint-end\": \"align === \\\"end\\\"\", \"attr.id\": \"id\", \"attr.align\": \"null\" }, classAttribute: \"mat-hint\" }, providers: [{ provide: _MAT_HINT, useExisting: MatHint }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHint, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-hint',\n                    host: {\n                        'class': 'mat-hint',\n                        '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                        '[attr.id]': 'id',\n                        // Remove align attribute to prevent it from interfering with layout.\n                        '[attr.align]': 'null',\n                    },\n                    providers: [{ provide: _MAT_HINT, useExisting: MatHint }],\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatLabel, selector: \"mat-label\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-label',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPlaceholder, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatPlaceholder.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatPlaceholder, selector: \"mat-placeholder\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-placeholder',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPrefix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatPrefix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatPrefix, selector: \"[matPrefix]\", providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPrefix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matPrefix]',\n                    providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatSuffix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSuffix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatSuffix, selector: \"[matSuffix]\", providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatSuffix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSuffix]',\n                    providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nconst _MatFormFieldBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldBase {\n    constructor(elementRef, _changeDetectorRef, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        this._hideRequiredMarker = false;\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId++}`;\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = _defaults?.appearance || 'legacy';\n        if (_defaults) {\n            this._hideRequiredMarker = Boolean(_defaults.hideRequiredMarker);\n            if (_defaults.color) {\n                this.color = this.defaultColor = _defaults.color;\n            }\n        }\n    }\n    /** The form field appearance style. */\n    get appearance() {\n        return this._appearance;\n    }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || this._defaults?.appearance || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() {\n        return this._hideRequiredMarker;\n    }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() {\n        return this.floatLabel !== 'never';\n    }\n    /** Text for the form field hint. */\n    get hintLabel() {\n        return this._hintLabel;\n    }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the AbstractControlDirective\n     * should be forwarded to the host element.\n     */\n    _shouldForward(prop) {\n        const control = this._control ? this._control.ngControl : null;\n        return control && control[prop];\n    }\n    _hasPlaceholder() {\n        return !!((this._control && this._control.placeholder) || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return (this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat()));\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return ((this.appearance === 'legacy' && !this._hasLabel()) ||\n            (this._hasLabel() && !this._shouldLabelFloat()));\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || (this.appearance === 'legacy' && this._hasPlaceholder());\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState\n            ? 'error'\n            : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend')\n                    .pipe(take(1))\n                    .subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder &&\n            this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'start')\n                    : null;\n                const endHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'end')\n                    : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        const container = this._connectionContainerRef.nativeElement;\n        const outlineStartSelector = '.mat-form-field-outline-start';\n        const outlineGapSelector = '.mat-form-field-outline-gap';\n        // getBoundingClientRect isn't available on the server.\n        if (this.appearance !== 'outline' || !this._platform.isBrowser) {\n            return;\n        }\n        // If there is no content, set the gap elements to zero.\n        if (!labelEl || !labelEl.children.length || !labelEl.textContent.trim()) {\n            const gapElements = container.querySelectorAll(`${outlineStartSelector}, ${outlineGapSelector}`);\n            for (let i = 0; i < gapElements.length; i++) {\n                gapElements[i].style.width = '0';\n            }\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const startEls = container.querySelectorAll(outlineStartSelector);\n        const gapEls = container.querySelectorAll(outlineGapSelector);\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be recalculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately =\n            false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFormField, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Directionality, optional: true }, { token: MAT_FORM_FIELD_DEFAULT_OPTIONS, optional: true }, { token: i2.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatFormField.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatFormField, selector: \"mat-form-field\", inputs: { color: \"color\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\", floatLabel: \"floatLabel\" }, host: { properties: { \"class.mat-form-field-appearance-standard\": \"appearance == \\\"standard\\\"\", \"class.mat-form-field-appearance-fill\": \"appearance == \\\"fill\\\"\", \"class.mat-form-field-appearance-outline\": \"appearance == \\\"outline\\\"\", \"class.mat-form-field-appearance-legacy\": \"appearance == \\\"legacy\\\"\", \"class.mat-form-field-invalid\": \"_control.errorState\", \"class.mat-form-field-can-float\": \"_canLabelFloat()\", \"class.mat-form-field-should-float\": \"_shouldLabelFloat()\", \"class.mat-form-field-has-label\": \"_hasFloatingLabel()\", \"class.mat-form-field-hide-placeholder\": \"_hideControlPlaceholder()\", \"class.mat-form-field-disabled\": \"_control.disabled\", \"class.mat-form-field-autofilled\": \"_control.autofilled\", \"class.mat-focused\": \"_control.focused\", \"class.ng-untouched\": \"_shouldForward(\\\"untouched\\\")\", \"class.ng-touched\": \"_shouldForward(\\\"touched\\\")\", \"class.ng-pristine\": \"_shouldForward(\\\"pristine\\\")\", \"class.ng-dirty\": \"_shouldForward(\\\"dirty\\\")\", \"class.ng-valid\": \"_shouldForward(\\\"valid\\\")\", \"class.ng-invalid\": \"_shouldForward(\\\"invalid\\\")\", \"class.ng-pending\": \"_shouldForward(\\\"pending\\\")\", \"class._mat-animation-noopable\": \"!_animationsEnabled\" }, classAttribute: \"mat-form-field\" }, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatFormField }], queries: [{ propertyName: \"_controlNonStatic\", first: true, predicate: MatFormFieldControl, descendants: true }, { propertyName: \"_controlStatic\", first: true, predicate: MatFormFieldControl, descendants: true, static: true }, { propertyName: \"_labelChildNonStatic\", first: true, predicate: MatLabel, descendants: true }, { propertyName: \"_labelChildStatic\", first: true, predicate: MatLabel, descendants: true, static: true }, { propertyName: \"_placeholderChild\", first: true, predicate: MatPlaceholder, descendants: true }, { propertyName: \"_errorChildren\", predicate: MAT_ERROR, descendants: true }, { propertyName: \"_hintChildren\", predicate: _MAT_HINT, descendants: true }, { propertyName: \"_prefixChildren\", predicate: MAT_PREFIX, descendants: true }, { propertyName: \"_suffixChildren\", predicate: MAT_SUFFIX, descendants: true }], viewQueries: [{ propertyName: \"_connectionContainerRef\", first: true, predicate: [\"connectionContainer\"], descendants: true, static: true }, { propertyName: \"_inputContainerRef\", first: true, predicate: [\"inputContainer\"], descendants: true }, { propertyName: \"_label\", first: true, predicate: [\"label\"], descendants: true }], exportAs: [\"matFormField\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.cdk-high-contrast-active .mat-form-field-disabled .mat-form-field-label{color:GrayText}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\", \".mat-input-element{font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-input-element::placeholder{transition:none}._mat-animation-noopable .mat-input-element::-moz-placeholder{transition:none}._mat-animation-noopable .mat-input-element::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-input-element:-ms-input-placeholder{transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px;border-top-color:GrayText}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:rgba(0,0,0,0)}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:GrayText}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i4.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], animations: [matFormFieldAnimations.transitionMessages], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-form-field', exportAs: 'matFormField', animations: [matFormFieldAnimations.transitionMessages], host: {\n                        'class': 'mat-form-field',\n                        '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                        '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                        '[class.mat-form-field-invalid]': '_control.errorState',\n                        '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                        '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                        '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                        '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                        '[class.mat-form-field-disabled]': '_control.disabled',\n                        '[class.mat-form-field-autofilled]': '_control.autofilled',\n                        '[class.mat-focused]': '_control.focused',\n                        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                        '[class.ng-touched]': '_shouldForward(\"touched\")',\n                        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                        '[class.ng-valid]': '_shouldForward(\"valid\")',\n                        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                        '[class.ng-pending]': '_shouldForward(\"pending\")',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                    }, inputs: ['color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatFormField }], template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.cdk-high-contrast-active .mat-form-field-disabled .mat-form-field-label{color:GrayText}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\", \".mat-input-element{font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-input-element::placeholder{transition:none}._mat-animation-noopable .mat-input-element::-moz-placeholder{transition:none}._mat-animation-noopable .mat-input-element::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-input-element:-ms-input-placeholder{transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px;border-top-color:GrayText}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:rgba(0,0,0,0)}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:GrayText}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n                }] }, { type: i2.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { appearance: [{\n                type: Input\n            }], hideRequiredMarker: [{\n                type: Input\n            }], hintLabel: [{\n                type: Input\n            }], floatLabel: [{\n                type: Input\n            }], _connectionContainerRef: [{\n                type: ViewChild,\n                args: ['connectionContainer', { static: true }]\n            }], _inputContainerRef: [{\n                type: ViewChild,\n                args: ['inputContainer']\n            }], _label: [{\n                type: ViewChild,\n                args: ['label']\n            }], _controlNonStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl]\n            }], _controlStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl, { static: true }]\n            }], _labelChildNonStatic: [{\n                type: ContentChild,\n                args: [MatLabel]\n            }], _labelChildStatic: [{\n                type: ContentChild,\n                args: [MatLabel, { static: true }]\n            }], _placeholderChild: [{\n                type: ContentChild,\n                args: [MatPlaceholder]\n            }], _errorChildren: [{\n                type: ContentChildren,\n                args: [MAT_ERROR, { descendants: true }]\n            }], _hintChildren: [{\n                type: ContentChildren,\n                args: [_MAT_HINT, { descendants: true }]\n            }], _prefixChildren: [{\n                type: ContentChildren,\n                args: [MAT_PREFIX, { descendants: true }]\n            }], _suffixChildren: [{\n                type: ContentChildren,\n                args: [MAT_SUFFIX, { descendants: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFormFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatFormFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFormFieldModule, declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix], imports: [CommonModule, MatCommonModule, ObserversModule], exports: [MatCommonModule,\n        MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix] });\nMatFormFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFormFieldModule, imports: [CommonModule, MatCommonModule, ObserversModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFormFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix],\n                    imports: [CommonModule, MatCommonModule, ObserversModule],\n                    exports: [\n                        MatCommonModule,\n                        MatError,\n                        MatFormField,\n                        MatHint,\n                        MatLabel,\n                        MatPlaceholder,\n                        MatPrefix,\n                        MatSuffix,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n","import { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return (source) => concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n    }\n    return mergeMap((value, index) => delayDurationSelector(value, index).pipe(take(1), mapTo(value)));\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nexport function ignoreElements() {\n    return operate((source, subscriber) => {\n        source.subscribe(createOperatorSubscriber(subscriber, noop));\n    });\n}\n","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getEventTarget } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, TemplateRef, Directive, Inject, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MAT_OPTGROUP, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i2$1 from '@angular/cdk/bidi';\nimport { hasModifierKey, ESCAPE, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i4 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { startWith, switchMap, take, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nconst _MatAutocompleteMixinBase = mixinDisableRipple(class {\n});\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false, autoSelectActiveOption: false };\n}\n/** Base class with all of the `MatAutocomplete` functionality. */\nclass _MatAutocompleteBase extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults, platform) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        // TODO(crisbeto): the problem that the `inertGroups` option resolves is only present on\n        // Safari using VoiceOver. We should occasionally check back to see whether the bug\n        // wasn't resolved in VoiceOver, and if it has, we can remove this and the `inertGroups`\n        // option altogether.\n        this.inertGroups = platform?.SAFARI || false;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n        this._autoSelectActiveOption = !!defaults.autoSelectActiveOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() {\n        return this._isOpen && this.showPanel;\n    }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() {\n        return this._autoActiveFirstOption;\n    }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /** Whether the active option should be selected as the user is navigating. */\n    get autoSelectActiveOption() {\n        return this._autoSelectActiveOption;\n    }\n    set autoSelectActiveOption(value) {\n        this._autoSelectActiveOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = coerceStringArray(value).reduce((classList, className) => {\n                classList[className] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            if (this.isOpen) {\n                this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n            }\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Gets the aria-labelledby for the autocomplete panel. */\n    _getPanelAriaLabelledby(labelId) {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList[this._visibleClass] = this.showPanel;\n        classList[this._hiddenClass] = !this.showPanel;\n    }\n}\n_MatAutocompleteBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatAutocompleteBase, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Directive });\n_MatAutocompleteBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: _MatAutocompleteBase, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", autoSelectActiveOption: \"autoSelectActiveOption\", panelWidth: \"panelWidth\", classList: [\"class\", \"classList\"] }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, viewQueries: [{ propertyName: \"template\", first: true, predicate: TemplateRef, descendants: true, static: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatAutocompleteBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n                }] }, { type: i1.Platform }]; }, propDecorators: { template: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], displayWith: [{\n                type: Input\n            }], autoActiveFirstOption: [{\n                type: Input\n            }], autoSelectActiveOption: [{\n                type: Input\n            }], panelWidth: [{\n                type: Input\n            }], optionSelected: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], optionActivated: [{\n                type: Output\n            }], classList: [{\n                type: Input,\n                args: ['class']\n            }] } });\nclass MatAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatAutocomplete.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatAutocomplete, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatAutocomplete.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatAutocomplete, selector: \"mat-autocomplete\", inputs: { disableRipple: \"disableRipple\" }, host: { classAttribute: \"mat-autocomplete\" }, providers: [{ provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }], queries: [{ propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }], exportAs: [\"matAutocomplete\"], usesInheritance: true, ngImport: i0, template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\"], dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatAutocomplete, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-autocomplete', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, exportAs: 'matAutocomplete', inputs: ['disableRipple'], host: {\n                        'class': 'mat-autocomplete',\n                    }, providers: [{ provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }], template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\"] }]\n        }], propDecorators: { optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base class containing all of the functionality for `MatAutocompleteOrigin`. */\nclass _MatAutocompleteOriginBase {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\n_MatAutocompleteOriginBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatAutocompleteOriginBase, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatAutocompleteOriginBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: _MatAutocompleteOriginBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatAutocompleteOriginBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatAutocompleteOrigin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatAutocompleteOrigin, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatAutocompleteOrigin.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatAutocompleteOrigin, selector: \"[matAutocompleteOrigin]\", exportAs: [\"matAutocompleteOrigin\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatAutocompleteOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matAutocompleteOrigin]',\n                    exportAs: 'matAutocompleteOrigin',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true,\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass _MatAutocompleteTriggerBase {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler, _defaults) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._defaults = _defaults;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of changes to the selection state of the autocomplete options. */\n        this.optionSelections = defer(() => {\n            const options = this.autocomplete ? this.autocomplete.options : null;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable.pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() {\n        return this._autocompleteDisabled;\n    }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            // The `NgZone.onStable` always emits outside of the Angular zone,\n            // so all the subscriptions from `_subscribeToClosingActions()` are also outside of the Angular zone.\n            // We should manually run in Angular zone to update UI after panel closing.\n            this._zone.run(() => {\n                this.autocomplete.closed.emit();\n            });\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        this._pendingAutoselectedOption = null;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef\n            ? this._overlayRef.detachments().pipe(filter(() => this._overlayAttached))\n            : of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => (event instanceof MatOptionSelectionChange ? event : null)));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'auxclick'), fromEvent(this._document, 'touchend')).pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = _getEventTarget(event);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return (this._overlayAttached &&\n                clickTarget !== this._element.nativeElement &&\n                // Normally focus moves inside `mousedown` so this condition will almost always be\n                // true. Its main purpose is to handle the case where the input is focused from an\n                // outside click which propagates up to the `body` listener within the same sequence\n                // and causes the panel to close immediately (see #3106).\n                this._document.activeElement !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                !!this._overlayRef &&\n                !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve(null).then(() => this._assignOptionValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const hasModifier = hasModifierKey(event);\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE && !hasModifier) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen && !hasModifier) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (keyCode === TAB || (isArrowKey && !hasModifier && this.panelOpen)) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n                if (this.autocomplete.autoSelectActiveOption && this.activeOption) {\n                    if (!this._pendingAutoselectedOption) {\n                        this._valueBeforeAutoSelection = this._element.nativeElement.value;\n                    }\n                    this._pendingAutoselectedOption = this.activeOption;\n                    this._assignOptionValue(this.activeOption.value);\n                }\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._pendingAutoselectedOption = null;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    _handleClick() {\n        if (this._canOpen() && !this.panelOpen) {\n            this.openPanel();\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return (merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            // The `NgZone.onStable` always emits outside of the Angular zone, thus we have to re-enter\n            // the Angular zone. This will lead to change detection being called outside of the Angular\n            // zone and the `autocomplete.opened` will also emit outside of the Angular.\n            this._zone.run(() => {\n                const wasOpen = this.panelOpen;\n                this._resetActiveItem();\n                this.autocomplete._setVisibility();\n                this._changeDetectorRef.detectChanges();\n                if (this.panelOpen) {\n                    this._overlayRef.updatePosition();\n                }\n                if (wasOpen !== this.panelOpen) {\n                    // If the `panelOpen` state changed, we need to make sure to emit the `opened` or\n                    // `closed` event, because we may not have emitted it. This can happen\n                    // - if the users opens the panel and there are no options, but the\n                    //   options come in slightly later or as a result of the value changing,\n                    // - if the panel is closed after the user entered a string that did not match any\n                    //   of the available options,\n                    // - if a valid string is entered after an invalid one.\n                    if (this.panelOpen) {\n                        this.autocomplete.opened.emit();\n                    }\n                    else {\n                        this.autocomplete.closed.emit();\n                    }\n                }\n            });\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event)));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _assignOptionValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith\n            ? this.autocomplete.displayWith(value)\n            : value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        this._updateNativeInputValue(toDisplay != null ? toDisplay : '');\n    }\n    _updateNativeInputValue(value) {\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = value;\n        }\n        else {\n            this._element.nativeElement.value = value;\n        }\n        this._previousValue = value;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        const toSelect = event ? event.source : this._pendingAutoselectedOption;\n        if (toSelect) {\n            this._clearPreviousSelectedOption(toSelect);\n            this._assignOptionValue(toSelect.value);\n            this._onChange(toSelect.value);\n            this.autocomplete._emitSelectEvent(toSelect);\n            this._element.nativeElement.focus();\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option !== skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef, {\n                id: this._formField?.getLabelId(),\n            });\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            this._handleOverlayEvents(overlayRef);\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir,\n            panelClass: this._defaults?.overlayPanelClass,\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = this._aboveClass;\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass },\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        const autocomplete = this.autocomplete;\n        if (autocomplete.autoActiveFirstOption) {\n            // Note that we go through `setFirstItemActive`, rather than `setActiveItem(0)`, because\n            // the former will find the next enabled option, if the first one is disabled.\n            autocomplete._keyManager.setFirstItemActive();\n        }\n        else {\n            autocomplete._keyManager.setActiveItem(-1);\n        }\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document?.defaultView || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n        // Given that we are not actually focusing active options, we must manually adjust scroll\n        // to reveal options below the fold. First, we find the offset of the option from the top\n        // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n        // the panel height + the option height, so the active option will be just visible at the\n        // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n        // will become the offset. If that offset is visible within the panel already, the scrollTop is\n        // not adjusted.\n        const autocomplete = this.autocomplete;\n        const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            autocomplete._setScrollTop(0);\n        }\n        else if (autocomplete.panel) {\n            const option = autocomplete.options.toArray()[index];\n            if (option) {\n                const element = option._getHostElement();\n                const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n                autocomplete._setScrollTop(newScrollPosition);\n            }\n        }\n    }\n    /** Handles keyboard events coming from the overlay panel. */\n    _handleOverlayEvents(overlayRef) {\n        // Use the `keydownEvents` in order to take advantage of\n        // the overlay event targeting provided by the CDK overlay.\n        overlayRef.keydownEvents().subscribe(event => {\n            // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n            // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n            if ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                (event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey'))) {\n                // If the user had typed something in before we autoselected an option, and they decided\n                // to cancel the selection, restore the input value to the one they had typed in.\n                if (this._pendingAutoselectedOption) {\n                    this._updateNativeInputValue(this._valueBeforeAutoSelection ?? '');\n                    this._pendingAutoselectedOption = null;\n                }\n                this._closeKeyEventStream.next();\n                this._resetActiveItem();\n                // We need to stop propagation, otherwise the event will eventually\n                // reach the input itself and cause the overlay to be reopened.\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        });\n        // Subscribe to the pointer events stream so that it doesn't get picked up by other overlays.\n        // TODO(crisbeto): we should switch `_getOutsideClickStream` eventually to use this stream,\n        // but the behvior isn't exactly the same and it ends up breaking some internal tests.\n        overlayRef.outsidePointerEvents().subscribe();\n    }\n}\n_MatAutocompleteTriggerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatAutocompleteTriggerBase, deps: [{ token: i0.ElementRef }, { token: i1$1.Overlay }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: MAT_AUTOCOMPLETE_SCROLL_STRATEGY }, { token: i2$1.Directionality, optional: true }, { token: MAT_FORM_FIELD, host: true, optional: true }, { token: DOCUMENT, optional: true }, { token: i3.ViewportRuler }, { token: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatAutocompleteTriggerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: _MatAutocompleteTriggerBase, inputs: { autocomplete: [\"matAutocomplete\", \"autocomplete\"], position: [\"matAutocompletePosition\", \"position\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"] }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatAutocompleteTriggerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1$1.Overlay }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n                }] }, { type: i2$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i4.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }, {\n                    type: Host\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { autocomplete: [{\n                type: Input,\n                args: ['matAutocomplete']\n            }], position: [{\n                type: Input,\n                args: ['matAutocompletePosition']\n            }], connectedTo: [{\n                type: Input,\n                args: ['matAutocompleteConnectedTo']\n            }], autocompleteAttribute: [{\n                type: Input,\n                args: ['autocomplete']\n            }], autocompleteDisabled: [{\n                type: Input,\n                args: ['matAutocompleteDisabled']\n            }] } });\nclass MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatAutocompleteTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatAutocompleteTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatAutocompleteTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatAutocompleteTrigger, selector: \"input[matAutocomplete], textarea[matAutocomplete]\", host: { listeners: { \"focusin\": \"_handleFocus()\", \"blur\": \"_onTouched()\", \"input\": \"_handleInput($event)\", \"keydown\": \"_handleKeydown($event)\", \"click\": \"_handleClick()\" }, properties: { \"attr.autocomplete\": \"autocompleteAttribute\", \"attr.role\": \"autocompleteDisabled ? null : \\\"combobox\\\"\", \"attr.aria-autocomplete\": \"autocompleteDisabled ? null : \\\"list\\\"\", \"attr.aria-activedescendant\": \"(panelOpen && activeOption) ? activeOption.id : null\", \"attr.aria-expanded\": \"autocompleteDisabled ? null : panelOpen.toString()\", \"attr.aria-owns\": \"(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id\", \"attr.aria-haspopup\": \"autocompleteDisabled ? null : \\\"listbox\\\"\" }, classAttribute: \"mat-autocomplete-trigger\" }, providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR], exportAs: [\"matAutocompleteTrigger\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatAutocompleteTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                    host: {\n                        'class': 'mat-autocomplete-trigger',\n                        '[attr.autocomplete]': 'autocompleteAttribute',\n                        '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                        '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                        '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                        '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                        '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                        '[attr.aria-haspopup]': 'autocompleteDisabled ? null : \"listbox\"',\n                        // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                        // a little earlier. This avoids issues where IE delays the focusing of the input.\n                        '(focusin)': '_handleFocus()',\n                        '(blur)': '_onTouched()',\n                        '(input)': '_handleInput($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(click)': '_handleClick()',\n                    },\n                    exportAs: 'matAutocompleteTrigger',\n                    providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatAutocompleteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatAutocompleteModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatAutocompleteModule, declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin], imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule], exports: [MatAutocomplete,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin,\n        CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\nMatAutocompleteModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatAutocompleteModule, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule, CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatAutocompleteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule],\n                    exports: [\n                        MatAutocomplete,\n                        MatAutocompleteTrigger,\n                        MatAutocompleteOrigin,\n                        CdkScrollableModule,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                    providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, _MatAutocompleteBase, _MatAutocompleteOriginBase, _MatAutocompleteTriggerBase, getMatAutocompleteMissingPanelError };\n","import { asyncScheduler } from '../scheduler/async';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\nexport function delay(due, scheduler = asyncScheduler) {\n    const duration = timer(due, scheduler);\n    return delayWhen(() => duration);\n}\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\nconst _MatButtonBase = mixinColor(mixinDisabled(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n})));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonBase {\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /** Whether the button is round. */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /** Whether the button is icon button. */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                this._getHostElement().classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the button. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n    }\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Gets whether the button has one of the given attributes. */\n    _hasHostAttributes(...attributes) {\n        return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n    }\n}\nMatButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButton, deps: [{ token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],\\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\\n             button[mat-flat-button]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, host: { properties: { \"attr.disabled\": \"disabled || null\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-button-disabled\": \"disabled\" }, classAttribute: \"mat-focus-indicator\" }, viewQueries: [{ propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }], exportAs: [\"matButton\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}.mat-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.mat-flat-button::before,.mat-raised-button::before,.mat-fab::before,.mat-mini-fab::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-stroked-button::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\"], dependencies: [{ kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButton, decorators: [{\n            type: Component,\n            args: [{ selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`, exportAs: 'matButton', host: {\n                        '[attr.disabled]': 'disabled || null',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        // Add a class for disabled button styling instead of the using attribute\n                        // selector or pseudo-selector.  This allows users to create focusable\n                        // disabled buttons without recreating the styles.\n                        '[class.mat-button-disabled]': 'disabled',\n                        'class': 'mat-focus-indicator',\n                    }, inputs: ['disabled', 'disableRipple', 'color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}.mat-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.mat-flat-button::before,.mat-raised-button::before,.mat-fab::before,.mat-mini-fab::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-stroked-button::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }] } });\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    constructor(focusMonitor, elementRef, animationMode, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(elementRef, focusMonitor, animationMode);\n        this._ngZone = _ngZone;\n        this._haltDisabledEvents = (event) => {\n            // A disabled button shouldn't apply any actions\n            if (this.disabled) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            }\n        };\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        /** @breaking-change 14.0.0 _ngZone will be required. */\n        if (this._ngZone) {\n            this._ngZone.runOutsideAngular(() => {\n                this._elementRef.nativeElement.addEventListener('click', this._haltDisabledEvents);\n            });\n        }\n        else {\n            this._elementRef.nativeElement.addEventListener('click', this._haltDisabledEvents);\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._elementRef.nativeElement.removeEventListener('click', this._haltDisabledEvents);\n    }\n}\nMatAnchor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatAnchor, deps: [{ token: i1.FocusMonitor }, { token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatAnchor.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatAnchor, selector: \"a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, host: { properties: { \"attr.tabindex\": \"disabled ? -1 : tabIndex\", \"attr.disabled\": \"disabled || null\", \"attr.aria-disabled\": \"disabled.toString()\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-button-disabled\": \"disabled\" }, classAttribute: \"mat-focus-indicator\" }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}.mat-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.mat-flat-button::before,.mat-raised-button::before,.mat-fab::before,.mat-mini-fab::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-stroked-button::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\"], dependencies: [{ kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatAnchor, decorators: [{\n            type: Component,\n            args: [{ selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`, exportAs: 'matButton, matAnchor', host: {\n                        // Note that we ignore the user-specified tabindex when it's disabled for\n                        // consistency with the `mat-button` applied on native buttons where even\n                        // though they have an index, they're not tabbable.\n                        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n                        '[attr.disabled]': 'disabled || null',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[class.mat-button-disabled]': 'disabled',\n                        'class': 'mat-focus-indicator',\n                    }, inputs: ['disabled', 'disableRipple', 'color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}.mat-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.mat-flat-button::before,.mat-raised-button::before,.mat-fab::before,.mat-mini-fab::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-stroked-button::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\"] }]\n        }], ctorParameters: function () { return [{ type: i1.FocusMonitor }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { tabIndex: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonModule, declarations: [MatButton, MatAnchor], imports: [MatRippleModule, MatCommonModule], exports: [MatButton, MatAnchor, MatCommonModule] });\nMatButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonModule, imports: [MatRippleModule, MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule],\n                    exports: [MatButton, MatAnchor, MatCommonModule],\n                    declarations: [MatButton, MatAnchor],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n","import { ConnectableObservable, isObservable, of, Subject } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { Injectable, InjectionToken } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource. We also can't use `isObservable`\n    // here, because of some internal apps.\n    return value && typeof value.connect === 'function' && !(value instanceof ConnectableObservable);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repeater that destroys views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will always construct a new embedded view for each item.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _DisposeViewRepeaterStrategy {\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\n                operation = 1 /* _ViewRepeaterOperation.INSERTED */;\n            }\n            else if (currentIndex == null) {\n                viewContainerRef.remove(adjustedPreviousIndex);\n                operation = 3 /* _ViewRepeaterOperation.REMOVED */;\n            }\n            else {\n                view = viewContainerRef.get(adjustedPreviousIndex);\n                viewContainerRef.move(view, currentIndex);\n                operation = 2 /* _ViewRepeaterOperation.MOVED */;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repeater that caches views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n    constructor() {\n        /**\n         * The size of the cache used to store unused views.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n         */\n        this.viewCacheSize = 20;\n        /**\n         * View cache that stores embedded view instances that have been previously stamped out,\n         * but don't are not currently rendered. The view repeater will reuse these views rather than\n         * creating brand new ones.\n         *\n         * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n         */\n        this._viewCache = [];\n    }\n    /** Apply changes to the DOM. */\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                // Item added.\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = view ? 1 /* _ViewRepeaterOperation.INSERTED */ : 0 /* _ViewRepeaterOperation.REPLACED */;\n            }\n            else if (currentIndex == null) {\n                // Item removed.\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n                operation = 3 /* _ViewRepeaterOperation.REMOVED */;\n            }\n            else {\n                // Item moved.\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = 2 /* _ViewRepeaterOperation.MOVED */;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n        for (const view of this._viewCache) {\n            view.destroy();\n        }\n        this._viewCache = [];\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new\n     * one. Returns `undefined` if the item was inserted into a cached view.\n     */\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n        if (cachedView) {\n            cachedView.context.$implicit = value;\n            return undefined;\n        }\n        const viewArgs = viewArgsFactory();\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n    }\n    /** Detaches the view at the given index and inserts into the view cache. */\n    _detachAndCacheView(index, viewContainerRef) {\n        const detachedView = viewContainerRef.detach(index);\n        this._maybeCacheView(detachedView, viewContainerRef);\n    }\n    /** Moves view at the previous index to the current index. */\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n        const view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = value;\n        return view;\n    }\n    /**\n     * Cache the given detached view. If the cache is full, the view will be\n     * destroyed.\n     */\n    _maybeCacheView(view, viewContainerRef) {\n        if (this._viewCache.length < this.viewCacheSize) {\n            this._viewCache.push(view);\n        }\n        else {\n            const index = viewContainerRef.indexOf(view);\n            // The host component could remove views from the container outside of\n            // the view repeater. It's unlikely this will occur, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index, viewContainerRef) {\n        const cachedView = this._viewCache.pop();\n        if (cachedView) {\n            viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true, compareWith) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        this.compareWith = compareWith;\n        /** Currently-selected values. */\n        this._selection = new Set();\n        /** Keeps track of the deselected options that haven't been emitted by the change event. */\n        this._deselectedToEmit = [];\n        /** Keeps track of the selected options that haven't been emitted by the change event. */\n        this._selectedToEmit = [];\n        /** Event emitted when the value has changed. */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach(value => this._markSelected(value));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /** Selected values. */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param values The values to select\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._markSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param values The values to deselect\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._unmarkSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Sets the selected values\n     * @param values The new selected values\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    setSelection(...values) {\n        this._verifyValueAssignment(values);\n        const oldValues = this.selected;\n        const newSelectedSet = new Set(values);\n        values.forEach(value => this._markSelected(value));\n        oldValues\n            .filter(value => !newSelectedSet.has(value))\n            .forEach(value => this._unmarkSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param value The value to toggle\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    toggle(value) {\n        return this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @param flushEvent Whether to flush the changes in an event.\n     *   If false, the changes to the selection will be flushed along with the next event.\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    clear(flushEvent = true) {\n        this._unmarkAll();\n        const changed = this._hasQueuedChanges();\n        if (flushEvent) {\n            this._emitChangeEvent();\n        }\n        return changed;\n    }\n    /**\n     * Determines whether a value is selected.\n     */\n    isSelected(value) {\n        if (this.compareWith) {\n            for (const otherValue of this._selection) {\n                if (this.compareWith(otherValue, value)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            this._selected.sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /** Emits a change event and clears the records of selected and deselected values. */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit,\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /** Selects a value. */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            if (!this.isSelected(value)) {\n                this._selection.add(value);\n            }\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /** Deselects a value. */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /** Clears out the selected values. */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach(value => this._unmarkSelected(value));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n    /** Whether there are queued up change to be emitted. */\n    _hasQueuedChanges() {\n        return !!(this._deselectedToEmit.length || this._selectedToEmit.length);\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param id ID of the item.\n     * @param name Name of the item.\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @return Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return () => {\n            this._listeners = this._listeners.filter((registered) => {\n                return listener !== registered;\n            });\n        };\n    }\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: UniqueSelectionDispatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nUniqueSelectionDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: UniqueSelectionDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: UniqueSelectionDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token for {@link _ViewRepeater}. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, _DisposeViewRepeaterStrategy, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, getMultipleValuesInSingleSelectionError, isDataSource };\n","import * as i1 from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = new InjectionToken('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatButtonToggleGroup),\n    multi: true,\n};\n// Counter used to generate unique IDs.\nlet uniqueIdCounter = 0;\n/** Change event object emitted by MatButtonToggle. */\nclass MatButtonToggleChange {\n    constructor(\n    /** The MatButtonToggle that emits the event. */\n    source, \n    /** The value assigned to the MatButtonToggle. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nclass MatButtonToggleGroup {\n    constructor(_changeDetector, defaultOptions) {\n        this._changeDetector = _changeDetector;\n        this._vertical = false;\n        this._multiple = false;\n        this._disabled = false;\n        /**\n         * The method to be called in order to update ngModel.\n         * Now `ngModel` binding is not supported in multiple selection mode.\n         */\n        this._controlValueAccessorChangeFn = () => { };\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this._onTouched = () => { };\n        this._name = `mat-button-toggle-group-${uniqueIdCounter++}`;\n        /**\n         * Event that emits whenever the value of the group changes.\n         * Used to facilitate two-way data binding.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** Event emitted when the group's value changes. */\n        this.change = new EventEmitter();\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /** `name` attribute for the underlying `input` element. */\n    get name() {\n        return this._name;\n    }\n    set name(value) {\n        this._name = value;\n        this._markButtonsForCheck();\n    }\n    /** Whether the toggle group is vertical. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Value of the toggle group. */\n    get value() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        if (this.multiple) {\n            return selected.map(toggle => toggle.value);\n        }\n        return selected[0] ? selected[0].value : undefined;\n    }\n    set value(newValue) {\n        this._setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n    /** Selected button toggles in the group. */\n    get selected() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        return this.multiple ? selected : selected[0] || null;\n    }\n    /** Whether multiple button toggles can be selected. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._markButtonsForCheck();\n    }\n    /** Whether multiple button toggle group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markButtonsForCheck();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    ngAfterContentInit() {\n        this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent(toggle) {\n        const event = new MatButtonToggleChange(toggle, this.value);\n        this._controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     * @param deferEvents Whether to defer emitting the change events.\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            this.selected.checked = false;\n        }\n        if (this._selectionModel) {\n            if (select) {\n                this._selectionModel.select(toggle);\n            }\n            else {\n                this._selectionModel.deselect(toggle);\n            }\n        }\n        else {\n            deferEvents = true;\n        }\n        // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n        // the side-effect is that we may end up updating the model value out of sequence in others\n        // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n        if (deferEvents) {\n            Promise.resolve().then(() => this._updateModelValue(toggle, isUserInput));\n        }\n        else {\n            this._updateModelValue(toggle, isUserInput);\n        }\n    }\n    /** Checks whether a button toggle is selected. */\n    _isSelected(toggle) {\n        return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /** Determines whether a button toggle should be checked on init. */\n    _isPrechecked(toggle) {\n        if (typeof this._rawValue === 'undefined') {\n            return false;\n        }\n        if (this.multiple && Array.isArray(this._rawValue)) {\n            return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n        }\n        return toggle.value === this._rawValue;\n    }\n    /** Updates the selection state of the toggles in the group based on a value. */\n    _setSelectionByValue(value) {\n        this._rawValue = value;\n        if (!this._buttonToggles) {\n            return;\n        }\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n            this._clearSelection();\n            value.forEach((currentValue) => this._selectValue(currentValue));\n        }\n        else {\n            this._clearSelection();\n            this._selectValue(value);\n        }\n    }\n    /** Clears the selected toggles. */\n    _clearSelection() {\n        this._selectionModel.clear();\n        this._buttonToggles.forEach(toggle => (toggle.checked = false));\n    }\n    /** Selects a value if there's a toggle that corresponds to it. */\n    _selectValue(value) {\n        const correspondingOption = this._buttonToggles.find(toggle => {\n            return toggle.value != null && toggle.value === value;\n        });\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this._selectionModel.select(correspondingOption);\n        }\n    }\n    /** Syncs up the group's value with the model and emits the change event. */\n    _updateModelValue(toggle, isUserInput) {\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this._emitChangeEvent(toggle);\n        }\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n    /** Marks all of the child button toggles to be checked. */\n    _markButtonsForCheck() {\n        this._buttonToggles?.forEach(toggle => toggle._markForCheck());\n    }\n}\nMatButtonToggleGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggleGroup, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatButtonToggleGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatButtonToggleGroup, selector: \"mat-button-toggle-group\", inputs: { appearance: \"appearance\", name: \"name\", vertical: \"vertical\", value: \"value\", multiple: \"multiple\", disabled: \"disabled\" }, outputs: { valueChange: \"valueChange\", change: \"change\" }, host: { attributes: { \"role\": \"group\" }, properties: { \"attr.aria-disabled\": \"disabled\", \"class.mat-button-toggle-vertical\": \"vertical\", \"class.mat-button-toggle-group-appearance-standard\": \"appearance === \\\"standard\\\"\" }, classAttribute: \"mat-button-toggle-group\" }, providers: [\n        MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n        { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n    ], queries: [{ propertyName: \"_buttonToggles\", predicate: i0.forwardRef(function () { return MatButtonToggle; }), descendants: true }], exportAs: [\"matButtonToggleGroup\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggleGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-button-toggle-group',\n                    providers: [\n                        MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n                        { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n                    ],\n                    host: {\n                        'role': 'group',\n                        'class': 'mat-button-toggle-group',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[class.mat-button-toggle-vertical]': 'vertical',\n                        '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"',\n                    },\n                    exportAs: 'matButtonToggleGroup',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { _buttonToggles: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatButtonToggle), {\n                        // Note that this would technically pick up toggles\n                        // from nested groups, but that's not a case that we support.\n                        descendants: true,\n                    }]\n            }], appearance: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], multiple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }] } });\n// Boilerplate for applying mixins to the MatButtonToggle class.\n/** @docs-private */\nconst _MatButtonToggleBase = mixinDisableRipple(class {\n});\n/** Single button inside of a toggle group. */\nclass MatButtonToggle extends _MatButtonToggleBase {\n    constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, defaultTabIndex, defaultOptions) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._checked = false;\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._disabled = false;\n        /** Event emitted when the group value changes. */\n        this.change = new EventEmitter();\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n        this.buttonToggleGroup = toggleGroup;\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /** Unique ID for the underlying `button` element. */\n    get buttonId() {\n        return `${this.id}-button`;\n    }\n    /** The appearance style of the button. */\n    get appearance() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    set appearance(value) {\n        this._appearance = value;\n    }\n    /** Whether the button is checked. */\n    get checked() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    set checked(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the button is disabled. */\n    get disabled() {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        const group = this.buttonToggleGroup;\n        this.id = this.id || `mat-button-toggle-${uniqueIdCounter++}`;\n        if (group) {\n            if (group._isPrechecked(this)) {\n                this.checked = true;\n            }\n            else if (group._isSelected(this) !== this._checked) {\n                // As as side effect of the circular dependency between the toggle group and the button,\n                // we may end up in a state where the button is supposed to be checked on init, but it\n                // isn't, because the checked value was assigned too early. This can happen when Ivy\n                // assigns the static input value before the `ngOnInit` has run.\n                group._syncButtonToggle(this, this._checked);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        const group = this.buttonToggleGroup;\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group._isSelected(this)) {\n            group._syncButtonToggle(this, false, false, true);\n        }\n    }\n    /** Focuses the button. */\n    focus(options) {\n        this._buttonElement.nativeElement.focus(options);\n    }\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    _onButtonClick() {\n        const newChecked = this._isSingleSelector() ? true : !this._checked;\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup._onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Gets the name that should be assigned to the inner DOM node. */\n    _getButtonName() {\n        if (this._isSingleSelector()) {\n            return this.buttonToggleGroup.name;\n        }\n        return this.name || null;\n    }\n    /** Whether the toggle is in single selection mode. */\n    _isSingleSelector() {\n        return this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n    }\n}\nMatButtonToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggle, deps: [{ token: MAT_BUTTON_TOGGLE_GROUP, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: 'tabindex', attribute: true }, { token: MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatButtonToggle.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatButtonToggle, selector: \"mat-button-toggle\", inputs: { disableRipple: \"disableRipple\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", name: \"name\", value: \"value\", tabIndex: \"tabIndex\", appearance: \"appearance\", checked: \"checked\", disabled: \"disabled\" }, outputs: { change: \"change\" }, host: { attributes: { \"role\": \"presentation\" }, listeners: { \"focus\": \"focus()\" }, properties: { \"class.mat-button-toggle-standalone\": \"!buttonToggleGroup\", \"class.mat-button-toggle-checked\": \"checked\", \"class.mat-button-toggle-disabled\": \"disabled\", \"class.mat-button-toggle-appearance-standard\": \"appearance === \\\"standard\\\"\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.id\": \"id\", \"attr.name\": \"null\" }, classAttribute: \"mat-button-toggle\" }, viewQueries: [{ propertyName: \"_buttonElement\", first: true, predicate: [\"button\"], descendants: true }], exportAs: [\"matButtonToggle\"], usesInheritance: true, ngImport: i0, template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"_getButtonName()\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\", styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\"], dependencies: [{ kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-button-toggle', encapsulation: ViewEncapsulation.None, exportAs: 'matButtonToggle', changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disableRipple'], host: {\n                        '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n                        '[class.mat-button-toggle-checked]': 'checked',\n                        '[class.mat-button-toggle-disabled]': 'disabled',\n                        '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n                        'class': 'mat-button-toggle',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.id]': 'id',\n                        '[attr.name]': 'null',\n                        '(focus)': 'focus()',\n                        'role': 'presentation',\n                    }, template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"_getButtonName()\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\", styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\"] }]\n        }], ctorParameters: function () { return [{ type: MatButtonToggleGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BUTTON_TOGGLE_GROUP]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], _buttonElement: [{\n                type: ViewChild,\n                args: ['button']\n            }], id: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], checked: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonToggleModule {\n}\nMatButtonToggleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatButtonToggleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggleModule, declarations: [MatButtonToggleGroup, MatButtonToggle], imports: [MatCommonModule, MatRippleModule], exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle] });\nMatButtonToggleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggleModule, imports: [MatCommonModule, MatRippleModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRippleModule],\n                    exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle],\n                    declarations: [MatButtonToggleGroup, MatButtonToggle],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleModule };\n","import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            },\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: AutofillMonitor, deps: [{ token: i1.Platform }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nAutofillMonitor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: AutofillMonitor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: AutofillMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }]; } });\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkAutofill, deps: [{ token: i0.ElementRef }, { token: AutofillMonitor }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAutofill.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkAutofill, selector: \"[cdkAutofill]\", outputs: { cdkAutofill: \"cdkAutofill\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkAutofill, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAutofill]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: AutofillMonitor }]; }, propDecorators: { cdkAutofill: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._isViewInited = false;\n        /** Handles `focus` and `blur` events. */\n        this._handleFocusEvent = (event) => {\n            this._hasFocus = event.type === 'focus';\n        };\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() {\n        return this._minRows;\n    }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() {\n        return this._maxRows;\n    }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    get placeholder() {\n        return this._textareaElement.placeholder;\n    }\n    set placeholder(value) {\n        this._cachedPlaceholderHeight = undefined;\n        if (value) {\n            this._textareaElement.setAttribute('placeholder', value);\n        }\n        else {\n            this._textareaElement.removeAttribute('placeholder');\n        }\n        this._cacheTextareaPlaceholderHeight();\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n                this._textareaElement.addEventListener('focus', this._handleFocusEvent);\n                this._textareaElement.addEventListener('blur', this._handleFocusEvent);\n            });\n            this._isViewInited = true;\n            this.resizeToFitContent(true);\n        }\n    }\n    ngOnDestroy() {\n        this._textareaElement.removeEventListener('focus', this._handleFocusEvent);\n        this._textareaElement.removeEventListener('blur', this._handleFocusEvent);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        textareaClone.remove();\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n        const element = this._textareaElement;\n        const previousMargin = element.style.marginBottom || '';\n        const isFirefox = this._platform.FIREFOX;\n        const needsMarginFiller = isFirefox && this._hasFocus;\n        const measuringClass = isFirefox\n            ? 'cdk-textarea-autosize-measuring-firefox'\n            : 'cdk-textarea-autosize-measuring';\n        // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n        // work around it by assigning a temporary margin with the same height as the `textarea` so that\n        // it occupies the same amount of space. See #23233.\n        if (needsMarginFiller) {\n            element.style.marginBottom = `${element.clientHeight}px`;\n        }\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        element.classList.add(measuringClass);\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const scrollHeight = element.scrollHeight - 4;\n        element.classList.remove(measuringClass);\n        if (needsMarginFiller) {\n            element.style.marginBottom = previousMargin;\n        }\n        return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n        if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n            return;\n        }\n        if (!this.placeholder) {\n            this._cachedPlaceholderHeight = 0;\n            return;\n        }\n        const value = this._textareaElement.value;\n        this._textareaElement.value = this._textareaElement.placeholder;\n        this._cachedPlaceholderHeight = this._measureScrollHeight();\n        this._textareaElement.value = value;\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        this._cacheTextareaPlaceholderHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const scrollHeight = this._measureScrollHeight();\n        const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && this._hasFocus) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTextareaAutosize, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTextareaAutosize.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTextareaAutosize, selector: \"textarea[cdkTextareaAutosize]\", inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"], placeholder: \"placeholder\" }, host: { attributes: { \"rows\": \"1\" }, listeners: { \"input\": \"_noopInputHandler()\" }, classAttribute: \"cdk-textarea-autosize\" }, exportAs: [\"cdkTextareaAutosize\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTextareaAutosize, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'textarea[cdkTextareaAutosize]',\n                    exportAs: 'cdkTextareaAutosize',\n                    host: {\n                        'class': 'cdk-textarea-autosize',\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        'rows': '1',\n                        '(input)': '_noopInputHandler()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { minRows: [{\n                type: Input,\n                args: ['cdkAutosizeMinRows']\n            }], maxRows: [{\n                type: Input,\n                args: ['cdkAutosizeMaxRows']\n            }], enabled: [{\n                type: Input,\n                args: ['cdkTextareaAutosize']\n            }], placeholder: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: TextFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTextFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: TextFieldModule, declarations: [CdkAutofill, CdkTextareaAutosize], exports: [CdkAutofill, CdkTextareaAutosize] });\nTextFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: TextFieldModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: TextFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CdkAutofill, CdkTextareaAutosize],\n                    exports: [CdkAutofill, CdkTextareaAutosize],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport * as i4 from '@angular/cdk/text-field';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Self, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport * as i3 from '@angular/material/core';\nimport { mixinErrorState, MatCommonModule, ErrorStateMatcher } from '@angular/material/core';\nimport * as i5 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit',\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nconst _MatInputBase = mixinErrorState(class {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /**\n     * Form control bound to the component.\n     * Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n        /**\n         * Emits whenever the component state changes and should cause the parent\n         * form field to update. Implemented as part of `MatFormFieldControl`.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n    }\n});\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputBase {\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week',\n        ].filter(t => getSupportedInputTypes().has(t));\n        this._iOSKeyupListener = (event) => {\n            const el = event.target;\n            // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n            // indicate different things. If the value is 0, it means that the caret is at the start\n            // of the input, whereas a value of `null` means that the input doesn't support\n            // manipulating the selection range. Inputs that don't support setting the selection range\n            // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n            // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n            if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n                // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                // `1, 1` fixes it for the first time that you type text and\n                // then hold delete. Toggling to `1, 1` and then back to\n                // `0, 0` seems to completely fix it.\n                el.setSelectionRange(1, 1);\n                el.setSelectionRange(0, 0);\n            }\n        };\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', this._iOSKeyupListener);\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        this._isInFormField = !!_formField;\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple\n                ? 'mat-native-select-multiple'\n                : 'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Input type of the element. */\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._inputValueAccessor.value;\n    }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() {\n        return this._readonly;\n    }\n    set readonly(value) {\n        this._readonly = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n        if (this._platform.IOS) {\n            this._elementRef.nativeElement.removeEventListener('keyup', this._iOSKeyupListener);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const formField = this._formField;\n        const placeholder = formField && formField.appearance === 'legacy' && !formField._hasLabel?.()\n            ? null\n            : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder\n                ? element.setAttribute('placeholder', placeholder)\n                : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._isNeverEmpty() &&\n            !this._elementRef.nativeElement.value &&\n            !this._isBadInput() &&\n            !this.autofilled);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return (this.focused ||\n                selectElement.multiple ||\n                !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label));\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n    /** Whether the form control is a native select that is displayed inline. */\n    _isInlineSelect() {\n        const element = this._elementRef.nativeElement;\n        return this._isNativeSelect && (element.multiple || element.size > 1);\n    }\n}\nMatInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatInput, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i2.NgControl, optional: true, self: true }, { token: i2.NgForm, optional: true }, { token: i2.FormGroupDirective, optional: true }, { token: i3.ErrorStateMatcher }, { token: MAT_INPUT_VALUE_ACCESSOR, optional: true, self: true }, { token: i4.AutofillMonitor }, { token: i0.NgZone }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],\\n      input[matNativeControl], textarea[matNativeControl]\", inputs: { disabled: \"disabled\", id: \"id\", placeholder: \"placeholder\", name: \"name\", required: \"required\", type: \"type\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], value: \"value\", readonly: \"readonly\" }, host: { listeners: { \"focus\": \"_focusChanged(true)\", \"blur\": \"_focusChanged(false)\", \"input\": \"_onInput()\" }, properties: { \"class.mat-input-server\": \"_isServer\", \"attr.id\": \"id\", \"attr.data-placeholder\": \"placeholder\", \"disabled\": \"disabled\", \"required\": \"required\", \"attr.name\": \"name || null\", \"attr.readonly\": \"readonly && !_isNativeSelect || null\", \"class.mat-native-select-inline\": \"_isInlineSelect()\", \"attr.aria-invalid\": \"(empty && required) ? null : errorState\", \"attr.aria-required\": \"required\" }, classAttribute: \"mat-input-element mat-form-field-autofill-control\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatInput }], exportAs: [\"matInput\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                    exportAs: 'matInput',\n                    host: {\n                        /**\n                         * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                         */\n                        'class': 'mat-input-element mat-form-field-autofill-control',\n                        '[class.mat-input-server]': '_isServer',\n                        // Native input properties that are overwritten by Angular inputs need to be synced with\n                        // the native input element. Otherwise property bindings for those don't work.\n                        '[attr.id]': 'id',\n                        // At the time of writing, we have a lot of customer tests that look up the input based on its\n                        // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                        // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                        '[attr.data-placeholder]': 'placeholder',\n                        '[disabled]': 'disabled',\n                        '[required]': 'required',\n                        '[attr.name]': 'name || null',\n                        '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                        '[class.mat-native-select-inline]': '_isInlineSelect()',\n                        // Only mark the input as invalid for assistive technology if it has a value since the\n                        // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                        '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n                        '[attr.aria-required]': 'required',\n                        '(focus)': '_focusChanged(true)',\n                        '(blur)': '_focusChanged(false)',\n                        '(input)': '_onInput()',\n                    },\n                    providers: [{ provide: MatFormFieldControl, useExisting: MatInput }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i2.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }, { type: i2.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i2.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [MAT_INPUT_VALUE_ACCESSOR]\n                }] }, { type: i4.AutofillMonitor }, { type: i0.NgZone }, { type: i5.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], value: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatInputModule, declarations: [MatInput], imports: [TextFieldModule, MatFormFieldModule, MatCommonModule], exports: [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput] });\nMatInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatInputModule, providers: [ErrorStateMatcher], imports: [TextFieldModule, MatFormFieldModule, MatCommonModule, TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatInput],\n                    imports: [TextFieldModule, MatFormFieldModule, MatCommonModule],\n                    exports: [\n                        TextFieldModule,\n                        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                        // be used together with `MatFormField`.\n                        MatFormFieldModule,\n                        MatInput,\n                    ],\n                    providers: [ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, getMatInputUnsupportedTypeError };\n","import * as i5 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i9 from '@angular/cdk/overlay';\nimport { Overlay, FlexibleConnectedPositionStrategy, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i6 from '@angular/cdk/portal';\nimport { ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, Optional, SkipSelf, InjectionToken, Inject, ViewChild, forwardRef, inject, Directive, Attribute, ContentChild, InjectFlags, Self, TemplateRef, NgModule } from '@angular/core';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i1$1 from '@angular/material/core';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor, mixinErrorState, MatCommonModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, BACKSPACE } from '@angular/cdk/keycodes';\nimport * as i2 from '@angular/cdk/bidi';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { trigger, transition, animate, keyframes, style, state } from '@angular/animations';\nimport * as i2$2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators, NgControl } from '@angular/forms';\nimport * as i2$1 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Datepicker data that requires internationalization. */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the calendar popup (used by screen readers). */\n        this.calendarLabel = 'Calendar';\n        /** A label for the button used to open the calendar popup (used by screen readers). */\n        this.openCalendarLabel = 'Open calendar';\n        /** Label for the button used to close the calendar popup. */\n        this.closeCalendarLabel = 'Close calendar';\n        /** A label for the previous month button (used by screen readers). */\n        this.prevMonthLabel = 'Previous month';\n        /** A label for the next month button (used by screen readers). */\n        this.nextMonthLabel = 'Next month';\n        /** A label for the previous year button (used by screen readers). */\n        this.prevYearLabel = 'Previous year';\n        /** A label for the next year button (used by screen readers). */\n        this.nextYearLabel = 'Next year';\n        /** A label for the previous multi-year button (used by screen readers). */\n        this.prevMultiYearLabel = 'Previous 24 years';\n        /** A label for the next multi-year button (used by screen readers). */\n        this.nextMultiYearLabel = 'Next 24 years';\n        /** A label for the 'switch to month view' button (used by screen readers). */\n        this.switchToMonthViewLabel = 'Choose date';\n        /** A label for the 'switch to year view' button (used by screen readers). */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n        /** A label for the first date of a range of dates (used by screen readers). */\n        this.startDateLabel = 'Start date';\n        /** A label for the last date of a range of dates (used by screen readers). */\n        this.endDateLabel = 'End date';\n    }\n    /** Formats a range of years (used for visuals). */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n    /** Formats a label for a range of years (used by screen readers). */\n    formatYearRangeLabel(start, end) {\n        return `${start} to ${end}`;\n    }\n}\nMatDatepickerIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatDatepickerIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MatCalendarCell {\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n        this.compareValue = compareValue;\n        this.rawValue = rawValue;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\nclass MatCalendarBody {\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Used to focus the active cell after change detection has run.\n         */\n        this._focusActiveCellAfterViewChecked = false;\n        /** The number of columns in the table. */\n        this.numCols = 7;\n        /** The cell number of the active cell in the table. */\n        this.activeCell = 0;\n        /** Whether a range is being selected. */\n        this.isRange = false;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /** Start of the preview range. */\n        this.previewStart = null;\n        /** End of the preview range. */\n        this.previewEnd = null;\n        /** Emits when a new value is selected. */\n        this.selectedValueChange = new EventEmitter();\n        /** Emits when the preview has changed as a result of a user action. */\n        this.previewChange = new EventEmitter();\n        this.activeDateChange = new EventEmitter();\n        /**\n         * Event handler for when the user enters an element\n         * inside the calendar body (e.g. by hovering in or focus).\n         */\n        this._enterHandler = (event) => {\n            if (this._skipNextFocus && event.type === 'focus') {\n                this._skipNextFocus = false;\n                return;\n            }\n            // We only need to hit the zone when we're selecting a range.\n            if (event.target && this.isRange) {\n                const cell = this._getCellFromElement(event.target);\n                if (cell) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: cell.enabled ? cell : null, event }));\n                }\n            }\n        };\n        /**\n         * Event handler for when the user's pointer leaves an element\n         * inside the calendar body (e.g. by hovering out or blurring).\n         */\n        this._leaveHandler = (event) => {\n            // We only need to hit the zone when we're selecting a range.\n            if (this.previewEnd !== null && this.isRange) {\n                // Only reset the preview end value when leaving cells. This looks better, because\n                // we have a gap between the cells and the rows and we don't want to remove the\n                // range just for it to show up again when the user moves a few pixels to the side.\n                if (event.target && this._getCellFromElement(event.target)) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: null, event }));\n                }\n            }\n        };\n        _ngZone.runOutsideAngular(() => {\n            const element = _elementRef.nativeElement;\n            element.addEventListener('mouseenter', this._enterHandler, true);\n            element.addEventListener('focus', this._enterHandler, true);\n            element.addEventListener('mouseleave', this._leaveHandler, true);\n            element.addEventListener('blur', this._leaveHandler, true);\n        });\n    }\n    ngAfterViewChecked() {\n        if (this._focusActiveCellAfterViewChecked) {\n            this._focusActiveCell();\n            this._focusActiveCellAfterViewChecked = false;\n        }\n    }\n    /** Called when a cell is clicked. */\n    _cellClicked(cell, event) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit({ value: cell.value, event });\n        }\n    }\n    _emitActiveDateChange(cell, event) {\n        if (cell.enabled) {\n            this.activeDateChange.emit({ value: cell.value, event });\n        }\n    }\n    /** Returns whether a cell should be marked as selected. */\n    _isSelected(value) {\n        return this.startValue === value || this.endValue === value;\n    }\n    ngOnChanges(changes) {\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${(50 * this.cellAspectRatio) / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mouseenter', this._enterHandler, true);\n        element.removeEventListener('focus', this._enterHandler, true);\n        element.removeEventListener('mouseleave', this._leaveHandler, true);\n        element.removeEventListener('blur', this._leaveHandler, true);\n    }\n    /** Returns whether a cell is active. */\n    _isActiveCell(rowIndex, colIndex) {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     *\n     * Adding a 0ms setTimeout seems to fix Voiceover losing focus when pressing PageUp/PageDown\n     * (issue #24330).\n     *\n     * Determined a 0ms by gradually increasing duration from 0 and testing two use cases with screen\n     * reader enabled:\n     *\n     * 1. Pressing PageUp/PageDown repeatedly with pausing between each key press.\n     * 2. Pressing and holding the PageDown key with repeated keys enabled.\n     *\n     * Test 1 worked roughly 95-99% of the time with 0ms and got a little bit better as the duration\n     * increased. Test 2 got slightly better until the duration was long enough to interfere with\n     * repeated keys. If the repeated key speed was faster than the timeout duration, then pressing\n     * and holding pagedown caused the entire page to scroll.\n     *\n     * Since repeated key speed can verify across machines, determined that any duration could\n     * potentially interfere with repeated keys. 0ms would be best because it almost entirely\n     * eliminates the focus being lost in Voiceover (#24330) without causing unintended side effects.\n     * Adding delay also complicates writing tests.\n     */\n    _focusActiveCell(movePreview = true) {\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                setTimeout(() => {\n                    const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                    if (activeCell) {\n                        if (!movePreview) {\n                            this._skipNextFocus = true;\n                        }\n                        activeCell.focus();\n                    }\n                });\n            });\n        });\n    }\n    /** Focuses the active cell after change detection has run and the microtask queue is empty. */\n    _scheduleFocusActiveCellAfterViewChecked() {\n        this._focusActiveCellAfterViewChecked = true;\n    }\n    /** Gets whether a value is the start of the main range. */\n    _isRangeStart(value) {\n        return isStart(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is the end of the main range. */\n    _isRangeEnd(value) {\n        return isEnd(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is within the currently-selected range. */\n    _isInRange(value) {\n        return isInRange(value, this.startValue, this.endValue, this.isRange);\n    }\n    /** Gets whether a value is the start of the comparison range. */\n    _isComparisonStart(value) {\n        return isStart(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeStart(value, rowIndex, colIndex) {\n        if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let previousCell = this.rows[rowIndex][colIndex - 1];\n        if (!previousCell) {\n            const previousRow = this.rows[rowIndex - 1];\n            previousCell = previousRow && previousRow[previousRow.length - 1];\n        }\n        return previousCell && !this._isRangeEnd(previousCell.compareValue);\n    }\n    /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n        if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let nextCell = this.rows[rowIndex][colIndex + 1];\n        if (!nextCell) {\n            const nextRow = this.rows[rowIndex + 1];\n            nextCell = nextRow && nextRow[0];\n        }\n        return nextCell && !this._isRangeStart(nextCell.compareValue);\n    }\n    /** Gets whether a value is the end of the comparison range. */\n    _isComparisonEnd(value) {\n        return isEnd(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Gets whether a value is within the current comparison range. */\n    _isInComparisonRange(value) {\n        return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n    }\n    /**\n     * Gets whether a value is the same as the start and end of the comparison range.\n     * For context, the functions that we use to determine whether something is the start/end of\n     * a range don't allow for the start and end to be on the same day, because we'd have to use\n     * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n     * the regular range, because when it happens, the selected styles take over and still show where\n     * the range would've been, however we don't have these selected styles for a comparison range.\n     * This function is used to apply a class that serves the same purpose as the one for selected\n     * dates, but it only applies in the context of a comparison range.\n     */\n    _isComparisonIdentical(value) {\n        // Note that we don't need to null check the start/end\n        // here, because the `value` will always be defined.\n        return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n    }\n    /** Gets whether a value is the start of the preview range. */\n    _isPreviewStart(value) {\n        return isStart(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is the end of the preview range. */\n    _isPreviewEnd(value) {\n        return isEnd(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is inside the preview range. */\n    _isInPreview(value) {\n        return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n    }\n    /** Finds the MatCalendarCell that corresponds to a DOM node. */\n    _getCellFromElement(element) {\n        let cell;\n        if (isTableCell(element)) {\n            cell = element;\n        }\n        else if (isTableCell(element.parentNode)) {\n            cell = element.parentNode;\n        }\n        if (cell) {\n            const row = cell.getAttribute('data-mat-row');\n            const col = cell.getAttribute('data-mat-col');\n            if (row && col) {\n                return this.rows[parseInt(row)][parseInt(col)];\n            }\n        }\n        return null;\n    }\n}\nMatCalendarBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCalendarBody, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatCalendarBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: { label: \"label\", rows: \"rows\", todayValue: \"todayValue\", startValue: \"startValue\", endValue: \"endValue\", labelMinRequiredCells: \"labelMinRequiredCells\", numCols: \"numCols\", activeCell: \"activeCell\", isRange: \"isRange\", cellAspectRatio: \"cellAspectRatio\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\", previewStart: \"previewStart\", previewEnd: \"previewEnd\" }, outputs: { selectedValueChange: \"selectedValueChange\", previewChange: \"previewChange\", activeDateChange: \"activeDateChange\" }, host: { classAttribute: \"mat-calendar-body\" }, exportAs: [\"matCalendarBody\"], usesOnChanges: true, ngImport: i0, template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    This cell is purely decorative, but we can't put `aria-hidden` or `role=\\\"presentation\\\"` on it,\\n    because it throws off the week days for the rest of the row on NVDA. The aspect ratio of the\\n    table cells is maintained by setting the top and bottom padding as a percentage of the width\\n    (a variant of the trick described here: https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <!--\\n    Each gridcell in the calendar contains a button, which signals to assistive technology that the\\n    cell is interactable, as well as the selection state via `aria-pressed`. See #23476 for\\n    background.\\n  -->\\n  <td\\n    *ngFor=\\\"let item of row; let colIndex = index\\\"\\n    role=\\\"gridcell\\\"\\n    class=\\\"mat-calendar-body-cell-container\\\"\\n    [style.width]=\\\"_cellWidth\\\"\\n    [style.paddingTop]=\\\"_cellPadding\\\"\\n    [style.paddingBottom]=\\\"_cellPadding\\\"\\n    [attr.data-mat-row]=\\\"rowIndex\\\"\\n    [attr.data-mat-col]=\\\"colIndex\\\"\\n  >\\n    <button\\n        type=\\\"button\\\"\\n        class=\\\"mat-calendar-body-cell\\\"\\n        [ngClass]=\\\"item.cssClasses\\\"\\n        [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n        [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n        [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n        [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n        [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n        [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n        [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n        [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n        [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n        [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n        [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n        [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n        [attr.aria-label]=\\\"item.ariaLabel\\\"\\n        [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n        [attr.aria-pressed]=\\\"_isSelected(item.compareValue)\\\"\\n        [attr.aria-current]=\\\"todayValue === item.compareValue ? 'date' : null\\\"\\n        (click)=\\\"_cellClicked(item, $event)\\\"\\n        (focus)=\\\"_emitActiveDateChange(item, $event)\\\">\\n        <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n          [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n          [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n          [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n          {{item.displayValue}}\\n        </div>\\n        <div class=\\\"mat-calendar-body-cell-preview\\\" aria-hidden=\\\"true\\\"></div>\\n    </button>\\n  </td>\\n</tr>\\n\", styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCalendarBody, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-calendar-body]', host: {\n                        'class': 'mat-calendar-body',\n                    }, exportAs: 'matCalendarBody', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    This cell is purely decorative, but we can't put `aria-hidden` or `role=\\\"presentation\\\"` on it,\\n    because it throws off the week days for the rest of the row on NVDA. The aspect ratio of the\\n    table cells is maintained by setting the top and bottom padding as a percentage of the width\\n    (a variant of the trick described here: https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <!--\\n    Each gridcell in the calendar contains a button, which signals to assistive technology that the\\n    cell is interactable, as well as the selection state via `aria-pressed`. See #23476 for\\n    background.\\n  -->\\n  <td\\n    *ngFor=\\\"let item of row; let colIndex = index\\\"\\n    role=\\\"gridcell\\\"\\n    class=\\\"mat-calendar-body-cell-container\\\"\\n    [style.width]=\\\"_cellWidth\\\"\\n    [style.paddingTop]=\\\"_cellPadding\\\"\\n    [style.paddingBottom]=\\\"_cellPadding\\\"\\n    [attr.data-mat-row]=\\\"rowIndex\\\"\\n    [attr.data-mat-col]=\\\"colIndex\\\"\\n  >\\n    <button\\n        type=\\\"button\\\"\\n        class=\\\"mat-calendar-body-cell\\\"\\n        [ngClass]=\\\"item.cssClasses\\\"\\n        [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n        [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n        [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n        [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n        [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n        [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n        [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n        [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n        [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n        [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n        [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n        [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n        [attr.aria-label]=\\\"item.ariaLabel\\\"\\n        [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n        [attr.aria-pressed]=\\\"_isSelected(item.compareValue)\\\"\\n        [attr.aria-current]=\\\"todayValue === item.compareValue ? 'date' : null\\\"\\n        (click)=\\\"_cellClicked(item, $event)\\\"\\n        (focus)=\\\"_emitActiveDateChange(item, $event)\\\">\\n        <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n          [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n          [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n          [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n          {{item.displayValue}}\\n        </div>\\n        <div class=\\\"mat-calendar-body-cell-preview\\\" aria-hidden=\\\"true\\\"></div>\\n    </button>\\n  </td>\\n</tr>\\n\", styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { label: [{\n                type: Input\n            }], rows: [{\n                type: Input\n            }], todayValue: [{\n                type: Input\n            }], startValue: [{\n                type: Input\n            }], endValue: [{\n                type: Input\n            }], labelMinRequiredCells: [{\n                type: Input\n            }], numCols: [{\n                type: Input\n            }], activeCell: [{\n                type: Input\n            }], isRange: [{\n                type: Input\n            }], cellAspectRatio: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], previewStart: [{\n                type: Input\n            }], previewEnd: [{\n                type: Input\n            }], selectedValueChange: [{\n                type: Output\n            }], previewChange: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }] } });\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node) {\n    return node.nodeName === 'TD';\n}\n/** Checks whether a value is the start of a range. */\nfunction isStart(value, start, end) {\n    return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value, start, end) {\n    return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value, start, end, rangeEnabled) {\n    return (rangeEnabled &&\n        start !== null &&\n        end !== null &&\n        start !== end &&\n        value >= start &&\n        value <= end);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A class representing a range of dates. */\nclass DateRange {\n    constructor(\n    /** The start date of the range. */\n    start, \n    /** The end date of the range. */\n    end) {\n        this.start = start;\n        this.end = end;\n    }\n}\n/**\n * A selection model containing a date selection.\n * @docs-private\n */\nclass MatDateSelectionModel {\n    constructor(\n    /** The current selection. */\n    selection, _adapter) {\n        this.selection = selection;\n        this._adapter = _adapter;\n        this._selectionChanged = new Subject();\n        /** Emits when the selection has changed. */\n        this.selectionChanged = this._selectionChanged;\n        this.selection = selection;\n    }\n    /**\n     * Updates the current selection in the model.\n     * @param value New selection that should be assigned.\n     * @param source Object that triggered the selection change.\n     */\n    updateSelection(value, source) {\n        const oldValue = this.selection;\n        this.selection = value;\n        this._selectionChanged.next({ selection: value, source, oldValue });\n    }\n    ngOnDestroy() {\n        this._selectionChanged.complete();\n    }\n    _isValidDateInstance(date) {\n        return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n    }\n}\nMatDateSelectionModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDateSelectionModel, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Injectable });\nMatDateSelectionModel.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDateSelectionModel });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDateSelectionModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined }, { type: i1$1.DateAdapter }]; } });\n/**\n * A selection model that contains a single date.\n * @docs-private\n */\nclass MatSingleDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(null, adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a single date selection, the added date\n     * simply overwrites the previous selection\n     */\n    add(date) {\n        super.updateSelection(date, this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        return this.selection != null && this._isValidDateInstance(this.selection);\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a single date selection, this\n     * is true if the current selection is not null.\n     */\n    isComplete() {\n        return this.selection != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatSingleDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatSingleDateSelectionModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatSingleDateSelectionModel, deps: [{ token: i1$1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nMatSingleDateSelectionModel.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatSingleDateSelectionModel });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatSingleDateSelectionModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.DateAdapter }]; } });\n/**\n * A selection model that contains a date range.\n * @docs-private\n */\nclass MatRangeDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(new DateRange(null, null), adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a date range selection, the added date\n     * fills in the next `null` value in the range. If both the start and the end already have a date,\n     * the selection is reset so that the given date is the new `start` and the `end` is null.\n     */\n    add(date) {\n        let { start, end } = this.selection;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        super.updateSelection(new DateRange(start, end), this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        const { start, end } = this.selection;\n        // Empty ranges are valid.\n        if (start == null && end == null) {\n            return true;\n        }\n        // Complete ranges are only valid if both dates are valid and the start is before the end.\n        if (start != null && end != null) {\n            return (this._isValidDateInstance(start) &&\n                this._isValidDateInstance(end) &&\n                this._adapter.compareDate(start, end) <= 0);\n        }\n        // Partial ranges are valid if the start/end is valid.\n        return ((start == null || this._isValidDateInstance(start)) &&\n            (end == null || this._isValidDateInstance(end)));\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a date range selection, this\n     * is true if the current selection has a non-null `start` and `end`.\n     */\n    isComplete() {\n        return this.selection.start != null && this.selection.end != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatRangeDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatRangeDateSelectionModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRangeDateSelectionModel, deps: [{ token: i1$1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nMatRangeDateSelectionModel.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRangeDateSelectionModel });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRangeDateSelectionModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.DateAdapter }]; } });\n/** @docs-private */\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatSingleDateSelectionModel(adapter);\n}\n/**\n * Used to provide a single selection model to a component.\n * @docs-private\n */\nconst MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n/** @docs-private */\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatRangeDateSelectionModel(adapter);\n}\n/**\n * Used to provide a range selection model to a component.\n * @docs-private\n */\nconst MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token used to customize the date range selection behavior. */\nconst MAT_DATE_RANGE_SELECTION_STRATEGY = new InjectionToken('MAT_DATE_RANGE_SELECTION_STRATEGY');\n/** Provides the default date range selection behavior. */\nclass DefaultMatCalendarRangeStrategy {\n    constructor(_dateAdapter) {\n        this._dateAdapter = _dateAdapter;\n    }\n    selectionFinished(date, currentRange) {\n        let { start, end } = currentRange;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        return new DateRange(start, end);\n    }\n    createPreview(activeDate, currentRange) {\n        let start = null;\n        let end = null;\n        if (currentRange.start && !currentRange.end && activeDate) {\n            start = currentRange.start;\n            end = activeDate;\n        }\n        return new DateRange(start, end);\n    }\n}\nDefaultMatCalendarRangeStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: DefaultMatCalendarRangeStrategy, deps: [{ token: i1$1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nDefaultMatCalendarRangeStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: DefaultMatCalendarRangeStrategy });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: DefaultMatCalendarRangeStrategy, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.DateAdapter }]; } });\n/** @docs-private */\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n    return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n/** @docs-private */\nconst MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n    deps: [[new Optional(), new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n    useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\nclass MatMonthView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rangeStrategy = _rangeStrategy;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new date is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    get activeDate() {\n        return this._activeDate;\n    }\n    set activeDate(value) {\n        const oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) ||\n            this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setRanges(this._selected);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnChanges(changes) {\n        const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n        if (comparisonChange && !comparisonChange.firstChange) {\n            this._setRanges(this.selected);\n        }\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new date is selected. */\n    _dateSelected(event) {\n        const date = event.value;\n        const selectedDate = this._getDateFromDayOfMonth(date);\n        let rangeStartDate;\n        let rangeEndDate;\n        if (this._selected instanceof DateRange) {\n            rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n            rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n        }\n        else {\n            rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n        }\n        if (rangeStartDate !== date || rangeEndDate !== date) {\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit({ value: selectedDate, event: event.event });\n        this._previewStart = this._previewEnd = null;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Takes the index of a calendar body cell wrapped in in an event as argument. For the date that\n     * corresponds to the given cell, set `activeDate` to that date and fire `activeDateChange` with\n     * that date.\n     *\n     * This function is used to match each component's model of the active date with the calendar\n     * body cell that was focused. It updates its value of `activeDate` synchronously and updates the\n     * parent's value asynchronously via the `activeDateChange` event. The child component receives an\n     * updated value asynchronously via the `activeCell` Input.\n     */\n    _updateActiveDate(event) {\n        const month = event.value;\n        const oldActiveDate = this._activeDate;\n        this.activeDate = this._getDateFromDayOfMonth(month);\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this._activeDate);\n        }\n    }\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey\n                    ? this._dateAdapter.addCalendarYears(this._activeDate, -1)\n                    : this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey\n                    ? this._dateAdapter.addCalendarYears(this._activeDate, 1)\n                    : this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._selectionKeyPressed = true;\n                if (this._canSelect(this._activeDate)) {\n                    // Prevent unexpected default actions such as form submission.\n                    // Note that we only prevent the default action here while the selection happens in\n                    // `keyup` below. We can't do the selection here, because it can cause the calendar to\n                    // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n                    // because it's too late (see #23305).\n                    event.preventDefault();\n                }\n                return;\n            case ESCAPE:\n                // Abort the current range selection if the user presses escape mid-selection.\n                if (this._previewEnd != null && !hasModifierKey(event)) {\n                    this._previewStart = this._previewEnd = null;\n                    this.selectedChange.emit(null);\n                    this._userSelection.emit({ value: null, event });\n                    event.preventDefault();\n                    event.stopPropagation(); // Prevents the overlay from closing.\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n            this._focusActiveCellAfterViewChecked();\n        }\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeyup(event) {\n        if (event.keyCode === SPACE || event.keyCode === ENTER) {\n            if (this._selectionKeyPressed && this._canSelect(this._activeDate)) {\n                this._dateSelected({ value: this._dateAdapter.getDate(this._activeDate), event });\n            }\n            this._selectionKeyPressed = false;\n        }\n    }\n    /** Initializes this month view. */\n    _init() {\n        this._setRanges(this.selected);\n        this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n        this._monthLabel = this._dateFormats.display.monthLabel\n            ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel)\n            : this._dateAdapter\n                .getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK +\n                this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) %\n                DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview) {\n        this._matCalendarBody._focusActiveCell(movePreview);\n    }\n    /** Focuses the active cell after change detection has run and the microtask queue is empty. */\n    _focusActiveCellAfterViewChecked() {\n        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();\n    }\n    /** Called when the user has activated a new cell and the preview needs to be updated. */\n    _previewChanged({ event, value: cell }) {\n        if (this._rangeStrategy) {\n            // We can assume that this will be a range, because preview\n            // events aren't fired for single date selections.\n            const value = cell ? cell.rawValue : null;\n            const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\n            this._previewStart = this._getCellCompareValue(previewRange.start);\n            this._previewEnd = this._getCellCompareValue(previewRange.end);\n            // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n            // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n            // when navigating one month back using the keyboard which will cause this handler\n            // to throw a \"changed after checked\" error when updating the preview state.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Takes a day of the month and returns a new date in the same month and year as the currently\n     *  active date. The returned date will have the same day of the month as the argument date.\n     */\n    _getDateFromDayOfMonth(dayOfMonth) {\n        return this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), dayOfMonth);\n    }\n    /** Initializes the weekdays. */\n    _initWeekdays() {\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        let weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /** Creates MatCalendarCells for the dates in this month. */\n    _createWeekCells() {\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this._shouldEnableDate(date);\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n            this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n        }\n    }\n    /** Date filter for the month */\n    _shouldEnableDate(date) {\n        return (!!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date)));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate)\n            ? this._dateAdapter.getDate(date)\n            : null;\n    }\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 &&\n            d2 &&\n            this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /** Gets the value that will be used to one cell to another. */\n    _getCellCompareValue(date) {\n        if (date) {\n            // We use the time since the Unix epoch to compare dates in this view, rather than the\n            // cell values, because we need to support ranges that span across multiple months/years.\n            const year = this._dateAdapter.getYear(date);\n            const month = this._dateAdapter.getMonth(date);\n            const day = this._dateAdapter.getDate(date);\n            return new Date(year, month, day).getTime();\n        }\n        return null;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the current range based on a model value. */\n    _setRanges(selectedValue) {\n        if (selectedValue instanceof DateRange) {\n            this._rangeStart = this._getCellCompareValue(selectedValue.start);\n            this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n            this._isRange = true;\n        }\n        else {\n            this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n            this._isRange = false;\n        }\n        this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n        this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n    }\n    /** Gets whether a date can be selected in the month view. */\n    _canSelect(date) {\n        return !this.dateFilter || this.dateFilter(date);\n    }\n}\nMatMonthView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatMonthView, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_DATE_FORMATS, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }, { token: MAT_DATE_RANGE_SELECTION_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatMonthView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatMonthView, selector: \"mat-month-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: MatCalendarBody, descendants: true }], exportAs: [\"matMonthView\"], usesOnChanges: true, ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\">\\n        <span class=\\\"cdk-visually-hidden\\\">{{day.long}}</span>\\n        <span aria-hidden=\\\"true\\\">{{day.narrow}}</span>\\n      </th>\\n    </tr>\\n    <tr><th aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (activeDateChange)=\\\"_updateActiveDate($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\", dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"component\", type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\"], outputs: [\"selectedValueChange\", \"previewChange\", \"activeDateChange\"], exportAs: [\"matCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatMonthView, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-month-view', exportAs: 'matMonthView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\">\\n        <span class=\\\"cdk-visually-hidden\\\">{{day.long}}</span>\\n        <span aria-hidden=\\\"true\\\">{{day.narrow}}</span>\\n      </th>\\n    </tr>\\n    <tr><th aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (activeDateChange)=\\\"_updateActiveDate($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { activeDate: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], _userSelection: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], _matCalendarBody: [{\n                type: ViewChild,\n                args: [MatCalendarBody]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\nclass MatMultiYearView {\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new year is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected year. This doesn't imply a change on the selected date */\n        this.yearSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    get activeDate() {\n        return this._activeDate;\n    }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) ||\n            this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedYear(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Initializes this multi-year view. */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map(year => this._createCellForYear(year)));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles when a new year is selected. */\n    _yearSelected(event) {\n        const year = event.value;\n        const selectedYear = this._dateAdapter.createDate(year, 0, 1);\n        const selectedDate = this._getDateFromYear(year);\n        this.yearSelected.emit(selectedYear);\n        this.selectedChange.emit(selectedDate);\n    }\n    /**\n     * Takes the index of a calendar body cell wrapped in in an event as argument. For the date that\n     * corresponds to the given cell, set `activeDate` to that date and fire `activeDateChange` with\n     * that date.\n     *\n     * This function is used to match each component's model of the active date with the calendar\n     * body cell that was focused. It updates its value of `activeDate` synchronously and updates the\n     * parent's value asynchronously via the `activeDateChange` event. The child component receives an\n     * updated value asynchronously via the `activeCell` Input.\n     */\n    _updateActiveDate(event) {\n        const year = event.value;\n        const oldActiveDate = this._activeDate;\n        this.activeDate = this._getDateFromYear(year);\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n    }\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeydown(event) {\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage -\n                    getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) -\n                    1);\n                break;\n            case PAGE_UP:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                // Note that we only prevent the default action here while the selection happens in\n                // `keyup` below. We can't do the selection here, because it can cause the calendar to\n                // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n                // because it's too late (see #23305).\n                this._selectionKeyPressed = true;\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCellAfterViewChecked();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeyup(event) {\n        if (event.keyCode === SPACE || event.keyCode === ENTER) {\n            if (this._selectionKeyPressed) {\n                this._yearSelected({ value: this._dateAdapter.getYear(this._activeDate), event });\n            }\n            this._selectionKeyPressed = false;\n        }\n    }\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /** Focuses the active cell after change detection has run and the microtask queue is empty. */\n    _focusActiveCellAfterViewChecked() {\n        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();\n    }\n    /**\n     * Takes a year and returns a new date on the same day and month as the currently active date\n     *  The returned date will have the same year as the argument date.\n     */\n    _getDateFromYear(year) {\n        const activeMonth = this._dateAdapter.getMonth(this.activeDate);\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, activeMonth, 1));\n        const normalizedDate = this._dateAdapter.createDate(year, activeMonth, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth));\n        return normalizedDate;\n    }\n    /** Creates an MatCalendarCell for the given year. */\n    _createCellForYear(year) {\n        const date = this._dateAdapter.createDate(year, 0, 1);\n        const yearName = this._dateAdapter.getYearName(date);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n    }\n    /** Whether the given year is enabled. */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined ||\n            year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-highlighted year based on a model value. */\n    _setSelectedYear(value) {\n        this._selectedYear = null;\n        if (value instanceof DateRange) {\n            const displayValue = value.start || value.end;\n            if (displayValue) {\n                this._selectedYear = this._dateAdapter.getYear(displayValue);\n            }\n        }\n        else if (value) {\n            this._selectedYear = this._dateAdapter.getYear(value);\n        }\n    }\n}\nMatMultiYearView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatMultiYearView, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatMultiYearView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatMultiYearView, selector: \"mat-multi-year-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: MatCalendarBody, descendants: true }], exportAs: [\"matMultiYearView\"], ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (activeDateChange)=\\\"_updateActiveDate($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\", dependencies: [{ kind: \"component\", type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\"], outputs: [\"selectedValueChange\", \"previewChange\", \"activeDateChange\"], exportAs: [\"matCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatMultiYearView, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-multi-year-view', exportAs: 'matMultiYearView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (activeDateChange)=\\\"_updateActiveDate($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { activeDate: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], yearSelected: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], _matCalendarBody: [{\n                type: ViewChild,\n                args: [MatCalendarBody]\n            }] } });\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    const year1 = dateAdapter.getYear(date1);\n    const year2 = dateAdapter.getYear(date2);\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return (Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage));\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo(activeYear - getStartingYear(dateAdapter, minDate, maxDate), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    let startingYear = 0;\n    if (maxDate) {\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n    return ((a % b) + b) % b;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\nclass MatYearView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new month is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected month. This doesn't imply a change on the selected date */\n        this.monthSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this year view (everything other than the year is ignored). */\n    get activeDate() {\n        return this._activeDate;\n    }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) ||\n            this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedMonth(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new month is selected. */\n    _monthSelected(event) {\n        const month = event.value;\n        const selectedMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(selectedMonth);\n        const selectedDate = this._getDateFromMonth(month);\n        this.selectedChange.emit(selectedDate);\n    }\n    /**\n     * Takes the index of a calendar body cell wrapped in in an event as argument. For the date that\n     * corresponds to the given cell, set `activeDate` to that date and fire `activeDateChange` with\n     * that date.\n     *\n     * This function is used to match each component's model of the active date with the calendar\n     * body cell that was focused. It updates its value of `activeDate` synchronously and updates the\n     * parent's value asynchronously via the `activeDateChange` event. The child component receives an\n     * updated value asynchronously via the `activeCell` Input.\n     */\n    _updateActiveDate(event) {\n        const month = event.value;\n        const oldActiveDate = this._activeDate;\n        this.activeDate = this._getDateFromMonth(month);\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n    }\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                // Note that we only prevent the default action here while the selection happens in\n                // `keyup` below. We can't do the selection here, because it can cause the calendar to\n                // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n                // because it's too late (see #23305).\n                this._selectionKeyPressed = true;\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n            this._focusActiveCellAfterViewChecked();\n        }\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeyup(event) {\n        if (event.keyCode === SPACE || event.keyCode === ENTER) {\n            if (this._selectionKeyPressed) {\n                this._monthSelected({ value: this._dateAdapter.getMonth(this._activeDate), event });\n            }\n            this._selectionKeyPressed = false;\n        }\n    }\n    /** Initializes this year view. */\n    _init() {\n        this._setSelectedMonth(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [\n            [0, 1, 2, 3],\n            [4, 5, 6, 7],\n            [8, 9, 10, 11],\n        ].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /** Schedules the matCalendarBody to focus the active cell after change detection has run */\n    _focusActiveCellAfterViewChecked() {\n        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate)\n            ? this._dateAdapter.getMonth(date)\n            : null;\n    }\n    /**\n     * Takes a month and returns a new date in the same day and year as the currently active date.\n     *  The returned date will have the same month as the argument date.\n     */\n    _getDateFromMonth(month) {\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        return this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth));\n    }\n    /** Creates an MatCalendarCell for the given month. */\n    _createCellForMonth(month, monthName) {\n        const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n    }\n    /** Whether the given month is enabled. */\n    _shouldEnableMonth(month) {\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined ||\n            month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-selected month based on a model value. */\n    _setSelectedMonth(value) {\n        if (value instanceof DateRange) {\n            this._selectedMonth =\n                this._getMonthInCurrentYear(value.start) || this._getMonthInCurrentYear(value.end);\n        }\n        else {\n            this._selectedMonth = this._getMonthInCurrentYear(value);\n        }\n    }\n}\nMatYearView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatYearView, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_DATE_FORMATS, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatYearView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatYearView, selector: \"mat-year-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: MatCalendarBody, descendants: true }], exportAs: [\"matYearView\"], ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (activeDateChange)=\\\"_updateActiveDate($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\", dependencies: [{ kind: \"component\", type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\"], outputs: [\"selectedValueChange\", \"previewChange\", \"activeDateChange\"], exportAs: [\"matCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatYearView, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-year-view', exportAs: 'matYearView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (activeDateChange)=\\\"_updateActiveDate($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { activeDate: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], _matCalendarBody: [{\n                type: ViewChild,\n                args: [MatCalendarBody]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs. */\nlet uniqueId = 0;\n/** Default header for MatCalendar */\nclass MatCalendarHeader {\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._buttonDescriptionId = `mat-calendar-button-${uniqueId++}`;\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    /** The label for the current calendar view. */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        const minYearOfPage = activeYear -\n            getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month'\n            ? this._intl.switchToMultiYearViewLabel\n            : this._intl.switchToMonthViewLabel;\n    }\n    /** The label for the previous button. */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel,\n        }[this.calendar.currentView];\n    }\n    /** The label for the next button. */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel,\n        }[this.calendar.currentView];\n    }\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /** Handles user clicks on the previous button. */\n    previousClicked() {\n        this.calendar.activeDate =\n            this.calendar.currentView == 'month'\n                ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1)\n                : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /** Handles user clicks on the next button. */\n    nextClicked() {\n        this.calendar.activeDate =\n            this.calendar.currentView == 'month'\n                ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1)\n                : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /** Whether the previous period button is enabled. */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return (!this.calendar.minDate || !this._isSameView(this.calendar.activeDate, this.calendar.minDate));\n    }\n    /** Whether the next period button is enabled. */\n    nextEnabled() {\n        return (!this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate));\n    }\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return (this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2));\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCalendarHeader, deps: [{ token: MatDatepickerIntl }, { token: forwardRef(() => MatCalendar) }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatCalendarHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatCalendarHeader, selector: \"mat-calendar-header\", exportAs: [\"matCalendarHeader\"], ngImport: i0, template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_buttonDescriptionId\\\"\\n            aria-live=\\\"polite\\\">\\n      <span [attr.id]=\\\"_buttonDescriptionId\\\">{{periodButtonText}}</span>\\n      <svg class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"\\n           viewBox=\\\"0 0 10 5\\\" focusable=\\\"false\\\">\\n           <polygon points=\\\"0,0 5,5 10,0\\\"/>\\n      </svg>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\", dependencies: [{ kind: \"component\", type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCalendarHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-calendar-header', exportAs: 'matCalendarHeader', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_buttonDescriptionId\\\"\\n            aria-live=\\\"polite\\\">\\n      <span [attr.id]=\\\"_buttonDescriptionId\\\">{{periodButtonText}}</span>\\n      <svg class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"\\n           viewBox=\\\"0 0 10 5\\\" focusable=\\\"false\\\">\\n           <polygon points=\\\"0,0 5,5 10,0\\\"/>\\n      </svg>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatCalendar)]\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }, { type: i0.ChangeDetectorRef }]; } });\n/** A calendar that is used as part of the datepicker. */\nclass MatCalendar {\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /** Whether the calendar should be started in month or year view. */\n        this.startView = 'month';\n        /** Emits when the currently selected date changes. */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._intlChanges = _intl.changes.subscribe(() => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** A date representing the period (month or year) to start the calendar in. */\n    get startAt() {\n        return this._startAt;\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate() {\n        return this._clampedActiveDate;\n    }\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the calendar is in month view. */\n    get currentView() {\n        return this._currentView;\n    }\n    set currentView(value) {\n        const viewChangedResult = this._currentView !== value ? value : null;\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n        if (viewChangedResult) {\n            this.viewChanged.emit(viewChangedResult);\n        }\n    }\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    ngOnChanges(changes) {\n        // Ignore date changes that are at a different time on the same day. This fixes issues where\n        // the calendar re-renders when there is no meaningful change to [minDate] or [maxDate]\n        // (#24435).\n        const minDateChange = changes['minDate'] &&\n            !this._dateAdapter.sameDate(changes['minDate'].previousValue, changes['minDate'].currentValue)\n            ? changes['minDate']\n            : undefined;\n        const maxDateChange = changes['maxDate'] &&\n            !this._dateAdapter.sameDate(changes['maxDate'].previousValue, changes['maxDate'].currentValue)\n            ? changes['maxDate']\n            : undefined;\n        const change = minDateChange || maxDateChange || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /** Focuses the active date. */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell(false);\n    }\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        this._getCurrentViewComponent()._init();\n    }\n    /** Handles date selection in the month view. */\n    _dateSelected(event) {\n        const date = event.value;\n        if (this.selected instanceof DateRange ||\n            (date && !this._dateAdapter.sameDate(date, this.selected))) {\n            this.selectedChange.emit(date);\n        }\n        this._userSelection.emit(event);\n    }\n    /** Handles year selection in the multiyear view. */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Handles month selection in the year view. */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Handles year/month selection in the multi-year/year views. */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /** Returns the component instance that corresponds to the current calendar view. */\n    _getCurrentViewComponent() {\n        // The return type is explicitly written as a union to ensure that the Closure compiler does\n        // not optimize calls to _init(). Without the explicit return type, TypeScript narrows it to\n        // only the first component type. See https://github.com/angular/components/issues/22996.\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCalendar, deps: [{ token: MatDatepickerIntl }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatCalendar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatCalendar, selector: \"mat-calendar\", inputs: { headerComponent: \"headerComponent\", startAt: \"startAt\", startView: \"startView\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", _userSelection: \"_userSelection\" }, host: { classAttribute: \"mat-calendar\" }, providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER], viewQueries: [{ propertyName: \"monthView\", first: true, predicate: MatMonthView, descendants: true }, { propertyName: \"yearView\", first: true, predicate: MatYearView, descendants: true }, { propertyName: \"multiYearView\", first: true, predicate: MatMultiYearView, descendants: true }], exportAs: [\"matCalendar\"], usesOnChanges: true, ngImport: i0, template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      [comparisonStart]=\\\"comparisonStart\\\"\\n      [comparisonEnd]=\\\"comparisonEnd\\\"\\n      (_userSelection)=\\\"_dateSelected($event)\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\", styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i5.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"], exportAs: [\"cdkMonitorFocus\"] }, { kind: \"directive\", type: i6.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }, { kind: \"component\", type: MatMonthView, selector: \"mat-month-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\"], outputs: [\"selectedChange\", \"_userSelection\", \"activeDateChange\"], exportAs: [\"matMonthView\"] }, { kind: \"component\", type: MatYearView, selector: \"mat-year-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\"], outputs: [\"selectedChange\", \"monthSelected\", \"activeDateChange\"], exportAs: [\"matYearView\"] }, { kind: \"component\", type: MatMultiYearView, selector: \"mat-multi-year-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\"], outputs: [\"selectedChange\", \"yearSelected\", \"activeDateChange\"], exportAs: [\"matMultiYearView\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCalendar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-calendar', host: {\n                        'class': 'mat-calendar',\n                    }, exportAs: 'matCalendar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER], template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      [comparisonStart]=\\\"comparisonStart\\\"\\n      [comparisonEnd]=\\\"comparisonEnd\\\"\\n      (_userSelection)=\\\"_dateSelected($event)\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\", styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerIntl }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { headerComponent: [{\n                type: Input\n            }], startAt: [{\n                type: Input\n            }], startView: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], yearSelected: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], viewChanged: [{\n                type: Output\n            }], _userSelection: [{\n                type: Output\n            }], monthView: [{\n                type: ViewChild,\n                args: [MatMonthView]\n            }], yearView: [{\n                type: ViewChild,\n                args: [MatYearView]\n            }], multiYearView: [{\n                type: ViewChild,\n                args: [MatMultiYearView]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nconst matDatepickerAnimations = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        transition('void => enter-dropdown', animate('120ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(1, 0.8)' }),\n            style({ opacity: 1, transform: 'scale(1, 1)' }),\n        ]))),\n        transition('void => enter-dialog', animate('150ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0.7)' }),\n            style({ transform: 'none', opacity: 1 }),\n        ]))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 }))),\n    ]),\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/** @docs-private */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nconst _MatDatepickerContentBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Component used as the content for the datepicker overlay. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the overlay that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\nclass MatDatepickerContent extends _MatDatepickerContentBase {\n    constructor(elementRef, _changeDetectorRef, _globalModel, _dateAdapter, _rangeSelectionStrategy, intl) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._globalModel = _globalModel;\n        this._dateAdapter = _dateAdapter;\n        this._rangeSelectionStrategy = _rangeSelectionStrategy;\n        this._subscriptions = new Subscription();\n        /** Emits when an animation has finished. */\n        this._animationDone = new Subject();\n        /** Portal with projected action buttons. */\n        this._actionsPortal = null;\n        this._closeButtonText = intl.closeCalendarLabel;\n    }\n    ngOnInit() {\n        this._animationState = this.datepicker.touchUi ? 'enter-dialog' : 'enter-dropdown';\n    }\n    ngAfterViewInit() {\n        this._subscriptions.add(this.datepicker.stateChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._calendar.focusActiveCell();\n    }\n    ngOnDestroy() {\n        this._subscriptions.unsubscribe();\n        this._animationDone.complete();\n    }\n    _handleUserSelection(event) {\n        const selection = this._model.selection;\n        const value = event.value;\n        const isRange = selection instanceof DateRange;\n        // If we're selecting a range and we have a selection strategy, always pass the value through\n        // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n        // A null value when picking a range means that the user cancelled the selection (e.g. by\n        // pressing escape), whereas when selecting a single value it means that the value didn't\n        // change. This isn't very intuitive, but it's here for backwards-compatibility.\n        if (isRange && this._rangeSelectionStrategy) {\n            const newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n            this._model.updateSelection(newSelection, this);\n        }\n        else if (value &&\n            (isRange || !this._dateAdapter.sameDate(value, selection))) {\n            this._model.add(value);\n        }\n        // Delegate closing the overlay to the actions.\n        if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n            this.datepicker.close();\n        }\n    }\n    _startExitAnimation() {\n        this._animationState = 'void';\n        this._changeDetectorRef.markForCheck();\n    }\n    _getSelected() {\n        return this._model.selection;\n    }\n    /** Applies the current pending selection to the global model. */\n    _applyPendingSelection() {\n        if (this._model !== this._globalModel) {\n            this._globalModel.updateSelection(this._model.selection, this);\n        }\n    }\n    /**\n     * Assigns a new portal containing the datepicker actions.\n     * @param portal Portal with the actions to be assigned.\n     * @param forceRerender Whether a re-render of the portal should be triggered. This isn't\n     * necessary if the portal is assigned during initialization, but it may be required if it's\n     * added at a later point.\n     */\n    _assignActions(portal, forceRerender) {\n        // If we have actions, clone the model so that we have the ability to cancel the selection,\n        // otherwise update the global model directly. Note that we want to assign this as soon as\n        // possible, but `_actionsPortal` isn't available in the constructor so we do it in `ngOnInit`.\n        this._model = portal ? this._globalModel.clone() : this._globalModel;\n        this._actionsPortal = portal;\n        if (forceRerender) {\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n}\nMatDatepickerContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerContent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MatDateSelectionModel }, { token: i1$1.DateAdapter }, { token: MAT_DATE_RANGE_SELECTION_STRATEGY, optional: true }, { token: MatDatepickerIntl }], target: i0.ɵɵFactoryTarget.Component });\nMatDatepickerContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDatepickerContent, selector: \"mat-datepicker-content\", inputs: { color: \"color\" }, host: { listeners: { \"@transformPanel.done\": \"_animationDone.next()\" }, properties: { \"@transformPanel\": \"_animationState\", \"class.mat-datepicker-content-touch\": \"datepicker.touchUi\" }, classAttribute: \"mat-datepicker-content\" }, viewQueries: [{ propertyName: \"_calendar\", first: true, predicate: MatCalendar, descendants: true }], exportAs: [\"matDatepickerContent\"], usesInheritance: true, ngImport: i0, template: \"<div\\n  cdkTrapFocus\\n  role=\\\"dialog\\\"\\n  [attr.aria-modal]=\\\"true\\\"\\n  [attr.aria-labelledby]=\\\"_dialogLabelId ?? undefined\\\"\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-custom-header]=\\\"datepicker.calendarHeaderComponent\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\", styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"component\", type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { kind: \"directive\", type: i5.CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: [\"cdkTrapFocus\", \"cdkTrapFocusAutoCapture\"], exportAs: [\"cdkTrapFocus\"] }, { kind: \"directive\", type: i6.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }, { kind: \"component\", type: MatCalendar, selector: \"mat-calendar\", inputs: [\"headerComponent\", \"startAt\", \"startView\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\"], outputs: [\"selectedChange\", \"yearSelected\", \"monthSelected\", \"viewChanged\", \"_userSelection\"], exportAs: [\"matCalendar\"] }], animations: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerContent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-datepicker-content', host: {\n                        'class': 'mat-datepicker-content',\n                        '[@transformPanel]': '_animationState',\n                        '(@transformPanel.done)': '_animationDone.next()',\n                        '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n                    }, animations: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar], exportAs: 'matDatepickerContent', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['color'], template: \"<div\\n  cdkTrapFocus\\n  role=\\\"dialog\\\"\\n  [attr.aria-modal]=\\\"true\\\"\\n  [attr.aria-labelledby]=\\\"_dialogLabelId ?? undefined\\\"\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-custom-header]=\\\"datepicker.calendarHeaderComponent\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\", styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: MatDateSelectionModel }, { type: i1$1.DateAdapter }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n                }] }, { type: MatDatepickerIntl }]; }, propDecorators: { _calendar: [{\n                type: ViewChild,\n                args: [MatCalendar]\n            }] } });\n/** Base class for a datepicker. */\nclass MatDatepickerBase {\n    constructor(_overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _model) {\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._model = _model;\n        this._inputStateChanges = Subscription.EMPTY;\n        this._document = inject(DOCUMENT);\n        /** The view that the calendar should start in. */\n        this.startView = 'month';\n        this._touchUi = false;\n        /** Preferred position of the datepicker in the X axis. */\n        this.xPosition = 'start';\n        /** Preferred position of the datepicker in the Y axis. */\n        this.yPosition = 'below';\n        this._restoreFocus = true;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when the datepicker has been opened. */\n        this.openedStream = new EventEmitter();\n        /** Emits when the datepicker has been closed. */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /** The id for the datepicker calendar. */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        /** The element that was focused before the datepicker was opened. */\n        this._focusedElementBeforeOpen = null;\n        /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n        this._backdropHarnessClass = `${this.id}-backdrop`;\n        /** Emits when the datepicker's state changes. */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** The date to open the calendar to initially. */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null);\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** Color palette to use on the datepicker's calendar. */\n    get color() {\n        return (this._color || (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined));\n    }\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a dropdown and elements have more padding to allow for bigger touch targets.\n     */\n    get touchUi() {\n        return this._touchUi;\n    }\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /** Whether the datepicker pop-up should be disabled. */\n    get disabled() {\n        return this._disabled === undefined && this.datepickerInput\n            ? this.datepickerInput.disabled\n            : !!this._disabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /**\n     * Whether to restore focus to the previously-focused element when the calendar is closed.\n     * Note that automatic focus restoration is an accessibility feature and it is recommended that\n     * you provide your own equivalent, if you decide to turn it off.\n     */\n    get restoreFocus() {\n        return this._restoreFocus;\n    }\n    set restoreFocus(value) {\n        this._restoreFocus = coerceBooleanProperty(value);\n    }\n    /**\n     * Classes to be passed to the date picker panel.\n     * Supports string and string array values, similar to `ngClass`.\n     */\n    get panelClass() {\n        return this._panelClass;\n    }\n    set panelClass(value) {\n        this._panelClass = coerceStringArray(value);\n    }\n    /** Whether the calendar is open. */\n    get opened() {\n        return this._opened;\n    }\n    set opened(value) {\n        coerceBooleanProperty(value) ? this.open() : this.close();\n    }\n    /** The minimum selectable date. */\n    _getMinDate() {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n    /** The maximum selectable date. */\n    _getMaxDate() {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n    _getDateFilter() {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n    ngOnChanges(changes) {\n        const positionChange = changes['xPosition'] || changes['yPosition'];\n        if (positionChange && !positionChange.firstChange && this._overlayRef) {\n            const positionStrategy = this._overlayRef.getConfig().positionStrategy;\n            if (positionStrategy instanceof FlexibleConnectedPositionStrategy) {\n                this._setConnectedPositions(positionStrategy);\n                if (this.opened) {\n                    this._overlayRef.updatePosition();\n                }\n            }\n        }\n        this.stateChanges.next(undefined);\n    }\n    ngOnDestroy() {\n        this._destroyOverlay();\n        this.close();\n        this._inputStateChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Selects the given date */\n    select(date) {\n        this._model.add(date);\n    }\n    /** Emits the selected year in multiyear view */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Emits selected month in year view */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Emits changed view */\n    _viewChanged(view) {\n        this.viewChanged.emit(view);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     * @returns Selection model that the input should hook itself up to.\n     */\n    registerInput(input) {\n        if (this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._inputStateChanges.unsubscribe();\n        this.datepickerInput = input;\n        this._inputStateChanges = input.stateChanges.subscribe(() => this.stateChanges.next(undefined));\n        return this._model;\n    }\n    /**\n     * Registers a portal containing action buttons with the datepicker.\n     * @param portal Portal to be registered.\n     */\n    registerActions(portal) {\n        if (this._actionsPortal && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single actions row.');\n        }\n        this._actionsPortal = portal;\n        this._componentRef?.instance._assignActions(portal, true);\n    }\n    /**\n     * Removes a portal containing action buttons from the datepicker.\n     * @param portal Portal to be removed.\n     */\n    removeActions(portal) {\n        if (portal === this._actionsPortal) {\n            this._actionsPortal = null;\n            this._componentRef?.instance._assignActions(null, true);\n        }\n    }\n    /** Open the calendar. */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        this._focusedElementBeforeOpen = _getFocusedElementPierceShadowDom();\n        this._openOverlay();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /** Close the calendar. */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        const canRestoreFocus = this._restoreFocus &&\n            this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function';\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n            }\n        };\n        if (this._componentRef) {\n            const { instance, location } = this._componentRef;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe(() => {\n                const activeElement = this._document.activeElement;\n                // Since we restore focus after the exit animation, we have to check that\n                // the user didn't move focus themselves inside the `close` handler.\n                if (canRestoreFocus &&\n                    (!activeElement ||\n                        activeElement === this._document.activeElement ||\n                        location.nativeElement.contains(activeElement))) {\n                    this._focusedElementBeforeOpen.focus();\n                }\n                this._focusedElementBeforeOpen = null;\n                this._destroyOverlay();\n            });\n        }\n        if (canRestoreFocus) {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /** Applies the current pending selection on the overlay to the model. */\n    _applyPendingSelection() {\n        this._componentRef?.instance?._applyPendingSelection();\n    }\n    /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n    _forwardContentValues(instance) {\n        instance.datepicker = this;\n        instance.color = this.color;\n        instance._dialogLabelId = this.datepickerInput.getOverlayLabelId();\n        instance._assignActions(this._actionsPortal, false);\n    }\n    /** Opens the overlay with the calendar. */\n    _openOverlay() {\n        this._destroyOverlay();\n        const isDialog = this.touchUi;\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        const overlayRef = (this._overlayRef = this._overlay.create(new OverlayConfig({\n            positionStrategy: isDialog ? this._getDialogStrategy() : this._getDropdownStrategy(),\n            hasBackdrop: true,\n            backdropClass: [\n                isDialog ? 'cdk-overlay-dark-backdrop' : 'mat-overlay-transparent-backdrop',\n                this._backdropHarnessClass,\n            ],\n            direction: this._dir,\n            scrollStrategy: isDialog ? this._overlay.scrollStrategies.block() : this._scrollStrategy(),\n            panelClass: `mat-datepicker-${isDialog ? 'dialog' : 'popup'}`,\n        })));\n        this._getCloseStream(overlayRef).subscribe(event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        });\n        // The `preventDefault` call happens inside the calendar as well, however focus moves into\n        // it inside a timeout which can give browsers a chance to fire off a keyboard event in-between\n        // that can scroll the page (see #24969). Always block default actions of arrow keys for the\n        // entire overlay so the page doesn't get scrolled by accident.\n        overlayRef.keydownEvents().subscribe(event => {\n            const keyCode = event.keyCode;\n            if (keyCode === UP_ARROW ||\n                keyCode === DOWN_ARROW ||\n                keyCode === LEFT_ARROW ||\n                keyCode === RIGHT_ARROW ||\n                keyCode === PAGE_UP ||\n                keyCode === PAGE_DOWN) {\n                event.preventDefault();\n            }\n        });\n        this._componentRef = overlayRef.attach(portal);\n        this._forwardContentValues(this._componentRef.instance);\n        // Update the position once the calendar has rendered. Only relevant in dropdown mode.\n        if (!isDialog) {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => overlayRef.updatePosition());\n        }\n    }\n    /** Destroys the current overlay. */\n    _destroyOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = this._componentRef = null;\n        }\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDialogStrategy() {\n        return this._overlay.position().global().centerHorizontally().centerVertically();\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDropdownStrategy() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition();\n        return this._setConnectedPositions(strategy);\n    }\n    /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n    _setConnectedPositions(strategy) {\n        const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n        const secondaryX = primaryX === 'start' ? 'end' : 'start';\n        const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n        const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n        return strategy.withPositions([\n            {\n                originX: primaryX,\n                originY: secondaryY,\n                overlayX: primaryX,\n                overlayY: primaryY,\n            },\n            {\n                originX: primaryX,\n                originY: primaryY,\n                overlayX: primaryX,\n                overlayY: secondaryY,\n            },\n            {\n                originX: secondaryX,\n                originY: secondaryY,\n                overlayX: secondaryX,\n                overlayY: primaryY,\n            },\n            {\n                originX: secondaryX,\n                originY: primaryY,\n                overlayX: secondaryX,\n                overlayY: secondaryY,\n            },\n        ]);\n    }\n    /** Gets an observable that will emit when the overlay is supposed to be closed. */\n    _getCloseStream(overlayRef) {\n        return merge(overlayRef.backdropClick(), overlayRef.detachments(), overlayRef.keydownEvents().pipe(filter(event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                (this.datepickerInput && hasModifierKey(event, 'altKey') && event.keyCode === UP_ARROW));\n        })));\n    }\n}\nMatDatepickerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerBase, deps: [{ token: i9.Overlay }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: MAT_DATEPICKER_SCROLL_STRATEGY }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }, { token: MatDateSelectionModel }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDatepickerBase, inputs: { calendarHeaderComponent: \"calendarHeaderComponent\", startAt: \"startAt\", startView: \"startView\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", xPosition: \"xPosition\", yPosition: \"yPosition\", restoreFocus: \"restoreFocus\", dateClass: \"dateClass\", panelClass: \"panelClass\", opened: \"opened\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", openedStream: \"opened\", closedStream: \"closed\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i9.Overlay }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: MatDateSelectionModel }]; }, propDecorators: { calendarHeaderComponent: [{\n                type: Input\n            }], startAt: [{\n                type: Input\n            }], startView: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], touchUi: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], restoreFocus: [{\n                type: Input\n            }], yearSelected: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], viewChanged: [{\n                type: Output\n            }], dateClass: [{\n                type: Input\n            }], openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], panelClass: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\nclass MatDatepicker extends MatDatepickerBase {\n}\nMatDatepicker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepicker, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatDatepicker.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDatepicker, selector: \"mat-datepicker\", providers: [\n        MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n        { provide: MatDatepickerBase, useExisting: MatDatepicker },\n    ], exportAs: [\"matDatepicker\"], usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepicker, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-datepicker',\n                    template: '',\n                    exportAs: 'matDatepicker',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n                        { provide: MatDatepickerBase, useExisting: MatDatepicker },\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nclass MatDatepickerInputEvent {\n    constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    target, \n    /** Reference to the native input element associated with the datepicker input. */\n    targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/** Base class for datepicker inputs. */\nclass MatDatepickerInputBase {\n    constructor(_elementRef, _dateAdapter, _dateFormats) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        /** Emits when a `change` event is fired on this `<input>`. */\n        this.dateChange = new EventEmitter();\n        /** Emits when an `input` event is fired on this `<input>`. */\n        this.dateInput = new EventEmitter();\n        /** Emits when the internal state has changed */\n        this.stateChanges = new Subject();\n        this._onTouched = () => { };\n        this._validatorOnChange = () => { };\n        this._cvaOnChange = () => { };\n        this._valueChangesSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /** The form control validator for whether the input parses. */\n        this._parseValidator = () => {\n            return this._lastValueValid\n                ? null\n                : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        };\n        /** The form control validator for the date filter. */\n        this._filterValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !controlValue || this._matchesFilter(controlValue)\n                ? null\n                : { 'matDatepickerFilter': true };\n        };\n        /** The form control validator for the min date. */\n        this._minValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const min = this._getMinDate();\n            return !min || !controlValue || this._dateAdapter.compareDate(min, controlValue) <= 0\n                ? null\n                : { 'matDatepickerMin': { 'min': min, 'actual': controlValue } };\n        };\n        /** The form control validator for the max date. */\n        this._maxValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const max = this._getMaxDate();\n            return !max || !controlValue || this._dateAdapter.compareDate(max, controlValue) >= 0\n                ? null\n                : { 'matDatepickerMax': { 'max': max, 'actual': controlValue } };\n        };\n        /** Whether the last value set on the input was valid. */\n        this._lastValueValid = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n            this._assignValueProgrammatically(this.value);\n        });\n    }\n    /** The value of the input. */\n    get value() {\n        return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n    }\n    set value(value) {\n        this._assignValueProgrammatically(value);\n    }\n    /** Whether the datepicker-input is disabled. */\n    get disabled() {\n        return !!this._disabled || this._parentDisabled();\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n        // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n        // element has been inserted.\n        if (newValue && this._isInitialized && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /** Gets the base validator functions. */\n    _getValidators() {\n        return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n    }\n    /** Registers a date selection model with the input. */\n    _registerModel(model) {\n        this._model = model;\n        this._valueChangesSubscription.unsubscribe();\n        if (this._pendingValue) {\n            this._assignValue(this._pendingValue);\n        }\n        this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n            if (this._shouldHandleChangeEvent(event)) {\n                const value = this._getValueFromModel(event.selection);\n                this._lastValueValid = this._isValidValue(value);\n                this._cvaOnChange(value);\n                this._onTouched();\n                this._formatValue(value);\n                this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            }\n        });\n    }\n    ngAfterViewInit() {\n        this._isInitialized = true;\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._valueChangesSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** @docs-private */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /** @docs-private */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this._assignValueProgrammatically(value);\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _onKeydown(event) {\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._openPopup();\n            event.preventDefault();\n        }\n    }\n    _onInput(value) {\n        const lastValueWasValid = this._lastValueValid;\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = this._isValidValue(date);\n        date = this._dateAdapter.getValidDateOrNull(date);\n        const hasChanged = !this._dateAdapter.sameDate(date, this.value);\n        // We need to fire the CVA change event for all\n        // nulls, otherwise the validators won't run.\n        if (!date || hasChanged) {\n            this._cvaOnChange(date);\n        }\n        else {\n            // Call the CVA change handler for invalid values\n            // since this is what marks the control as dirty.\n            if (value && !this.value) {\n                this._cvaOnChange(date);\n            }\n            if (lastValueWasValid !== this._lastValueValid) {\n                this._validatorOnChange();\n            }\n        }\n        if (hasChanged) {\n            this._assignValue(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n    }\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /** Handles blur events on the input. */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /** Formats a value and sets it on the input element. */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value != null ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /** Assigns a value to the model. */\n    _assignValue(value) {\n        // We may get some incoming values before the model was\n        // assigned. Save the value so that we can assign it later.\n        if (this._model) {\n            this._assignValueToModel(value);\n            this._pendingValue = null;\n        }\n        else {\n            this._pendingValue = value;\n        }\n    }\n    /** Whether a value is considered valid. */\n    _isValidValue(value) {\n        return !value || this._dateAdapter.isValid(value);\n    }\n    /**\n     * Checks whether a parent control is disabled. This is in place so that it can be overridden\n     * by inputs extending this one which can be placed inside of a group that can be disabled.\n     */\n    _parentDisabled() {\n        return false;\n    }\n    /** Programmatically assigns a value to the input. */\n    _assignValueProgrammatically(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = this._isValidValue(value);\n        value = this._dateAdapter.getValidDateOrNull(value);\n        this._assignValue(value);\n        this._formatValue(value);\n    }\n    /** Gets whether a value matches the current date filter. */\n    _matchesFilter(value) {\n        const filter = this._getDateFilter();\n        return !filter || filter(value);\n    }\n}\nMatDatepickerInputBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerInputBase, deps: [{ token: i0.ElementRef }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerInputBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDatepickerInputBase, inputs: { value: \"value\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerInputBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }]; }, propDecorators: { value: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], dateChange: [{\n                type: Output\n            }], dateInput: [{\n                type: Output\n            }] } });\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nfunction dateInputsHaveChanged(changes, adapter) {\n    const keys = Object.keys(changes);\n    for (let key of keys) {\n        const { previousValue, currentValue } = changes[key];\n        if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n            if (!adapter.sameDate(previousValue, currentValue)) {\n                return true;\n            }\n        }\n        else {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true,\n};\n/** @docs-private */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true,\n};\n/** Directive used to connect an input to a MatDatepicker. */\nclass MatDatepickerInput extends MatDatepickerInputBase {\n    constructor(elementRef, dateAdapter, dateFormats, _formField) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        this._validator = Validators.compose(super._getValidators());\n    }\n    /** The datepicker that this input is associated with. */\n    set matDatepicker(datepicker) {\n        if (datepicker) {\n            this._datepicker = datepicker;\n            this._closedSubscription = datepicker.closedStream.subscribe(() => this._onTouched());\n            this._registerModel(datepicker.registerInput(this));\n        }\n    }\n    /** The minimum valid date. */\n    get min() {\n        return this._min;\n    }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** The maximum valid date. */\n    get max() {\n        return this._max;\n    }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** Function that can be used to filter out dates within the datepicker. */\n    get dateFilter() {\n        return this._dateFilter;\n    }\n    set dateFilter(value) {\n        const wasMatchingValue = this._matchesFilter(this.value);\n        this._dateFilter = value;\n        if (this._matchesFilter(this.value) !== wasMatchingValue) {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n        if (this._formField) {\n            return this._formField.getLabelId();\n        }\n        return this._elementRef.nativeElement.getAttribute('aria-labelledby');\n    }\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the value at which the calendar should start. */\n    getStartValue() {\n        return this.value;\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._closedSubscription.unsubscribe();\n    }\n    /** Opens the associated datepicker. */\n    _openPopup() {\n        if (this._datepicker) {\n            this._datepicker.open();\n        }\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue;\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            this._model.updateSelection(value, this);\n        }\n    }\n    /** Gets the input's minimum date. */\n    _getMinDate() {\n        return this._min;\n    }\n    /** Gets the input's maximum date. */\n    _getMaxDate() {\n        return this._max;\n    }\n    /** Gets the input's date filtering function. */\n    _getDateFilter() {\n        return this._dateFilter;\n    }\n    _shouldHandleChangeEvent(event) {\n        return event.source !== this;\n    }\n}\nMatDatepickerInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerInput, deps: [{ token: i0.ElementRef }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDatepickerInput, selector: \"input[matDatepicker]\", inputs: { matDatepicker: \"matDatepicker\", min: \"min\", max: \"max\", dateFilter: [\"matDatepickerFilter\", \"dateFilter\"] }, host: { listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"blur\": \"_onBlur()\", \"keydown\": \"_onKeydown($event)\" }, properties: { \"attr.aria-haspopup\": \"_datepicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"(_datepicker?.opened && _datepicker.id) || null\", \"attr.min\": \"min ? _dateAdapter.toIso8601(min) : null\", \"attr.max\": \"max ? _dateAdapter.toIso8601(max) : null\", \"attr.data-mat-calendar\": \"_datepicker ? _datepicker.id : null\", \"disabled\": \"disabled\" }, classAttribute: \"mat-datepicker-input\" }, providers: [\n        MAT_DATEPICKER_VALUE_ACCESSOR,\n        MAT_DATEPICKER_VALIDATORS,\n        { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n    ], exportAs: [\"matDatepickerInput\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matDatepicker]',\n                    providers: [\n                        MAT_DATEPICKER_VALUE_ACCESSOR,\n                        MAT_DATEPICKER_VALIDATORS,\n                        { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                    ],\n                    host: {\n                        'class': 'mat-datepicker-input',\n                        '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                        '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                        '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                        '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                        // Used by the test harness to tie this input to its calendar. We can't depend on\n                        // `aria-owns` for this, because it's only defined while the calendar is open.\n                        '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(blur)': '_onBlur()',\n                        '(keydown)': '_onKeydown($event)',\n                    },\n                    exportAs: 'matDatepickerInput',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }, { type: i2$1.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }]; }, propDecorators: { matDatepicker: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input,\n                args: ['matDatepickerFilter']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Can be used to override the icon of a `matDatepickerToggle`. */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerToggleIcon, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerToggleIcon.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDatepickerToggleIcon, selector: \"[matDatepickerToggleIcon]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerToggleIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matDatepickerToggleIcon]',\n                }]\n        }] });\nclass MatDatepickerToggle {\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n    }\n    /** Whether the toggle button is disabled. */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    _watchStateChanges() {\n        const datepickerStateChanged = this.datepicker ? this.datepicker.stateChanges : of();\n        const inputStateChanged = this.datepicker && this.datepicker.datepickerInput\n            ? this.datepicker.datepickerInput.stateChanges\n            : of();\n        const datepickerToggled = this.datepicker\n            ? merge(this.datepicker.openedStream, this.datepicker.closedStream)\n            : of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n}\nMatDatepickerToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerToggle, deps: [{ token: MatDatepickerIntl }, { token: i0.ChangeDetectorRef }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDatepickerToggle.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDatepickerToggle, selector: \"mat-datepicker-toggle\", inputs: { datepicker: [\"for\", \"datepicker\"], tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], disabled: \"disabled\", disableRipple: \"disableRipple\" }, host: { listeners: { \"click\": \"_open($event)\" }, properties: { \"attr.tabindex\": \"null\", \"class.mat-datepicker-toggle-active\": \"datepicker && datepicker.opened\", \"class.mat-accent\": \"datepicker && datepicker.color === \\\"accent\\\"\", \"class.mat-warn\": \"datepicker && datepicker.color === \\\"warn\\\"\", \"attr.data-mat-calendar\": \"datepicker ? datepicker.id : null\" }, classAttribute: \"mat-datepicker-toggle\" }, queries: [{ propertyName: \"_customIcon\", first: true, predicate: MatDatepickerToggleIcon, descendants: true }], viewQueries: [{ propertyName: \"_button\", first: true, predicate: [\"button\"], descendants: true }], exportAs: [\"matDatepickerToggle\"], usesOnChanges: true, ngImport: i0, template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\", styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\"], dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-datepicker-toggle', host: {\n                        'class': 'mat-datepicker-toggle',\n                        '[attr.tabindex]': 'null',\n                        '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                        '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                        '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                        // Used by the test harness to tie this toggle to its datepicker.\n                        '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',\n                        // Bind the `click` on the host, rather than the inner `button`, so that we can call\n                        // `stopPropagation` on it without affecting the user's `click` handlers. We need to stop\n                        // it so that the input doesn't get focused automatically by the form field (See #21836).\n                        '(click)': '_open($event)',\n                    }, exportAs: 'matDatepickerToggle', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\", styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\"] }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }]; }, propDecorators: { datepicker: [{\n                type: Input,\n                args: ['for']\n            }], tabIndex: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], disabled: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], _customIcon: [{\n                type: ContentChild,\n                args: [MatDatepickerToggleIcon]\n            }], _button: [{\n                type: ViewChild,\n                args: ['button']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nconst MAT_DATE_RANGE_INPUT_PARENT = new InjectionToken('MAT_DATE_RANGE_INPUT_PARENT');\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\nclass MatDateRangeInputPartBase extends MatDatepickerInputBase {\n    constructor(_rangeInput, _elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {\n        super(_elementRef, dateAdapter, dateFormats);\n        this._rangeInput = _rangeInput;\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._injector = _injector;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this._dir = inject(Directionality, InjectFlags.Optional);\n    }\n    ngOnInit() {\n        // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n        // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n        // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n        // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n        // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n        // everything has been resolved.\n        // tslint:disable-next-line:no-bitwise\n        const ngControl = this._injector.get(NgControl, null, InjectFlags.Self | InjectFlags.Optional);\n        if (ngControl) {\n            this.ngControl = ngControl;\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /** Gets whether the input is empty. */\n    isEmpty() {\n        return this._elementRef.nativeElement.value.length === 0;\n    }\n    /** Gets the placeholder of the input. */\n    _getPlaceholder() {\n        return this._elementRef.nativeElement.placeholder;\n    }\n    /** Focuses the input. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /** Handles `input` events on the input element. */\n    _onInput(value) {\n        super._onInput(value);\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Opens the datepicker associated with the input. */\n    _openPopup() {\n        this._rangeInput._openDatepicker();\n    }\n    /** Gets the minimum date from the range input. */\n    _getMinDate() {\n        return this._rangeInput.min;\n    }\n    /** Gets the maximum date from the range input. */\n    _getMaxDate() {\n        return this._rangeInput.max;\n    }\n    /** Gets the date filter function from the range input. */\n    _getDateFilter() {\n        return this._rangeInput.dateFilter;\n    }\n    _parentDisabled() {\n        return this._rangeInput._groupDisabled;\n    }\n    _shouldHandleChangeEvent({ source }) {\n        return source !== this._rangeInput._startInput && source !== this._rangeInput._endInput;\n    }\n    _assignValueProgrammatically(value) {\n        super._assignValueProgrammatically(value);\n        const opposite = (this === this._rangeInput._startInput\n            ? this._rangeInput._endInput\n            : this._rangeInput._startInput);\n        opposite?._validatorOnChange();\n    }\n}\nMatDateRangeInputPartBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDateRangeInputPartBase, deps: [{ token: MAT_DATE_RANGE_INPUT_PARENT }, { token: i0.ElementRef }, { token: i1$1.ErrorStateMatcher }, { token: i0.Injector }, { token: i2$2.NgForm, optional: true }, { token: i2$2.FormGroupDirective, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatDateRangeInputPartBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDateRangeInputPartBase, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDateRangeInputPartBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DATE_RANGE_INPUT_PARENT]\n                }] }, { type: i0.ElementRef }, { type: i1$1.ErrorStateMatcher }, { type: i0.Injector }, { type: i2$2.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i2$2.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }]; } });\nconst _MatDateRangeInputBase = mixinErrorState(MatDateRangeInputPartBase);\n/** Input for entering the start date in a `mat-date-range-input`. */\nclass MatStartDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the start date isn't after the end date. */\n        this._startValidator = (control) => {\n            const start = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const end = this._model ? this._model.selection.end : null;\n            return !start || !end || this._dateAdapter.compareDate(start, end) <= 0\n                ? null\n                : { 'matStartDateInvalid': { 'end': end, 'actual': start } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._startValidator]);\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.start;\n    }\n    _shouldHandleChangeEvent(change) {\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !change.oldValue?.start\n                ? !!change.selection.start\n                : !change.selection.start ||\n                    !!this._dateAdapter.compareDate(change.oldValue.start, change.selection.start);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(value, this._model.selection.end);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _formatValue(value) {\n        super._formatValue(value);\n        // Any time the input value is reformatted we need to tell the parent.\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Gets the value that should be used when mirroring the input's size. */\n    getMirrorValue() {\n        const element = this._elementRef.nativeElement;\n        const value = element.value;\n        return value.length > 0 ? value : element.placeholder;\n    }\n    _onKeydown(event) {\n        const endInput = this._rangeInput._endInput;\n        const element = this._elementRef.nativeElement;\n        const isLtr = this._dir?.value !== 'rtl';\n        // If the user hits RIGHT (LTR) when at the end of the input (and no\n        // selection), move the cursor to the start of the end input.\n        if (((event.keyCode === RIGHT_ARROW && isLtr) || (event.keyCode === LEFT_ARROW && !isLtr)) &&\n            element.selectionStart === element.value.length &&\n            element.selectionEnd === element.value.length) {\n            event.preventDefault();\n            endInput._elementRef.nativeElement.setSelectionRange(0, 0);\n            endInput.focus();\n        }\n        else {\n            super._onKeydown(event);\n        }\n    }\n}\nMatStartDate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatStartDate, deps: [{ token: MAT_DATE_RANGE_INPUT_PARENT }, { token: i0.ElementRef }, { token: i1$1.ErrorStateMatcher }, { token: i0.Injector }, { token: i2$2.NgForm, optional: true }, { token: i2$2.FormGroupDirective, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatStartDate.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatStartDate, selector: \"input[matStartDate]\", inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, host: { attributes: { \"type\": \"text\" }, listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"keydown\": \"_onKeydown($event)\", \"blur\": \"_onBlur()\" }, properties: { \"disabled\": \"disabled\", \"attr.id\": \"_rangeInput.id\", \"attr.aria-haspopup\": \"_rangeInput.rangePicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null\", \"attr.min\": \"_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null\", \"attr.max\": \"_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null\" }, classAttribute: \"mat-start-date mat-date-range-input-inner\" }, providers: [\n        { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n        { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatStartDate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matStartDate]',\n                    host: {\n                        'class': 'mat-start-date mat-date-range-input-inner',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(keydown)': '_onKeydown($event)',\n                        '[attr.id]': '_rangeInput.id',\n                        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                        '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                        '(blur)': '_onBlur()',\n                        'type': 'text',\n                    },\n                    providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n                        { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true },\n                    ],\n                    // These need to be specified explicitly, because some tooling doesn't\n                    // seem to pick them up from the base class. See #20932.\n                    outputs: ['dateChange', 'dateInput'],\n                    inputs: ['errorStateMatcher'],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DATE_RANGE_INPUT_PARENT]\n                }] }, { type: i0.ElementRef }, { type: i1$1.ErrorStateMatcher }, { type: i0.Injector }, { type: i2$2.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i2$2.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }]; } });\n/** Input for entering the end date in a `mat-date-range-input`. */\nclass MatEndDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the end date isn't before the start date. */\n        this._endValidator = (control) => {\n            const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const start = this._model ? this._model.selection.start : null;\n            return !end || !start || this._dateAdapter.compareDate(end, start) >= 0\n                ? null\n                : { 'matEndDateInvalid': { 'start': start, 'actual': end } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._endValidator]);\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.end;\n    }\n    _shouldHandleChangeEvent(change) {\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !change.oldValue?.end\n                ? !!change.selection.end\n                : !change.selection.end ||\n                    !!this._dateAdapter.compareDate(change.oldValue.end, change.selection.end);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(this._model.selection.start, value);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _onKeydown(event) {\n        const startInput = this._rangeInput._startInput;\n        const element = this._elementRef.nativeElement;\n        const isLtr = this._dir?.value !== 'rtl';\n        // If the user is pressing backspace on an empty end input, move focus back to the start.\n        if (event.keyCode === BACKSPACE && !element.value) {\n            startInput.focus();\n        }\n        // If the user hits LEFT (LTR) when at the start of the input (and no\n        // selection), move the cursor to the end of the start input.\n        else if (((event.keyCode === LEFT_ARROW && isLtr) || (event.keyCode === RIGHT_ARROW && !isLtr)) &&\n            element.selectionStart === 0 &&\n            element.selectionEnd === 0) {\n            event.preventDefault();\n            const endPosition = startInput._elementRef.nativeElement.value.length;\n            startInput._elementRef.nativeElement.setSelectionRange(endPosition, endPosition);\n            startInput.focus();\n        }\n        else {\n            super._onKeydown(event);\n        }\n    }\n}\nMatEndDate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatEndDate, deps: [{ token: MAT_DATE_RANGE_INPUT_PARENT }, { token: i0.ElementRef }, { token: i1$1.ErrorStateMatcher }, { token: i0.Injector }, { token: i2$2.NgForm, optional: true }, { token: i2$2.FormGroupDirective, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatEndDate.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatEndDate, selector: \"input[matEndDate]\", inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, host: { attributes: { \"type\": \"text\" }, listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"keydown\": \"_onKeydown($event)\", \"blur\": \"_onBlur()\" }, properties: { \"disabled\": \"disabled\", \"attr.aria-haspopup\": \"_rangeInput.rangePicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null\", \"attr.min\": \"_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null\", \"attr.max\": \"_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null\" }, classAttribute: \"mat-end-date mat-date-range-input-inner\" }, providers: [\n        { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n        { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatEndDate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matEndDate]',\n                    host: {\n                        'class': 'mat-end-date mat-date-range-input-inner',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(keydown)': '_onKeydown($event)',\n                        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                        '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                        '(blur)': '_onBlur()',\n                        'type': 'text',\n                    },\n                    providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n                        { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true },\n                    ],\n                    // These need to be specified explicitly, because some tooling doesn't\n                    // seem to pick them up from the base class. See #20932.\n                    outputs: ['dateChange', 'dateInput'],\n                    inputs: ['errorStateMatcher'],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DATE_RANGE_INPUT_PARENT]\n                }] }, { type: i0.ElementRef }, { type: i1$1.ErrorStateMatcher }, { type: i0.Injector }, { type: i2$2.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i2$2.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nclass MatDateRangeInput {\n    constructor(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        /** Unique ID for the input. */\n        this.id = `mat-date-range-input-${nextUniqueId++}`;\n        /** Whether the control is focused. */\n        this.focused = false;\n        /** Name of the form control. */\n        this.controlType = 'mat-date-range-input';\n        this._groupDisabled = false;\n        /** Value for the `aria-describedby` attribute of the inputs. */\n        this._ariaDescribedBy = null;\n        /** Separator text to be shown between the inputs. */\n        this.separator = '–';\n        /** Start of the comparison range that should be shown in the calendar. */\n        this.comparisonStart = null;\n        /** End of the comparison range that should be shown in the calendar. */\n        this.comparisonEnd = null;\n        /** Emits when the input's state has changed. */\n        this.stateChanges = new Subject();\n        if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        // The datepicker module can be used both with MDC and non-MDC form fields. We have\n        // to conditionally add the MDC input class so that the range picker looks correctly.\n        if (_formField?._elementRef.nativeElement.classList.contains('mat-mdc-form-field')) {\n            const classList = _elementRef.nativeElement.classList;\n            classList.add('mat-mdc-input-element');\n            classList.add('mat-mdc-form-field-input-control');\n        }\n        // TODO(crisbeto): remove `as any` after #18206 lands.\n        this.ngControl = control;\n    }\n    /** Current value of the range input. */\n    get value() {\n        return this._model ? this._model.selection : null;\n    }\n    /** Whether the control's label should float. */\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n     * @docs-private\n     */\n    get placeholder() {\n        const start = this._startInput?._getPlaceholder() || '';\n        const end = this._endInput?._getPlaceholder() || '';\n        return start || end ? `${start} ${this.separator} ${end}` : '';\n    }\n    /** The range picker that this input is associated with. */\n    get rangePicker() {\n        return this._rangePicker;\n    }\n    set rangePicker(rangePicker) {\n        if (rangePicker) {\n            this._model = rangePicker.registerInput(this);\n            this._rangePicker = rangePicker;\n            this._closedSubscription.unsubscribe();\n            this._closedSubscription = rangePicker.closedStream.subscribe(() => {\n                this._startInput?._onTouched();\n                this._endInput?._onTouched();\n            });\n            this._registerModel(this._model);\n        }\n    }\n    /** Whether the input is required. */\n    get required() {\n        return !!this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Function that can be used to filter out dates within the date range picker. */\n    get dateFilter() {\n        return this._dateFilter;\n    }\n    set dateFilter(value) {\n        const start = this._startInput;\n        const end = this._endInput;\n        const wasMatchingStart = start && start._matchesFilter(start.value);\n        const wasMatchingEnd = end && end._matchesFilter(start.value);\n        this._dateFilter = value;\n        if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n            start._validatorOnChange();\n        }\n        if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n            end._validatorOnChange();\n        }\n    }\n    /** The minimum valid date. */\n    get min() {\n        return this._min;\n    }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._revalidate();\n        }\n    }\n    /** The maximum valid date. */\n    get max() {\n        return this._max;\n    }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._revalidate();\n        }\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n        return this._startInput && this._endInput\n            ? this._startInput.disabled && this._endInput.disabled\n            : this._groupDisabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._groupDisabled) {\n            this._groupDisabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n        if (this._startInput && this._endInput) {\n            return this._startInput.errorState || this._endInput.errorState;\n        }\n        return false;\n    }\n    /** Whether the datepicker input is empty. */\n    get empty() {\n        const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n        const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n        return startEmpty && endEmpty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    onContainerClick() {\n        if (!this.focused && !this.disabled) {\n            if (!this._model || !this._model.selection.start) {\n                this._startInput.focus();\n            }\n            else {\n                this._endInput.focus();\n            }\n        }\n    }\n    ngAfterContentInit() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._startInput) {\n                throw Error('mat-date-range-input must contain a matStartDate input');\n            }\n            if (!this._endInput) {\n                throw Error('mat-date-range-input must contain a matEndDate input');\n            }\n        }\n        if (this._model) {\n            this._registerModel(this._model);\n        }\n        // We don't need to unsubscribe from this, because we\n        // know that the input streams will be completed on destroy.\n        merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n            this.stateChanges.next(undefined);\n        });\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._closedSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Gets the date at which the calendar should start. */\n    getStartValue() {\n        return this.value ? this.value.start : null;\n    }\n    /** Gets the input's theme palette. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the element to which the calendar overlay should be attached. */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n        return this._formField ? this._formField.getLabelId() : null;\n    }\n    /** Gets the value that is used to mirror the state input. */\n    _getInputMirrorValue() {\n        return this._startInput ? this._startInput.getMirrorValue() : '';\n    }\n    /** Whether the input placeholders should be hidden. */\n    _shouldHidePlaceholders() {\n        return this._startInput ? !this._startInput.isEmpty() : false;\n    }\n    /** Handles the value in one of the child inputs changing. */\n    _handleChildValueChange() {\n        this.stateChanges.next(undefined);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Opens the date range picker associated with the input. */\n    _openDatepicker() {\n        if (this._rangePicker) {\n            this._rangePicker.open();\n        }\n    }\n    /** Whether the separate text should be hidden. */\n    _shouldHideSeparator() {\n        return ((!this._formField ||\n            (this._formField.getLabelId() && !this._formField._shouldLabelFloat())) &&\n            this.empty);\n    }\n    /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n    _getAriaLabelledby() {\n        const formField = this._formField;\n        return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n    }\n    /** Updates the focused state of the range input. */\n    _updateFocus(origin) {\n        this.focused = origin !== null;\n        this.stateChanges.next();\n    }\n    /** Re-runs the validators on the start/end inputs. */\n    _revalidate() {\n        if (this._startInput) {\n            this._startInput._validatorOnChange();\n        }\n        if (this._endInput) {\n            this._endInput._validatorOnChange();\n        }\n    }\n    /** Registers the current date selection model with the start/end inputs. */\n    _registerModel(model) {\n        if (this._startInput) {\n            this._startInput._registerModel(model);\n        }\n        if (this._endInput) {\n            this._endInput._registerModel(model);\n        }\n    }\n}\nMatDateRangeInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDateRangeInput, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i2$2.ControlContainer, optional: true, self: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDateRangeInput.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDateRangeInput, selector: \"mat-date-range-input\", inputs: { rangePicker: \"rangePicker\", required: \"required\", dateFilter: \"dateFilter\", min: \"min\", max: \"max\", disabled: \"disabled\", separator: \"separator\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, host: { attributes: { \"role\": \"group\" }, properties: { \"class.mat-date-range-input-hide-placeholders\": \"_shouldHidePlaceholders()\", \"class.mat-date-range-input-required\": \"required\", \"attr.id\": \"null\", \"attr.aria-labelledby\": \"_getAriaLabelledby()\", \"attr.aria-describedby\": \"_ariaDescribedBy\", \"attr.data-mat-calendar\": \"rangePicker ? rangePicker.id : null\" }, classAttribute: \"mat-date-range-input\" }, providers: [\n        { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n        { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n    ], queries: [{ propertyName: \"_startInput\", first: true, predicate: MatStartDate, descendants: true }, { propertyName: \"_endInput\", first: true, predicate: MatEndDate, descendants: true }], exportAs: [\"matDateRangeInput\"], usesOnChanges: true, ngImport: i0, template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-start-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue()}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n\", styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}._mat-animation-noopable .mat-date-range-input-separator{transition:none}.mat-date-range-input-separator-hidden{-webkit-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-date-range-input-inner::placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-moz-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner:-ms-input-placeholder{transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\"], dependencies: [{ kind: \"directive\", type: i5.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"], exportAs: [\"cdkMonitorFocus\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDateRangeInput, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-date-range-input', exportAs: 'matDateRangeInput', host: {\n                        'class': 'mat-date-range-input',\n                        '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n                        '[class.mat-date-range-input-required]': 'required',\n                        '[attr.id]': 'null',\n                        'role': 'group',\n                        '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                        '[attr.aria-describedby]': '_ariaDescribedBy',\n                        // Used by the test harness to tie this input to its calendar. We can't depend on\n                        // `aria-owns` for this, because it's only defined while the calendar is open.\n                        '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n                        { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n                    ], template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-start-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue()}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n\", styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}._mat-animation-noopable .mat-date-range-input-separator{transition:none}.mat-date-range-input-separator-hidden{-webkit-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-date-range-input-inner::placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-moz-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner:-ms-input-placeholder{transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i2$2.ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: i2$1.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }]; }, propDecorators: { rangePicker: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], separator: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], _startInput: [{\n                type: ContentChild,\n                args: [MatStartDate]\n            }], _endInput: [{\n                type: ContentChild,\n                args: [MatEndDate]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\nclass MatDateRangePicker extends MatDatepickerBase {\n    _forwardContentValues(instance) {\n        super._forwardContentValues(instance);\n        const input = this.datepickerInput;\n        if (input) {\n            instance.comparisonStart = input.comparisonStart;\n            instance.comparisonEnd = input.comparisonEnd;\n        }\n    }\n}\nMatDateRangePicker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDateRangePicker, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatDateRangePicker.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDateRangePicker, selector: \"mat-date-range-picker\", providers: [\n        MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n        MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n        { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n    ], exportAs: [\"matDateRangePicker\"], usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDateRangePicker, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-date-range-picker',\n                    template: '',\n                    exportAs: 'matDateRangePicker',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n                        MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n                        { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that will close the datepicker and assign the current selection to the data model. */\nclass MatDatepickerApply {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n    _applySelection() {\n        this._datepicker._applyPendingSelection();\n        this._datepicker.close();\n    }\n}\nMatDatepickerApply.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerApply, deps: [{ token: MatDatepickerBase }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerApply.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDatepickerApply, selector: \"[matDatepickerApply], [matDateRangePickerApply]\", host: { listeners: { \"click\": \"_applySelection()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerApply, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matDatepickerApply], [matDateRangePickerApply]',\n                    host: { '(click)': '_applySelection()' },\n                }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerBase }]; } });\n/** Button that will close the datepicker and discard the current selection. */\nclass MatDatepickerCancel {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n}\nMatDatepickerCancel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerCancel, deps: [{ token: MatDatepickerBase }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerCancel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDatepickerCancel, selector: \"[matDatepickerCancel], [matDateRangePickerCancel]\", host: { listeners: { \"click\": \"_datepicker.close()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerCancel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matDatepickerCancel], [matDateRangePickerCancel]',\n                    host: { '(click)': '_datepicker.close()' },\n                }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerBase }]; } });\n/**\n * Container that can be used to project a row of action buttons\n * to the bottom of a datepicker or date range picker.\n */\nclass MatDatepickerActions {\n    constructor(_datepicker, _viewContainerRef) {\n        this._datepicker = _datepicker;\n        this._viewContainerRef = _viewContainerRef;\n    }\n    ngAfterViewInit() {\n        this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        this._datepicker.registerActions(this._portal);\n    }\n    ngOnDestroy() {\n        this._datepicker.removeActions(this._portal);\n        // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n        if (this._portal && this._portal.isAttached) {\n            this._portal?.detach();\n        }\n    }\n}\nMatDatepickerActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerActions, deps: [{ token: MatDatepickerBase }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\nMatDatepickerActions.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDatepickerActions, selector: \"mat-datepicker-actions, mat-date-range-picker-actions\", viewQueries: [{ propertyName: \"_template\", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0, template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `, isInline: true, styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerActions, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-datepicker-actions, mat-date-range-picker-actions', template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerBase }, { type: i0.ViewContainerRef }]; }, propDecorators: { _template: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDatepickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerModule, declarations: [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader,\n        MatDateRangeInput,\n        MatStartDate,\n        MatEndDate,\n        MatDateRangePicker,\n        MatDatepickerActions,\n        MatDatepickerCancel,\n        MatDatepickerApply], imports: [CommonModule,\n        MatButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        MatCommonModule], exports: [CdkScrollableModule,\n        MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader,\n        MatDateRangeInput,\n        MatStartDate,\n        MatEndDate,\n        MatDateRangePicker,\n        MatDatepickerActions,\n        MatDatepickerCancel,\n        MatDatepickerApply] });\nMatDatepickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerModule, providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [CommonModule,\n        MatButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        MatCommonModule, CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDatepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatButtonModule,\n                        OverlayModule,\n                        A11yModule,\n                        PortalModule,\n                        MatCommonModule,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCalendar,\n                        MatCalendarBody,\n                        MatDatepicker,\n                        MatDatepickerContent,\n                        MatDatepickerInput,\n                        MatDatepickerToggle,\n                        MatDatepickerToggleIcon,\n                        MatMonthView,\n                        MatYearView,\n                        MatMultiYearView,\n                        MatCalendarHeader,\n                        MatDateRangeInput,\n                        MatStartDate,\n                        MatEndDate,\n                        MatDateRangePicker,\n                        MatDatepickerActions,\n                        MatDatepickerCancel,\n                        MatDatepickerApply,\n                    ],\n                    declarations: [\n                        MatCalendar,\n                        MatCalendarBody,\n                        MatDatepicker,\n                        MatDatepickerContent,\n                        MatDatepickerInput,\n                        MatDatepickerToggle,\n                        MatDatepickerToggleIcon,\n                        MatMonthView,\n                        MatYearView,\n                        MatMultiYearView,\n                        MatCalendarHeader,\n                        MatDateRangeInput,\n                        MatStartDate,\n                        MatEndDate,\n                        MatDateRangePicker,\n                        MatDatepickerActions,\n                        MatDatepickerCancel,\n                        MatDatepickerApply,\n                    ],\n                    providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerActions, MatDatepickerApply, MatDatepickerCancel, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow };\n","import * as i0 from '@angular/core';\nimport { SecurityContext, Injectable, Optional, Inject, SkipSelf, ErrorHandler, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nlet policy;\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy() {\n    if (policy === undefined) {\n        policy = null;\n        if (typeof window !== 'undefined') {\n            const ttWindow = window;\n            if (ttWindow.trustedTypes !== undefined) {\n                policy = ttWindow.trustedTypes.createPolicy('angular#components', {\n                    createHTML: (s) => s,\n                });\n            }\n        }\n    }\n    return policy;\n}\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will be interpreted as HTML by a browser, e.g. when assigning to\n * element.innerHTML.\n */\nfunction trustedHTMLFromString(html) {\n    return getPolicy()?.createHTML(html) || html;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /** Registered icon resolver functions. */\n        this._resolvers = [];\n        /**\n         * The CSS classes to apply when an `<mat-icon>` component has no icon name, url, or font\n         * specified. The default 'material-icons' value assumes that the material icon font has been\n         * loaded as described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = ['material-icons', 'mat-ligature-font'];\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n        this._resolvers.push(resolver);\n        return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Defines an alias for CSS class names to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * If the registered font is a ligature font, then don't forget to also include the special\n     * class `mat-ligature-font` to allow the usage via attribute. So register like this:\n     *\n     * ```ts\n     * iconRegistry.registerFontClassAlias('f1', 'font1 mat-ligature-font');\n     * ```\n     *\n     * And use like this:\n     *\n     * ```html\n     * <mat-icon fontSet=\"f1\" fontIcon=\"home\"></mat-icon>\n     * ```\n     *\n     * @param alias Alias for the font.\n     * @param classNames Class names override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, classNames = alias) {\n        this._fontCssClassesByAlias.set(alias, classNames);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS classes to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    setDefaultFontSetClass(...classNames) {\n        this._defaultFontSetClass = classNames;\n        return this;\n    }\n    /**\n     * Returns the CSS classes to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        const key = iconKey(namespace, name);\n        let config = this._svgIconConfigs.get(key);\n        // Return (copy of) cached icon if possible.\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // Otherwise try to resolve the config from one of the resolver functions.\n        config = this._getIconConfigFromResolvers(namespace, name);\n        if (config) {\n            this._svgIconConfigs.set(key, config);\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._resolvers = [];\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.toString().indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = options?.withCredentials ?? false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(map(svg => {\n            // Security: This SVG is fetched from a SafeResourceUrl, and is thus\n            // trusted HTML.\n            return trustedHTMLFromString(svg);\n        }), finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n        for (let i = 0; i < this._resolvers.length; i++) {\n            const result = this._resolvers[i](name, namespace);\n            if (result) {\n                return isSafeUrlWithOptions(result)\n                    ? new SvgIconConfig(result.url, null, result.options)\n                    : new SvgIconConfig(result, null);\n            }\n        }\n        return undefined;\n    }\n}\nMatIconRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatIconRegistry, deps: [{ token: i1.HttpClient, optional: true }, { token: i2.DomSanitizer }, { token: DOCUMENT, optional: true }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Injectable });\nMatIconRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatIconRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatIconRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ErrorHandler }]; } });\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nconst _MatIconBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/** Injection token to be used to override the default options for `mat-icon`. */\nconst MAT_ICON_DEFAULT_OPTIONS = new InjectionToken('MAT_ICON_DEFAULT_OPTIONS');\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY,\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => (_location ? _location.pathname + _location.search : ''),\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke',\n];\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the `fontIcon` attribute or the\n *   content of the `<mat-icon>` component. If you register a custom font class, don't forget to also\n *   include the special class `mat-ligature-font`. It is recommended to use the attribute alternative\n *   to prevent the ligature text to be selectable and to appear in search engine results.\n *   By default, the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon fontIcon=\"home\"></mat-icon>\n *     <mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\" fontIcon=\"sun\"></mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconBase {\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler, defaults) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        this._previousFontSetClass = [];\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this.defaultColor = defaults.color;\n            }\n            if (defaults.fontSet) {\n                this.fontSet = defaults.fontSet;\n            }\n        }\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() {\n        return this._svgIcon;\n    }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() {\n        return this._fontSet;\n    }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() {\n        return this._fontIcon;\n    }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1:\n                return ['', parts[0]]; // Use default namespace.\n            case 2:\n                return parts;\n            default:\n                throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                child.remove();\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClasses = (this.fontSet\n            ? this._iconRegistry.classNameForFontAlias(this.fontSet).split(/ +/)\n            : this._iconRegistry.getDefaultFontSetClass()).filter(className => className.length > 0);\n        this._previousFontSetClass.forEach(className => elem.classList.remove(className));\n        fontSetClasses.forEach(className => elem.classList.add(className));\n        this._previousFontSetClass = fontSetClasses;\n        if (this.fontIcon !== this._previousFontIconClass &&\n            !fontSetClasses.includes('mat-ligature-font')) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = (this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map());\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry\n                .getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n}\nMatIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatIcon, deps: [{ token: i0.ElementRef }, { token: MatIconRegistry }, { token: 'aria-hidden', attribute: true }, { token: MAT_ICON_LOCATION }, { token: i0.ErrorHandler }, { token: MAT_ICON_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatIcon.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatIcon, selector: \"mat-icon\", inputs: { color: \"color\", inline: \"inline\", svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, host: { attributes: { \"role\": \"img\" }, properties: { \"attr.data-mat-icon-type\": \"_usingFontIcon() ? \\\"font\\\" : \\\"svg\\\"\", \"attr.data-mat-icon-name\": \"_svgName || fontIcon\", \"attr.data-mat-icon-namespace\": \"_svgNamespace || fontSet\", \"attr.fontIcon\": \"_usingFontIcon() ? fontIcon : null\", \"class.mat-icon-inline\": \"inline\", \"class.mat-icon-no-color\": \"color !== \\\"primary\\\" && color !== \\\"accent\\\" && color !== \\\"warn\\\"\" }, classAttribute: \"mat-icon notranslate\" }, exportAs: [\"matIcon\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatIcon, decorators: [{\n            type: Component,\n            args: [{ template: '<ng-content></ng-content>', selector: 'mat-icon', exportAs: 'matIcon', inputs: ['color'], host: {\n                        'role': 'img',\n                        'class': 'mat-icon notranslate',\n                        '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                        '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                        '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                        '[attr.fontIcon]': '_usingFontIcon() ? fontIcon : null',\n                        '[class.mat-icon-inline]': 'inline',\n                        '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: MatIconRegistry }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['aria-hidden']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_ICON_LOCATION]\n                }] }, { type: i0.ErrorHandler }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_ICON_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { inline: [{\n                type: Input\n            }], svgIcon: [{\n                type: Input\n            }], fontSet: [{\n                type: Input\n            }], fontIcon: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatIconModule {\n}\nMatIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatIconModule, declarations: [MatIcon], imports: [MatCommonModule], exports: [MatIcon, MatCommonModule] });\nMatIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatIconModule, imports: [MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatIcon, MatCommonModule],\n                    declarations: [MatIcon],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_DEFAULT_OPTIONS, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n","import * as i8 from '@angular/cdk/overlay';\nimport { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i7 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, EventEmitter, Optional, Inject, Self, Attribute, Input, ViewChild, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/a11y';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport * as i4 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true })),\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0,\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)',\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)',\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The max height of the select's overlay panel. */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/** The panel's padding on the x-axis. */\nconst SELECT_PANEL_PADDING_X = 16;\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/** The height of the select items in `em` units. */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(class {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /**\n     * Form control bound to the component.\n     * Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n        /**\n         * Emits whenever the component state changes and should cause the parent\n         * form-field to update. Implemented as part of `MatFormFieldControl`.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n    }\n}))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatSelectTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSelectTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatSelectTrigger, selector: \"mat-select-trigger\", providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatSelectTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-select-trigger',\n                    providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }],\n                }]\n        }] });\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `aria-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = this._defaultOptions?.overlayPanelClass || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._multiple = false;\n        this._disableOptionCentering = this._defaultOptions?.disableOptionCentering ?? false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable.pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if (_defaultOptions?.typeaheadDebounceInterval != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() {\n        return this._disableOptionCentering;\n    }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n        return this._compareWith;\n    }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        const hasAssigned = this._assignValue(newValue);\n        if (hasAssigned) {\n            this._onChange(newValue);\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() {\n        return this._typeaheadDebounceInterval;\n    }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        const ngControl = this.ngControl;\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (ngControl) {\n            // The disabled state might go out of sync if the form group is swapped out. See #17860.\n            if (this._previousControl !== ngControl.control) {\n                if (this._previousControl !== undefined &&\n                    ngControl.disabled !== null &&\n                    ngControl.disabled !== this.disabled) {\n                    this.disabled = ngControl.disabled;\n                }\n                this._previousControl = ngControl.control;\n            }\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled'] || changes['userAriaDescribedBy']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this._assignValue(value);\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel?.selected || [] : this._selectionModel?.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW ||\n            keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW ||\n            keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((!manager.isTyping() && isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping &&\n            (keyCode === ENTER || keyCode === SPACE) &&\n            manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple &&\n                isArrowKey &&\n                event.shiftKey &&\n                manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl) {\n                this._value = this.ngControl.value;\n            }\n            this._setSelectionByValue(this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectOptionByValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectOptionByValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectOptionByValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Assigns a specific value to the select. Returns whether the value has changed. */\n    _assignValue(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n            return true;\n        }\n        return false;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected\n                    ? this._selectionModel.select(option)\n                    : this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator\n                    ? this.sortComparator(a, b, options)\n                    : options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        return !this._panelOpen && !this.disabled && this.options?.length > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = this._parentFormField?.getLabelId();\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = this._parentFormField?.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n}\n_MatSelectBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatSelectBase, deps: [{ token: i1.ViewportRuler }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i2.ErrorStateMatcher }, { token: i0.ElementRef }, { token: i3.Directionality, optional: true }, { token: i4.NgForm, optional: true }, { token: i4.FormGroupDirective, optional: true }, { token: MAT_FORM_FIELD, optional: true }, { token: i4.NgControl, optional: true, self: true }, { token: 'tabindex', attribute: true }, { token: MAT_SELECT_SCROLL_STRATEGY }, { token: i5.LiveAnnouncer }, { token: MAT_SELECT_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatSelectBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: _MatSelectBase, inputs: { userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], panelClass: \"panelClass\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", sortComparator: \"sortComparator\", id: \"id\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, viewQueries: [{ propertyName: \"trigger\", first: true, predicate: [\"trigger\"], descendants: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }, { propertyName: \"_overlayDir\", first: true, predicate: CdkConnectedOverlay, descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatSelectBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1.ViewportRuler }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i2.ErrorStateMatcher }, { type: i0.ElementRef }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i4.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i4.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i6.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }, { type: i4.NgControl, decorators: [{\n                    type: Self\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SELECT_SCROLL_STRATEGY]\n                }] }, { type: i5.LiveAnnouncer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SELECT_CONFIG]\n                }] }]; }, propDecorators: { userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], trigger: [{\n                type: ViewChild,\n                args: ['trigger']\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], _overlayDir: [{\n                type: ViewChild,\n                args: [CdkConnectedOverlay]\n            }], panelClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], disableOptionCentering: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], errorStateMatcher: [{\n                type: Input\n            }], typeaheadDebounceInterval: [{\n                type: Input\n            }], sortComparator: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], selectionChange: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }] } });\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    open() {\n        if (super._canOpen()) {\n            super.open();\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._calculateOverlayPosition();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize &&\n                    this._overlayDir.overlayRef &&\n                    this._overlayDir.overlayRef.overlayElement) {\n                    this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.panel.nativeElement.scrollTop = 0;\n        }\n        else {\n            this.panel.nativeElement.scrollTop = _getOptionScrollPosition((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n        }\n    }\n    _positioningSettled() {\n        this._calculateOverlayOffsetX();\n        this.panel.nativeElement.scrollTop = this._scrollTop;\n    }\n    _panelDoneAnimating(isOpen) {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n        }\n        else {\n            this._overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n        super._panelDoneAnimating(isOpen);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this._overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple\n            ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X\n            : SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else if (this.disableOptionCentering) {\n            offsetX = SELECT_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this._overlayDir.offsetX = Math.round(offsetX);\n        this._overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this.disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - ((this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight);\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset;\n        if (this.empty) {\n            selectedOptionOffset = 0;\n        }\n        else {\n            selectedOptionOffset = Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n        }\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n}\nMatSelect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatSelect, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSelect.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatSelect, selector: \"mat-select\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { attributes: { \"role\": \"combobox\", \"aria-autocomplete\": \"none\", \"aria-haspopup\": \"true\" }, listeners: { \"keydown\": \"_handleKeydown($event)\", \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\" }, properties: { \"attr.id\": \"id\", \"attr.tabindex\": \"tabIndex\", \"attr.aria-controls\": \"panelOpen ? id + \\\"-panel\\\" : null\", \"attr.aria-expanded\": \"panelOpen\", \"attr.aria-label\": \"ariaLabel || null\", \"attr.aria-required\": \"required.toString()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"attr.aria-activedescendant\": \"_getAriaActiveDescendant()\", \"class.mat-select-disabled\": \"disabled\", \"class.mat-select-invalid\": \"errorState\", \"class.mat-select-required\": \"required\", \"class.mat-select-empty\": \"empty\", \"class.mat-select-multiple\": \"multiple\" }, classAttribute: \"mat-select\" }, providers: [\n        { provide: MatFormFieldControl, useExisting: MatSelect },\n        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n    ], queries: [{ propertyName: \"customTrigger\", first: true, predicate: MAT_SELECT_TRIGGER, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }, { propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }], exportAs: [\"matSelect\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{height:16px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\"], dependencies: [{ kind: \"directive\", type: i7.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i7.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i7.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i7.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { kind: \"directive\", type: i8.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: i8.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }], animations: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-select', exportAs: 'matSelect', inputs: ['disabled', 'disableRipple', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'role': 'combobox',\n                        'aria-autocomplete': 'none',\n                        // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                        // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n                        // value. At some point we should try to switch it back to being `listbox`.\n                        'aria-haspopup': 'true',\n                        'class': 'mat-select',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                        '[attr.aria-expanded]': 'panelOpen',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        '[class.mat-select-disabled]': 'disabled',\n                        '[class.mat-select-invalid]': 'errorState',\n                        '[class.mat-select-required]': 'required',\n                        '[class.mat-select-empty]': 'empty',\n                        '[class.mat-select-multiple]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                    }, animations: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel], providers: [\n                        { provide: MatFormFieldControl, useExisting: MatSelect },\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n                    ], template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{height:16px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\"] }]\n        }], propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }], optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], customTrigger: [{\n                type: ContentChild,\n                args: [MAT_SELECT_TRIGGER]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatSelectModule, declarations: [MatSelect, MatSelectTrigger], imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule], exports: [CdkScrollableModule,\n        MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule,\n        MatCommonModule] });\nMatSelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatSelectModule, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule, CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatFormFieldModule,\n                        MatSelect,\n                        MatSelectTrigger,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatSelect, MatSelectTrigger],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, _MatSelectBase, matSelectAnimations };\n","import * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i4 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i7 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Input, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i6 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\nclass _MatTooltipBase {\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        this._viewportMargin = 8;\n        this._cssClassPrefix = 'mat';\n        this._showDelay = this._defaultOptions.showDelay;\n        this._hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        this._scrollStrategy = scrollStrategy;\n        this._document = _document;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n            }\n        });\n    }\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                this._tooltipInstance?.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n        if (this._tooltipInstance) {\n            this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n        }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay) {\n        if (this.disabled || !this.message || this._isTooltipVisible()) {\n            this._tooltipInstance?._cancelPendingAnimations();\n            return;\n        }\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        const instance = (this._tooltipInstance = overlayRef.attach(this._portal).instance);\n        instance._triggerElement = this._elementRef.nativeElement;\n        instance._mouseLeaveHideDelay = this._hideDelay;\n        instance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        const instance = this._tooltipInstance;\n        if (instance) {\n            if (instance.isVisible()) {\n                instance.hide(delay);\n            }\n            else {\n                instance._cancelPendingAnimations();\n                this._detach();\n            }\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._scrollStrategy(),\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        });\n        if (this._defaultOptions?.disableTooltipInteractivity) {\n            this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n        }\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset({ ...origin.main, ...overlay.main }),\n            this._addOffset({ ...origin.fallback, ...overlay.fallback }),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                () => {\n                    this._setupPointerExitEventsIfNeeded();\n                    this.show();\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                () => {\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    this._touchstartTimeout = setTimeout(() => this.show(), LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push([\n                'mouseleave',\n                event => {\n                    const newTarget = event.relatedTarget;\n                    if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n                        this.hide();\n                    }\n                },\n            ], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\n_MatTooltipBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatTooltipBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatTooltipBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: _MatTooltipBase, inputs: { position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatTooltipBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i2.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: i4.AriaDescriber }, { type: i4.FocusMonitor }, { type: undefined }, { type: i5.Directionality }, { type: undefined }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip extends _MatTooltipBase {\n    constructor(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document) {\n        super(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document);\n        this._tooltipComponent = TooltipComponent;\n    }\n}\nMatTooltip.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTooltip, deps: [{ token: i1.Overlay }, { token: i0.ElementRef }, { token: i2.ScrollDispatcher }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i3.Platform }, { token: i4.AriaDescriber }, { token: i4.FocusMonitor }, { token: MAT_TOOLTIP_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }, { token: MAT_TOOLTIP_DEFAULT_OPTIONS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatTooltip.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTooltip, selector: \"[matTooltip]\", host: { classAttribute: \"mat-tooltip-trigger\" }, exportAs: [\"matTooltip\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-tooltip-trigger',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i2.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: i4.AriaDescriber }, { type: i4.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n                }] }, { type: i5.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\nclass _TooltipComponentBase {\n    constructor(_changeDetectorRef, animationMode) {\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Whether the tooltip is currently visible. */\n        this._isVisible = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        clearTimeout(this._hideTimeoutId);\n        this._showTimeoutId = setTimeout(() => {\n            this._toggleVisibility(true);\n            this._showTimeoutId = undefined;\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        clearTimeout(this._showTimeoutId);\n        this._hideTimeoutId = setTimeout(() => {\n            this._toggleVisibility(false);\n            this._hideTimeoutId = undefined;\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._isVisible;\n    }\n    ngOnDestroy() {\n        this._cancelPendingAnimations();\n        this._onHide.complete();\n        this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({ relatedTarget }) {\n        if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n            if (this.isVisible()) {\n                this.hide(this._mouseLeaveHideDelay);\n            }\n            else {\n                this._finalizeAnimation(false);\n            }\n        }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() { }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({ animationName }) {\n        if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n            this._finalizeAnimation(animationName === this._showAnimation);\n        }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n        clearTimeout(this._showTimeoutId);\n        clearTimeout(this._hideTimeoutId);\n        this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n        if (toVisible) {\n            this._closeOnInteraction = true;\n        }\n        else if (!this.isVisible()) {\n            this._onHide.next();\n        }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n        // We set the classes directly here ourselves so that toggling the tooltip state\n        // isn't bound by change detection. This allows us to hide it even if the\n        // view ref has been detached from the CD tree.\n        const tooltip = this._tooltip.nativeElement;\n        const showClass = this._showAnimation;\n        const hideClass = this._hideAnimation;\n        tooltip.classList.remove(isVisible ? hideClass : showClass);\n        tooltip.classList.add(isVisible ? showClass : hideClass);\n        this._isVisible = isVisible;\n        // It's common for internal apps to disable animations using `* { animation: none !important }`\n        // which can break the opening sequence. Try to detect such cases and work around them.\n        if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n            const styles = getComputedStyle(tooltip);\n            // Use `getPropertyValue` to avoid issues with property renaming.\n            if (styles.getPropertyValue('animation-duration') === '0s' ||\n                styles.getPropertyValue('animation-name') === 'none') {\n                this._animationsDisabled = true;\n            }\n        }\n        if (isVisible) {\n            this._onShow();\n        }\n        if (this._animationsDisabled) {\n            tooltip.classList.add('_mat-animation-noopable');\n            this._finalizeAnimation(isVisible);\n        }\n    }\n}\n_TooltipComponentBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _TooltipComponentBase, deps: [{ token: i0.ChangeDetectorRef }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_TooltipComponentBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: _TooltipComponentBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _TooltipComponentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent extends _TooltipComponentBase {\n    constructor(changeDetectorRef, _breakpointObserver, animationMode) {\n        super(changeDetectorRef, animationMode);\n        this._breakpointObserver = _breakpointObserver;\n        /** Stream that emits whether the user has a handset-sized display.  */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n        this._showAnimation = 'mat-tooltip-show';\n        this._hideAnimation = 'mat-tooltip-hide';\n    }\n}\nTooltipComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: TooltipComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i6.BreakpointObserver }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nTooltipComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: TooltipComponent, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, listeners: { \"mouseleave\": \"_handleMouseLeave($event)\" }, properties: { \"style.zoom\": \"isVisible() ? 1 : null\" } }, viewQueries: [{ propertyName: \"_tooltip\", first: true, predicate: [\"tooltip\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<div #tooltip\\n     class=\\\"mat-tooltip\\\"\\n     (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\">{{message}}</div>\\n\", styles: [\".mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis;transform:scale(0)}.mat-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}.mat-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-tooltip-show{0%{opacity:0;transform:scale(0)}50%{opacity:.5;transform:scale(0.99)}100%{opacity:1;transform:scale(1)}}@keyframes mat-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(1)}}.mat-tooltip-show{animation:mat-tooltip-show 200ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-tooltip-hide{animation:mat-tooltip-hide 100ms cubic-bezier(0, 0, 0.2, 1) forwards}\"], dependencies: [{ kind: \"directive\", type: i7.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"pipe\", type: i7.AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                        '[style.zoom]': 'isVisible() ? 1 : null',\n                        '(mouseleave)': '_handleMouseLeave($event)',\n                        'aria-hidden': 'true',\n                    }, template: \"<div #tooltip\\n     class=\\\"mat-tooltip\\\"\\n     (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\">{{message}}</div>\\n\", styles: [\".mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis;transform:scale(0)}.mat-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}.mat-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-tooltip-show{0%{opacity:0;transform:scale(0)}50%{opacity:.5;transform:scale(0.99)}100%{opacity:1;transform:scale(1)}}@keyframes mat-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(1)}}.mat-tooltip-show{animation:mat-tooltip-show 200ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-tooltip-hide{animation:mat-tooltip-hide 100ms cubic-bezier(0, 0, 0.2, 1) forwards}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i6.BreakpointObserver }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _tooltip: [{\n                type: ViewChild,\n                args: ['tooltip', {\n                        // Use a static query here since we interact directly with\n                        // the DOM which can happen before `ngAfterViewInit`.\n                        static: true,\n                    }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTooltipModule, declarations: [MatTooltip, TooltipComponent], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] });\nMatTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    declarations: [MatTooltip, TooltipComponent],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 }),\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, _MatTooltipBase, _TooltipComponentBase, getMatTooltipInvalidPositionError, matTooltipAnimations };\n","import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport * as i6 from '@angular/material/core';\nimport { mixinDisabled, mixinInitialized, MatCommonModule } from '@angular/material/core';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i5 from '@angular/material/select';\nimport { MatSelectModule } from '@angular/material/select';\nimport * as i7 from '@angular/material/tooltip';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport * as i4 from '@angular/material/form-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n}\nMatPaginatorIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatPaginatorIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(class {\n}));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\nclass _MatPaginatorBase extends _MatPaginatorMixinBase {\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Used to configure the underlying `MatSelect` inside the paginator. */\n        this.selectConfig = {};\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() {\n        return this._hidePageSize;\n    }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() {\n        return this._showFirstLastButtons;\n    }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex + 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n}\n_MatPaginatorBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatPaginatorBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatPaginatorBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: _MatPaginatorBase, inputs: { color: \"color\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", selectConfig: \"selectConfig\" }, outputs: { page: \"page\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatPaginatorBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined }]; }, propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input\n            }], length: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input\n            }], showFirstLastButtons: [{\n                type: Input\n            }], selectConfig: [{\n                type: Input\n            }], page: [{\n                type: Output\n            }] } });\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        if (defaults && defaults.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n}\nMatPaginator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPaginator, deps: [{ token: MatPaginatorIntl }, { token: i0.ChangeDetectorRef }, { token: MAT_PAGINATOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatPaginator.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatPaginator, selector: \"mat-paginator\", inputs: { disabled: \"disabled\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-paginator\" }, exportAs: [\"matPaginator\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n          [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{display:inline-block;width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\"], dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { kind: \"component\", type: i4.MatFormField, selector: \"mat-form-field\", inputs: [\"color\", \"appearance\", \"hideRequiredMarker\", \"hintLabel\", \"floatLabel\"], exportAs: [\"matFormField\"] }, { kind: \"component\", type: i5.MatSelect, selector: \"mat-select\", inputs: [\"disabled\", \"disableRipple\", \"tabIndex\"], exportAs: [\"matSelect\"] }, { kind: \"component\", type: i6.MatOption, selector: \"mat-option\", exportAs: [\"matOption\"] }, { kind: \"directive\", type: i7.MatTooltip, selector: \"[matTooltip]\", exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', inputs: ['disabled'], host: {\n                        'class': 'mat-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n          [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{display:inline-block;width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\"] }]\n        }], ctorParameters: function () { return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatPaginatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPaginatorModule, declarations: [MatPaginator], imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule], exports: [MatPaginator] });\nMatPaginatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule],\n                    exports: [MatPaginator],\n                    declarations: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };\n","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport * as i2 from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nconst _MatProgressSpinnerBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerBase {\n    constructor(elementRef, _platform, _document, animationMode, defaults, \n    /**\n     * @deprecated `changeDetectorRef`, `viewportRuler` and `ngZone`\n     * parameters to become required.\n     * @breaking-change 14.0.0\n     */\n    changeDetectorRef, viewportRuler, ngZone) {\n        super(elementRef);\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Mode of the progress circle */\n        this.mode = 'determinate';\n        const trackedDiameters = MatProgressSpinner._diameters;\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        if (elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner') {\n            this.mode = 'indeterminate';\n        }\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this.defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n        // Safari has an issue where the circle isn't positioned correctly when the page has a\n        // different zoom level from the default. This handler triggers a recalculation of the\n        // `transform-origin` when the page zoom level changes.\n        // See `_getCircleTransformOrigin` for more info.\n        // @breaking-change 14.0.0 Remove null checks for `_changeDetectorRef`,\n        // `viewportRuler` and `ngZone`.\n        if (_platform.isBrowser && _platform.SAFARI && viewportRuler && changeDetectorRef && ngZone) {\n            this._resizeSubscription = viewportRuler.change(150).subscribe(() => {\n                // When the window is resize while the spinner is in `indeterminate` mode, we\n                // have to mark for check so the transform origin of the circle can be recomputed.\n                if (this.mode === 'indeterminate') {\n                    ngZone.run(() => changeDetectorRef.markForCheck());\n                }\n            });\n        }\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** Value of the progress circle. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    ngOnInit() {\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        element.classList.add('mat-progress-spinner-indeterminate-animation');\n    }\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _getCircleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _getViewBox() {\n        const viewBox = this._getCircleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _getStrokeCircumference() {\n        return 2 * Math.PI * this._getCircleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _getStrokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._getStrokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _getCircleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    /** Gets the `transform-origin` for the inner circle element. */\n    _getCircleTransformOrigin(svg) {\n        // Safari has an issue where the `transform-origin` doesn't work as expected when the page\n        // has a different zoom level from the default. The problem appears to be that a zoom\n        // is applied on the `svg` node itself. We can work around it by calculating the origin\n        // based on the zoom level. On all other browsers the `currentScale` appears to always be 1.\n        const scale = (svg.currentScale ?? 1) * 50;\n        return `${scale}% ${scale}%`;\n    }\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    _attachStyleNode() {\n        const styleRoot = this._styleRoot;\n        const currentDiameter = this._diameter;\n        const diameters = MatProgressSpinner._diameters;\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel);\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    _getAnimationText() {\n        const strokeCircumference = this._getStrokeCircumference();\n        return (INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`));\n    }\n    /** Returns the circle diameter formatted for use with the animation-name CSS property. */\n    _getSpinnerAnimationLabel() {\n        // The string of a float point number will include a period ‘.’ character,\n        // which is not valid for a CSS animation-name.\n        return this.diameter.toString().replace('.', '_');\n    }\n}\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\nMatProgressSpinner.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatProgressSpinner, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }, { token: i0.ChangeDetectorRef }, { token: i2.ViewportRuler }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatProgressSpinner.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatProgressSpinner, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", mode: \"mode\", value: \"value\" }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class._mat-animation-noopable\": \"_noopAnimations\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"attr.aria-valuemin\": \"mode === \\\"determinate\\\" ? 0 : null\", \"attr.aria-valuemax\": \"mode === \\\"determinate\\\" ? 100 : null\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-progress-spinner mat-spinner\" }, exportAs: [\"matProgressSpinner\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\"\\n  #svg>\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"\\n    [style.transform-origin]=\\\"_getCircleTransformOrigin(svg)\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"\\n    [style.transform-origin]=\\\"_getCircleTransformOrigin(svg)\\\"></circle>\\n</svg>\\n\", styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:rgba(0,0,0,0);transition:stroke-dashoffset 225ms linear}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}.mat-progress-spinner[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}.mat-progress-spinner._mat-animation-noopable svg,.mat-progress-spinner._mat-animation-noopable circle{animation:none;transition:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\"], dependencies: [{ kind: \"directive\", type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        // `mat-spinner` is here for backward compatibility.\n                        'class': 'mat-progress-spinner mat-spinner',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                        '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, inputs: ['color'], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\"\\n  #svg>\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"\\n    [style.transform-origin]=\\\"_getCircleTransformOrigin(svg)\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"\\n    [style.transform-origin]=\\\"_getCircleTransformOrigin(svg)\\\"></circle>\\n</svg>\\n\", styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:rgba(0,0,0,0);transition:stroke-dashoffset 225ms linear}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}.mat-progress-spinner[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}.mat-progress-spinner._mat-animation-noopable svg,.mat-progress-spinner._mat-animation-noopable circle{animation:none;transition:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i2.ViewportRuler }, { type: i0.NgZone }]; }, propDecorators: { diameter: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatProgressSpinnerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatProgressSpinnerModule, declarations: [MatProgressSpinner], imports: [MatCommonModule, CommonModule], exports: [MatProgressSpinner, MatCommonModule] });\nMatProgressSpinnerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [MatCommonModule, CommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CommonModule],\n                    exports: [MatProgressSpinner, MatCommonModule],\n                    declarations: [MatProgressSpinner],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Import `MatProgressSpinner` instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 8.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","import * as i1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport * as i2 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, Input, ContentChild, Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, EventEmitter, NgZone, Attribute, SkipSelf, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() {\n            return this._sticky;\n        }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkCellDef, selector: \"[cdkCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkHeaderCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkFooterCellDef, selector: \"[cdkFooterCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkFooterCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkColumnDef, deps: [{ token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }], queries: [{ propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true }, { propertyName: \"footerCell\", first: true, predicate: CdkFooterCellDef, descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['cdkColumnDef']\n            }], stickyEnd: [{\n                type: Input,\n                args: ['stickyEnd']\n            }], cell: [{\n                type: ContentChild,\n                args: [CdkCellDef]\n            }], headerCell: [{\n                type: ContentChild,\n                args: [CdkHeaderCellDef]\n            }], footerCell: [{\n                type: ContentChild,\n                args: [CdkFooterCellDef]\n            }] } });\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"cdk-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-header-cell, th[cdk-header-cell]',\n                    host: {\n                        'class': 'cdk-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        if (columnDef._table?._elementRef.nativeElement.nodeType === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkFooterCell, selector: \"cdk-footer-cell, td[cdk-footer-cell]\", host: { classAttribute: \"cdk-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                    host: {\n                        'class': 'cdk-footer-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        if (columnDef._table?._elementRef.nativeElement.nodeType === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\", host: { classAttribute: \"cdk-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-cell, td[cdk-cell]',\n                    host: {\n                        'class': 'cdk-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable\n            ? from(Promise.resolve(undefined))\n            : this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _CoalescedStyleScheduler, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\n_CoalescedStyleScheduler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _CoalescedStyleScheduler });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _CoalescedStyleScheduler, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: BaseRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive });\nBaseRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: BaseRowDef, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: BaseRowDef, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }]; } });\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkHeaderRowDef, selector: \"[cdkHeaderRowDef]\", inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderRowDef]',\n                    inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkFooterRowDef, selector: \"[cdkFooterRowDef]\", inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterRowDef]',\n                    inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkRowDef, selector: \"[cdkRowDef]\", inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkRowDef]',\n                    inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCellOutlet, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCellOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; } });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkHeaderRow, selector: \"cdk-header-row, tr[cdk-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-header-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-header-row, tr[cdk-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkFooterRow, selector: \"cdk-footer-row, tr[cdk-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-footer-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkRow, selector: \"cdk-row, tr[cdk-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-row, tr[cdk-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._contentClassName = 'cdk-no-data-row';\n    }\n}\nCdkNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkNoDataRow, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkNoDataRow, selector: \"ng-template[cdkNoDataRow]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkNoDataRow]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length ||\n            !this._isBrowser ||\n            !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1\n                        ? []\n                        : cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => (stickyStartStates[index] ? width : null)),\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1\n                        ? []\n                        : cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => (stickyEndStates[index + firstStickyEnd] ? width : null))\n                            .reverse(),\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            stickyOffsets[rowIndex] = stickyOffset;\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable\n                ? Array.from(row.children)\n                : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                this._positionListener?.stickyHeaderRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n            else {\n                this._positionListener?.stickyFooterRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an nonexistent column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n}\nCdkRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkRecycleRows, selector: \"cdk-table[recycleRows], table[cdk-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: DataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: DataRowOutlet, selector: \"[rowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: DataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[rowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: HeaderRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nHeaderRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: HeaderRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[headerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: FooterRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nFooterRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: FooterRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[footerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: NoDataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNoDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: NoDataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[noDataRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener, \n    /**\n     * @deprecated `_ngZone` parameter to become required.\n     * @breaking-change 14.0.0\n     */\n    _ngZone) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        this._ngZone = _ngZone;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overridden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add position: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        /**\n         * Emits when the table completes rendering a set of data rows based on the latest data from the\n         * data source, even if the set of rows is empty.\n         */\n        this.contentChanged = new EventEmitter();\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'table');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length &&\n            !this._footerRowDefs.length &&\n            !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        [\n            this._rowOutlet.viewContainer,\n            this._headerRowOutlet.viewContainer,\n            this._footerRowOutlet.viewContainer,\n            this._cachedRenderRowsMap,\n            this._customColumnDefs,\n            this._customRowDefs,\n            this._customHeaderRowDefs,\n            this._customFooterRowDefs,\n            this._columnDefsByName,\n        ].forEach(def => {\n            def.clear();\n        });\n        this._headerRowDefs = [];\n        this._footerRowDefs = [];\n        this._defaultRowDef = null;\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            this.contentChanged.next();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, (change) => {\n            if (change.operation === 1 /* _ViewRepeaterOperation.INSERTED */ && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        // Allow the new row data to render before measuring it.\n        // @breaking-change 14.0.0 Remove undefined check once _ngZone is required.\n        if (this._ngZone && NgZone.isInAngularZone()) {\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._onDestroy)).subscribe(() => {\n                this.updateStickyColumnStyles();\n            });\n        }\n        else {\n            this.updateStickyColumnStyles();\n        }\n        this.contentChanged.next();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout) || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows &&\n            defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (!noDataRow) {\n            return;\n        }\n        const shouldShow = this._rowOutlet.viewContainer.length === 0;\n        if (shouldShow === this._isShowingNoDataRow) {\n            return;\n        }\n        const container = this._noDataRowOutlet.viewContainer;\n        if (shouldShow) {\n            const view = container.createEmbeddedView(noDataRow.templateRef);\n            const rootNode = view.rootNodes[0];\n            // Only add the attributes if we have a single root node since it's hard\n            // to figure out which one to add it to when there are multiple.\n            if (view.rootNodes.length === 1 && rootNode?.nodeType === this._document.ELEMENT_NODE) {\n                rootNode.setAttribute('role', 'row');\n                rootNode.classList.add(noDataRow._contentClassName);\n            }\n        }\n        else {\n            container.clear();\n        }\n        this._isShowingNoDataRow = shouldShow;\n    }\n}\nCdkTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTable, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: 'role', attribute: true }, { token: i1.Directionality, optional: true }, { token: DOCUMENT }, { token: i2.Platform }, { token: _VIEW_REPEATER_STRATEGY }, { token: _COALESCED_STYLE_SCHEDULER }, { token: i3.ViewportRuler }, { token: STICKY_POSITIONING_LISTENER, optional: true, skipSelf: true }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTable, selector: \"cdk-table, table[cdk-table]\", inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, outputs: { contentChanged: \"contentChanged\" }, host: { properties: { \"class.cdk-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"cdk-table\" }, providers: [\n        { provide: CDK_TABLE, useExisting: CdkTable },\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], queries: [{ propertyName: \"_noDataRow\", first: true, predicate: CdkNoDataRow, descendants: true }, { propertyName: \"_contentColumnDefs\", predicate: CdkColumnDef, descendants: true }, { propertyName: \"_contentRowDefs\", predicate: CdkRowDef, descendants: true }, { propertyName: \"_contentHeaderRowDefs\", predicate: CdkHeaderRowDef, descendants: true }, { propertyName: \"_contentFooterRowDefs\", predicate: CdkFooterRowDef, descendants: true }], viewQueries: [{ propertyName: \"_rowOutlet\", first: true, predicate: DataRowOutlet, descendants: true, static: true }, { propertyName: \"_headerRowOutlet\", first: true, predicate: HeaderRowOutlet, descendants: true, static: true }, { propertyName: \"_footerRowOutlet\", first: true, predicate: FooterRowOutlet, descendants: true, static: true }, { propertyName: \"_noDataRowOutlet\", first: true, predicate: NoDataRowOutlet, descendants: true, static: true }], exportAs: [\"cdkTable\"], ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"], dependencies: [{ kind: \"directive\", type: DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }, { kind: \"directive\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'cdk-table',\n                        '[class.cdk-table-fixed-layout]': 'fixedLayout',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                        { provide: CDK_TABLE, useExisting: CdkTable },\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i2.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_VIEW_REPEATER_STRATEGY]\n                }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                    type: Inject,\n                    args: [_COALESCED_STYLE_SCHEDULER]\n                }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [STICKY_POSITIONING_LISTENER]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { trackBy: [{\n                type: Input\n            }], dataSource: [{\n                type: Input\n            }], multiTemplateDataRows: [{\n                type: Input\n            }], fixedLayout: [{\n                type: Input\n            }], contentChanged: [{\n                type: Output\n            }], _rowOutlet: [{\n                type: ViewChild,\n                args: [DataRowOutlet, { static: true }]\n            }], _headerRowOutlet: [{\n                type: ViewChild,\n                args: [HeaderRowOutlet, { static: true }]\n            }], _footerRowOutlet: [{\n                type: ViewChild,\n                args: [FooterRowOutlet, { static: true }]\n            }], _noDataRowOutlet: [{\n                type: ViewChild,\n                args: [NoDataRowOutlet, { static: true }]\n            }], _contentColumnDefs: [{\n                type: ContentChildren,\n                args: [CdkColumnDef, { descendants: true }]\n            }], _contentRowDefs: [{\n                type: ContentChildren,\n                args: [CdkRowDef, { descendants: true }]\n            }], _contentHeaderRowDefs: [{\n                type: ContentChildren,\n                args: [CdkHeaderRowDef, {\n                        descendants: true,\n                    }]\n            }], _contentFooterRowDefs: [{\n                type: ContentChildren,\n                args: [CdkFooterRowDef, {\n                        descendants: true,\n                    }]\n            }], _noDataRow: [{\n                type: ContentChild,\n                args: [CdkNoDataRow]\n            }] } });\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTextColumn, deps: [{ token: CdkTable, optional: true }, { token: TEXT_COLUMN_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTextColumn, selector: \"cdk-text-column\", inputs: { name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\", justify: \"justify\" }, viewQueries: [{ propertyName: \"columnDef\", first: true, predicate: CdkColumnDef, descendants: true, static: true }, { propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true, static: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true, static: true }], ngImport: i0, template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellDef, selector: \"[cdkCellDef]\" }, { kind: \"directive\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\" }, { kind: \"directive\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: [\"sticky\", \"cdkColumnDef\", \"stickyEnd\"] }, { kind: \"directive\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\" }, { kind: \"directive\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-text-column',\n                    template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }], ctorParameters: function () { return [{ type: CdkTable, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TEXT_COLUMN_OPTIONS]\n                }] }]; }, propDecorators: { name: [{\n                type: Input\n            }], headerText: [{\n                type: Input\n            }], dataAccessor: [{\n                type: Input\n            }], justify: [{\n                type: Input\n            }], columnDef: [{\n                type: ViewChild,\n                args: [CdkColumnDef, { static: true }]\n            }], cell: [{\n                type: ViewChild,\n                args: [CdkCellDef, { static: true }]\n            }], headerCell: [{\n                type: ViewChild,\n                args: [CdkHeaderCellDef, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTableModule, declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet], imports: [ScrollingModule], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet] });\nCdkTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTableModule, imports: [ScrollingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                    imports: [ScrollingModule],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/table';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, CDK_TABLE_TEMPLATE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass MatRecycleRows {\n}\nMatRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatRecycleRows, selector: \"mat-table[recycleRows], table[mat-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n}\nMatTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTable, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTable, selector: \"mat-table, table[mat-table]\", host: { properties: { \"class.mat-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"mat-table\" }, providers: [\n        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n        //  is only included in the build if used.\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: CdkTable, useExisting: MatTable },\n        { provide: CDK_TABLE, useExisting: MatTable },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], exportAs: [\"matTable\"], usesInheritance: true, ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\"], dependencies: [{ kind: \"directive\", type: i1.DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: i1.HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: i1.FooterRowOutlet, selector: \"[footerRowOutlet]\" }, { kind: \"directive\", type: i1.NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-table, table[mat-table]', exportAs: 'matTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'mat-table',\n                        '[class.mat-table-fixed-layout]': 'fixedLayout',\n                    }, providers: [\n                        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                        //  is only included in the build if used.\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: CdkTable, useExisting: MatTable },\n                        { provide: CDK_TABLE, useExisting: MatTable },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatCellDef, selector: \"[matCellDef]\", providers: [{ provide: CdkCellDef, useExisting: MatCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matCellDef]',\n                    providers: [{ provide: CdkCellDef, useExisting: MatCellDef }],\n                }]\n        }] });\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\", providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderCellDef]',\n                    providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }],\n                }]\n        }] });\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatFooterCellDef, selector: \"[matFooterCellDef]\", providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterCellDef]',\n                    providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }],\n                }]\n        }] });\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n}\nMatColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatColumnDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, providers: [\n        { provide: CdkColumnDef, useExisting: MatColumnDef },\n        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [\n                        { provide: CdkColumnDef, useExisting: MatColumnDef },\n                        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n                    ],\n                }]\n        }], propDecorators: { name: [{\n                type: Input,\n                args: ['matColumnDef']\n            }] } });\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n}\nMatHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"mat-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-header-cell, th[mat-header-cell]',\n                    host: {\n                        'class': 'mat-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }] });\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n}\nMatFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatFooterCell, selector: \"mat-footer-cell, td[mat-footer-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-footer-cell, td[mat-footer-cell]',\n                    host: {\n                        'class': 'mat-footer-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n}\nMatCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatCell, selector: \"mat-cell, td[mat-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-cell, td[mat-cell]',\n                    host: {\n                        'class': 'mat-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatHeaderRowDef, selector: \"[matHeaderRowDef]\", inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderRowDef]',\n                    providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                    inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n                }]\n        }] });\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatFooterRowDef, selector: \"[matFooterRowDef]\", inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterRowDef]',\n                    providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                    inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n                }]\n        }] });\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatRowDef, selector: \"[matRowDef]\", inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, providers: [{ provide: CdkRowDef, useExisting: MatRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matRowDef]',\n                    providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                    inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n                }]\n        }] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatHeaderRow, selector: \"mat-header-row, tr[mat-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-header-row\" }, providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }], exportAs: [\"matHeaderRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-header-row, tr[mat-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matHeaderRow',\n                    providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }],\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatFooterRow, selector: \"mat-footer-row, tr[mat-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-footer-row\" }, providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }], exportAs: [\"matFooterRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-footer-row, tr[mat-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matFooterRow',\n                    providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }],\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatRow, selector: \"mat-row, tr[mat-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-row\" }, providers: [{ provide: CdkRow, useExisting: MatRow }], exportAs: [\"matRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-row, tr[mat-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRow',\n                    providers: [{ provide: CdkRow, useExisting: MatRow }],\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n    constructor() {\n        super(...arguments);\n        this._contentClassName = 'mat-no-data-row';\n    }\n}\nMatNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatNoDataRow, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatNoDataRow, selector: \"ng-template[matNoDataRow]\", providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matNoDataRow]',\n                    providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTextColumn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTextColumn, selector: \"mat-text-column\", usesInheritance: true, ngImport: i0, template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\" }, { kind: \"directive\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: [\"sticky\", \"matColumnDef\"] }, { kind: \"directive\", type: MatCellDef, selector: \"[matCellDef]\" }, { kind: \"directive\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\" }, { kind: \"directive\", type: MatCell, selector: \"mat-cell, td[mat-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-text-column',\n                    template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    MatRecycleRows,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTableModule, declarations: [\n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn], imports: [CdkTableModule, MatCommonModule], exports: [MatCommonModule, \n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn] });\nMatTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTableModule, imports: [CdkTableModule, MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkTableModule, MatCommonModule],\n                    exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                    declarations: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/** Shared base class with MDC-based implementation. */\nclass _MatTableDataSource extends DataSource {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data)\n                .reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '')\n                .toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() {\n        return this._data.value;\n    }\n    set data(data) {\n        data = Array.isArray(data) ? data : [];\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() {\n        return this._filter.value;\n    }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() {\n        return this._sort;\n    }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() {\n        return this._paginator;\n    }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort\n            ? merge(this._sort.sortChange, this._sort.initialized)\n            : of(null);\n        const pageChange = this._paginator\n            ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized)\n            : of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription?.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            this.filter == null || this.filter === ''\n                ? data\n                : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        this._renderChangesSubscription?.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends _MatTableDataSource {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn, _MatTableDataSource };\n","import { SelectionModel, isDataSource } from '@angular/cdk/collections';\nimport { isObservable, Subject, BehaviorSubject, of } from 'rxjs';\nimport { take, filter, takeUntil } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base tree control. It has basic toggle/expand/collapse operations on a single data node. */\nclass BaseTreeControl {\n    constructor() {\n        /** A selection model with multi-selection to track expansion status. */\n        this.expansionModel = new SelectionModel(true);\n    }\n    /** Toggles one single data node's expanded/collapsed state. */\n    toggle(dataNode) {\n        this.expansionModel.toggle(this._trackByValue(dataNode));\n    }\n    /** Expands one single data node. */\n    expand(dataNode) {\n        this.expansionModel.select(this._trackByValue(dataNode));\n    }\n    /** Collapses one single data node. */\n    collapse(dataNode) {\n        this.expansionModel.deselect(this._trackByValue(dataNode));\n    }\n    /** Whether a given data node is expanded or not. Returns true if the data node is expanded. */\n    isExpanded(dataNode) {\n        return this.expansionModel.isSelected(this._trackByValue(dataNode));\n    }\n    /** Toggles a subtree rooted at `node` recursively. */\n    toggleDescendants(dataNode) {\n        this.expansionModel.isSelected(this._trackByValue(dataNode))\n            ? this.collapseDescendants(dataNode)\n            : this.expandDescendants(dataNode);\n    }\n    /** Collapse all dataNodes in the tree. */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    /** Expands a subtree rooted at given data node recursively. */\n    expandDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    /** Collapses a subtree rooted at given data node recursively. */\n    collapseDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    _trackByValue(value) {\n        return this.trackBy ? this.trackBy(value) : value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\nclass FlatTreeControl extends BaseTreeControl {\n    /** Construct with flat tree data node functions getLevel and isExpandable. */\n    constructor(getLevel, isExpandable, options) {\n        super();\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     */\n    getDescendants(dataNode) {\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        const results = [];\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n            results.push(this.dataNodes[i]);\n        }\n        return results;\n    }\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.select(...this.dataNodes.map(node => this._trackByValue(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type. */\nclass NestedTreeControl extends BaseTreeControl {\n    /** Construct with nested tree function getChildren. */\n    constructor(getChildren, options) {\n        super();\n        this.getChildren = getChildren;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.clear();\n        const allNodes = this.dataNodes.reduce((accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode], []);\n        this.expansionModel.select(...allNodes.map(node => this._trackByValue(node)));\n    }\n    /** Gets a list of descendant dataNodes of a subtree rooted at given data node recursively. */\n    getDescendants(dataNode) {\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n        // Remove the node itself\n        return descendants.splice(1);\n    }\n    /** A helper function to get descendants recursively. */\n    _getDescendants(descendants, dataNode) {\n        descendants.push(dataNode);\n        const childrenNodes = this.getChildren(dataNode);\n        if (Array.isArray(childrenNodes)) {\n            childrenNodes.forEach((child) => this._getDescendants(descendants, child));\n        }\n        else if (isObservable(childrenNodes)) {\n            // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n            // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n            childrenNodes.pipe(take(1), filter(Boolean)).subscribe(children => {\n                for (const child of children) {\n                    this._getDescendants(descendants, child);\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nCdkTreeNodeOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodeOutlet, deps: [{ token: i0.ViewContainerRef }, { token: CDK_TREE_NODE_OUTLET_NODE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTreeNodeOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTreeNodeOutlet, selector: \"[cdkTreeNodeOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodeOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeOutlet]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TREE_NODE_OUTLET_NODE]\n                }, {\n                    type: Optional\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Context provided to the tree node component. */\nclass CdkTreeNodeOutletContext {\n    constructor(data) {\n        this.$implicit = data;\n    }\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass CdkTreeNodeDef {\n    /** @docs-private */\n    constructor(template) {\n        this.template = template;\n    }\n}\nCdkTreeNodeDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodeDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTreeNodeDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTreeNodeDef, selector: \"[cdkTreeNodeDef]\", inputs: { when: [\"cdkTreeNodeDefWhen\", \"when\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodeDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeDef]',\n                    inputs: ['when: cdkTreeNodeDefWhen'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when there is no usable data.\n * @docs-private\n */\nfunction getTreeNoValidDataSourceError() {\n    return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * @docs-private\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * @docs-private\n */\nfunction getTreeMissingMatchingNodeDefError() {\n    return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there are tree control.\n * @docs-private\n */\nfunction getTreeControlMissingError() {\n    return Error(`Could not find a tree control for the tree.`);\n}\n/**\n * Returns an error to be thrown when tree control did not implement functions for flat/nested node.\n * @docs-private\n */\nfunction getTreeControlFunctionsMissingError() {\n    return Error(`Could not find functions for nested/flat tree in tree control.`);\n}\n\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n */\nclass CdkTree {\n    constructor(_differs, _changeDetectorRef) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /** Level of nodes */\n        this._levels = new Map();\n        // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n        //     Remove the MAX_VALUE in viewChange\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n    }\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a data array to render.\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    ngOnInit() {\n        this._dataDiffer = this._differs.find([]).create(this.trackBy);\n        if (!this.treeControl && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlMissingError();\n        }\n    }\n    ngOnDestroy() {\n        this._nodeOutlet.viewContainer.clear();\n        this.viewChange.complete();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n    }\n    ngAfterContentChecked() {\n        const defaultNodeDefs = this._nodeDefs.filter(def => !def.when);\n        if (defaultNodeDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this._defaultNodeDef = defaultNodeDefs[0];\n        if (this.dataSource && this._nodeDefs && !this._dataSubscription) {\n            this._observeRenderChanges();\n        }\n    }\n    // TODO(tinayuangao): Work on keyboard traversal and actions, make sure it's working for RTL\n    //     and nested trees.\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) {\n            this._nodeOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n        if (this._nodeDefs) {\n            this._observeRenderChanges();\n        }\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        let dataStream;\n        if (isDataSource(this._dataSource)) {\n            dataStream = this._dataSource.connect(this);\n        }\n        else if (isObservable(this._dataSource)) {\n            dataStream = this._dataSource;\n        }\n        else if (Array.isArray(this._dataSource)) {\n            dataStream = of(this._dataSource);\n        }\n        if (dataStream) {\n            this._dataSubscription = dataStream\n                .pipe(takeUntil(this._onDestroy))\n                .subscribe(data => this.renderNodeChanges(data));\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTreeNoValidDataSourceError();\n        }\n    }\n    /** Check for changes made in the data and render each change (node added/removed/moved). */\n    renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n        const changes = dataDiffer.diff(data);\n        if (!changes) {\n            return;\n        }\n        changes.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[currentIndex], currentIndex, viewContainer, parentData);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove(adjustedPreviousIndex);\n                this._levels.delete(item.item);\n            }\n            else {\n                const view = viewContainer.get(adjustedPreviousIndex);\n                viewContainer.move(view, currentIndex);\n            }\n        });\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     */\n    _getNodeDef(data, i) {\n        if (this._nodeDefs.length === 1) {\n            return this._nodeDefs.first;\n        }\n        const nodeDef = this._nodeDefs.find(def => def.when && def.when(i, data)) || this._defaultNodeDef;\n        if (!nodeDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMissingMatchingNodeDefError();\n        }\n        return nodeDef;\n    }\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     */\n    insertNode(nodeData, index, viewContainer, parentData) {\n        const node = this._getNodeDef(nodeData, index);\n        // Node context that will be provided to created embedded view\n        const context = new CdkTreeNodeOutletContext(nodeData);\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (this.treeControl.getLevel) {\n            context.level = this.treeControl.getLevel(nodeData);\n        }\n        else if (typeof parentData !== 'undefined' && this._levels.has(parentData)) {\n            context.level = this._levels.get(parentData) + 1;\n        }\n        else {\n            context.level = 0;\n        }\n        this._levels.set(nodeData, context.level);\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n}\nCdkTree.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTree, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nCdkTree.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTree, selector: \"cdk-tree\", inputs: { dataSource: \"dataSource\", treeControl: \"treeControl\", trackBy: \"trackBy\" }, host: { attributes: { \"role\": \"tree\" }, classAttribute: \"cdk-tree\" }, queries: [{ propertyName: \"_nodeDefs\", predicate: CdkTreeNodeDef, descendants: true }], viewQueries: [{ propertyName: \"_nodeOutlet\", first: true, predicate: CdkTreeNodeOutlet, descendants: true, static: true }], exportAs: [\"cdkTree\"], ngImport: i0, template: `<ng-container cdkTreeNodeOutlet></ng-container>`, isInline: true, dependencies: [{ kind: \"directive\", type: CdkTreeNodeOutlet, selector: \"[cdkTreeNodeOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTree, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-tree',\n                    exportAs: 'cdkTree',\n                    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n                    host: {\n                        'class': 'cdk-tree',\n                        'role': 'tree',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n                    // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n                    // declared elsewhere, they are checked when their declaration points are checked.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { dataSource: [{\n                type: Input\n            }], treeControl: [{\n                type: Input\n            }], trackBy: [{\n                type: Input\n            }], _nodeOutlet: [{\n                type: ViewChild,\n                args: [CdkTreeNodeOutlet, { static: true }]\n            }], _nodeDefs: [{\n                type: ContentChildren,\n                args: [CdkTreeNodeDef, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n */\nclass CdkTreeNode {\n    constructor(_elementRef, _tree) {\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Emits when the node's data has changed. */\n        this._dataChanges = new Subject();\n        CdkTreeNode.mostRecentTreeNode = this;\n        this.role = 'treeitem';\n    }\n    /**\n     * The role of the tree node.\n     * @deprecated The correct role is 'treeitem', 'group' should not be used. This input will be\n     *   removed in a future version.\n     * @breaking-change 12.0.0 Remove this input\n     */\n    get role() {\n        return 'treeitem';\n    }\n    set role(_role) {\n        // TODO: move to host after View Engine deprecation\n        this._elementRef.nativeElement.setAttribute('role', _role);\n    }\n    /** The tree node's data. */\n    get data() {\n        return this._data;\n    }\n    set data(value) {\n        if (value !== this._data) {\n            this._data = value;\n            this._setRoleFromData();\n            this._dataChanges.next();\n        }\n    }\n    get isExpanded() {\n        return this._tree.treeControl.isExpanded(this._data);\n    }\n    get level() {\n        // If the treeControl has a getLevel method, use it to get the level. Otherwise read the\n        // aria-level off the parent node and use it as the level for this node (note aria-level is\n        // 1-indexed, while this property is 0-indexed, so we don't need to increment).\n        return this._tree.treeControl.getLevel\n            ? this._tree.treeControl.getLevel(this._data)\n            : this._parentNodeAriaLevel;\n    }\n    ngOnInit() {\n        this._parentNodeAriaLevel = getParentNodeAriaLevel(this._elementRef.nativeElement);\n        this._elementRef.nativeElement.setAttribute('aria-level', `${this.level + 1}`);\n    }\n    ngOnDestroy() {\n        // If this is the last tree node being destroyed,\n        // clear out the reference to avoid leaking memory.\n        if (CdkTreeNode.mostRecentTreeNode === this) {\n            CdkTreeNode.mostRecentTreeNode = null;\n        }\n        this._dataChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Focuses the menu item. Implements for FocusableOption. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    // TODO: role should eventually just be set in the component host\n    _setRoleFromData() {\n        if (!this._tree.treeControl.isExpandable &&\n            !this._tree.treeControl.getChildren &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        this.role = 'treeitem';\n    }\n}\n/**\n * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n * in `CdkTree` and set the data to it.\n */\nCdkTreeNode.mostRecentTreeNode = null;\nCdkTreeNode.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNode, deps: [{ token: i0.ElementRef }, { token: CdkTree }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTreeNode.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTreeNode, selector: \"cdk-tree-node\", inputs: { role: \"role\" }, host: { properties: { \"attr.aria-expanded\": \"isExpanded\" }, classAttribute: \"cdk-tree-node\" }, exportAs: [\"cdkTreeNode\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-tree-node',\n                    exportAs: 'cdkTreeNode',\n                    host: {\n                        'class': 'cdk-tree-node',\n                        '[attr.aria-expanded]': 'isExpanded',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: CdkTree }]; }, propDecorators: { role: [{\n                type: Input\n            }] } });\nfunction getParentNodeAriaLevel(nodeElement) {\n    let parent = nodeElement.parentElement;\n    while (parent && !isNodeElement(parent)) {\n        parent = parent.parentElement;\n    }\n    if (!parent) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw Error('Incorrect tree structure containing detached node.');\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (parent.classList.contains('cdk-nested-tree-node')) {\n        return coerceNumberProperty(parent.getAttribute('aria-level'));\n    }\n    else {\n        // The ancestor element is the cdk-tree itself\n        return 0;\n    }\n}\nfunction isNodeElement(element) {\n    const classList = element.classList;\n    return !!(classList?.contains('cdk-nested-tree-node') || classList?.contains('cdk-tree'));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n    constructor(elementRef, tree, _differs) {\n        super(elementRef, tree);\n        this._differs = _differs;\n    }\n    ngAfterContentInit() {\n        this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n        if (!this._tree.treeControl.getChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        const childrenNodes = this._tree.treeControl.getChildren(this.data);\n        if (Array.isArray(childrenNodes)) {\n            this.updateChildrenNodes(childrenNodes);\n        }\n        else if (isObservable(childrenNodes)) {\n            childrenNodes\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(result => this.updateChildrenNodes(result));\n        }\n        this.nodeOutlet.changes\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateChildrenNodes());\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngOnDestroy() {\n        this._clear();\n        super.ngOnDestroy();\n    }\n    /** Add children dataNodes to the NodeOutlet */\n    updateChildrenNodes(children) {\n        const outlet = this._getNodeOutlet();\n        if (children) {\n            this._children = children;\n        }\n        if (outlet && this._children) {\n            const viewContainer = outlet.viewContainer;\n            this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n        }\n        else {\n            // Reset the data differ if there's no children nodes displayed\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Clear the children dataNodes. */\n    _clear() {\n        const outlet = this._getNodeOutlet();\n        if (outlet) {\n            outlet.viewContainer.clear();\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Gets the outlet for the current node. */\n    _getNodeOutlet() {\n        const outlets = this.nodeOutlet;\n        // Note that since we use `descendants: true` on the query, we have to ensure\n        // that we don't pick up the outlet of a child node by accident.\n        return outlets && outlets.find(outlet => !outlet._node || outlet._node === this);\n    }\n}\nCdkNestedTreeNode.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkNestedTreeNode, deps: [{ token: i0.ElementRef }, { token: CdkTree }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive });\nCdkNestedTreeNode.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkNestedTreeNode, selector: \"cdk-nested-tree-node\", inputs: { role: \"role\", disabled: \"disabled\", tabIndex: \"tabIndex\" }, host: { classAttribute: \"cdk-nested-tree-node\" }, providers: [\n        { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n        { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode },\n    ], queries: [{ propertyName: \"nodeOutlet\", predicate: CdkTreeNodeOutlet, descendants: true }], exportAs: [\"cdkNestedTreeNode\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkNestedTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-nested-tree-node',\n                    exportAs: 'cdkNestedTreeNode',\n                    inputs: ['role', 'disabled', 'tabIndex'],\n                    providers: [\n                        { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n                        { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode },\n                    ],\n                    host: {\n                        'class': 'cdk-nested-tree-node',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: CdkTree }, { type: i0.IterableDiffers }]; }, propDecorators: { nodeOutlet: [{\n                type: ContentChildren,\n                args: [CdkTreeNodeOutlet, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n */\nclass CdkTreeNodePadding {\n    constructor(_treeNode, _tree, _element, _dir) {\n        this._treeNode = _treeNode;\n        this._tree = _tree;\n        this._element = _element;\n        this._dir = _dir;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** CSS units used for the indentation value. */\n        this.indentUnits = 'px';\n        this._indent = 40;\n        this._setPadding();\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._setPadding(true));\n        }\n        // In Ivy the indentation binding might be set before the tree node's data has been added,\n        // which means that we'll miss the first render. We have to subscribe to changes in the\n        // data to ensure that everything is up to date.\n        _treeNode._dataChanges.subscribe(() => this._setPadding());\n    }\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() {\n        return this._level;\n    }\n    set level(value) {\n        this._setLevelInput(value);\n    }\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 40px from material design menu sub-menu spec.\n     */\n    get indent() {\n        return this._indent;\n    }\n    set indent(indent) {\n        this._setIndentInput(indent);\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\n    _paddingIndent() {\n        const nodeLevel = this._treeNode.data && this._tree.treeControl.getLevel\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n        const level = this._level == null ? nodeLevel : this._level;\n        return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n    }\n    _setPadding(forceChange = false) {\n        const padding = this._paddingIndent();\n        if (padding !== this._currentPadding || forceChange) {\n            const element = this._element.nativeElement;\n            const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n            const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n            element.style[paddingProp] = padding || '';\n            element.style[resetProp] = '';\n            this._currentPadding = padding;\n        }\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setLevelInput(value) {\n        // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n        // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n        // they set 0 explicitly.\n        this._level = coerceNumberProperty(value, null);\n        this._setPadding();\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setIndentInput(indent) {\n        let value = indent;\n        let units = 'px';\n        if (typeof indent === 'string') {\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = coerceNumberProperty(value);\n        this._setPadding();\n    }\n}\nCdkTreeNodePadding.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodePadding, deps: [{ token: CdkTreeNode }, { token: CdkTree }, { token: i0.ElementRef }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTreeNodePadding.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTreeNodePadding, selector: \"[cdkTreeNodePadding]\", inputs: { level: [\"cdkTreeNodePadding\", \"level\"], indent: [\"cdkTreeNodePaddingIndent\", \"indent\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodePadding, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodePadding]',\n                }]\n        }], ctorParameters: function () { return [{ type: CdkTreeNode }, { type: CdkTree }, { type: i0.ElementRef }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { level: [{\n                type: Input,\n                args: ['cdkTreeNodePadding']\n            }], indent: [{\n                type: Input,\n                args: ['cdkTreeNodePaddingIndent']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Node toggle to expand/collapse the node.\n */\nclass CdkTreeNodeToggle {\n    constructor(_tree, _treeNode) {\n        this._tree = _tree;\n        this._treeNode = _treeNode;\n        this._recursive = false;\n    }\n    /** Whether expand/collapse the node recursively. */\n    get recursive() {\n        return this._recursive;\n    }\n    set recursive(value) {\n        this._recursive = coerceBooleanProperty(value);\n    }\n    _toggle(event) {\n        this.recursive\n            ? this._tree.treeControl.toggleDescendants(this._treeNode.data)\n            : this._tree.treeControl.toggle(this._treeNode.data);\n        event.stopPropagation();\n    }\n}\nCdkTreeNodeToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodeToggle, deps: [{ token: CdkTree }, { token: CdkTreeNode }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTreeNodeToggle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTreeNodeToggle, selector: \"[cdkTreeNodeToggle]\", inputs: { recursive: [\"cdkTreeNodeToggleRecursive\", \"recursive\"] }, host: { listeners: { \"click\": \"_toggle($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodeToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeToggle]',\n                    host: {\n                        '(click)': '_toggle($event)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkTree }, { type: CdkTreeNode }]; }, propDecorators: { recursive: [{\n                type: Input,\n                args: ['cdkTreeNodeToggleRecursive']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet,\n];\nclass CdkTreeModule {\n}\nCdkTreeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkTreeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeModule, declarations: [CdkNestedTreeNode,\n        CdkTreeNodeDef,\n        CdkTreeNodePadding,\n        CdkTreeNodeToggle,\n        CdkTree,\n        CdkTreeNode,\n        CdkTreeNodeOutlet], exports: [CdkNestedTreeNode,\n        CdkTreeNodeDef,\n        CdkTreeNodePadding,\n        CdkTreeNodeToggle,\n        CdkTree,\n        CdkTreeNode,\n        CdkTreeNodeOutlet] });\nCdkTreeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseTreeControl, CDK_TREE_NODE_OUTLET_NODE, CdkNestedTreeNode, CdkTree, CdkTreeModule, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutlet, CdkTreeNodeOutletContext, CdkTreeNodePadding, CdkTreeNodeToggle, FlatTreeControl, NestedTreeControl, getTreeControlFunctionsMissingError, getTreeControlMissingError, getTreeMissingMatchingNodeDefError, getTreeMultipleDefaultNodeDefsError, getTreeNoValidDataSourceError };\n","import * as i1 from '@angular/cdk/tree';\nimport { CdkTreeNode, CdkTreeNodeDef, CdkNestedTreeNode, CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodePadding, CdkTreeNodeOutlet, CdkTree, CdkTreeNodeToggle, CdkTreeModule } from '@angular/cdk/tree';\nimport * as i0 from '@angular/core';\nimport { Directive, Attribute, Input, Inject, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _MatTreeNodeBase = mixinTabIndex(mixinDisabled(CdkTreeNode));\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\nclass MatTreeNode extends _MatTreeNodeBase {\n    constructor(elementRef, tree, tabIndex) {\n        super(elementRef, tree);\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\nMatTreeNode.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNode, deps: [{ token: i0.ElementRef }, { token: i1.CdkTree }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTreeNode.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTreeNode, selector: \"mat-tree-node\", inputs: { role: \"role\", disabled: \"disabled\", tabIndex: \"tabIndex\" }, host: { classAttribute: \"mat-tree-node\" }, providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }], exportAs: [\"matTreeNode\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-tree-node',\n                    exportAs: 'matTreeNode',\n                    inputs: ['role', 'disabled', 'tabIndex'],\n                    providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }],\n                    host: {\n                        'class': 'mat-tree-node',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.CdkTree }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }]; } });\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass MatTreeNodeDef extends CdkTreeNodeDef {\n}\nMatTreeNodeDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodeDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatTreeNodeDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTreeNodeDef, selector: \"[matTreeNodeDef]\", inputs: { when: [\"matTreeNodeDefWhen\", \"when\"], data: [\"matTreeNode\", \"data\"] }, providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodeDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodeDef]',\n                    inputs: ['when: matTreeNodeDefWhen'],\n                    providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }],\n                }]\n        }], propDecorators: { data: [{\n                type: Input,\n                args: ['matTreeNode']\n            }] } });\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n */\nclass MatNestedTreeNode extends CdkNestedTreeNode {\n    constructor(elementRef, tree, differs, tabIndex) {\n        super(elementRef, tree, differs);\n        this._disabled = false;\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n    /** Whether the node is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /** Tabindex for the node. */\n    get tabIndex() {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n    set tabIndex(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? value : 0;\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/19145\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    // TODO(tinayuangao): Remove when the angular issue #19145 is fixed\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\nMatNestedTreeNode.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatNestedTreeNode, deps: [{ token: i0.ElementRef }, { token: i1.CdkTree }, { token: i0.IterableDiffers }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatNestedTreeNode.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatNestedTreeNode, selector: \"mat-nested-tree-node\", inputs: { role: \"role\", disabled: \"disabled\", tabIndex: \"tabIndex\", node: [\"matNestedTreeNode\", \"node\"] }, host: { classAttribute: \"mat-nested-tree-node\" }, providers: [\n        { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n        { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n        { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode },\n    ], exportAs: [\"matNestedTreeNode\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatNestedTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-nested-tree-node',\n                    exportAs: 'matNestedTreeNode',\n                    inputs: ['role', 'disabled', 'tabIndex'],\n                    providers: [\n                        { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n                        { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n                        { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode },\n                    ],\n                    host: {\n                        'class': 'mat-nested-tree-node',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.CdkTree }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }]; }, propDecorators: { node: [{\n                type: Input,\n                args: ['matNestedTreeNode']\n            }], disabled: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }] } });\n\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n */\nclass MatTreeNodePadding extends CdkTreeNodePadding {\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() {\n        return this._level;\n    }\n    set level(value) {\n        this._setLevelInput(value);\n    }\n    /** The indent for each level. Default number 40px from material design menu sub-menu spec. */\n    get indent() {\n        return this._indent;\n    }\n    set indent(indent) {\n        this._setIndentInput(indent);\n    }\n}\nMatTreeNodePadding.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodePadding, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatTreeNodePadding.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTreeNodePadding, selector: \"[matTreeNodePadding]\", inputs: { level: [\"matTreeNodePadding\", \"level\"], indent: [\"matTreeNodePaddingIndent\", \"indent\"] }, providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodePadding, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodePadding]',\n                    providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }],\n                }]\n        }], propDecorators: { level: [{\n                type: Input,\n                args: ['matTreeNodePadding']\n            }], indent: [{\n                type: Input,\n                args: ['matTreeNodePaddingIndent']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass MatTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nMatTreeNodeOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodeOutlet, deps: [{ token: i0.ViewContainerRef }, { token: CDK_TREE_NODE_OUTLET_NODE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTreeNodeOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTreeNodeOutlet, selector: \"[matTreeNodeOutlet]\", providers: [\n        {\n            provide: CdkTreeNodeOutlet,\n            useExisting: MatTreeNodeOutlet,\n        },\n    ], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodeOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodeOutlet]',\n                    providers: [\n                        {\n                            provide: CdkTreeNodeOutlet,\n                            useExisting: MatTreeNodeOutlet,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TREE_NODE_OUTLET_NODE]\n                }, {\n                    type: Optional\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTree extends CdkTree {\n}\nMatTree.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTree, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTree.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTree, selector: \"mat-tree\", host: { attributes: { \"role\": \"tree\" }, classAttribute: \"mat-tree\" }, providers: [{ provide: CdkTree, useExisting: MatTree }], viewQueries: [{ propertyName: \"_nodeOutlet\", first: true, predicate: MatTreeNodeOutlet, descendants: true, static: true }], exportAs: [\"matTree\"], usesInheritance: true, ngImport: i0, template: `<ng-container matTreeNodeOutlet></ng-container>`, isInline: true, styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\"], dependencies: [{ kind: \"directive\", type: MatTreeNodeOutlet, selector: \"[matTreeNodeOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTree, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tree', exportAs: 'matTree', template: `<ng-container matTreeNodeOutlet></ng-container>`, host: {\n                        'class': 'mat-tree',\n                        'role': 'tree',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [{ provide: CdkTree, useExisting: MatTree }], styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\"] }]\n        }], propDecorators: { _nodeOutlet: [{\n                type: ViewChild,\n                args: [MatTreeNodeOutlet, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTree's toggle with Material design styles.\n */\nclass MatTreeNodeToggle extends CdkTreeNodeToggle {\n}\nMatTreeNodeToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodeToggle, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatTreeNodeToggle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTreeNodeToggle, selector: \"[matTreeNodeToggle]\", inputs: { recursive: [\"matTreeNodeToggleRecursive\", \"recursive\"] }, providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodeToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodeToggle]',\n                    providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }],\n                    inputs: ['recursive: matTreeNodeToggleRecursive'],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_TREE_DIRECTIVES = [\n    MatNestedTreeNode,\n    MatTreeNodeDef,\n    MatTreeNodePadding,\n    MatTreeNodeToggle,\n    MatTree,\n    MatTreeNode,\n    MatTreeNodeOutlet,\n];\nclass MatTreeModule {\n}\nMatTreeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTreeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeModule, declarations: [MatNestedTreeNode,\n        MatTreeNodeDef,\n        MatTreeNodePadding,\n        MatTreeNodeToggle,\n        MatTree,\n        MatTreeNode,\n        MatTreeNodeOutlet], imports: [CdkTreeModule, MatCommonModule], exports: [MatCommonModule, MatNestedTreeNode,\n        MatTreeNodeDef,\n        MatTreeNodePadding,\n        MatTreeNodeToggle,\n        MatTree,\n        MatTreeNode,\n        MatTreeNodeOutlet] });\nMatTreeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeModule, imports: [CdkTreeModule, MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkTreeModule, MatCommonModule],\n                    exports: [MatCommonModule, MAT_TREE_DIRECTIVES],\n                    declarations: MAT_TREE_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nclass MatTreeFlattener {\n    constructor(transformFunction, getLevel, isExpandable, getChildren) {\n        this.transformFunction = transformFunction;\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.getChildren = getChildren;\n    }\n    _flattenNode(node, level, resultNodes, parentMap) {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n                }\n                else {\n                    childrenNodes.pipe(take(1)).subscribe(children => {\n                        this._flattenChildren(children, level, resultNodes, parentMap);\n                    });\n                }\n            }\n        }\n        return resultNodes;\n    }\n    _flattenChildren(children, level, resultNodes, parentMap) {\n        children.forEach((child, index) => {\n            let childParentMap = parentMap.slice();\n            childParentMap.push(index != children.length - 1);\n            this._flattenNode(child, level + 1, resultNodes, childParentMap);\n        });\n    }\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData) {\n        let resultNodes = [];\n        structuredData.forEach(node => this._flattenNode(node, 0, resultNodes, []));\n        return resultNodes;\n    }\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes, treeControl) {\n        let results = [];\n        let currentExpand = [];\n        currentExpand[0] = true;\n        nodes.forEach(node => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n            if (expand) {\n                results.push(node);\n            }\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n        return results;\n    }\n}\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `MatTree`.\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\n * to type `F` for `MatTree` to consume.\n */\nclass MatTreeFlatDataSource extends DataSource {\n    constructor(_treeControl, _treeFlattener, initialData) {\n        super();\n        this._treeControl = _treeControl;\n        this._treeFlattener = _treeFlattener;\n        this._flattenedData = new BehaviorSubject([]);\n        this._expandedData = new BehaviorSubject([]);\n        this._data = new BehaviorSubject([]);\n        if (initialData) {\n            // Assign the data through the constructor to ensure that all of the logic is executed.\n            this.data = initialData;\n        }\n    }\n    get data() {\n        return this._data.value;\n    }\n    set data(value) {\n        this._data.next(value);\n        this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n        this._treeControl.dataNodes = this._flattenedData.value;\n    }\n    connect(collectionViewer) {\n        return merge(collectionViewer.viewChange, this._treeControl.expansionModel.changed, this._flattenedData).pipe(map(() => {\n            this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n            return this._expandedData.value;\n        }));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nclass MatTreeNestedDataSource extends DataSource {\n    constructor() {\n        super(...arguments);\n        this._data = new BehaviorSubject([]);\n    }\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n    set data(value) {\n        this._data.next(value);\n    }\n    connect(collectionViewer) {\n        return merge(...[collectionViewer.viewChange, this._data]).pipe(map(() => this.data));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatNestedTreeNode, MatTree, MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule, MatTreeNestedDataSource, MatTreeNode, MatTreeNodeDef, MatTreeNodeOutlet, MatTreeNodePadding, MatTreeNodeToggle };\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { API_URL } from '../common';\nimport { Observable } from 'rxjs';\n\nexport const BASE = `${API_URL}`;\nconst BASE_URL = `${API_URL}/api/ICD10/`;\nconst BASE_URL_ICD9 = `${API_URL}/api/ICD9/`;\nconst FEED_BACK_ICD = `${API_URL}/api`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class IcdService {\n\n    constructor(private httpClient: HttpClient) {\n     \n    }\n\n    quickFeedback(feedbackData: any, appname: string) {\n        // return this.httpClient.post<any>(`${FEED_BACK_ICD}/feedback/`, feedbackData);\n        // Add X-CSRFToken to the header\n        let csrftoken: string = ''; // Assigning a default value\n        if (document.cookie && document.cookie !== '') {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, 10) === 'csrftoken' + '=') {\n                    csrftoken = decodeURIComponent(cookie.substring(10));\n                    break;\n                }\n            }\n        }\n        const csrfToken = csrftoken;\n        return this.httpClient.post<any>(`${FEED_BACK_ICD}/${appname}/feedback/`, feedbackData, {\n            headers: { 'X-CSRFToken': csrfToken },\n        });\n    }\n \n\n    submitFeedback(feedbackData: any) {\n        // return this.httpClient.post<any>(`${FEED_BACK_ICD}/feedback/`, feedbackData);\n        // Add X-CSRFToken to the header\n        let csrftoken: string = ''; // Assigning a default value\n        if (document.cookie && document.cookie !== '') {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, 10) === 'csrftoken' + '=') {\n                    csrftoken = decodeURIComponent(cookie.substring(10));\n                    break;\n                }\n            }\n        }\n        const csrfToken = csrftoken;\n        return this.httpClient.post<any>(`${FEED_BACK_ICD}/feedback/`, feedbackData, {\n            headers: { 'X-CSRFToken': csrfToken },\n        });\n    }\n\n    getListFeedback() {\n        return this.httpClient.get<any>(`${FEED_BACK_ICD}/feedback/ICD9/`);\n    }\n\n    getListFeedback10() {\n        return this.httpClient.get<any>(`${FEED_BACK_ICD}/feedback/ICD10/`);\n    }\n\n    getChapter(lang: string) {\n        return this.httpClient.get<any>(`${BASE_URL}root?lang=${lang}`);\n    }\n\n    getDetailModel(model: string, id: string, lang: string) {\n        // Tạo tiêu đề mới chứa địa chỉ IP của máy khách\n        const headers = new HttpHeaders({\n          'X-Client-IP': localStorage.getItem('client_ip') || ''\n        });\n    \n        // Gửi yêu cầu HTTP với tiêu đề tùy chỉnh\n        return this.httpClient.get<any>(\n          `${BASE_URL}data/${model}?id=${id}&lang=${lang}`,\n          { headers: headers }\n        );\n      }\n\n    getChildrenOfModel(model: string, id: string, lang: string) {\n        return this.httpClient.get<any>(`${BASE_URL}childs/${model}?id=${id}&lang=${lang}`);\n    }\n\n    getChapter_ICD9(lang: string) {\n        \n        return this.httpClient.get<any>(`${BASE_URL_ICD9}root?lang=${lang}`);\n    }\n\n    getDetailModel_ICD9(model: string, id: string, lang: string) {\n        const headers = new HttpHeaders({\n            'X-Client-IP': localStorage.getItem('client_ip') || ''\n          });\n        return this.httpClient.get<any>(`${BASE_URL_ICD9}data/${model}?id=${id}&lang=${lang}`, {headers: headers });\n    }\n\n    getChildrenOfModel_ICD9(model: string, id: string, lang: string) {\n        return this.httpClient.get<any>(`${BASE_URL_ICD9}childs/${model}?id=${id}&lang=${lang}`);\n    }\n\n    getDocumentList(category: string) {\n        return this.httpClient.get<any>(`${API_URL}/api/DOC/list/${category}`);\n    }\n\n    getDocumentDetails(id: number) {\n        const headers = new HttpHeaders({\n            'X-Client-IP': localStorage.getItem('client_ip') || ''\n          });\n        return this.httpClient.get(`${API_URL}/api/DOC/data/${id}`, {headers: headers });\n    }\n}\n","import { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { API_URL } from '../common';\n\nconst BASE_URL = `${API_URL}/api/ICD10/`;\nconst BASE_URL_ICD9 = `${API_URL}/api/ICD9/`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class IcdServiceV1 {\n    constructor(private httpClient: HttpClient) {\n\n    }\n  \n    getChapter(lang: string) {\n        return this.httpClient.get<any>(`${BASE_URL}root?lang=${lang}`);\n    }\n\n    getDetailModel(model: string, id: string, lang: string) {\n        const headers = new HttpHeaders({\n            'X-Client-IP': localStorage.getItem('client_ip') || ''\n          });\n        return this.httpClient.get<any>(`${BASE_URL}data/${model}?id=${id}&lang=dual`,\n        { headers: headers });\n    }\n\n    getChildrenOfModel(model: string, id: string, lang: string) {\n        return this.httpClient.get<any>(`${BASE_URL}childs/${model}?id=${id}&lang=${lang}`);\n    }\n\n    getChapter_ICD9(lang: string) {\n        return this.httpClient.get<any>(`${BASE_URL_ICD9}root?lang=${lang}`);\n    }\n\n    getDetailModel_ICD9(model: string, id: string, lang: string) {\n        const headers = new HttpHeaders({\n            'X-Client-IP': localStorage.getItem('client_ip') || ''\n          });\n        return this.httpClient.get<any>(`${BASE_URL_ICD9}data/${model}?id=${id}&lang=dual`,\n        { headers: headers });\n    }\n\n    getChildrenOfModel_ICD9(model: string, id: string, lang: string) {\n        return this.httpClient.get<any>(`${BASE_URL_ICD9}childs/${model}?id=${id}&lang=${lang}`);\n    }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { API_URL } from './../common';\n\nconst BASE_URL = `${API_URL}/api/ICD10/`;\nconst BASE_URL_ICD9 = `${API_URL}/api/ICD9/`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SearchService {\n    private apiUrl = 'https://api.ipify.org?format=json';\n    public client_ip: string;\n    constructor(private httpClient: HttpClient) {\n        this.getIpAddress().subscribe(\n            (data: any) => {\n                this.client_ip = data.ip;\n            },\n            (error) => {\n                console.log('Error:', error);\n            }\n        );\n    }\n    getIpAddress(): Observable<any> {\n        return this.httpClient.get<any>(this.apiUrl);\n    }\n\n    search(q: any | undefined, lang: string, vol1: boolean, vol3: boolean) {\n        if (!q || q === '*') {\n            q = '';\n        } else {\n            q = q.toLowerCase();\n        }\n        const headers = new HttpHeaders({});\n        if (this.client_ip) {\n            headers.append('X-Client-IP', this.client_ip);\n        }\n        return this.httpClient.get<any>(`${BASE_URL}search/${q}?lang=${lang}&vol1=${vol1 ? 1 : 0}&vol3=${vol3 ? 1 : 0}&html=true`, {\n            headers: headers,\n        });\n    }\n\n    getListTreeOfSearch(model: string, id: number, lang: string) {\n        return this.httpClient.get<any>(`${BASE_URL}tree/${model}?id=${id}&lang=${lang}`);\n    }\n\n    search_ICD9(q: any | undefined, lang: string) {\n        const headers = new HttpHeaders({});\n        if (this.client_ip) {\n            headers.append('X-Client-IP', this.client_ip);\n        }\n        if (!q || q === '*') {\n            q = '';\n        } else {\n            q = q.toLowerCase();\n        }\n        return this.httpClient.get<any>(`${BASE_URL_ICD9}search/${q}?lang=${lang}&html=true`, {\n            headers: headers,\n        });\n    }\n\n    getListTreeOfSearch_ICD9(model: string, id: number, lang: string) {\n        return this.httpClient.get<any>(`${BASE_URL_ICD9}tree/${model}?id=${id}&lang=${lang}`);\n    }\n}\n","<div id=\"icd-10\" class=\"main__search mb-2 relative\">\n    <div class=\"flex max-lg:flex-col max-lg:space-y-4 items-center lg:space-x-4\">\n        <div  #boxSearch class=\" bar-1 bg-white flex items-center relative\">\n                <div class=\"w-[50px] h-full flex items-center justify-center\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        class=\"translate-x-[2px]\"\n                        height=\"24\"\n                        fill=\"#5F6368\"\n                    >\n                        <path\n                            d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n                        />\n                    </svg>\n                </div>\n                <input\n                    #searchInput\n                    [(ngModel)]=\"debouncedValue\"\n                    (input)=\"handleInputChange()\"\n                    (keydown)=\"handleKeyDown($event)\"\n                    (focus)=\"handleOpen()\"\n                    id=\"search\"\n                    class=\"searchbar\"\n                    autocomplete=\"off\"\n                    placeholder=\"{{\n                        language === 'en' ? 'Enter keywords to search' : 'Nhập từ khóa để tìm kiếm...'\n                    }}\"\n                    type=\"text\"\n                    title=\"Search\"\n                />\n                <div\n                    (click)=\"handleDelInput()\"\n                    [ngClass]=\"{ hidden: debouncedValue.length <= 0, flex: debouncedValue.length > 0 }\"\n                    class=\"w-[50px] h-6 items-center justify-center cursor-pointer z-[1001]\"\n                >\n                    <svg\n                        focusable=\"false\"\n                        width=\"24\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 24 24\"\n                        *ngIf=\"!isSearching\"\n                    >\n                        <path\n                            fill=\"#70757a\"\n                            d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n                        ></path>\n                    </svg>\n                    <div class=\"spinner-container\">\n                        <div class=\"spinner\" *ngIf=\"isSearching\"></div>\n                    </div>\n                </div>\n        </div>\n        <div class=\"h-[45px]\">\n            <mat-form-field appearance=\"outline\" class=\"h-full\">\n                <mat-label>\n                    {{ language == 'en' ? 'Search in' : 'Tìm kiếm trong' }}\n                </mat-label>\n                <mat-select [(value)]=\"chapter_vol\">\n                    <mat-option value=\"vol1\">\n                        {{ language == 'en' ? 'Volume 1' : 'Quyển 1'}}\n                    </mat-option>\n                    <mat-option value=\"vol3\">\n                        {{ language == 'en' ? 'Volume 3' : 'Quyển 3'}}\n                    </mat-option>\n                    <mat-option value=\"all\">\n                        {{ language == 'en' ? 'All' : 'Tất cả'}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n    <div  #recommendBox  id=\"recommend-box\" class=\"search-result\" *ngIf=\"searchResults && isShowResult\" #menu>\n        <div [innerHTML]=\"searchResults?.html\" (click)=\"searchItem($event)\"></div>\n    </div>\n</div>\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    OnInit,\n    Output,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { IcdService } from '../../../../shared/services/icd.service';\nimport { SearchService } from '../../../../shared/services/search.search';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n    selector: 'app-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss'],\n})\nexport class SearchComponent implements OnInit {\n    private unsubscriber = new Subject<void>();\n    @Output() messageEvent = new EventEmitter<object>();\n    @ViewChild('toggleButton') toggleButton: ElementRef;\n    @ViewChild('menu') menu: ElementRef;\n    @ViewChild('recommendBox') recommendBox: ElementRef;\n    @ViewChild('boxSearch') boxSearch: ElementRef;\n    @ViewChild('searchInput') searchInput: ElementRef;\n\n    chapter_vol: string = 'vol1'\n    isSearching = false;\n    searchResults: any;\n    searchResultsFormat: any;\n    sub: Subscription;\n    keySearch = new FormControl();\n    debouncedValue = '';\n    selectedItem: any;\n    language: any;\n    isShowResult = false;\n    url = false;\n    previousSearchQuery: string = '';\n    searchEnter: string = '';\n    enterPressed: boolean = false;\n    enterTimeout: any;\n    searchTimer: any;\n\n    constructor(\n        private searchService: SearchService,\n        private route: ActivatedRoute,\n        private icdService: IcdService,\n        private toastService: ToastrService,\n        private readonly router: Router,\n        private renderer: Renderer2,\n        public translate: TranslateService,\n        private el: ElementRef,\n    ) {\n        this.renderer.listen('window', 'click', (e: Event) => {\n            if (\n                this.toggleButton &&\n                this.toggleButton.nativeElement &&\n                e.target !== this.toggleButton.nativeElement &&\n                e.target !== this.menu?.nativeElement\n            ) {\n                this.isShowResult = false;\n            }\n            if (this.el.nativeElement !== e.target && !this.el.nativeElement.contains(e.target)) {\n                this.closeRec();\n            }\n        });\n    }\n\n    ngOnInit(): void {\n        this.language = localStorage.getItem('lang') ? localStorage.getItem('lang') : 'vi';\n        this.url = this.router.url.includes('icd10-dual');\n    }\n    handleDelInput(): void {\n        this.debouncedValue = '';\n        this.searchResults = null;\n        this.closeRec()\n    }\n    onSearch() {\n        if (!this.debouncedValue.trim()) {\n            // Nếu không có giá trị để tìm kiếm, có thể đặt searchResults về null hoặc mảng trống.\n            this.searchResults = null;\n            this.closeRec();\n            return;\n        }\n\n        this.isSearching = true;\n        this.previousSearchQuery = this.debouncedValue;\n        this.searchService.search(\n            this.debouncedValue,\n            this.language,\n            this.chapter_vol == 'all' || this.chapter_vol == 'vol1',\n            this.chapter_vol == 'all' || this.chapter_vol == 'vol3'\n        ).subscribe(\n            (data: any) => {\n                if (data) {\n                    this.searchResults = data;\n                    this.isShowResult = true;\n                    this.isSearching = false;\n                    this.openRec();\n                }\n            },\n            (error: any) => {\n                console.log(error);\n                this.isSearching = false;\n                this.toastService.error(`${error?.message\n                }`, 'Thất bại');\n            }\n        );\n    }\n\n    handleKeyDown(event: KeyboardEvent) {\n        // event.preventDefault();\n        if (event.key == 'Enter') {\n            this.onSearch();\n        }\n    }\n\n    handleInputChange() {\n        clearTimeout(this.searchTimer);\n        this.searchTimer = setTimeout(() => {\n            if (this.debouncedValue.trim() !== this.previousSearchQuery) {\n                this.onSearch();\n            }\n        }, 1500);\n    }\n\n    ngOnDestroy(): void {\n        this.unsubscriber.next();\n        this.unsubscriber.complete();\n        clearTimeout(this.enterTimeout);\n    }\n\n    searchItem(event: any) {\n        this.closeRec();\n        event.preventDefault();\n        let href = '';\n        let target = event.target || event.srcElement;\n        while (target) {\n            if (target instanceof HTMLAnchorElement) {\n                href = target.getAttribute('href')!; //non-null assertion\n                break;\n            }\n            target = target.parentNode;\n        }\n        let id = href.split('/')[1];\n        let model = href.split('/')[0];\n        this.isShowResult = false;\n        let language = this.language;\n        this.url = this.router.url.includes('icd10-dual');\n        if (this.url) language = 'dual';\n        this.icdService.getDetailModel(model, id, language).subscribe((res) => {\n            this.selectedItem = res.data;\n            this.messageEvent.emit(this.selectedItem);\n        });\n    }\n    handleOpen(){\n\n        if(this.searchResults){\n            this.openRec();\n            this.isShowResult=true\n         \n        }\n    }\n    focusFunction(): void {\n        this.isShowResult = true;\n        if (!this.debouncedValue) {\n            this.searchResults = null;\n        } else {\n            let data = localStorage.getItem('searchResults');\n            if (data != null) {\n                this.searchResults = JSON.parse(data);\n            }\n        }\n    }\n    closeRec() {\n        if (this.recommendBox && this.recommendBox.nativeElement) {\n            this.recommendBox.nativeElement.classList.add('hidden');\n        }\n    \n        if (this.boxSearch && this.boxSearch.nativeElement) {\n            this.boxSearch.nativeElement.classList.remove('bar-data');\n            this.boxSearch.nativeElement.classList.add('bar-1');\n        }\n        if (this.searchInput && this.searchInput.nativeElement) {\n            this.searchInput.nativeElement.classList.remove('searchbar-data');\n            this.searchInput.nativeElement.classList.add('searchbar');\n        }\n    }\n    \n    openRec() {\n        if (this.recommendBox && this.recommendBox.nativeElement) {\n            this.recommendBox.nativeElement.classList.remove('hidden');\n        }\n    \n        if (this.boxSearch && this.boxSearch.nativeElement) {\n            this.boxSearch.nativeElement.classList.add('bar-data');\n            this.boxSearch.nativeElement.classList.remove('bar-1');\n        }\n        if (this.searchInput && this.searchInput.nativeElement) {\n            this.searchInput.nativeElement.classList.add('searchbar-data');\n            this.searchInput.nativeElement.classList.remove('searchbar');\n        }\n    }\n    \n}\n","<!-- Modal Bootstrap -->\n<div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" aria-labelledby=\"editModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content rounded-3 shadow\">\n        <div class=\"modal-header\">\n          <h3 class=\"modal-title\" id=\"editModalLabel\"><i class=\"fas fa-comment-dots\"></i> Góp ý</h3>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <form>\n            <!-- Row for ID, Model, and Field -->\n            <div class=\"row mb-4\">\n              <div class=\"col-md-3\">\n                <label for=\"modal-id\" class=\"form-label\"><i class=\"fas fa-id-card\"></i> ID</label>\n                <input type=\"text\" class=\"form-control border-secondary\" id=\"modal-id\" disabled>\n              </div>\n              <div class=\"col-md-4\">\n                <label for=\"modal-model\" class=\"form-label\"><i class=\"fas fa-cubes\"></i> Mô hình</label>\n                <input type=\"text\" class=\"form-control border-secondary\" id=\"modal-model\" disabled>\n              </div>\n              <div class=\"col-md-5\">\n                <label for=\"modal-field\" class=\"form-label\"><i class=\"fas fa-book\"></i> Trường</label>\n                <input type=\"text\" class=\"form-control border-secondary\" id=\"modal-field\" disabled>\n              </div>\n            </div>\n  \n            <!-- Content as plain text (HTML content not editable) -->\n            <div class=\"mb-4\">\n              <label class=\"form-label\"><i class=\"fas fa-file-alt\"></i> Nội dung</label>\n              <div id=\"modal-content\" class=\"form-control-plaintext border p-3 bg-light rounded-3\" style=\"max-height: 400px; overflow-y: auto;\">\n                <!-- HTML content will be inserted here -->\n              </div>\n            </div>\n  \n            <!-- Textarea for \"Góp ý\" -->\n            <div class=\"mb-4\">\n              <label for=\"modal-feedback\" class=\"form-label\"><i class=\"fas fa-comment\"></i> Góp ý</label>\n              <textarea class=\"form-control border-secondary\" id=\"modal-feedback\" rows=\"4\" placeholder=\"Nhập góp ý của bạn\"></textarea>\n            </div>\n  \n            <!-- Sender Information -->\n            <div class=\"row mb-4\">\n              <div class=\"col-md-6\">\n                <label for=\"modal-senderName\" class=\"form-label\"><i class=\"fas fa-user\"></i> Tên người gửi</label>\n                <input type=\"text\" class=\"form-control\" id=\"modal-senderName\" placeholder=\"Nhập tên người gửi\">\n              </div>\n              <div class=\"col-md-6\">\n                <label for=\"modal-senderEmail\" class=\"form-label\"><i class=\"fas fa-envelope\"></i> Email người gửi</label>\n                <input type=\"email\" class=\"form-control\" id=\"modal-senderEmail\" placeholder=\"Nhập email người gửi\">\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n            <i class=\"fas fa-times-circle\"></i> Hủy\n          </button>\n          <button type=\"button\" class=\"btn btn-success\" (click)=\"submitFeedback()\">\n            <i class=\"fas fa-paper-plane\"></i> Gửi\n          </button>\n        </div>\n      </div>\n    </div>\n</div>\n\n<div>\n    <app-search  (messageEvent)=\"receiveMessage($event)\"></app-search>\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <div class=\"card sidebar__common\">\n                <div class=\"card-body\">\n                    <mat-tree [dataSource]=\"dataSource\"\n                              [treeControl]=\"treeControl\"\n                              class=\"example-tree\">\n                        <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle id=\"{{node.id}}\">\n              <span [class.active]=\"isActive === node.id\" class=\"cursor-pointer\"\n                    (click)=\"goToDetail(node)\"><b>{{node.code}}</b>: {{node.name}}</span>\n                        </mat-tree-node>\n                        <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChild\" id=\"{{node.id}}\">\n                            <div class=\"mat-tree-node\">\n                                <button class=\"btn-size-small\" mat-icon-button matTreeNodeToggle\n                                        (click)=\"getChildrenOfTree(node)\"\n                                        [attr.aria-label]=\"'Toggle ' + node\">\n                                    <mat-icon class=\"mat-icon-rtl-mirror\">\n                                        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n                                    </mat-icon>\n                                </button>\n                                <span [class.active]=\"isActive === node.id\" class=\"cursor-pointer\"\n                                      (click)=\"goToDetail(node)\"><b>{{node.code}}</b>: {{node.name}}</span>\n                            </div>\n                            <div [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\"\n                                 role=\"group\">\n                                <!--              Same lv as parents tree LV-->\n                                <ng-container matTreeNodeOutlet></ng-container>\n                            </div>\n                        </mat-nested-tree-node>\n                    </mat-tree>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-8\">\n            <div class=\"card sidebar__common\" style=\"min-height: 100%\">\n                <div class=\"card-body\">\n                    <div *ngIf=\"htmlRoot\" [innerHTML]=\"htmlRoot\"></div>\n                    <ng-container *ngIf=\"isSearching; else info\">\n                        <div class=\"w-full h-full flex items-center justify-center\">\n                            <div class=\"spinner-container\">\n                                <div class=\"spinner\"></div>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <ng-template #info>\n                        <div class=\"main-right\" *ngIf=\"infoModel\">\n                            <div\n                                id=\"detail\"\n                                [innerHTML]=\"infoModel?.html || infoModel\"\n                                (click)=\"goToOpenTree($event)\"\n                            ></div>\n                        </div>\n                    </ng-template>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"floating-button-container\">\n    <button cButton [cOffcanvasToggle]=\"offcanvasNoBackdrop.id\" class=\"custom-button\">\n        <img ngSrc=\"assets/images/submid.svg\" alt=\"Góp ý Icon\" class=\"custom-icon\" height=\"16\" width=\"16\">\n    </button>\n</div>\n\n<c-offcanvas\n        id=\"OffcanvasNoBackdrop\"\n        [backdrop]=\"false\"\n        [scroll]=\"true\"\n        placement=\"end\"\n        #offcanvasNoBackdrop\n        class=\"overflow-y-auto\"\n>\n    <c-offcanvas-header>\n        <div class=\"flex items-center justify-center gap-2 w-full h-fit\">\n            <button type=\"button\" class=\"btn btn-primary w-100\" (click)=\"toggleForm()\">\n                {{ showingComments ? 'Góp ý' : 'Xem góp ý' }}\n            </button>\n            <button\n                aria-label=\"Close\"\n                cButtonClose\n                class=\"w-10 h-10 rounded-lg hover:opacity-70 bg-red-600\"\n                [cOffcanvasToggle]=\"offcanvasNoBackdrop.id\"\n            >\n                <svg\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M18 6L6 18\"\n                        stroke=\"#ffffff\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                    />\n                    <path\n                        d=\"M6 6L18 18\"\n                        stroke=\"#ffffff\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                    />\n                </svg>\n            </button>\n        </div>\n    </c-offcanvas-header>\n    <c-offcanvas-body>\n        \n\n        <!-- User's comment (this can be initially hidden and shown after submission) -->\n        <div *ngIf=\"showingComments\" class=\"mt-3\" id=\"userComment\">\n            <ng-container *ngFor=\"let comment of userCommentList\">\n                <div class=\"mb-2\" style=\"border-bottom: 1px solid black\">\n                    <div style=\"display: flex\">\n                        <p style=\"padding-right: 5px\"><strong>{{ comment.name }}</strong></p>\n                        <small class=\"text-muted\">{{ comment.created_at }}</small>\n                    </div>\n                    <div style=\"text-decoration-line: underline;\">{{ comment?.subject }}</div>\n                    <div>{{ comment?.content }}</div>\n                </div>\n            </ng-container>\n        </div>\n        <div *ngIf=\"!showingComments\">\n            <div class=\"mb-3\">\n                <label for=\"name\" class=\"form-label\">Tên</label> <i style=\"color: red\">*</i>\n                <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Tên\" #nameInput>\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{nameMessage}}</div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"number\" class=\"form-label\">Số điện thoại</label> <i style=\"color: red\">*</i>\n                <input type=\"text\" class=\"form-control\" id=\"number\" placeholder=\"Số điện thoại\" #numberInput>\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{phoneMessage}}</div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"email\" class=\"form-label\">Email</label> <i style=\"color: red\">*</i>\n                <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\" #emailInput>\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{emailMessage}}</div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"title\" class=\"form-label\">Tiêu đề</label> <i style=\"color: red\">*</i>\n                <input type=\"title\" class=\"form-control\" id=\"title\" placeholder=\"Tiêu đề\" #titleInput>\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{subjectMessage}}</div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"feedback\" class=\"form-label\">Góp ý</label> <i style=\"color: red\">*</i>\n                <textarea class=\"form-control\" id=\"feedback\" rows=\"4\" placeholder=\"Góp ý của bạn\"\n                          #feedbackInput></textarea>\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{contentMessage}}</div>\n            </div>\n\n            <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{errorMessage}}</div>\n\n            <ng-container *ngIf=\"captchaImageUrl\">\n                <img [src]=\"captchaImageUrl\" alt=\"Captcha Image\" id=\"captchaImage\">\n                <div class=\"mb-3\">\n                    <input type=\"text\" class=\"form-control\" id=\"captcha\" placeholder=\"Nhập Captcha\"\n                           [(ngModel)]=\"userCaptcha\">\n                </div>\n            </ng-container>\n\n            <!-- Submit button -->\n            <button type=\"button\" class=\"btn btn-primary\"\n                    (click)=\"submitForm()\">\n                Gửi\n            </button>\n        </div>\n    </c-offcanvas-body>\n</c-offcanvas>\n","import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation, Renderer2, ElementRef} from '@angular/core';\nimport { IcdServiceV1 } from '../../../../../shared/services/icdv1.service';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\nimport { SearchService } from '../../../../../shared/services/search.search';\nimport { EventManager } from '../../../../../shared/services/broadcast.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ViewportScroller } from '@angular/common';\nimport { IcdService, BASE } from 'src/shared/services/icd.service';\nimport { ToastrService } from 'ngx-toastr';\n\ninterface ChapterNode {\n    name: string;\n    model: string;\n    id: string;\n    children?: ChapterNode[];\n    level: number;\n    isLeaf: boolean;\n    code: string;\n    span: any;\n}\n\n@Component({\n    selector: 'app-dual-version-icd',\n    templateUrl: './dual-version-icd.component.html',\n    styleUrls: ['./dual-version-icd.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class DualVersionIcdComponent implements OnInit {\n    chapter: any[] = [];\n    infoModel: any;\n    htmlRoot:any;\n\n    dataSource = new MatTreeNestedDataSource<ChapterNode>();\n    treeControl = new NestedTreeControl<ChapterNode>((node) => node.children);\n    loaded: Set<string> = new Set<string>();\n    isActive: string | null = '';\n    language: any;\n    userCommentList: any[] = [];\n    showingComments = false;\n    userCaptcha: string = '';\n    errorMessage: string | undefined;\n    contentMessage: string | undefined;\n    nameMessage: string | undefined;\n    emailMessage: string | undefined;\n    phoneMessage: string | undefined;\n    subjectMessage: string | undefined;\n    public captchaImageUrl: string | undefined;\n    isSearching: boolean = false;\n\n    modalEdit: any;\n\n    constructor(\n        public icdService: IcdService,\n        private toastService: ToastrService,\n        private viewportScroller: ViewportScroller,\n        private router: Router,\n        private scroller: ViewportScroller,\n        private route: ActivatedRoute,\n        private eventManager: EventManager,\n        public IcdServiceV1: IcdServiceV1,\n        private _changeDetectorRef: ChangeDetectorRef,\n        private searchService: SearchService,\n        private renderer: Renderer2, private el: ElementRef,\n    ) {\n        this.dataSource.data = [];\n        this.eventManager.subscribe('changeLanguage', (lang: any) => {\n            this.language = lang.content;\n            this.getChapter();\n        });\n    }\n\n    setClickForCopy() {\n        // Tìm các icon fa-copy sau khi DOM đã được render\n        setTimeout(() => {\n            const copyIcons = this.el.nativeElement.querySelectorAll('.icon-copy');\n            // Gắn sự kiện click cho mỗi icon\n            copyIcons.forEach((icon: HTMLElement) => {\n                this.renderer.listen(icon, 'click', () => {\n                    this.copyToClipboard(icon);\n                });\n            });\n        }, 100);\n    }\n\n    setClickForEdit() {\n        // Tìm các icon fa-copy sau khi DOM đã được render\n        setTimeout(() => {\n            const editIcons = this.el.nativeElement.querySelectorAll('.icon-email');\n            // Gắn sự kiện click cho mỗi icon\n            editIcons.forEach((icon: HTMLElement) => {\n                this.renderer.listen(icon, 'click', () => {\n                    this.editContent(icon);\n                });\n            });\n        }, 100);\n    }\n\n    editContent(element: HTMLElement) {\n        const content = element.parentElement?.parentElement?.getElementsByClassName('content')[0]?.innerHTML || '';\n        const content_raw = element.parentElement?.getElementsByClassName('content-raw')[0]?.textContent || '';\n        const field= element.parentElement?.getElementsByClassName('field')[0]?.textContent || '';\n        const id = element.parentElement?.getElementsByClassName('id')[0]?.textContent || '';\n        const model = element.parentElement?.getElementsByClassName('model')[0]?.textContent || '';\n\n        // Lấy thông tin người gửi đã lưu nếu có\n        const senderName = localStorage.getItem('senderName') || '';\n        const senderEmail = localStorage.getItem('senderEmail') || '';\n\n        // Đặt giá trị vào các input trong modal\n        (document.getElementById('modal-content') as HTMLDivElement).innerHTML = content; // Nội dung HTML nhúng\n        (document.getElementById('modal-id') as HTMLInputElement).value = id;\n        (document.getElementById('modal-model') as HTMLInputElement).value = model;\n        (document.getElementById('modal-field') as HTMLInputElement).value = field;\n        (document.getElementById('modal-feedback') as HTMLTextAreaElement).value = '';\n        (document.getElementById('modal-senderName') as HTMLInputElement).value = senderName;\n        (document.getElementById('modal-senderEmail') as HTMLInputElement).value = senderEmail\n\n        // Mở modal Bootstrap\n        this.modalEdit = new (window as any).bootstrap.Modal(document.getElementById('editModal'));\n        this.modalEdit.show();\n    }\n\n    submitFeedback() {\n        // Lấy các giá trị từ form\n        const id = (document.getElementById('modal-id') as HTMLInputElement).value;\n        const model = (document.getElementById('modal-model') as HTMLInputElement).value;\n        const field = (document.getElementById('modal-field') as HTMLInputElement).value;\n        const content = (document.getElementById('modal-content') as HTMLDivElement).innerHTML;\n        const feedback = (document.getElementById('modal-feedback') as HTMLTextAreaElement).value;\n    \n        // Lấy thông tin người gửi\n        const senderName = (document.getElementById('modal-senderName') as HTMLInputElement).value;\n        const senderEmail = (document.getElementById('modal-senderEmail') as HTMLInputElement).value;\n    \n        // Kiểm tra dữ liệu đã nhập (nếu cần)\n        if (!feedback.trim() || !senderName.trim() || !senderEmail.trim()) {\n        //   alert('Vui lòng điền đầy đủ thông tin và góp ý!');\n            this.toastService.error('Vui lòng điền đầy đủ thông tin và góp ý!', 'Gửi góp ý thất bại');\n            return;\n        }\n\n        this.toastService.info('Đang gửi góp ý...', 'Đang xử lý');\n    \n        // Xử lý gửi dữ liệu\n        const formData = {\n            id: id,\n            model: model,\n            field: field,\n            content: content,\n            feedback: feedback,\n            senderName: senderName,\n            senderEmail: senderEmail,\n        };\n    \n        // Thực hiện gửi form (có thể là gọi API)\n        this.icdService.quickFeedback(formData, 'ICD10').subscribe(\n            (res: any) => {\n                if (res.status === 'success'){\n                    this.toastService.success(`${res?.message}`, 'Gửi góp ý thành công');\n                    this.toastService.success(`Góp ý đã được gửi thành công! Cảm ơn bạn đã đóng góp ý kiến \"${feedback}\"!`, 'Thành công');\n                    // Đóng modal sau khi gửi\n                    this.modalEdit.hide();\n                    \n                    // Lưu lại thông tin người gửi để lần sau không cần nhập lại\n                    localStorage.setItem('senderName', senderName);\n                    localStorage.setItem('senderEmail', senderEmail);\n                }\n                else this.toastService.error(`${res?.message}`, 'Gửi góp ý thất bại');\n            },\n            (error: any) => {\n                this.toastService.error(`Lỗi khi gửi góp ý: ${error?.error.message}`, 'Gửi góp ý thất bại');\n            }\n        );\n    }\n\n    copyToClipboard(element: HTMLElement) {\n        const content = element.parentElement?.getElementsByClassName('content-raw')[0]?.textContent;\n        if (content) {\n          navigator.clipboard.writeText(content).then(() => {\n            // alert('Đã sao chép: ' + content);\n            this.toastService.success('Đã sao chép: ' + content, 'Sao chép thành công');\n          }).catch(err => {\n            console.error('Không thể sao chép vào clipboard', err);\n            this.toastService.error('Không thể sao chép vào clipboard', 'Sao chép thất bại');\n          });\n        }\n    }\n\n    hasChild = (_: number, node: ChapterNode) => !node.isLeaf;\n\n    ngOnInit(): void {\n        this.language = localStorage.getItem('lang') ? localStorage.getItem('lang') : 'vi';\n        this.getChapter();\n        this.isActive = this.route.snapshot.queryParamMap.get('id');\n        this.getListFeedback();\n    }\n\n    getChapter() {\n        this.IcdServiceV1.getChapter(\"dual\").subscribe((res) => {\n            this.chapter = res.data.map((value: any) => this.convertChapter(value));\n            this.dataSource.data = this.chapter;\n            this.infoModel = res.html;\n            this.treeControl.dataNodes = this.chapter;\n        });\n    }\n\n    getListFeedback() {\n        this.icdService.getListFeedback10().subscribe((res) => {\n            this.userCommentList = res.data;\n        });\n    }\n\n    toggleForm() {\n        this.showingComments = !this.showingComments;\n    }\n\n    submitForm() {\n        const feedbackData = this.getFeedbackData();\n\n        this.icdService.submitFeedback(feedbackData).subscribe(\n            (res: any) => {\n                if (res.status === 'success')\n                    this.toastService.success(`${res?.message}`, 'Thành công');\n                else this.toastService.error(`${res?.message}`, 'Thất bại');\n                if (res.captcha_image && this.captchaImageUrl !== res.captcha_image) {\n                    const newCaptchaImageUrl = BASE + res.captcha_image;\n                    this.updateCaptchaImage(newCaptchaImageUrl);\n                    this.userCaptcha = '';\n                } else {\n                    this.handleSuccess(res);\n                }\n            },\n            (error: any) => {\n                this.handleError(error);\n            }\n        );\n    }\n\n    private getFeedbackData() {\n        const name = (document.getElementById('name') as HTMLInputElement).value;\n        const number = (document.getElementById('number') as HTMLInputElement).value;\n        const email = (document.getElementById('email') as HTMLInputElement).value;\n        const title = (document.getElementById('title') as HTMLInputElement).value;\n        const feedback = (document.getElementById('feedback') as HTMLTextAreaElement).value;\n\n        return {\n            app: 'ICD10',\n            name: name,\n            phone: number,\n            email: email,\n            subject: title,\n            content: feedback,\n            captcha: this.userCaptcha,\n        };\n    }\n\n    private updateCaptchaImage(newCaptchaImageUrl: string) {\n        const timestamp = new Date().getTime();\n        this.captchaImageUrl = newCaptchaImageUrl + `?timestamp=${timestamp}`;\n    }\n\n    private handleSuccess(res: any) {\n        this.captchaImageUrl = undefined;\n        this.getListFeedback();\n        if (res.message) {\n            this.showingComments = true;\n        }\n    }\n\n    private handleError(error: any) {\n        this.errorMessage = error.error?.message;\n        // this.contentMessage = error.error.data?.content;\n        this.nameMessage = error.error.data?.name;\n        this.emailMessage = error.error.data?.email;\n        this.phoneMessage = error.error.data?.phone;\n        this.subjectMessage = error.error.data?.subject;\n\n        if (error.error.data?.captcha_image) {\n            const newCaptchaImageUrl = BASE + error.error.data.captcha_image;\n            this.updateCaptchaImage(newCaptchaImageUrl);\n        }\n\n        this.userCaptcha = '';\n    }\n\n    convertChapter(input: any): ChapterNode {\n        return {\n            id: input.data.id,\n            model: input.model,\n            code: input.data.code,\n            name: input.data.name,\n            level: 0,\n            isLeaf: input.is_leaf,\n            children: input.children?.map((child: any) => this.convertChapter(child)),\n            span: input.data.id,\n        };\n    }\n\n    getDetailModel(item: any) {\n        this.isSearching = true;\n        this.htmlRoot=\"\"\n\n        this.IcdServiceV1.getDetailModel(item?.model, item?.id, this.language).subscribe((res) => {\n            this.isSearching = false;\n            this.infoModel = res.data.data;\n            this.setClickForCopy();\n            this.setClickForEdit();\n        }, (err) => {\n            this.isSearching = false;\n            this.toastService.error(`${err?.error.error}`, 'Thất bại');\n\n        });\n    }\n\n    getChildrenOfModel(item: ChapterNode) {\n        if (this.loaded.has(item.id)) {\n            return;\n        }\n        this.loaded.add(item.id);\n        this.IcdServiceV1.getChildrenOfModel(item?.model, item?.id, this.language).subscribe(\n            (res) => {\n                const children = res.data.map((value: any) => this.convertChapter(value));\n                item.children = children;\n                this.dataSource.data = [];\n                this.dataSource.data = this.chapter;\n                setTimeout(() => {\n                    this.treeControl.expand(item);\n                });\n            }\n        );\n    }\n\n    getChildrenOfTree(item: ChapterNode) {\n        this.getChildrenOfModel(item);\n        this.refreshTree();\n    }\n\n    goToDetail(item: ChapterNode) {\n        this.isActive = item.id;\n        this.getDetailModel(item);\n    }\n\n    receiveMessage($event: any) {\n        this.infoModel = $event.data;\n        this.isActive = $event.data.id;\n        this.getListTreeOfSearch($event);\n        this.handleScrollTree($event.data.id);\n    }\n\n    openItem(node: ChapterNode): void {\n        if (node.children) this.treeControl.expand(node);\n        node.children?.forEach((item) => this.openItem(item));\n    }\n\n    refreshTree() {\n        let _data = this.dataSource.data;\n        this.dataSource.data = [];\n        this.dataSource.data = _data;\n    }\n\n    getListTreeOfSearch(item: any) {\n        this.searchService.getListTreeOfSearch(item.model, item.id, 'dual').subscribe((res) => {\n            const find = res.children.find((el: any) => el.children?.length > 0);\n            const findnode = this.treeControl.dataNodes.find((dtn) => dtn.id === find.id);\n            const children: ChapterNode[] = find.children.map((child: any) =>\n                this.convertChapter(child)\n            );\n            if (findnode) {\n                findnode.children = children;\n                this.dataSource.data = [];\n                this.dataSource.data = this.chapter;\n                this.openItem(findnode);\n            }\n        });\n    }\n\n    goToOpenTree(event: any) {\n        event.preventDefault();\n        let item = {\n            model: '',\n            id: '',\n        };\n        let href = '';\n        let target = event.target || event.srcElement;\n        while (target) {\n            if (target instanceof HTMLAnchorElement) {\n                href = target.getAttribute('href')!; //non-null assertion\n                break;\n            }\n            target = target.parentNode;\n        }\n        item.id = href.split('/')[1];\n        item.model = href.split('/')[0];\n        if (item && item.id && item.model) { \n            this.isActive = item.id;\n            this.getListTreeOfSearch(item);\n            this.getDetailModel(item);\n            this.handleScrollTree(item.id);\n        }\n    }\n\n    handleScrollTree(id: any) {\n        setTimeout(() => {\n            this.router.navigate([], { fragment: id }).then((res) => {\n                const element = document.getElementById(id);\n                if (element != undefined) element.scrollIntoView({ behavior: 'smooth' });\n            });\n        }, 1000);\n    }\n}\n","<div id=\"icd-9\" class=\"main__search mb-2 relative\">\n    <div  #boxSearch class=\" bar-1 bg-white flex items-center relative\">\n     \n            <div class=\"w-[50px] h-full flex items-center justify-center\">\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    class=\"translate-x-[2px]\"\n                    height=\"24\"\n                    fill=\"#5F6368\"\n                >\n                    <path\n                        d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n                    />\n                </svg>\n            </div>\n            <input\n                autocomplete=\"off\"\n                #searchInput\n                [(ngModel)]=\"debouncedValue\"\n                (input)=\"handleInputChange()\"\n                (keydown)=\"handleKeyDown($event)\"\n                (focus)=\"handleOpen()\"\n                id=\"search\"\n                class=\"searchbar\"\n                autocomplete=\"off\"\n                placeholder=\"{{\n                    language === 'en' ? 'Enter keywords to search' : 'Nhập từ khóa để tìm kiếm...'\n                }}\"\n                type=\"text\"\n                title=\"Search\"\n            />\n            <div\n                (click)=\"handleDelInput()\"\n                [ngClass]=\"{ hidden: debouncedValue.length <= 0, flex: debouncedValue.length > 0 }\"\n                class=\"w-[50px] h-full items-center justify-center cursor-pointer z-[1001]\"\n            >\n                <svg\n                    focusable=\"false\"\n                    width=\"24\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    *ngIf=\"!isSearching\"\n                >\n                    <path\n                        fill=\"#70757a\"\n                        d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n                    ></path>\n                </svg>\n                <div class=\"spinner-container\">\n                    <div class=\"spinner\" *ngIf=\"isSearching\"></div>\n                </div>\n            </div>\n            \n    </div>\n   \n    <div  #recommendBox  id=\"recommend-box\" class=\"search-result\" *ngIf=\"searchResults && isShowResult\" #menu>\n        <div [innerHTML]=\"searchResults?.html\" (click)=\"searchItem($event)\"></div>\n    </div>\n</div>\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    OnInit,\n    Output,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { SearchService } from '../../../../shared/services/search.search';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IcdService } from '../../../../shared/services/icd.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n    selector: 'app-search-icd9',\n    templateUrl: './search-icd9.component.html',\n    styleUrls: ['./search-icd9.component.scss'],\n})\nexport class SearchIcd9Component implements OnInit {\n    private unsubscriber = new Subject<void>();\n    @Output() messageEvent = new EventEmitter<object>();\n    @ViewChild('toggleButton') toggleButton: ElementRef;\n    @ViewChild('menu') menu: ElementRef;\n    @ViewChild('recommendBox') recommendBox: ElementRef;\n    @ViewChild('boxSearch') boxSearch: ElementRef;\n    @ViewChild('searchInput') searchInput: ElementRef;\n    isSearching = false;\n    searchResults: any;\n    searchResultsFormat: any;\n    sub: Subscription;\n    keySearch = new FormControl();\n    debouncedValue = '';\n    selectedItem: any;\n    language: any;\n    isShowResult = false;\n    url = false;\n    previousSearchQuery: string = '';\n    searchEnter: string = '';\n    enterPressed: boolean = false;\n    enterTimeout: any;\n    searchTimer: any;\n\n    constructor(\n        private searchService: SearchService,\n        private route: ActivatedRoute,\n        private icdService: IcdService,\n        private readonly router: Router,\n        private renderer: Renderer2,\n        private toastService: ToastrService,\n        public translate: TranslateService,\n        private el: ElementRef,\n    ) {\n        this.renderer.listen('window', 'click', (e: Event) => {\n            if (\n                this.toggleButton &&\n                this.menu &&\n                e.target !== this.toggleButton.nativeElement &&\n                e.target !== this.menu?.nativeElement\n            ) {\n                this.isShowResult = false;\n            }\n            if (this.el.nativeElement !== e.target && !this.el.nativeElement.contains(e.target)) {\n                this.closeRec();\n            }\n        });\n    }\n\n    ngOnInit(): void {\n        this.language = localStorage.getItem('lang') ? localStorage.getItem('lang') : 'vi';\n        this.url = this.router.url.includes('icd9-dual');\n    }\n    onSearch() {\n        if (!this.debouncedValue.trim()) {\n            // Nếu không có giá trị để tìm kiếm, có thể đặt searchResults về null hoặc mảng trống.\n            this.searchResults = null;\n            this.closeRec();\n            return;\n        }\n        this.isSearching = true;\n        this.previousSearchQuery = this.debouncedValue;\n        this.searchService.search_ICD9(this.debouncedValue, this.language).subscribe(\n            (data: any) => {\n                if (data) {\n                    this.searchResults = data;\n                    this.isShowResult = true;\n                    this.isSearching = false;\n                    this.openRec();\n                }\n            },\n            (error: any) => {\n                this.isSearching = false;\n                this.toastService.error(`${error?.message\n                }`, 'Thất bại');\n\n            }\n        );\n    }\n    handleDelInput() {\n        this.debouncedValue = '';\n         this.searchResults = null;\n         this.closeRec()\n    }\n    handleInputChange() {\n        clearTimeout(this.searchTimer);\n        this.searchTimer = setTimeout(() => {\n            if (this.debouncedValue.trim() !== this.previousSearchQuery) {\n                this.onSearch();\n            }\n        }, 2000);\n    }\n\n    handleKeyDown(event: KeyboardEvent) {\n        // event.preventDefault();\n        if (event.key == 'Enter') {\n            this.onSearch();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.unsubscriber.next();\n        this.unsubscriber.complete();\n        clearTimeout(this.enterTimeout);\n    }\n\n    searchItem(event: any) {\n        this.closeRec();\n        event.preventDefault();\n        let href = '';\n        let target = event.target || event.srcElement;\n        while (target) {\n            if (target instanceof HTMLAnchorElement) {\n                href = target.getAttribute('href')!; //non-null assertion\n                break;\n            }\n            target = target.parentNode;\n        }\n        let id = href.split('/')[1];\n        let model = href.split('/')[0];\n        this.isShowResult = false;\n        let language = this.language;\n        this.url = this.router.url.includes('icd9-dual');\n        if (this.url) language = 'dual';\n        this.icdService.getDetailModel_ICD9(model, id, language).subscribe(\n            (res) => {\n                this.selectedItem = res.data;\n                this.messageEvent.emit(this.selectedItem);\n            },\n            (error) => {\n                console.error('Error occurred while fetching details:', error);\n                this.toastService.error(`${error?.error.error}`, 'Thất bại');\n\n            }\n        );\n    }\n\n    focusFunction(): void {\n        this.isShowResult = true;\n        if (!this.debouncedValue) {\n            this.searchResults = null;\n        } else {\n            let data = localStorage.getItem('searchResults');\n            if (data != null) {\n                this.searchResults = JSON.parse(data);\n            }\n        }\n    }\n    closeRec() {\n        if (this.recommendBox && this.recommendBox.nativeElement) {\n            this.recommendBox.nativeElement.classList.add('hidden');\n        }\n    \n        if (this.boxSearch && this.boxSearch.nativeElement) {\n            this.boxSearch.nativeElement.classList.remove('bar-data');\n            this.boxSearch.nativeElement.classList.add('bar-1');\n        }\n        if (this.searchInput && this.searchInput.nativeElement) {\n            this.searchInput.nativeElement.classList.remove('searchbar-data');\n            this.searchInput.nativeElement.classList.add('searchbar');\n        }\n    }\n    handleOpen(){\n\n        if(this.searchResults){\n            this.openRec();\n            this.isShowResult=true\n         \n        }\n    }\n    openRec() {\n        if (this.recommendBox && this.recommendBox.nativeElement) {\n            this.recommendBox.nativeElement.classList.remove('hidden');\n            this\n        }\n    \n        if (this.boxSearch && this.boxSearch.nativeElement) {\n            this.boxSearch.nativeElement.classList.add('bar-data');\n            this.boxSearch.nativeElement.classList.remove('bar-1');\n        }\n        if (this.searchInput && this.searchInput.nativeElement) {\n            this.searchInput.nativeElement.classList.add('searchbar-data');\n            this.searchInput.nativeElement.classList.remove('searchbar');\n        }\n    }\n}\n","<div>\n    <app-search-icd9\n   \n        (messageEvent)=\"receiveMessage($event)\"\n    ></app-search-icd9>\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <div class=\"card sidebar__common\">\n                <div class=\"card-body\">\n                    <mat-tree\n                        [dataSource]=\"dataSource\"\n                        [treeControl]=\"treeControl\"\n                        class=\"example-tree\"\n                    >\n                        <mat-tree-node\n                            *matTreeNodeDef=\"let node\"\n                            matTreeNodeToggle\n                            id=\"{{ node.id }}\"\n                        >\n                            <span\n                                [class.active]=\"isActive === node.id\"\n                                class=\"cursor-pointer\"\n                                (click)=\"goToDetail(node)\"\n                                ><b>{{ node.code }}</b\n                                >: {{ node.name }}</span\n                            >\n                        </mat-tree-node>\n                        <mat-nested-tree-node\n                            *matTreeNodeDef=\"let node; when: hasChild\"\n                            id=\"{{ node.id }}\"\n                        >\n                            <div class=\"mat-tree-node\">\n                                <button\n                                    class=\"btn-size-small\"\n                                    mat-icon-button\n                                    matTreeNodeToggle\n                                    (click)=\"getChildrenOfTree(node)\"\n                                    [attr.aria-label]=\"'Toggle ' + node\"\n                                >\n                                    <mat-icon class=\"mat-icon-rtl-mirror\">\n                                        {{\n                                            treeControl.isExpanded(node)\n                                                ? 'expand_more'\n                                                : 'chevron_right'\n                                        }}\n                                    </mat-icon>\n                                </button>\n                                <span\n                                    [class.active]=\"isActive === node.id\"\n                                    class=\"cursor-pointer\"\n                                    (click)=\"goToDetail(node)\"\n                                    ><b>{{ node.code }}</b\n                                    >: {{ node.name }}</span\n                                >\n                            </div>\n                            <div\n                                [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\"\n                                role=\"group\"\n                            >\n                                <!--              Same lv as parents tree LV-->\n                                <ng-container matTreeNodeOutlet></ng-container>\n                            </div>\n                        </mat-nested-tree-node>\n                    </mat-tree>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-8\">\n            <div class=\"card sidebar__common\" style=\"min-height: 100%\">\n                <div class=\"card-body\">\n                    <div *ngIf=\"htmlRoot\" [innerHTML]=\"htmlRoot\"></div>\n                   <ng-container *ngIf=\"isSearching; else info\">\n                        <div class=\"w-full h-full flex items-center justify-center\">\n                            <div class=\"spinner-container\">\n                                <div class=\"spinner\"></div>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <ng-template #info>\n                        <div class=\"main-right\" *ngIf=\"infoModel\">\n                            <div\n                                id=\"detail\"\n                                [innerHTML]=\"infoModel?.html || infoModel\"\n                                (click)=\"goToOpenTree($event)\"\n                            ></div>\n                        </div>\n                    </ng-template>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"floating-button-container\">\n    <button cButton [cOffcanvasToggle]=\"offcanvasNoBackdrop.id\" class=\"custom-button\">\n        <img ngSrc=\"assets/images/submid.svg\" alt=\"Góp ý Icon\" class=\"custom-icon\" height=\"16\" width=\"16\" />\n    </button>\n</div>\n\n<c-offcanvas\n    id=\"OffcanvasNoBackdrop\"\n    [backdrop]=\"false\"\n    [scroll]=\"true\"\n    placement=\"end\"\n    #offcanvasNoBackdrop\n    class=\"overflow-y-auto\"\n>\n    <c-offcanvas-header>\n        <div class=\"flex items-center justify-center gap-2 w-full h-fit\">\n            <button type=\"button\" class=\"btn btn-primary w-100\" (click)=\"toggleForm()\">\n                {{ showingComments ? 'Góp ý' : 'Xem góp ý' }}\n            </button>\n            <button\n                aria-label=\"Close\"\n                cButtonClose\n                class=\"w-10 h-10 rounded-lg hover:opacity-70 bg-red-600\"\n                [cOffcanvasToggle]=\"offcanvasNoBackdrop.id\"\n            >\n                <svg\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M18 6L6 18\"\n                        stroke=\"#ffffff\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                    />\n                    <path\n                        d=\"M6 6L18 18\"\n                        stroke=\"#ffffff\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                    />\n                </svg>\n            </button>\n        </div>\n    </c-offcanvas-header>\n    <c-offcanvas-body>\n        \n\n        <!-- User's comment (this can be initially hidden and shown after submission) -->\n        <div *ngIf=\"showingComments\" class=\"mt-3\" id=\"userComment\">\n            <ng-container *ngFor=\"let comment of userCommentList\">\n                <div class=\"mb-2\" style=\"border-bottom: 1px solid black\">\n                    <div style=\"display: flex\">\n                        <p style=\"padding-right: 5px\">\n                            <strong>{{ comment.name }}</strong>\n                        </p>\n                        <small class=\"text-muted\">{{ comment.created_at }}</small>\n                    </div>\n                    <div style=\"text-decoration-line: underline\">{{ comment?.subject }}</div>\n                    <div>{{ comment?.content }}</div>\n                </div>\n            </ng-container>\n        </div>\n        <div *ngIf=\"!showingComments\">\n            <div class=\"mb-3\">\n                <label for=\"name\" class=\"form-label\">Tên</label> <i style=\"color: red\">*</i>\n                <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Tên\" #nameInput />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{ nameMessage }}</div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"number\" class=\"form-label\">Số điện thoại</label>\n                <i style=\"color: red\">*</i>\n                <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"number\"\n                    placeholder=\"Số điện thoại\"\n                    #numberInput\n                />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{ phoneMessage }}</div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"email\" class=\"form-label\">Email</label> <i style=\"color: red\">*</i>\n                <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    id=\"email\"\n                    placeholder=\"Email\"\n                    #emailInput\n                />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{ emailMessage }}</div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"title\" class=\"form-label\">Tiêu đề</label> <i style=\"color: red\">*</i>\n                <input\n                    type=\"title\"\n                    class=\"form-control\"\n                    id=\"title\"\n                    placeholder=\"Tiêu đề\"\n                    #titleInput\n                />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{ subjectMessage }}</div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"feedback\" class=\"form-label\">Góp ý</label> <i style=\"color: red\">*</i>\n                <textarea\n                    class=\"form-control\"\n                    id=\"feedback\"\n                    rows=\"4\"\n                    placeholder=\"Góp ý của bạn\"\n                    #feedbackInput\n                ></textarea>\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{ contentMessage }}</div>\n            </div>\n\n            <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{ errorMessage }}</div>\n\n            <ng-container *ngIf=\"captchaImageUrl\">\n                <img [src]=\"captchaImageUrl\" alt=\"Captcha Image\" id=\"captchaImage\" />\n                <div class=\"mb-3\">\n                    <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        id=\"captcha\"\n                        placeholder=\"Nhập Captcha\"\n                        [(ngModel)]=\"userCaptcha\"\n                    />\n                </div>\n            </ng-container>\n\n            <!-- Submit button -->\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"submitForm()\">Gửi</button>\n        </div>\n    </c-offcanvas-body>\n</c-offcanvas>\n","import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { ViewportScroller } from '@angular/common';\nimport { IcdServiceV1 } from '../../../../../shared/services/icdv1.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventManager } from '../../../../../shared/services/broadcast.service';\nimport { SearchService } from '../../../../../shared/services/search.search';\nimport { IcdService, BASE } from 'src/shared/services/icd.service';\nimport { ToastrService } from 'ngx-toastr';\n\ninterface ChapterNode {\n    name: string;\n    model: string;\n    id: string;\n    children?: ChapterNode[];\n    level: number;\n    isLeaf: boolean;\n    code: string;\n    span: any;\n}\n\n@Component({\n    selector: 'app-dual-version9-icd',\n    templateUrl: './dual-version9-icd.component.html',\n    styleUrls: ['./dual-version9-icd.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class DualVersion9IcdComponent implements OnInit {\n    chapter: any[] = [];\n    infoModel: any;\n    htmlRoot:any;\n    dataSource = new MatTreeNestedDataSource<ChapterNode>();\n    treeControl = new NestedTreeControl<ChapterNode>((node) => node.children);\n    loaded: Set<string> = new Set<string>();\n    isActive: string | null = '';\n    language: any;\n    userCommentList: any[] = [];\n    showingComments = false;\n    userCaptcha: string = '';\n    errorMessage: string | undefined;\n    contentMessage: string | undefined;\n    nameMessage: string | undefined;\n    emailMessage: string | undefined;\n    phoneMessage: string | undefined;\n    subjectMessage: string | undefined;\n    public captchaImageUrl: string | undefined;\n    isSearching: boolean = false;\n\n    constructor(\n        public icdService: IcdService,\n        private toastService: ToastrService,\n        private viewportScroller: ViewportScroller,\n        private router: Router,\n        private scroller: ViewportScroller,\n        private route: ActivatedRoute,\n        private eventManager: EventManager,\n        public IcdServiceV1: IcdServiceV1,\n        private _changeDetectorRef: ChangeDetectorRef,\n        private searchService: SearchService\n    ) {\n        this.dataSource.data = [];\n        this.eventManager.subscribe('changeLanguage', (lang: any) => {\n            this.language = lang.content;\n            this.getChapter();\n        });\n    }\n\n    hasChild = (_: number, node: ChapterNode) => !node.isLeaf;\n\n    ngOnInit(): void {\n        this.language = localStorage.getItem('lang') ? localStorage.getItem('lang') : 'vi';\n        this.getChapter();\n        this.isActive = this.route.snapshot.queryParamMap.get('id');\n        this.getListFeedback();\n    }\n\n    getChapter() {\n        this.IcdServiceV1.getChapter_ICD9(\"dual\").subscribe((res) => {\n            this.chapter = res.data.map((value: any) => this.convertChapter(value));\n            this.dataSource.data = this.chapter;\n            this.infoModel = res.html;\n            this.treeControl.dataNodes = this.chapter;\n        });\n    }\n\n    getListFeedback() {\n        this.icdService.getListFeedback().subscribe((res) => {\n            this.userCommentList = res.data;\n        });\n    }\n\n    toggleForm() {\n        this.showingComments = !this.showingComments;\n    }\n\n    submitForm() {\n        const feedbackData = this.getFeedbackData();\n\n        this.icdService.submitFeedback(feedbackData).subscribe(\n            (res: any) => {\n                if (res.status === 'success')\n                    this.toastService.success(`${res?.message}`, 'Thành công');\n                else this.toastService.error(`${res?.message}`, 'Thất bại');\n                if (res.captcha_image && this.captchaImageUrl !== res.captcha_image) {\n                    const newCaptchaImageUrl = BASE + res.captcha_image;\n                    this.updateCaptchaImage(newCaptchaImageUrl);\n                    this.userCaptcha = '';\n                } else {\n                    this.handleSuccess(res);\n                }\n            },\n            (error: any) => {\n                this.handleError(error);\n            }\n        );\n    }\n\n    private getFeedbackData() {\n        const name = (document.getElementById('name') as HTMLInputElement).value;\n        const number = (document.getElementById('number') as HTMLInputElement).value;\n        const email = (document.getElementById('email') as HTMLInputElement).value;\n        const title = (document.getElementById('title') as HTMLInputElement).value;\n        const feedback = (document.getElementById('feedback') as HTMLTextAreaElement).value;\n\n        return {\n            app: 'ICD9',\n            name: name,\n            phone: number,\n            email: email,\n            subject: title,\n            content: feedback,\n            captcha: this.userCaptcha,\n        };\n    }\n\n    private updateCaptchaImage(newCaptchaImageUrl: string) {\n        const timestamp = new Date().getTime();\n        this.captchaImageUrl = newCaptchaImageUrl + `?timestamp=${timestamp}`;\n    }\n\n    private handleSuccess(res: any) {\n        this.captchaImageUrl = undefined;\n        this.getListFeedback();\n        if (res.message) {\n            this.showingComments = true;\n        }\n    }\n\n    private handleError(error: any) {\n        this.errorMessage = error.error?.message;\n        // this.contentMessage = error.error.data?.content;\n        this.nameMessage = error.error.data?.name;\n        this.emailMessage = error.error.data?.email;\n        this.phoneMessage = error.error.data?.phone;\n        this.subjectMessage = error.error.data?.subject;\n\n        if (error.error.data?.captcha_image) {\n            const newCaptchaImageUrl = BASE + error.error.data.captcha_image;\n            this.updateCaptchaImage(newCaptchaImageUrl);\n        }\n\n        this.userCaptcha = '';\n    }\n\n    convertChapter(input: any): ChapterNode {\n        return {\n            id: input.data.id,\n            model: input.model,\n            code: input.data.code,\n            name: input.data.name,\n            level: 0,\n            isLeaf: input.is_leaf,\n            children: input.children?.map((child: any) => this.convertChapter(child)),\n            span: input.data.id,\n        };\n    }\n\n    getDetailModel(item: any) {\n        this.isSearching = true;\n        this.htmlRoot=\"\"\n        this.IcdServiceV1.getDetailModel_ICD9(item?.model, item?.id, this.language).subscribe(\n            (res) => {\n                this.isSearching = false;\n                this.infoModel = res.data.data;\n            },\n            (err) => {\n                this.isSearching = false;\n                this.toastService.error(`${err?.error.error}`, 'Thất bại');\n\n            }\n        );\n    }\n\n    getChildrenOfModel(item: ChapterNode) {\n        if (this.loaded.has(item.id)) {\n            return;\n        }\n        this.loaded.add(item.id);\n        this.IcdServiceV1.getChildrenOfModel_ICD9(item?.model, item?.id, this.language).subscribe(\n            (res) => {\n                const children = res.data.map((value: any) => this.convertChapter(value));\n                item.children = children;\n                this.dataSource.data = [];\n                this.dataSource.data = this.chapter;\n                setTimeout(() => {\n                    this.treeControl.expand(item);\n                });\n            }\n        );\n    }\n\n    getChildrenOfTree(item: ChapterNode) {\n        this.getChildrenOfModel(item);\n        this.refreshTree();\n    }\n\n    goToDetail(item: ChapterNode) {\n        this.isActive = item.id;\n        this.getDetailModel(item);\n    }\n\n    receiveMessage($event: any) {\n        this.infoModel = $event.data;\n        this.isActive = $event.data.id;\n        this.getListTreeOfSearch($event);\n        this.handleScrollTree($event.data.id);\n    }\n\n    openItem(node: ChapterNode): void {\n        if (node.children) this.treeControl.expand(node);\n        node.children?.forEach((item) => this.openItem(item));\n    }\n\n    refreshTree() {\n        let _data = this.dataSource.data;\n        this.dataSource.data = [];\n        this.dataSource.data = _data;\n    }\n\n    getListTreeOfSearch(item: any) {\n        this.searchService\n            .getListTreeOfSearch_ICD9(item.model, item.id, 'dual')\n            .subscribe((res) => {\n                const find = res.children.find((el: any) => el.children?.length > 0);\n                const findnode = this.treeControl.dataNodes.find((dtn) => dtn.id === find.id);\n                const children: ChapterNode[] = find.children.map((child: any) =>\n                    this.convertChapter(child)\n                );\n                if (findnode) {\n                    findnode.children = children;\n                    this.dataSource.data = [];\n                    this.dataSource.data = this.chapter;\n                    this.openItem(findnode);\n                }\n            });\n    }\n\n    goToOpenTree(event: any) {\n        event.preventDefault();\n        let item = {\n            model: '',\n            id: '',\n        };\n        let href = '';\n        let target = event.target || event.srcElement;\n        while (target) {\n            if (target instanceof HTMLAnchorElement) {\n                href = target.getAttribute('href')!; //non-null assertion\n                break;\n            }\n            target = target.parentNode;\n        }\n        item.id = href.split('/')[1];\n        item.model = href.split('/')[0];\n\n        if (item && item.id && item.model) {\n            this.isActive = item.id;\n            this.getListTreeOfSearch(item);\n            this.getDetailModel(item);\n            this.handleScrollTree(item.id);\n        }\n    }\n\n    handleScrollTree(id: any) {\n        setTimeout(() => {\n            this.router.navigate([], { fragment: id }).then((res) => {\n                const element = document.getElementById(id);\n                if (element != undefined) element.scrollIntoView({ behavior: 'smooth' });\n            });\n        }, 1000);\n    }\n}\n","<!-- Modal Bootstrap -->\n<div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" aria-labelledby=\"editModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content rounded-3 shadow\">\n        <div class=\"modal-header\">\n          <h3 class=\"modal-title\" id=\"editModalLabel\"><i class=\"fas fa-comment-dots\"></i> Góp ý</h3>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <form>\n            <!-- Row for ID, Model, and Field -->\n            <div class=\"row mb-4\">\n              <div class=\"col-md-3\">\n                <label for=\"modal-id\" class=\"form-label\"><i class=\"fas fa-id-card\"></i> ID</label>\n                <input type=\"text\" class=\"form-control border-secondary\" id=\"modal-id\" disabled>\n              </div>\n              <div class=\"col-md-4\">\n                <label for=\"modal-model\" class=\"form-label\"><i class=\"fas fa-cubes\"></i> Mô hình</label>\n                <input type=\"text\" class=\"form-control border-secondary\" id=\"modal-model\" disabled>\n              </div>\n              <div class=\"col-md-5\">\n                <label for=\"modal-field\" class=\"form-label\"><i class=\"fas fa-book\"></i> Trường</label>\n                <input type=\"text\" class=\"form-control border-secondary\" id=\"modal-field\" disabled>\n              </div>\n            </div>\n  \n            <!-- Content as plain text (HTML content not editable) -->\n            <div class=\"mb-4\">\n              <label class=\"form-label\"><i class=\"fas fa-file-alt\"></i> Nội dung</label>\n              <div id=\"modal-content\" class=\"form-control-plaintext border p-3 bg-light rounded-3\" style=\"max-height: 400px; overflow-y: auto;\">\n                <!-- HTML content will be inserted here -->\n              </div>\n            </div>\n  \n            <!-- Textarea for \"Góp ý\" -->\n            <div class=\"mb-4\">\n              <label for=\"modal-feedback\" class=\"form-label\"><i class=\"fas fa-comment\"></i> Góp ý</label>\n              <textarea class=\"form-control border-secondary\" id=\"modal-feedback\" rows=\"4\" placeholder=\"Nhập góp ý của bạn\"></textarea>\n            </div>\n  \n            <!-- Sender Information -->\n            <div class=\"row mb-4\">\n              <div class=\"col-md-6\">\n                <label for=\"modal-senderName\" class=\"form-label\"><i class=\"fas fa-user\"></i> Tên người gửi</label>\n                <input type=\"text\" class=\"form-control\" id=\"modal-senderName\" placeholder=\"Nhập tên người gửi\">\n              </div>\n              <div class=\"col-md-6\">\n                <label for=\"modal-senderEmail\" class=\"form-label\"><i class=\"fas fa-envelope\"></i> Email người gửi</label>\n                <input type=\"email\" class=\"form-control\" id=\"modal-senderEmail\" placeholder=\"Nhập email người gửi\">\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n            <i class=\"fas fa-times-circle\"></i> Hủy\n          </button>\n          <button type=\"button\" class=\"btn btn-success\" (click)=\"submitFeedback()\">\n            <i class=\"fas fa-paper-plane\"></i> Gửi\n          </button>\n        </div>\n      </div>\n    </div>\n</div>\n  \n  \n  \n  \n\n<div>\n    <app-search (messageEvent)=\"receiveMessage($event)\"></app-search>\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <div class=\"card sidebar__common\">\n                <div class=\"card-body\">\n                    <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"example-tree\">\n                        <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle id=\"{{ node.id }}\">\n                            <span [class.active]=\"isActive === node.id\" class=\"cursor-pointer\"\n                                (click)=\"goToDetail(node)\"><b>{{ node.code }}</b>: {{ node.name }}</span>\n                        </mat-tree-node>\n                        <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChild\" id=\"{{ node.id }}\">\n                            <div class=\"mat-tree-node\">\n                                <button class=\"btn-size-small\" mat-icon-button matTreeNodeToggle\n                                    (click)=\"getChildrenOfTree(node)\" [attr.aria-label]=\"'Toggle ' + node\">\n                                    <mat-icon class=\"mat-icon-rtl-mirror\">\n                                        {{\n                                        treeControl.isExpanded(node)\n                                        ? 'expand_more'\n                                        : 'chevron_right'\n                                        }}\n                                    </mat-icon>\n                                </button>\n                                <span [class.active]=\"isActive === node.id\" class=\"cursor-pointer\"\n                                    (click)=\"goToDetail(node)\"><b>{{ node.code }}</b>: {{ node.name }}</span>\n                            </div>\n                            <div [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\" role=\"group\">\n                                <ng-container matTreeNodeOutlet></ng-container>\n                            </div>\n                        </mat-nested-tree-node>\n                    </mat-tree>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-6\">\n            <div class=\"card sidebar__common w-full\" style=\"min-height: 100%\">\n                <div class=\"card-body w-full\">\n                    <div *ngIf=\"htmlRoot\" [innerHTML]=\"htmlRoot\"></div>\n                    <ng-container *ngIf=\"isSearching; else info\">\n                        <div class=\"w-full h-full flex items-center justify-center\">\n                            <div class=\"spinner-container\">\n                                <div class=\"spinner\"></div>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <ng-template #info>\n                        <div class=\"main-right\" *ngIf=\"infoModel\">\n\n                            <div id=\"detail\" [innerHTML]=\"infoModel?.html || infoModel || htmlRoot\"\n                                (click)=\"goToOpenTree($event)\"></div>\n                        </div>\n                    </ng-template>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"floating-button-container\">\n    <button cButton [cOffcanvasToggle]=\"offcanvasNoBackdrop.id\" class=\"custom-button\">\n        <img ngSrc=\"assets/images/submid.svg\" alt=\"Góp ý Icon\" class=\"custom-icon\" height=\"16\" width=\"16\" />\n    </button>\n</div>\n\n<c-offcanvas id=\"OffcanvasNoBackdrop\" [backdrop]=\"false\" [scroll]=\"true\" placement=\"end\" #offcanvasNoBackdrop\n    class=\"overflow-y-auto\">\n    <c-offcanvas-header>\n        <!-- <h5 cOffcanvasTitle>Góp ý</h5> -->\n        <div class=\"flex items-center justify-center gap-2 w-full h-fit\">\n            <button type=\"button\" class=\"btn btn-primary w-100\" (click)=\"toggleForm()\">\n                {{ showingComments ? 'Góp ý' : 'Xem góp ý' }}\n            </button>\n            <button aria-label=\"Close\" cButtonClose class=\"w-10 h-10 rounded-lg hover:opacity-70 bg-red-600\"\n                [cOffcanvasToggle]=\"offcanvasNoBackdrop.id\">\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M18 6L6 18\" stroke=\"#ffffff\" stroke-width=\"2\" stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\" />\n                    <path d=\"M6 6L18 18\" stroke=\"#ffffff\" stroke-width=\"2\" stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\" />\n                </svg>\n            </button>\n        </div>\n    </c-offcanvas-header>\n    <c-offcanvas-body>\n        <div *ngIf=\"showingComments\" class=\"mt-3\" id=\"userComment\">\n            <ng-container *ngFor=\"let comment of userCommentList\">\n                <div class=\"mb-2\" style=\"border-bottom: 1px solid black\">\n                    <div style=\"display: flex\">\n                        <p style=\"padding-right: 5px\">\n                            <strong>{{ comment.name }}</strong>\n                        </p>\n                        <small class=\"text-muted\">{{ comment.created_at }}</small>\n                    </div>\n                    <div style=\"text-decoration-line: underline\">\n                        {{ comment.subject }}\n                    </div>\n                    <div>{{ comment.content }}</div>\n                </div>\n            </ng-container>\n        </div>\n        <div *ngIf=\"!showingComments\">\n            <div class=\"mb-3\">\n                <label for=\"name\" class=\"form-label\">Tên</label>\n                <i style=\"color: red\">*</i>\n                <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Tên\" #nameInput />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                    {{ nameMessage }}\n                </div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"number\" class=\"form-label\">Số điện thoại</label>\n                <i style=\"color: red\">*</i>\n                <input type=\"text\" class=\"form-control\" id=\"number\" placeholder=\"Số điện thoại\" #numberInput />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                    {{ phoneMessage }}\n                </div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"email\" class=\"form-label\">Email</label>\n                <i style=\"color: red\">*</i>\n                <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\" #emailInput />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                    {{ emailMessage }}\n                </div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"title\" class=\"form-label\">Tiêu đề</label>\n                <i style=\"color: red\">*</i>\n                <input type=\"title\" class=\"form-control\" id=\"title\" placeholder=\"Tiêu đề\" #titleInput />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                    {{ subjectMessage }}\n                </div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"feedback\" class=\"form-label\">Góp ý</label>\n                <i style=\"color: red\">*</i>\n                <textarea class=\"form-control\" id=\"feedback\" rows=\"4\" placeholder=\"Góp ý của bạn\"\n                    #feedbackInput></textarea>\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                    {{ contentMessage }}\n                </div>\n            </div>\n\n            <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                {{ errorMessage }}\n            </div>\n\n            <ng-container *ngIf=\"captchaImageUrl\">\n                <img [src]=\"captchaImageUrl\" alt=\"Captcha Image\" id=\"captchaImage\" />\n                <div class=\"mb-3\">\n                    <input type=\"text\" class=\"form-control\" id=\"captcha\" placeholder=\"Nhập Captcha\"\n                        [(ngModel)]=\"userCaptcha\" />\n                </div>\n            </ng-container>\n            <!-- Submit button -->\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"submitForm()\">Gửi</button>\n        </div>\n    </c-offcanvas-body>\n</c-offcanvas>","import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation, AfterViewInit, HostListener, Renderer2, ElementRef } from '@angular/core';\nimport { IcdService, BASE } from '../../../../shared/services/icd.service';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\nimport { SearchService } from '../../../../shared/services/search.search';\nimport { EventManager } from '../../../../shared/services/broadcast.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ViewportScroller } from '@angular/common';\nimport { ToastrService } from 'ngx-toastr';\n\ninterface ChapterNode {\n    name: string;\n    model: string;\n    id: string;\n    children?: ChapterNode[];\n    level: number;\n    isLeaf: boolean;\n    code: string;\n    span: any;\n}\n\n@Component({\n    selector: 'app-icd10',\n    templateUrl: './icd10.component.html',\n    styleUrls: ['./icd10.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class Icd10Component implements OnInit {\n    chapter: any[] = [];\n    htmlRoot:any;\n    infoModel: any;\n    dataSource = new MatTreeNestedDataSource<ChapterNode>();\n    treeControl = new NestedTreeControl<ChapterNode>((node) => node.children);\n    loaded: Set<string> = new Set<string>();\n    isActive: string | null = '';\n    language: any;\n    userCommentList: any[] = [];\n    showingComments = false;\n    userCaptcha: string = '';\n    errorMessage: string | undefined;\n    contentMessage: string | undefined;\n    nameMessage: string | undefined;\n    emailMessage: string | undefined;\n    phoneMessage: string | undefined;\n    subjectMessage: string | undefined;\n    isSearching: boolean = false;\n    public captchaImageUrl: string | undefined;\n\n    modalEdit: any;\n\n    constructor(\n        private viewportScroller: ViewportScroller,\n        private router: Router,\n        private scroller: ViewportScroller,\n        private route: ActivatedRoute,\n        private eventManager: EventManager,\n        public icdService: IcdService,\n        private _changeDetectorRef: ChangeDetectorRef,\n        private searchService: SearchService,\n        private toastService: ToastrService,\n        private renderer: Renderer2, private el: ElementRef\n    ) {\n        this.dataSource.data = [];\n        this.eventManager.subscribe('changeLanguage', (lang: any) => {\n            this.language = lang.content;\n            this.getChapter();\n        });\n    }\n\n    \n\n    setClickForCopy() {\n        // Tìm các icon fa-copy sau khi DOM đã được render\n        setTimeout(() => {\n            const copyIcons = this.el.nativeElement.querySelectorAll('.icon-copy');\n            // Gắn sự kiện click cho mỗi icon\n            copyIcons.forEach((icon: HTMLElement) => {\n                this.renderer.listen(icon, 'click', () => {\n                    this.copyToClipboard(icon);\n                });\n            });\n        }, 100);\n    }\n\n    setClickForEdit() {\n        // Tìm các icon fa-copy sau khi DOM đã được render\n        setTimeout(() => {\n            const editIcons = this.el.nativeElement.querySelectorAll('.icon-email');\n            // Gắn sự kiện click cho mỗi icon\n            editIcons.forEach((icon: HTMLElement) => {\n                this.renderer.listen(icon, 'click', () => {\n                    this.editContent(icon);\n                });\n            });\n        },100 );\n    }\n\n    editContent(element: HTMLElement) {\n        const content = element.parentElement?.parentElement?.getElementsByClassName('content')[0]?.innerHTML || '';\n        const content_raw = element.parentElement?.getElementsByClassName('content-raw')[0]?.textContent || '';\n        const field= element.parentElement?.getElementsByClassName('field')[0]?.textContent || '';\n        const id = element.parentElement?.getElementsByClassName('id')[0]?.textContent || '';\n        const model = element.parentElement?.getElementsByClassName('model')[0]?.textContent || '';\n\n        // Lấy thông tin người gửi đã lưu nếu có\n        const senderName = localStorage.getItem('senderName') || '';\n        const senderEmail = localStorage.getItem('senderEmail') || '';\n\n        // Đặt giá trị vào các input trong modal\n        (document.getElementById('modal-content') as HTMLDivElement).innerHTML = content; // Nội dung HTML nhúng\n        (document.getElementById('modal-id') as HTMLInputElement).value = id;\n        (document.getElementById('modal-model') as HTMLInputElement).value = model;\n        (document.getElementById('modal-field') as HTMLInputElement).value = field;\n        (document.getElementById('modal-feedback') as HTMLTextAreaElement).value = '';\n        (document.getElementById('modal-senderName') as HTMLInputElement).value = senderName;\n        (document.getElementById('modal-senderEmail') as HTMLInputElement).value = senderEmail\n\n        // Mở modal Bootstrap\n        this.modalEdit = new (window as any).bootstrap.Modal(document.getElementById('editModal'));\n        this.modalEdit.show();\n    }\n\n    submitFeedback() {\n        // Lấy các giá trị từ form\n        const id = (document.getElementById('modal-id') as HTMLInputElement).value;\n        const model = (document.getElementById('modal-model') as HTMLInputElement).value;\n        const field = (document.getElementById('modal-field') as HTMLInputElement).value;\n        const content = (document.getElementById('modal-content') as HTMLDivElement).innerHTML;\n        const feedback = (document.getElementById('modal-feedback') as HTMLTextAreaElement).value;\n    \n        // Lấy thông tin người gửi\n        const senderName = (document.getElementById('modal-senderName') as HTMLInputElement).value;\n        const senderEmail = (document.getElementById('modal-senderEmail') as HTMLInputElement).value;\n    \n        // Kiểm tra dữ liệu đã nhập (nếu cần)\n        if (!feedback.trim() || !senderName.trim() || !senderEmail.trim()) {\n        //   alert('Vui lòng điền đầy đủ thông tin và góp ý!');\n            this.toastService.error('Vui lòng điền đầy đủ thông tin và góp ý!', 'Gửi góp ý thất bại');\n            return;\n        }\n\n        this.toastService.info('Đang gửi góp ý...', 'Đang xử lý');\n    \n        // Xử lý gửi dữ liệu\n        const formData = {\n            id: id,\n            model: model,\n            field: field,\n            content: content,\n            feedback: feedback,\n            senderName: senderName,\n            senderEmail: senderEmail,\n        };\n    \n        // Thực hiện gửi form (có thể là gọi API)\n        this.icdService.quickFeedback(formData, 'ICD10').subscribe(\n            (res: any) => {\n                if (res.status === 'success'){\n                    this.toastService.success(`${res?.message}`, 'Gửi góp ý thành công');\n                    this.toastService.success(`Góp ý đã được gửi thành công! Cảm ơn bạn đã đóng góp ý kiến \"${feedback}\"!`, 'Thành công');\n                    // Đóng modal sau khi gửi\n                    this.modalEdit.hide();\n                    \n                    // Lưu lại thông tin người gửi để lần sau không cần nhập lại\n                    localStorage.setItem('senderName', senderName);\n                    localStorage.setItem('senderEmail', senderEmail);\n                }\n                else {\n                    // console.log(res);\n                    this.toastService.error(`${res?.message}`, 'Gửi góp ý thất bại');\n                }\n            },\n            (error: any) => {\n                // console.log(error);\n                this.toastService.error(`Lỗi khi gửi góp ý: ${error?.error.message}`, 'Gửi góp ý thất bại');\n            }\n        );\n    }\n\n    copyToClipboard(element: HTMLElement) {\n        const content = element.parentElement?.getElementsByClassName('content-raw')[0]?.textContent;\n        if (content) {\n          navigator.clipboard.writeText(content).then(() => {\n            // alert('Đã sao chép: ' + content);\n            this.toastService.success('Đã sao chép: ' + content, 'Sao chép thành công');\n          }).catch(err => {\n            console.error('Không thể sao chép vào clipboard', err);\n            this.toastService.error('Không thể sao chép vào clipboard', 'Sao chép thất bại');\n          });\n        }\n    }\n\n    hasChild = (_: number, node: ChapterNode) => !node.isLeaf;\n\n    ngOnInit(): void {\n        this.language = localStorage.getItem('lang') ? localStorage.getItem('lang') : 'vi';\n        this.getChapter();\n        this.isActive = this.route.snapshot.queryParamMap.get('id');\n        this.getListFeedback();\n    }\n\n    getChapter() {\n        this.icdService.getChapter(this.language).subscribe((res) => {\n            this.chapter = res.data.map((value: any) => this.convertChapter(value));\n            this.dataSource.data = this.chapter;\n            this.infoModel = res.html;\n            this.treeControl.dataNodes = this.chapter;\n        });\n    }\n\n    getListFeedback() {\n        this.icdService.getListFeedback10().subscribe((res) => {\n            this.userCommentList = res.data;\n        });\n    }\n\n    toggleForm() {\n        this.showingComments = !this.showingComments;\n    }\n\n    submitForm() {\n        const feedbackData = this.getFeedbackData();\n        this.icdService.submitFeedback(feedbackData).subscribe(\n            (res: any) => {\n                if (res.status === 'success')\n                    this.toastService.success(`${res?.message}`, 'Thành công');\n                else this.toastService.error(`${res?.message}`, 'Thất bại');\n                if (res.captcha_image && this.captchaImageUrl !== res.captcha_image) {\n                    const newCaptchaImageUrl = BASE + res.captcha_image;\n                    this.updateCaptchaImage(newCaptchaImageUrl);\n                    this.userCaptcha = '';\n                } else {\n                    this.handleSuccess(res);\n                }\n            },\n            (error: any) => {\n                this.handleError(error);\n            }\n        );\n    }\n\n    private getFeedbackData() {\n        const name = (document.getElementById('name') as HTMLInputElement).value;\n        const number = (document.getElementById('number') as HTMLInputElement).value;\n        const email = (document.getElementById('email') as HTMLInputElement).value;\n        const title = (document.getElementById('title') as HTMLInputElement).value;\n        const feedback = (document.getElementById('feedback') as HTMLTextAreaElement).value;\n        //get csrf token from cookie\n        let csrftoken = null;\n        if (document.cookie && document.cookie !== '') {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, 10) === 'csrftoken' + '=') {\n                    csrftoken = decodeURIComponent(cookie.substring(10));\n                    break;\n                }\n            }\n        }\n        const csrfToken = csrftoken;\n        return {\n            app: 'ICD10',\n            name: name,\n            phone: number,\n            email: email,\n            subject: title,\n            content: feedback,\n            captcha: this.userCaptcha,\n            csrfToken: csrfToken,\n        };\n    }\n\n    private updateCaptchaImage(newCaptchaImageUrl: string) {\n        const timestamp = new Date().getTime();\n        this.captchaImageUrl = newCaptchaImageUrl + `?timestamp=${timestamp}`;\n    }\n\n    private handleSuccess(res: any) {\n        this.captchaImageUrl = undefined;\n        this.getListFeedback();\n        if (res.message) {\n            this.showingComments = true;\n        }\n    }\n\n    private handleError(error: any) {\n        this.errorMessage = error.error?.message;\n        // this.contentMessage = error.error.data?.content;\n        this.nameMessage = error.error.data?.name;\n        this.emailMessage = error.error.data?.email;\n        this.phoneMessage = error.error.data?.phone;\n        this.subjectMessage = error.error.data?.subject;\n\n        if (error.error.data?.captcha_image) {\n            const newCaptchaImageUrl = BASE + error.error.data.captcha_image;\n            this.updateCaptchaImage(newCaptchaImageUrl);\n        }\n\n        this.userCaptcha = '';\n    }\n\n    convertChapter(input: any): ChapterNode {\n        return {\n            id: input.data.id,\n            model: input.model,\n            code: input.data.code,\n            name: input.data.name,\n            level: 0,\n            isLeaf: input.is_leaf,\n            children: input.children?.map((child: any) => this.convertChapter(child)),\n            span: input.data.id,\n        };\n    }\n\n    getDetailModel(item: any) {\n        this.isSearching = true;\n        this.htmlRoot=\"\"\n        this.icdService.getDetailModel(item?.model, item?.id, this.language).subscribe(\n            (res) => {\n                this.infoModel = res.data.data;\n                this.isSearching = false;\n                this.setClickForCopy();\n                this.setClickForEdit();\n            },\n            (error) => {\n                this.isSearching = false;\n                this.toastService.error(`${error?.error.error}`, 'Thất bại');\n            }\n        );\n    }\n\n    getChildrenOfModel(item: ChapterNode) {\n        if (this.loaded.has(item.id)) {\n            return;\n        }\n        this.loaded.add(item.id);\n        this.icdService\n            .getChildrenOfModel(item?.model, item?.id, this.language)\n            .subscribe((res) => {\n                const children = res.data.map((value: any) => this.convertChapter(value));\n                item.children = children;\n                this.dataSource.data = [];\n                this.dataSource.data = this.chapter;\n                setTimeout(() => {\n                    this.treeControl.expand(item);\n                });\n            });\n    }\n\n    getChildrenOfTree(item: ChapterNode) {\n        this.getChildrenOfModel(item);\n        this.refreshTree();\n    }\n\n    goToDetail(item: ChapterNode) {\n        this.isActive = item.id;\n        this.getDetailModel(item);\n    }\n\n    receiveMessage($event: any) {\n        this.infoModel = $event.data;\n        this.isActive = $event.data.id;\n        this.getListTreeOfSearch($event);\n        this.handleScrollTree($event.data.id);\n    }\n\n    openItem(node: ChapterNode): void {\n        // đệ quy\n        if (node.children) this.treeControl.expand(node);\n        node.children?.forEach((item, index) => {\n            this.openItem(item);\n        });\n    }\n\n    refreshTree() {\n        let _data = this.dataSource.data;\n        this.dataSource.data = [];\n        this.dataSource.data = _data;\n    }\n\n    getListTreeOfSearch(item: any) {\n        this.searchService\n            .getListTreeOfSearch(item.model, item.id, this.language)\n            .subscribe((res) => {\n                const find = res.children.find((el: any) => el.children?.length > 0);\n                const findnode = this.treeControl.dataNodes.find((dtn) => dtn.id === find.id);\n                const children: ChapterNode[] = find.children.map((child: any) =>\n                    this.convertChapter(child)\n                );\n                if (findnode) {\n                    findnode.children = children;\n                    this.dataSource.data = [];\n                    this.dataSource.data = this.chapter;\n                    this.openItem(findnode);\n                }\n            });\n    }\n\n    goToOpenTree(event: any) {\n        event.preventDefault();\n        let item = {\n            model: '',\n            id: '',\n        };\n        let href = '';\n        let target = event.target || event.srcElement;\n        while (target) {\n            if (target instanceof HTMLAnchorElement) {\n                href = target.getAttribute('href')!; //non-null assertion\n                break;\n            }\n            target = target.parentNode;\n        }\n        item.id = href.split('/')[1];\n        item.model = href.split('/')[0];\n        if (item && item.id && item.model) {\n            this.isActive = item.id;\n            this.getListTreeOfSearch(item);\n            this.getDetailModel(item);\n            this.handleScrollTree(item.id);\n        }\n    }\n\n    handleScrollTree(id: any) {\n        setTimeout(() => {\n            this.router.navigate([], { fragment: id }).then((res) => {\n                const element = document.getElementById(id);\n                if (element != undefined) element.scrollIntoView({ behavior: 'smooth' });\n            });\n        }, 1000);\n    }\n}\n","<div>\n    <app-search-icd9  (messageEvent)=\"receiveMessage($event)\"></app-search-icd9>\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <div class=\"card sidebar__common\">\n                <div class=\"card-body\">\n                    <mat-tree [dataSource]=\"dataSource\"\n                              [treeControl]=\"treeControl\"\n                              class=\"example-tree\">\n                        <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle id=\"{{node.id}}\">\n                            <span [class.active]=\"isActive === node.id\" class=\"cursor-pointer\"\n                                  (click)=\"goToDetail(node)\"><b>{{node.code}}</b>: {{node.name}}</span>\n                        </mat-tree-node>\n                        <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChild\" id=\"{{node.id}}\">\n                            <div class=\"mat-tree-node\">\n                                <button class=\"btn-size-small\" mat-icon-button matTreeNodeToggle\n                                        (click)=\"getChildrenOfTree(node)\"\n                                        [attr.aria-label]=\"'Toggle ' + node\">\n                                    <mat-icon class=\"mat-icon-rtl-mirror\">\n                                        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n                                    </mat-icon>\n                                </button>\n                                <span [class.active]=\"isActive === node.id\" class=\"cursor-pointer\"\n                                      (click)=\"goToDetail(node)\"><b>{{node.code}}</b>: {{node.name}}</span>\n                            </div>\n                            <div [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\"\n                                 role=\"group\">\n                                <!--              Same lv as parents tree LV-->\n                                <ng-container matTreeNodeOutlet></ng-container>\n                            </div>\n                        </mat-nested-tree-node>\n                    </mat-tree>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-6\">\n            <div class=\"card sidebar__common\" style=\"min-height: 100%\">\n                <div class=\"card-body\">\n                    <div *ngIf=\"htmlRoot\" [innerHTML]=\"htmlRoot\"></div>\n                   <ng-container *ngIf=\"isSearching; else info\">\n                        <div class=\"w-full h-full flex items-center justify-center\">\n                            <div class=\"spinner-container\">\n                                <div class=\"spinner\"></div>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <ng-template #info>\n                        <div class=\"main-right\" *ngIf=\"infoModel\">\n                            <div\n                                id=\"detail\"\n                                [innerHTML]=\"infoModel?.html || infoModel\"\n                                (click)=\"goToOpenTree($event)\"\n                            ></div>\n                        </div>\n                    </ng-template>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"floating-button-container\">\n    <button cButton [cOffcanvasToggle]=\"offcanvasNoBackdrop.id\" class=\"custom-button\">\n        <img ngSrc=\"assets/images/submid.svg\" alt=\"Góp ý Icon\" class=\"custom-icon\" height=\"16\" width=\"16\">\n    </button>\n</div>\n\n<c-offcanvas\n        id=\"OffcanvasNoBackdrop\"\n        [backdrop]=\"false\"\n        [scroll]=\"true\"\n        placement=\"end\"\n        #offcanvasNoBackdrop\n        class=\"overflow-y-auto\"\n>\n    <c-offcanvas-header>\n        <div class=\"flex items-center justify-center gap-2 w-full h-fit\">\n            <button type=\"button\" class=\"btn btn-primary w-100\" (click)=\"toggleForm()\">\n                {{ showingComments ? 'Góp ý' : 'Xem góp ý' }}\n            </button>\n            <button\n                aria-label=\"Close\"\n                cButtonClose\n                class=\"w-10 h-10 rounded-lg hover:opacity-70 bg-red-600\"\n                [cOffcanvasToggle]=\"offcanvasNoBackdrop.id\"\n            >\n                <svg\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M18 6L6 18\"\n                        stroke=\"#ffffff\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                    />\n                    <path\n                        d=\"M6 6L18 18\"\n                        stroke=\"#ffffff\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                    />\n                </svg>\n            </button>\n        </div>\n    </c-offcanvas-header>\n    <c-offcanvas-body>\n        \n\n        <!-- User's comment (this can be initially hidden and shown after submission) -->\n        <div *ngIf=\"showingComments\" class=\"mt-3\" id=\"userComment\">\n            <ng-container *ngFor=\"let comment of userCommentList\">\n                <div class=\"mb-2\" style=\"border-bottom: 1px solid black\">\n                    <div style=\"display: flex\">\n                        <p style=\"padding-right: 5px\"><strong>{{ comment.name }}</strong></p>\n                        <small class=\"text-muted\">{{ comment.created_at }}</small>\n                    </div>\n                    <div style=\"text-decoration-line: underline;\">{{ comment?.subject }}</div>\n                    <div>{{ comment?.content }}</div>\n                </div>\n            </ng-container>\n        </div>\n        <div *ngIf=\"!showingComments\">\n            <div class=\"mb-3\">\n                <label for=\"name\" class=\"form-label\">Tên</label> <i style=\"color: red\">*</i>\n                <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Tên\" #nameInput>\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{nameMessage}}</div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"number\" class=\"form-label\">Số điện thoại</label> <i style=\"color: red\">*</i>\n                <input type=\"text\" class=\"form-control\" id=\"number\" placeholder=\"Số điện thoại\" #numberInput>\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{phoneMessage}}</div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"email\" class=\"form-label\">Email</label> <i style=\"color: red\">*</i>\n                <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\" #emailInput>\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{emailMessage}}</div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"title\" class=\"form-label\">Tiêu đề</label> <i style=\"color: red\">*</i>\n                <input type=\"title\" class=\"form-control\" id=\"title\" placeholder=\"Tiêu đề\" #titleInput>\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{subjectMessage}}</div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"feedback\" class=\"form-label\">Góp ý</label> <i style=\"color: red\">*</i>\n                <textarea class=\"form-control\" id=\"feedback\" rows=\"4\" placeholder=\"Góp ý của bạn\"\n                          #feedbackInput></textarea>\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{contentMessage}}</div>\n            </div>\n\n            <div for=\"feedback\" class=\"form-label\" style=\"color: red\">{{errorMessage}}</div>\n\n            <ng-container *ngIf=\"captchaImageUrl\">\n                <img [src]=\"captchaImageUrl\" alt=\"Captcha Image\" id=\"captchaImage\">\n                <div class=\"mb-3\">\n                    <input type=\"text\" class=\"form-control\" id=\"captcha\" placeholder=\"Nhập Captcha\"\n                           [(ngModel)]=\"userCaptcha\">\n                </div>\n            </ng-container>\n\n            <!-- Submit button -->\n            <button type=\"button\" class=\"btn btn-primary\"\n                    (click)=\"submitForm()\">\n                Gửi\n            </button>\n        </div>\n    </c-offcanvas-body>\n</c-offcanvas>\n","import { ChangeDetectorRef, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { ViewportScroller } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventManager } from '../../../../shared/services/broadcast.service';\nimport { IcdService, BASE } from '../../../../shared/services/icd.service';\nimport { SearchService } from '../../../../shared/services/search.search';\nimport { ToastrService } from 'ngx-toastr';\ninterface ChapterNode {\n    name: string;\n    model: string;\n    id: string;\n    children?: ChapterNode[];\n    level: number;\n    isLeaf: boolean;\n    code: string;\n    span: any;\n}\n\n@Component({\n    selector: 'app-icd9',\n    templateUrl: './icd9.component.html',\n    styleUrls: ['./icd9.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class Icd9Component implements OnInit {\n    chapter: any[] = [];\n    infoModel: any;\n    htmlRoot:any;\n    dataSource = new MatTreeNestedDataSource<ChapterNode>();\n    treeControl = new NestedTreeControl<ChapterNode>((node) => node.children);\n    loaded: Set<string> = new Set<string>();\n    isActive: string | null = '';\n    language: any;\n    userCommentList: any[] = [];\n    showingComments = false;\n    userCaptcha: string = '';\n    errorMessage: string | undefined;\n    contentMessage: string | undefined;\n    nameMessage: string | undefined;\n    emailMessage: string | undefined;\n    phoneMessage: string | undefined;\n    subjectMessage: string | undefined;\n    public captchaImageUrl: string | undefined;\n    isSearching: boolean = false;\n\n    constructor(\n        private viewportScroller: ViewportScroller,\n        private toastService: ToastrService,\n        private router: Router,\n        private scroller: ViewportScroller,\n        private route: ActivatedRoute,\n        private eventManager: EventManager,\n        public icdService: IcdService,\n        private _changeDetectorRef: ChangeDetectorRef,\n        private searchService: SearchService\n    ) {\n        this.dataSource.data = [];\n        this.eventManager.subscribe('changeLanguage', (lang: any) => {\n            this.language = lang.content;\n            this.getChapter();\n        });\n    }\n\n    hasChild = (_: number, node: ChapterNode) => !node.isLeaf;\n\n    ngOnInit(): void {\n        this.language = localStorage.getItem('lang') ? localStorage.getItem('lang') : 'vi';\n        this.getChapter();\n        this.isActive = this.route.snapshot.queryParamMap.get('id');\n        this.getListFeedback();\n    }\n\n    getChapter() {\n        this.icdService.getChapter_ICD9(this.language).subscribe((res) => {\n            this.chapter = res.data.map((value: any) => this.convertChapter(value));\n            this.dataSource.data = this.chapter;\n            this.infoModel = res.html;\n            this.treeControl.dataNodes = this.chapter;\n        });\n    }\n\n    getListFeedback() {\n        this.icdService.getListFeedback().subscribe((res) => {\n            this.userCommentList = res.data;\n        });\n    }\n\n    toggleForm() {\n        this.showingComments = !this.showingComments;\n    }\n\n    submitForm() {\n        const feedbackData = this.getFeedbackData();\n\n        this.icdService.submitFeedback(feedbackData).subscribe(\n            (res: any) => {\n                if (res.status === 'success')\n                    this.toastService.success(`${res?.message}`, 'Thành công');\n                else this.toastService.error(`${res?.message}`, 'Thất bại');\n                if (res.captcha_image && this.captchaImageUrl !== res.captcha_image) {\n                    const newCaptchaImageUrl = BASE + res.captcha_image;\n                    this.updateCaptchaImage(newCaptchaImageUrl);\n                    this.userCaptcha = '';\n                } else {\n                    this.handleSuccess(res);\n                }\n            },\n            (error: any) => {\n                this.handleError(error);\n                \n            }\n        );\n    }\n\n    private getFeedbackData() {\n        const name = (document.getElementById('name') as HTMLInputElement).value;\n        const number = (document.getElementById('number') as HTMLInputElement).value;\n        const email = (document.getElementById('email') as HTMLInputElement).value;\n        const title = (document.getElementById('title') as HTMLInputElement).value;\n        const feedback = (document.getElementById('feedback') as HTMLTextAreaElement).value;\n\n        return {\n            app: 'ICD9',\n            name: name,\n            phone: number,\n            email: email,\n            subject: title,\n            content: feedback,\n            captcha: this.userCaptcha,\n        };\n    }\n\n    private updateCaptchaImage(newCaptchaImageUrl: string) {\n        const timestamp = new Date().getTime();\n        this.captchaImageUrl = newCaptchaImageUrl + `?timestamp=${timestamp}`;\n    }\n\n    private handleSuccess(res: any) {\n        this.captchaImageUrl = undefined;\n        this.getListFeedback();\n        if (res.message) {\n            this.showingComments = true;\n        }\n    }\n\n    private handleError(error: any) {\n        this.errorMessage = error.error?.message;\n        // this.contentMessage = error.error.data?.content;\n        this.nameMessage = error.error.data?.name;\n        this.emailMessage = error.error.data?.email;\n        this.phoneMessage = error.error.data?.phone;\n        this.subjectMessage = error.error.data?.subject;\n\n        if (error.error.data?.captcha_image) {\n            const newCaptchaImageUrl = BASE + error.error.data.captcha_image;\n            this.updateCaptchaImage(newCaptchaImageUrl);\n        }\n\n        this.userCaptcha = '';\n    }\n\n    convertChapter(input: any): ChapterNode {\n        return {\n            id: input.data.id,\n            model: input.model,\n            code: input.data.code,\n            name: input.data.name,\n            level: 0,\n            isLeaf: input.is_leaf,\n            children: input.children?.map((child: any) => this.convertChapter(child)),\n            span: input.data.id,\n        };\n    }\n\n    getDetailModel(item: any) {\n        this.isSearching = true;\n          this.htmlRoot=\"\"\n        this.icdService\n            .getDetailModel_ICD9(item?.model, item?.id, this.language)\n            .subscribe((res) => {\n                this.isSearching = false;\n                this.infoModel = res.data.data;\n            }, (err) => {\n                this.isSearching = false;\n                this.toastService.error(`${err?.error.error}`, 'Thất bại');\n            });\n    }\n\n    getChildrenOfModel(item: ChapterNode) {\n        if (this.loaded.has(item.id)) {\n            return;\n        }\n        this.loaded.add(item.id);\n        this.icdService\n            .getChildrenOfModel_ICD9(item?.model, item?.id, this.language)\n            .subscribe((res) => {\n                const children = res.data.map((value: any) => this.convertChapter(value));\n                item.children = children;\n                this.dataSource.data = [];\n                this.dataSource.data = this.chapter;\n                setTimeout(() => {\n                    this.treeControl.expand(item);\n                });\n            });\n    }\n\n    getChildrenOfTree(item: ChapterNode) {\n        this.getChildrenOfModel(item);\n        this.refreshTree();\n    }\n\n    goToDetail(item: ChapterNode) {\n        this.isActive = item.id;\n        this.getDetailModel(item);\n    }\n\n    receiveMessage($event: any) {\n        this.infoModel = $event.data;\n        this.isActive = $event.data.id;\n        this.getListTreeOfSearch($event);\n        this.handleScrollTree($event.data.id);\n    }\n\n    openItem(node: ChapterNode): void {\n        if (node.children) this.treeControl.expand(node);\n        node.children?.forEach((item, index) => {\n            this.openItem(item);\n        });\n    }\n\n    refreshTree() {\n        let _data = this.dataSource.data;\n        this.dataSource.data = [];\n        this.dataSource.data = _data;\n    }\n\n    getListTreeOfSearch(item: any) {\n        this.searchService\n            .getListTreeOfSearch_ICD9(item.model, item.id, this.language)\n            .subscribe((res) => {\n                const find = res.children.find((el: any) => el.children?.length > 0);\n                const findnode = this.treeControl.dataNodes.find((dtn) => dtn.id === find.id);\n                const children: ChapterNode[] = find.children.map((child: any) =>\n                    this.convertChapter(child)\n                );\n                if (findnode) {\n                    findnode.children = children;\n                    this.dataSource.data = [];\n                    this.dataSource.data = this.chapter;\n                    this.openItem(findnode);\n                }\n            });\n    }\n\n    goToOpenTree(event: any) {\n        event.preventDefault();\n        let item = {\n            model: '',\n            id: '',\n        };\n        let href = '';\n        let target = event.target || event.srcElement;\n        while (target) {\n            if (target instanceof HTMLAnchorElement) {\n                href = target.getAttribute('href')!; //non-null assertion\n                break;\n            }\n            target = target.parentNode;\n        }\n        item.id = href.split('/')[1];\n        item.model = href.split('/')[0];\n        if (item && item.id && item.model) {\n            this.isActive = item.id;\n            this.getListTreeOfSearch(item);\n            this.getDetailModel(item);\n            this.handleScrollTree(item.id);\n        }\n    }\n\n    handleScrollTree(id: any) {\n        setTimeout(() => {\n            this.router.navigate([], { fragment: id }).then((res) => {\n                const element = document.getElementById(id);\n                if (element != undefined) element.scrollIntoView({ behavior: 'smooth' });\n            });\n        }, 1000);\n    }\n}\n","<div class=\"card sidebar__common\">\n    <div class=\"card-body\">\n        <div class=\"flex-container\">\n            <div class=\"left-column\">\n                <ul class=\"list-item\">\n                    <li *ngFor=\"let doc of documents\" (click)=\"showDocumentDetails(doc.id)\" class=\"item\" [class.selected]=\"selectedItemId === doc.id\">\n                        <div class=\"font-semibold title\">{{ doc.subject }}</div>\n                        <div class=\"text-gray-500 date\">{{ doc.created_at }}</div>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"right-column\">\n                <div *ngIf=\"selectedDocument\">\n                    <div class=\"font-semibold title\">{{ selectedDocument.subject }}</div>\n                    <div class=\"text-gray-500 date\">{{ selectedDocument.created_at }}</div>\n                    <br/>\n                    <div class=\"details-item\" [innerHTML]=\"selectedDocument.content\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { ToastrService } from 'ngx-toastr';\nimport {Component, OnInit} from '@angular/core';\nimport {IcdService} from 'src/shared/services/icd.service';\n\n@Component({\n    selector: 'app-instruction-icd10',\n    templateUrl: './instruction-icd10.component.html',\n    styleUrls: ['./instruction-icd10.component.scss']\n})\nexport class InstructionIcd10Component implements OnInit {\n    documents: any[] = [];\n    selectedDocument: any = null;\n    selectedItemId: number | null = null;\n\n    constructor(public icdService: IcdService,private toastService:ToastrService) {\n    }\n\n    ngOnInit(): void {\n        this.loadDocumentList('ICD10');\n    }\n\n    loadDocumentList(category: string) {\n        this.icdService.getDocumentList(category).subscribe((data) => {\n            this.documents = data.data;\n            this.showDocumentDetails(this.documents[0].id)\n        });\n    }\n\n    showDocumentDetails(id: number) {\n        this.icdService.getDocumentDetails(id).subscribe(\n            (data: any) => {\n                // On successful response\n                this.selectedDocument = data.data;\n                this.selectedItemId = id;\n            },\n            (error: any) => {\n                // On error\n                console.error('An error occurred while fetching document details:', error);\n                // Handle error here, for example, show a message to the user\n                this.toastService.error(`${error?.error.error}`, 'Thất bại');\n\n            }\n        );\n    }\n    \n}\n","<div class=\"card sidebar__common\">\n    <div class=\"card-body\">\n        <div class=\"flex-container\">\n            <div class=\"left-column\">\n                <ul class=\"list-item\">\n                    <li *ngFor=\"let doc of documents\" (click)=\"showDocumentDetails(doc.id)\" class=\"item\" [class.selected]=\"selectedItemId === doc.id\">\n                        <div class=\"font-semibold title\">{{ doc.subject }}</div>\n                        <div class=\"text-gray-500 date\">{{ doc.created_at }}</div>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"right-column\">\n                <div *ngIf=\"selectedDocument\">\n                    <div class=\"font-semibold title\">{{ selectedDocument.subject }}</div>\n                    <div class=\"text-gray-500 date\">{{ selectedDocument.created_at }}</div>\n                    <br/>\n                    <div class=\"details-item\" [innerHTML]=\"selectedDocument.content\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { IcdService } from 'src/shared/services/icd.service';\n\n@Component({\n    selector: 'app-instruction-icd9',\n    templateUrl: './instruction-icd9.component.html',\n    styleUrls: ['./instruction-icd9.component.scss'],\n})\nexport class InstructionIcd9Component implements OnInit {\n    documents: any[] = [];\n    selectedDocument: any = null;\n    selectedItemId: number | null = null;\n\n    constructor(public icdService: IcdService,private toastService:ToastrService) {}\n\n    ngOnInit(): void {\n        this.loadDocumentList('ICD9');\n    }\n\n    loadDocumentList(category: string) {\n        this.icdService.getDocumentList(category).subscribe((data) => {\n            this.documents = data.data;\n            this.showDocumentDetails(this.documents[0].id);\n        });\n    }\n\n    showDocumentDetails(id: number) {\n        this.icdService.getDocumentDetails(id).subscribe(\n            (data: any) => {\n                // On successful response\n                this.selectedDocument = data.data;\n                this.selectedItemId = id;\n            },\n            (error: any) => {\n                // On error\n                console.error('An error occurred:', error);\n                this.toastService.error(`${error?.error.error}`, 'Thất bại');\n\n            }\n        );\n        \n    }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { API_URL } from '../common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchGlobalService {\n  private apiUrlRec = `${API_URL}/api/ICDSmartSearch/recommend`; // Thay đổi URL API tìm kiếm tại đây\n  private apiUrlApp = `${API_URL}/api/ICDSmartSearch/apps`; \n  private apiSearch=`${API_URL}/api/ICDSmartSearch/search`;\n  private apiEvaluate=`${API_URL}/api/ICDSmartSearch/evaluate`;\n  private apiGetEvaluate=`${API_URL}/api/ICDSmartSearch/get_evaluates`;\n  constructor(private http: HttpClient) { \n  }\n\n  rec(query: string): Observable<any[]> {\n    const url = `${this.apiUrlRec}?q=${query.trim()}`;\n    return this.http.get<any[]>(url);\n  }\n\n  search(param: string,app:string, display: string): Observable<any[]>{\n    const headers = new HttpHeaders({\n      'X-Client-IP': localStorage.getItem('client_ip') || ''\n    });\n    const url=`${this.apiSearch}?q=${param.trim()}&app=${app==='all' || display === 'tree'?\"\":app}&tree=${display==='tree' ? 1 : 0}`;\n    return this.http.get<any[]>(url, { headers: headers });\n  }\n\n  evaluate(id:number,index:number,like:number): Observable<any[]>{\n    let csrftoken: string = ''; // Assigning a default value\n        if (document.cookie && document.cookie !== '') {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, 10) === 'csrftoken' + '=') {\n                    csrftoken = decodeURIComponent(cookie.substring(10));\n                    break;\n                }\n            }\n        }\n        const csrfToken = csrftoken;\n    const url=`${this.apiEvaluate}?id=${id}&index=${index}&like=${like}`\n    return this.http.post<any[]>(url,{} ,{\n      headers: { 'X-CSRFToken': csrfToken },\n  });\n  }\n  getEvaluate(id:number): Observable<any[]>{\n    let csrftoken: string = ''; // Assigning a default value\n        if (document.cookie && document.cookie !== '') {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, 10) === 'csrftoken' + '=') {\n                    csrftoken = decodeURIComponent(cookie.substring(10));\n                    break;\n                }\n            }\n        }\n        const csrfToken = csrftoken;\n    const url=`${this.apiGetEvaluate}?id=${id}`\n    return this.http.post<any[]>(url,[],{\n      headers: { 'X-CSRFToken': csrfToken },\n  });\n  }\n  getApp(): Observable<any[]>{\n    return this.http.get<any[]>(this.apiUrlApp);\n\n  }\n}\n","<div class=\"w-full -mt-6 h-full relative\">\n    <div class=\"z-[100] h-[70px] sticky header-s top-[113px] -ml-4 px-4 bg-white flex items-center\"\n        style=\"width: calc(100% + 32px); box-shadow: 0 4px 2px -2px rgba(0, 0, 0, 0.2)\">\n        <p class=\"text-xl text-center font-medium m-0 global-text tracking-wider\">\n            <span class=\"highlight-icd\">ICD</span> \n            <span class=\"highlight-xanh-y-te\"> Smart Search</span>\n        </p>\n        <div #boxSearch id=\"box-search\" class=\"bar ml-[20px] bg-white flex items-center relative\">\n            <div class=\"w-[50px] h-full flex items-center justify-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" class=\"translate-x-[2px]\" height=\"24\" fill=\"#5F6368\">\n                    <path\n                        d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n                </svg>\n            </div>\n            <input autocomplete=\"off\" #searchInput [(ngModel)]=\"searchQuery\" (input)=\"handleInputChange()\"\n                (keydown)=\"handleKeyDown($event)\" id=\"searchGlobal\" class=\"searchbar\"\n                placeholder=\"Nhập bất kì từ khóa nào để tìm kiếm\" type=\"text\" title=\"Search\" />\n\n            <ng-container *ngIf=\"isLoadingSearch; else info\">\n                <div class=\"flex items-center justify-center\">\n                    <div class=\"spinner-container\">\n                        <div class=\"spinner_search\"></div>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-template #info>\n                <div (click)=\"handleDelInput()\"\n                    [ngClass]=\"{ hidden: searchQuery.length <= 0, flex: searchQuery.length > 0 }\"\n                    class=\"w-[50px] h-full items-center justify-center cursor-pointer\">\n                    <svg focusable=\"false\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                        <path fill=\"#70757a\"\n                            d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\">\n                        </path>\n                    </svg>\n                </div>\n            </ng-template>\n            <div #recommendBox id=\"recommend-box\" class=\"recommend-box hidden w-full bg-white absolute top-[45px]\">\n                <ul class=\"w-full pt-2 border-t list-none p-0\">\n                    <li *ngFor=\"let item of searchRecommend; let i = index\" class=\"h-[30px] rec-item\"\n                        [class.activate]=\"i === selectedIndex\" (click)=\"onSearchItemClick(item)\">\n                        <div class=\"w-full h-full flex items-center\">\n                            <div class=\"w-[50px] h-full flex items-center justify-center\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" class=\"translate-x-[2px]\" height=\"24\"\n                                    fill=\"#5F6368\">\n                                    <path\n                                        d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n                                </svg>\n                            </div>\n                            {{ item }}\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div class=\"h-[45px] mr-4\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Hiển thị</mat-label>\n                <mat-select [formControl]=\"displayMode\">\n                    <mat-option value=\"tree\">Cây</mat-option>\n                    <mat-option value=\"flat\">Phẳng</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"h-[45px]\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Phiên bản</mat-label>\n                <mat-select [formControl]=\"appFilter\">\n                    <mat-option value=\"ICD-10\">ICD 10</mat-option>\n                    <mat-option value=\"ICD-9\">ICD 9</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n<!--        <div class=\"flex flex-row gap-3\">-->\n<!--            <button class=\" border flex items-center justify-center rounded-[25px] w-[80px] h-[30px]\" [ngClass]=\"{-->\n<!--                'hover:bg-slate-300': appFilter.value !== '',-->\n<!--                'bg-slate-300': appFilter.value === ''-->\n<!--            }\" (click)=\"setActiveButton('')\">-->\n<!--            Tất cả-->\n<!--        </button>-->\n\n<!--        <button class=\" border flex items-center justify-center rounded-[25px] w-[80px] h-[30px]\" [ngClass]=\"{-->\n<!--                'hover:bg-slate-300': appFilter.value !== 'ICD-10',-->\n<!--                'bg-slate-300': appFilter.value === 'ICD-10'-->\n<!--            }\" (click)=\"setActiveButton('ICD-10')\">-->\n<!--            ICD-10-->\n<!--        </button>-->\n\n<!--        <button class=\"border flex items-center justify-center rounded-[25px] w-[80px] h-[30px]\" [ngClass]=\"{-->\n<!--                'hover:bg-slate-300': appFilter.value !== 'ICD-9',-->\n<!--                'bg-slate-300': appFilter.value === 'ICD-9'-->\n<!--            }\" (click)=\"setActiveButton('ICD-9')\">-->\n<!--            ICD-9-->\n<!--        </button>-->\n<!--        </div>-->\n    </div>\n    <p *ngIf=\"!isLoading && searchResult && searchResult.length > 0\" class=\"mt-3 mb-0\">\n        Khoảng {{ searchResult.length }} kết quả ({{ responseTime }} giây)\n    </p>\n    <p *ngIf=\"!isLoading && searchResult && searchResult.length <= 0\" class=\"mt-3 text-[red] mb-0\">\n        Không tìm thấy kết quả nào!\n    </p>\n    <div id=\"search-result\" class=\"flex flex-row gap-3\">\n        <div #searchBox *ngIf=\"!isLoading && displayMode.value === 'flat'\"  id=\"result-box\" class=\"result-box w-full mt-1\">\n            <ul class=\"w-full pt-2 border-t list-none px-0\">\n                <li *ngFor=\"let item of searchResult; let i = index;\" class=\"mb-3\">\n                    <div class=\"w-full rounded-2xl bg-white px-3 pt-3 shadow-md h-full flex flex-col\">\n                        <div (click)=\"getData(item)\"\n                            class=\"flex w-fit  flex-row items-center cursor-pointer mb-0.5 h-s\">\n                            <div class=\"text-[10px] font-semibold rounded-[10px] p-1 w-[45px] h-[45px] flex items-center justify-center text-white\"\n                                [ngStyle]=\"{ 'background-color': item.color }\">\n                                {{ item.app_name }}\n                            </div>\n\n                            <div class=\"flex flex-col ml-3\">\n                                <p class=\"m-0\">{{ item.model }}</p>\n                                <p class=\"m-0 text-[#4d5156] text-[12px]\">\n                                    {{ baseUrl\n                                    }}<span *ngFor=\"let tx of item.split_href\"> › {{ tx }}</span>\n                                </p>\n                            </div>\n                        </div>\n                        <p (click)=\"getData(item)\"\n                            class=\"text-lg name-s w-fit cursor-pointer text-[#1a0dab] !mb-0 hover:underline\">\n                            {{ item.name_vn }}\n                            – {{ item.name }}\n                        </p>\n                        <p class=\"text-[#4d5156] content-x m-0\" [innerHTML]=\"item.content\"></p>\n                        <!-- <p class=\"text-gray-600 font-medium\"><span (click)=\"onLike(i)\"\n                                class=\"like mr-2 cursor-pointer\"><svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\"\n                                    [attr.fill]=\"eve[i]===1 ? '#1a0dab' : 'none'\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path\n                                        d=\"M7.47998 18.35L10.58 20.75C10.98 21.15 11.88 21.35 12.48 21.35H16.28C17.48 21.35 18.78 20.45 19.08 19.25L21.48 11.95C21.98 10.55 21.08 9.34997 19.58 9.34997H15.58C14.98 9.34997 14.48 8.84997 14.58 8.14997L15.08 4.94997C15.28 4.04997 14.68 3.04997 13.78 2.74997C12.98 2.44997 11.98 2.84997 11.58 3.44997L7.47998 9.54997\"\n                                        [attr.stroke]=\"eve[i]===1 ? '#1a0dab' : '#292D32'\" stroke-width=\"1.5\"\n                                        stroke-miterlimit=\"10\" />\n                                    <path\n                                        d=\"M2.38 18.35V8.55002C2.38 7.15002 2.98 6.65002 4.38 6.65002H5.38C6.78 6.65002 7.38 7.15002 7.38 8.55002V18.35C7.38 19.75 6.78 20.25 5.38 20.25H4.38C2.98 20.25 2.38 19.75 2.38 18.35Z\"\n                                        [attr.stroke]=\"eve[i]===1 ? '#1a0dab' : '#292D32'\" stroke-width=\"1.5\"\n                                        stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                </svg>\n                            </span> <span (click)=\"onUnLike(i)\" class=\"cursor-pointer\"><svg width=\"20\" height=\"20\"\n                                    viewBox=\"0 0 24 24\" [attr.fill]=\"eve[i]===0 ? 'red' : 'none'\"\n                                    xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path\n                                        d=\"M16.52 5.65002L13.42 3.25002C13.02 2.85002 12.12 2.65002 11.52 2.65002H7.71998C6.51998 2.65002 5.21998 3.55002 4.91998 4.75002L2.51998 12.05C2.01998 13.45 2.91998 14.65 4.41998 14.65H8.41998C9.01998 14.65 9.51998 15.15 9.41998 15.85L8.91998 19.05C8.71998 19.95 9.31998 20.95 10.22 21.25C11.02 21.55 12.02 21.15 12.42 20.55L16.52 14.45\"\n                                        [attr.stroke]=\"eve[i]===0 ? 'red' : '#292D32'\" stroke-width=\"1.5\"\n                                        stroke-miterlimit=\"10\" />\n                                    <path\n                                        d=\"M21.62 5.65V15.45C21.62 16.85 21.02 17.35 19.62 17.35H18.62C17.22 17.35 16.62 16.85 16.62 15.45V5.65C16.62 4.25 17.22 3.75 18.62 3.75H19.62C21.02 3.75 21.62 4.25 21.62 5.65Z\"\n                                        [attr.stroke]=\"eve[i]===0 ? 'red' : '#292D32'\" stroke-width=\"1.5\"\n                                        stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                </svg>\n                            </span>\n                        </p> -->\n                    </div>\n                </li>\n            </ul>\n        </div>\n        <div *ngIf=\"!isLoading && displayMode.value === 'tree'\" class=\"mt-1 w-full\">\n            <mat-tree #tree [dataSource]=\"searchTreeResult\" [treeControl]=\"treeControl\" class=\"tree-view\">\n                <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle>\n                        <span class=\"text-lg cursor-pointer hover:text-[#1a0dab] hover:underline\" (click)=\"getData(node)\">\n                            <b>{{node.code}}: </b>{{ node.name_vn }}<br>\n                            <span class=\"text-sm\"> {{ node.name }} </span>\n                        </span>\n                </mat-tree-node>\n                <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChild\">\n                    <div class=\"mat-tree-node !min-h-[36px] max-h-[42px]\">\n                        <button mat-icon-button matTreeNodeToggle\n                                [attr.aria-label]=\"'Toggle ' + node.name\">\n                            <mat-icon class=\"mat-icon-rtl-mirror\">\n                                {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n                            </mat-icon>\n                        </button>\n                        <span class=\"text-lg cursor-pointer hover:text-[#1a0dab] hover:underline space-x-2\" (click)=\"getData(node)\">\n                            <b>{{node.code}}: </b> {{node.name_vn}}\n                        </span>\n                    </div>\n                    <div [class.tree-view-invisible]=\"!treeControl.isExpanded(node)\"\n                         role=\"group\">\n                        <span class=\"text-sm\">{{node.name}}</span>\n                        <ng-container matTreeNodeOutlet></ng-container>\n                    </div>\n                </mat-nested-tree-node>\n            </mat-tree>\n        </div>\n        <div>\n            <div class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"offcanvasRight\" aria-labelledby=\"offcanvasRightLabel\">\n                <div class=\"offcanvas-header\">\n                    <div id=\"offcanvasRightLabel\">\n                        <h5>ICD Smart Search | icd.whiteneuron.com</h5>\n                    </div>\n                    <button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n                </div>\n                <div class=\"offcanvas-body\">\n                    <div [innerHTML]=\"getSafeHtml()\"></div>\n                </div>\n            </div>\n            <!-- <div class=\"content-rs bg-white p-4 sticky top-[233px] shadow-md rounded-[10px] overflow-y-auto\" style=\"\n                    width: calc(100vw/4);\n                    height: calc(100vh - 240px);\n                \" *ngIf=\"dataHtml\">\n            </div> -->\n        </div>\n    </div>\n</div>\n<div *ngIf=\"isLoading || !searchResult\" class=\"mt-[250px] flex items-center justify-center\">\n    <div class=\"spinner-container\">\n        <div class=\"spinner\"></div>\n    </div>\n</div>","import { Component, ElementRef, OnInit, QueryList, Renderer2, ViewChild, ViewChildren } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { API_URL } from 'src/shared/common';\nimport { IcdService } from 'src/shared/services/icd.service';\nimport { SearchGlobalService } from 'src/shared/services/search-global.service';\nimport { FormControl } from '@angular/forms';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { MatTree, MatTreeNestedDataSource } from '@angular/material/tree';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\n\n// bootstrap\ndeclare var bootstrap: any;\n\ninterface searchItem {\n    app: string;\n    app_name: string;\n    code: string;\n    content: string;\n    href: string;\n    id: string;\n    model: string;\n    name: string;\n    name_vn: string;\n    split_href: Array<string>;\n    color: string;\n}\n\ninterface SearchTreeItem {\n    model: string;\n    id: string;\n    app?: string;\n    name: string;\n    name_vn: string;\n    code: string;\n    childs: SearchTreeItem[];\n    content?: string;\n    href?: string;\n    scores: number;\n}\n\ninterface SearchTreeResult {\n    ICD9: SearchTreeItem[];\n    ICD10: SearchTreeItem[];\n}\n\n@Component({\n    selector: 'app-search-global-detail',\n    templateUrl: './search-global-detail.component.html',\n    styleUrls: ['./search-global-detail.component.scss'],\n})\nexport class SearchGlobalDetailComponent implements OnInit {\n    searchQuery: string = '';\n    searchRecommend: any;\n    selectedIndex: number = -1;\n    appList: any;\n    searchResult: searchItem[];\n    searchTreeResult: SearchTreeItem[];\n    responseTime: any;\n    dataHtml: any;\n    appFilter = new FormControl('ICD-10', {nonNullable: true});\n    offcanvas: any;\n    displayMode = new FormControl('flat', {nonNullable: true})\n\n\n    previousSearchQuery: string = '';\n    like: boolean | null = null;\n    @ViewChild('searchInput') searchInput: ElementRef<HTMLInputElement>;\n    @ViewChild('recommendBox') recommendBox: ElementRef;\n    @ViewChild('boxSearch') boxSearch: ElementRef;\n    @ViewChild('del') del: ElementRef;\n    @ViewChildren('tree') tree: QueryList<MatTree<SearchTreeItem, SearchTreeItem>>;\n\n    treeControl = new NestedTreeControl<SearchTreeItem>(node => node.childs)\n    // dataSource = new MatTreeNestedDataSource<SearchTreeItem>()\n    hasChild = (_: number, node: SearchTreeItem) => !!node.childs && node.childs.length > 0;\n    baseUrl: string;\n    searchTimer: any;\n    isAllButtonActive = false;\n    isIcd10ButtonActive = false;\n    isIcd9ButtonActive = false;\n    isLoading: boolean = false;\n    isLoadingSearch: boolean = false;\n    idHis: number;\n    eve: number[] = [];\n    constructor(\n        private searchService: SearchGlobalService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private icdService: IcdService,\n        \n        private sanitizer: DomSanitizer,\n        private renderer: Renderer2,\n        private toastService: ToastrService\n    ) {\n        // const protocol = window.location.protocol; // 'https:'\n        // const hostname = window.location.hostname; // 'chat.openai.com'\n        // const port = window.location.port ? `:${window.location.port}` : \"\"; // ':port' or '' if no port\n\n        this.baseUrl = `${API_URL}`;\n    }\n    getSafeHtml() {\n        return this.sanitizer.bypassSecurityTrustHtml(this.dataHtml);\n    }\n\n    ngOnInit(): void {\n        this.route.queryParams.subscribe((params) => {\n            this.searchQuery = params['q'] || '';\n            if (params['app']) {\n                this.appFilter.setValue(params['app']);\n            }\n            if (params['display']) {\n                console.log(params['display']);\n                this.displayMode.setValue(params['display']);\n            }\n            this.getSearch();\n\n            // this.searchService.rec(this.searchQuery).subscribe((results: any) => {\n            //     this.searchRecommend = results.result;\n            //     this.selectedIndex = -1;\n            // });\n        });\n        this.renderer.listen('document', 'click', (event: MouseEvent) => {\n            const clickedElement = event.target as Node;\n\n            if (!this.recommendBox.nativeElement.contains(clickedElement)) {\n                this.closeRec();\n            }\n            if (\n                this.searchInput &&\n                this.searchInput.nativeElement &&\n                this.searchInput.nativeElement.contains(clickedElement)\n            ) {\n                if (this.searchRecommend) {\n                    if (this.searchRecommend.length > 0) {\n                        this.openRec();\n                    }\n                }\n            }\n        });\n        this.displayMode.valueChanges.subscribe((value) => {\n            this.loadData();\n        })\n        this.appFilter.valueChanges.subscribe((value) => {\n            this.loadData();\n        })\n    }\n    \n    loadData() {\n        const startTime = new Date();\n        this.isLoading = true;\n        this.searchService.search(this.searchQuery, this.appFilter.value, this.displayMode.value).subscribe((results: any) => {\n            const endTime = new Date();\n            this.responseTime = (endTime.getTime() - startTime.getTime()) / 1000;\n            this.idHis = results.id;\n            if (this.displayMode.value == 'flat') {\n                this.searchResult = results.result.map((item: searchItem) => {\n                    return {\n                        ...item,\n                        split_href: item.href.split('/'),\n                    };\n                });\n            } else {\n                if (this.appFilter.value === 'ICD-9') {\n                    this.searchTreeResult = results.result.ICD9;\n                } else {\n                    this.searchTreeResult = results.result.ICD10;\n                }\n            }\n            // this.searchService.getEvaluate(this.idHis).subscribe((results: any) => {\n            //     if (this.eve.length === 0) {\n            //         this.eve = results.evaluates;\n            //     }\n            // });\n            this.isLoading = false;\n        });\n    }\n\n    ngAfterViewInit() {\n        this.tree.changes.subscribe(() => {\n            for (let tree of this.tree) {\n                let data: SearchTreeItem[] = tree.dataSource as SearchTreeItem[];\n                tree.treeControl.dataNodes = data.slice();\n                tree.treeControl.expandAll();\n            }\n        })\n    }\n\n    setActiveButton(filter: string) {\n        this.appFilter.setValue(filter);\n        this.router.navigate(['/search/query-global'], {\n            queryParams: { q: this.searchQuery, app: this.appFilter.value },\n        });\n    }\n\n    closeRec() {\n        if (\n            this.boxSearch &&\n            this.boxSearch.nativeElement &&\n            this.recommendBox &&\n            this.recommendBox.nativeElement\n        ) {\n            this.boxSearch.nativeElement.classList.remove('bar-data');\n            this.boxSearch.nativeElement.classList.add('bar');\n            this.recommendBox.nativeElement.classList.add('hidden');\n        }\n    }\n    openRec() {\n        if (\n            this.boxSearch &&\n            this.boxSearch.nativeElement &&\n            this.recommendBox &&\n            this.recommendBox.nativeElement\n        ) {\n            this.boxSearch.nativeElement.classList.add('bar-data');\n            this.boxSearch.nativeElement.style.margin= '0 auto';\n            this.boxSearch.nativeElement.classList.remove('bar');\n            this.recommendBox.nativeElement.classList.remove('hidden');\n        }\n    }\n    onSearch() {\n        this.isLoadingSearch = true;\n        // Thực hiện tìm kiếm hoặc xử lý tìm kiếm tại đây\n        this.previousSearchQuery = this.searchQuery;\n        this.searchService.rec(this.searchQuery).subscribe(\n            (results: any) => {\n                this.isLoadingSearch = false;\n                this.searchRecommend = results.result;\n                this.selectedIndex = -1;\n                if (this.searchRecommend.length > 0) {\n                    this.openRec();\n                } else {\n                    this.closeRec();\n                }\n            },\n            (error: any) => {\n                this.isLoadingSearch = false;\n            }\n        );\n    }\n    onLike(index: number) {\n        this.searchService.evaluate(this.idHis, index, 1).subscribe((results: any) => {\n            this.eve[results.index] = results.like;\n            if (results.status === 'success')\n                this.toastService.success(`${results?.message}`, 'Thành công');\n            else this.toastService.error(`${results?.message}`, 'Thất bại');\n        });\n\n        // this.searchService.getEvaluate(this.idHis).subscribe((results: any) => {\n        //     this.eve = results.evaluates;\n        // });\n    }\n    onUnLike(index: number) {\n        this.searchService.evaluate(this.idHis, index, 0).subscribe((results: any) => {\n            this.eve[results.index] = results.like;\n            if (results.status === 'success')\n                this.toastService.success(`${results?.message}`, 'Thành công');\n            else this.toastService.error(`${results?.message}`, 'Thất bại');\n        });\n\n        // this.searchService.getEvaluate(this.idHis).subscribe((results: any) => {\n        //     this.eve = results.evaluates;\n        // });\n    }\n    handleInputChange() {\n        clearTimeout(this.searchTimer);\n        this.searchTimer = setTimeout(() => {\n            if (this.searchQuery.trim() !== this.previousSearchQuery) this.onSearch();\n        }, 250);\n    }\n\n    handleKeyDown(event: KeyboardEvent) {\n        if (event.key === 'ArrowDown' && this.selectedIndex < this.searchRecommend.length - 1) {\n            event.preventDefault();\n            this.selectedIndex++;\n        } else if (event.key === 'ArrowUp' && this.selectedIndex > 0) {\n            event.preventDefault();\n            this.selectedIndex--;\n        }\n        if (this.selectedIndex >= 0 && this.searchRecommend[this.selectedIndex]) {\n            this.searchQuery = this.searchRecommend[this.selectedIndex];\n        }\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            if (this.searchQuery.length)\n                this.getSearch();\n        }\n    }\n    handleDelInput() {\n        this.searchQuery = '';\n        this.searchRecommend = [];\n        this.closeRec();\n    }\n    onSearchItemClick(searchTerm: string) {\n        // this.router.navigate(['/search/query-global'], {\n        //     queryParams: { q: searchTerm, app: app, display: this.displayMode.value },\n        // });\n        this.previousSearchQuery = this.searchQuery;\n        this.searchQuery = searchTerm;\n        this.loadData()\n        this.closeRec();\n        // Adjust according to your routing setup\n    }\n    getSearch() {\n        const startTime = new Date();\n        this.isLoading = true;\n        this.closeRec();\n        this.searchService.search(this.searchQuery, this.appFilter.value, this.displayMode.value).subscribe(\n            (results: any) => {\n                const endTime = new Date();\n                this.responseTime = (endTime.getTime() - startTime.getTime()) / 1000;\n                this.idHis = results.id;\n\n                if (this.displayMode.value == 'flat') {\n                    this.searchResult = results.result.map((item: searchItem) => {\n                        return {\n                            ...item,\n                            split_href: item.href.split('/'),\n                        };\n                    });\n                } else {\n                    if (this.appFilter.value === 'ICD-9') {\n                        this.searchTreeResult = results.result.ICD9;\n                    } else {\n                        this.searchTreeResult = results.result.ICD10;\n                    }\n                }\n                // this.searchService.getEvaluate(this.idHis).subscribe((results: any) => {\n                //     this.eve = results.evaluates;\n                // });\n                this.isLoading = false;\n            },\n            (error) => {\n                this.isLoading = false;\n                this.toastService.error(`${error?.error.error}`, 'Thất bại');\n\n            }\n        );\n    }\n    getData(item: searchItem | SearchTreeItem) {\n\n        this.offcanvas = new bootstrap.Offcanvas(document.getElementById('offcanvasRight')); \n\n        let id = item.id;\n        let model = item.model.toLocaleLowerCase();\n        let app = this.appFilter.value.replace('-', '')\n\n        // let language = this.language\n        // this.url = this.router.url.includes('icd10-dual')\n        // if (this.url)\n        //   language = 'dual'\n        // this.isLoading = true;\n\n        if (app === 'ICD10') {\n            this.icdService.getDetailModel(model, id, 'vi').subscribe(\n                (res) => {\n                    // On successful response\n                    // this.isLoading = false;\n                    this.dataHtml = res.data.data.html;\n                    this.offcanvas.show();\n                },\n                (error) => {\n                    // On error\n                    // this.isLoading = false;\n\n                    console.error('An error occurred in getDetailModel:', error);\n                    this.toastService.error(`${error?.error.error}`, 'Thất bại');\n                }\n            );\n        } else if (app === 'ICD9') {\n            this.icdService.getDetailModel_ICD9(model, id, 'vi').subscribe(\n                (res) => {\n                    // On successful response\n                    // this.isLoading = false;\n                    this.dataHtml = res.data.data.html;\n                    this.offcanvas.show();\n                },\n                (error) => {\n                    // On error\n                    // this.isLoading = false;\n\n                    console.error('An error occurred in getDetailModel_ICD9:', error);\n                    this.toastService.error(`${error?.error.error}`, 'Thất bại');\n                }\n            );\n        }\n        \n    }\n\n}\n","<div class=\"w-full h-full flex items-center justify-center\">\n    <div class=\" search-container w-[85vw] h-[70vh]\">\n        <div class=\" text-center flex flex-col justify-center pt-20\">\n            <div class=\"max-w-2xl mx-auto text-center\">\n                <p class=\"main-title font-semibold text-gray-900 mb-4 mt-4\">\n                    <span class=\"highlight-icd\">ICD</span> \n                    <span class=\"highlight-xanh-y-te\"> Smart Search</span>\n                </p>\n                <p class=\"sub-title text-gray-900 mb-4\">\n                    Tìm kiếm thông tin\n                    <span class=\"highlight-nhanh-chong\">nhanh chóng</span> -\n                    <span class=\"highlight-thong-minh\">thông minh</span> - \n                    <span class=\"highlight-tien-loi\">tiện lợi</span>\n                </p>\n            </div>\n            <div class=\"flex items-center justify-center \">\n                <div #boxSearch id=\"box-search\" class=\"bar bg-white flex items-center relative\">\n                    <div class=\"w-[50px] h-full flex items-center justify-center\">\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"24\"\n                            class=\"translate-x-[2px]\"\n                            height=\"24\"\n                            fill=\"#5F6368\"\n                        >\n                            <path\n                                d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n                            />\n                        </svg>\n                    </div>\n                    <input\n                        autocomplete=\"off\"\n                        #searchInput\n                        [(ngModel)]=\"searchQuery\"\n                        (input)=\"handleInputChange()\"\n                        (keydown)=\"handleKeyDown($event)\"\n                        id=\"searchGlobal\"\n                        class=\"searchbar\"\n                        placeholder=\"Nhập bất kì từ khóa nào để tìm kiếm \"\n                        type=\"text\"\n                        title=\"Search\"\n                    />\n                    <div\n                    (click)=\"handleDelInput()\"\n                    [ngClass]=\"{ hidden: searchQuery.length <= 0, flex: searchQuery.length > 0 }\"\n                    class=\"w-[50px] h-full items-center justify-center cursor-pointer\"\n                >\n                    <svg\n                        focusable=\"false\"\n                        width=\"24\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 24 24\"\n                        *ngIf=\"!isLoading\"\n                    >\n                        <path\n                            fill=\"#70757a\"\n                            d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n                        ></path>\n                    </svg>\n                    <div class=\"spinner-container\">\n                        <div class=\"spinner\" *ngIf=\"isLoading\"></div>\n                    </div>\n                </div>\n\n                    <div\n                        #recommendBox\n                        id=\"recommend-box\"\n                        class=\"recommend-box hidden w-full bg-white absolute top-[45px]\"\n                    >\n                        <ul class=\"w-full pt-2 border-t\">\n                            <li\n                                *ngFor=\"let item of searchRecommend; let i = index\"\n                                class=\"h-[30px] rec-item\"\n                                [class.activate]=\"i === selectedIndex\"\n                                (click)=\"onSearchItemClick(item)\"\n                            >\n                                <div class=\"w-full h-full flex items-center\">\n                                    <div class=\"w-[50px] h-full flex items-center justify-center\">\n                                        <svg\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            width=\"24\"\n                                            class=\"translate-x-[2px]\"\n                                            height=\"24\"\n                                            fill=\"#5F6368\"\n                                        >\n                                            <path\n                                                d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n                                            />\n                                        </svg>\n                                    </div>\n                                    {{ item }}\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n            </div>\n        </div>  \n        <!-- Ngay bên dưới thanh nhập liệu, có các nút tag đẹp mắt chứ thông tin \"ICD-10 vol 1\", \"ICD-10 vol 3\", \"ICD-9 CM\", \"Tiếng Anh\", \"Tiếng Việt\" -->\n        <div class=\"flex items-center justify-center mt-4\">\n            <div class=\"tag-container\">\n                <div class=\"tag-item\">\n                    <span class=\"tag-text\">ICD-10 vol 1</span>\n                </div>\n                <div class=\"tag-item\">\n                    <span class=\"tag-text\">ICD-10 vol 3</span>\n                </div>\n                <div class=\"tag-item\">\n                    <span class=\"tag-text\">ICD-9 CM</span>\n                </div>\n                <div class=\"tag-item\">\n                    <span class=\"tag-text\">Tiếng Anh</span>\n                </div>\n                <div class=\"tag-item\">\n                    <span class=\"tag-text\">Tiếng Việt</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Router } from '@angular/router';\nimport { SearchGlobalService } from './../../../../shared/services/search-global.service';\n\nimport {\n    Component,\n    ElementRef,\n    OnInit,\n    Renderer2,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n    selector: 'app-search-global',\n    templateUrl: './search-global.component.html',\n    styleUrls: ['./search-global.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class SearchGlobalComponent implements OnInit {\n    searchQuery: string = '';\n    searchRecommend: any;\n    selectedIndex: number = -1;\n    searchTimer: any;\n    isLoading: boolean = false;\n    previousSearchQuery: string = '';\n    @ViewChild('searchInput') searchInput: ElementRef<HTMLInputElement>;\n    @ViewChild('recommendBox') recommendBox: ElementRef;\n    @ViewChild('boxSearch') boxSearch: ElementRef;\n    @ViewChild('del') del: ElementRef;\n\n    constructor(\n        private searchService: SearchGlobalService,\n        private router: Router,\n        private toastService: ToastrService,\n        private renderer: Renderer2\n    ) {}\n\n    ngOnInit(): void {\n        this.renderer.listen('document', 'click', (event: MouseEvent) => {\n            const clickedElement = event.target as Node;\n            if (!this.recommendBox.nativeElement.contains(clickedElement)) {\n                this.closeRec();\n            }\n            if (this.searchInput.nativeElement.contains(clickedElement)) {\n                if (this.searchRecommend && this.searchRecommend.length > 0) {\n                    this.openRec();\n                }\n            }\n        });\n    }\n\n    onSearch() {\n        this.isLoading = true;\n        this.previousSearchQuery = this.searchQuery;\n        this.searchService.rec(this.searchQuery).subscribe(\n            (results: any) => {\n                this.isLoading = false;\n                this.searchRecommend = results.result;\n                this.selectedIndex = -1;\n                if (this.searchRecommend.length > 0) {\n                    this.openRec();\n                } else {\n                    this.closeRec();\n                }\n            },\n            (error: any) => {\n                this.isLoading = false;\n          \n            }\n        );\n    }\n\n    handleInputChange() {\n        clearTimeout(this.searchTimer);\n        this.searchTimer = setTimeout(() => {\n            if (this.searchQuery.trim() !== this.previousSearchQuery) this.onSearch();\n        }, 250);\n    }\n\n    handleKeyDown(event: KeyboardEvent) {\n        if (event.key === 'ArrowDown' && this.selectedIndex < this.searchRecommend.length - 1) {\n            event.preventDefault();\n            this.selectedIndex++;\n        } else if (event.key === 'ArrowUp' && this.selectedIndex > 0) {\n            event.preventDefault();\n            this.selectedIndex--;\n        }\n        if (this.selectedIndex >= 0 && this.searchRecommend[this.selectedIndex]) {\n            this.searchQuery = this.searchRecommend[this.selectedIndex];\n        }\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            if (this.searchQuery.length) {\n                this.onSearchItemClick(this.searchQuery);\n            }\n        }\n    }\n\n    handleDelInput() {\n        this.searchQuery = '';\n        this.searchRecommend = [];\n        this.closeRec();\n    }\n\n    onSearchItemClick(searchTerm: string) {\n        this.router.navigate(['/search/query-global'], {\n            queryParams: { q: searchTerm },\n        });\n    }\n\n    closeRec() {\n        if (this.boxSearch && this.boxSearch.nativeElement) {\n            this.boxSearch.nativeElement.classList.remove('bar-data');\n            this.boxSearch.nativeElement.classList.add('bar');\n        }\n        this.recommendBox.nativeElement.classList.add('hidden');\n    }\n\n    openRec() {\n        if (this.boxSearch && this.boxSearch.nativeElement) {\n            this.boxSearch.nativeElement.classList.add('bar-data');\n            this.boxSearch.nativeElement.classList.remove('bar');\n        }\n        this.recommendBox.nativeElement.classList.remove('hidden');\n    }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { API_ICF, API_URL } from '../common';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class IcfService {\r\n    private apiUrlRoot = `${API_ICF}/root`;\r\n    private apiUrlChapter = `${API_ICF}/chapter`;\r\n    private apiUrlBlock = `${API_ICF}/block`;\r\n    private apiUrlCategory = `${API_ICF}/category`;\r\n    private apiSearchICF = `${API_ICF}/search`;\r\n\r\n    constructor(private http: HttpClient) {\r\n      \r\n    }\r\n    \r\n    getRoot(lang: string): Observable<any[]> {\r\n        return this.http.get<any[]>(`${this.apiUrlRoot}/?lang=${lang}`);\r\n    }\r\n\r\n    searchICF(q: any | undefined, lang: string) {\r\n        if (!q || q === '*') {\r\n            q = '';\r\n        } else {\r\n            q = q.toLowerCase();\r\n        }\r\n        return this.http.get<any>(`${this.apiSearchICF}/${q.trim()}?lang=${lang}&html=true`);\r\n    }\r\n\r\n    getListTreeOfSearch(model: string, id: number, lang: string | null) {\r\n        return this.http.get<any>(`${this.apiSearchICF}tree/${model}?id=${id}&lang=${lang}`);\r\n    }\r\n\r\n    getListTreeOfSearch_ICF(model: string, id: number, lang: string | null) {\r\n        return this.http.get<any>(`${this.apiSearchICF}/${model}?id=${id}&lang=${lang}`);\r\n    }\r\n\r\n    getChapter(lang: string | null): Observable<any[]> {\r\n        return this.http.get<any[]>(`${this.apiUrlChapter}/?lang=${lang}`);\r\n    }\r\n    getBlock(lang: string | null): Observable<any[]> {\r\n        return this.http.get<any[]>(`${this.apiUrlBlock}/?lang=${lang}`);\r\n    }\r\n    getCategory(lang: string | null): Observable<any[]> {\r\n        return this.http.get<any[]>(`${this.apiUrlCategory}/?lang=${lang}`);\r\n    }\r\n\r\n    getChildrenOfModel(lang: string | null, id: string, model: string) {\r\n        return this.http.get<any[]>(\r\n            `${API_ICF}/tree/${model.toLowerCase()}?id=${id}&lang=${lang ? lang : 'dual'}`\r\n        );\r\n    }\r\n\r\n    getChildrendModel(lang: string | null, id: string, model: string) {\r\n        return this.http.get<any[]>(`${API_ICF}/${model.toLowerCase()}/${id}/child/?lang=${lang}`);\r\n    }\r\n\r\n    getDetailOfModel(lang: string | null, id: string, model: string) {\r\n        const headers = new HttpHeaders({\r\n            'X-Client-IP':   localStorage.getItem('client_ip') || ''\r\n        });\r\n        return this.http.get<any[]>(\r\n            `${API_ICF}/data/${model.toLowerCase()}?id=${id}&lang=${lang}`,\r\n            { headers: headers }\r\n        );\r\n    }\r\n\r\n    getDocumentList(category: string) {\r\n        return this.http.get<any>(`${API_URL}/api/DOC/list/${category}`);\r\n    }\r\n\r\n    getDocumentDetails(id: number) {\r\n        return this.http.get(`${API_URL}/api/DOC/data/${id}`);\r\n    }\r\n\r\n    // submit feedback\r\n\r\n    submitFeedback(feedbackData: any) {\r\n        let csrftoken: string = ''; // Assigning a default value\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, 10) === 'csrftoken' + '=') {\r\n                    csrftoken = decodeURIComponent(cookie.substring(10));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const csrfToken = csrftoken;\r\n        return this.http.post<any>(`${API_URL}/api/feedback/`, feedbackData, {\r\n            headers: { 'X-CSRFToken': csrfToken, 'X-Client-IP':   localStorage.getItem('client_ip') || '' },\r\n        });\r\n    }\r\n\r\n    getListFeedback() {\r\n        return this.http.get<any>(`${API_URL}/api/feedback/ICF/`);\r\n    }\r\n}\r\n","<div id=\"icf\" class=\"main__search mb-2 relative\">\n    <div  #boxSearch class=\" bar-1 bg-white flex items-center relative\">\n     \n            <div class=\"w-[50px] h-full flex items-center justify-center\">\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    class=\"translate-x-[2px]\"\n                    height=\"24\"\n                    fill=\"#5F6368\"\n                >\n                    <path\n                        d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n                    />\n                </svg>\n            </div>\n            <input\n                autocomplete=\"off\"\n                #searchInput\n                [(ngModel)]=\"debouncedValue\"\n                (input)=\"handleInputChange()\"\n                (keydown)=\"handleKeyDown($event)\"\n                (focus)=\"handleOpen()\"\n                id=\"search\"\n                class=\"searchbar\"\n                autocomplete=\"off\"\n                placeholder=\"{{\n                    language === 'en' ? 'Enter keywords to search' : 'Nhập từ khóa để tìm kiếm...'\n                }}\"\n                type=\"text\"\n                title=\"Search\"\n            />\n            <div\n                (click)=\"handleDelInput()\"\n                [ngClass]=\"{ hidden: debouncedValue.length <= 0, flex: debouncedValue.length > 0 }\"\n                class=\"w-[50px] h-full items-center justify-center cursor-pointer z-[1001]\"\n            >\n                <svg\n                    focusable=\"false\"\n                    width=\"24\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    *ngIf=\"!isSearching\"\n                >\n                    <path\n                        fill=\"#70757a\"\n                        d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n                    ></path>\n                </svg>\n                <div class=\"spinner-container\">\n                    <div class=\"spinner\" *ngIf=\"isSearching\"></div>\n                </div>\n            </div>\n            \n    </div>\n   \n    <div  #recommendBox  id=\"recommend-box\" class=\"search-result\" *ngIf=\"searchResults && isShowResult\" #menu>\n        <div [innerHTML]=\"searchResults?.html\" (click)=\"searchItem($event)\"></div>\n    </div>\n</div>\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    OnInit,\n    Output,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject, Subscription } from 'rxjs';\nimport { IcfService } from 'src/shared/services/icf.service';\ninterface Chapter {\n    model: string;\n    Code?: string;\n    ID: string;\n    Name: string;\n    children?: Chapter[];\n    is_leaf: boolean;\n    data?: Chapter[];\n    expanded?: boolean;\n    html?: string;\n}\n@Component({\n    selector: 'app-search-icf',\n    templateUrl: './search-icf.component.html',\n    styleUrls: ['./search-icf.component.scss'],\n})\nexport class SearchIcfComponent implements OnInit {\n    private unsubscriber = new Subject<void>();\n    @Output() messageEvent = new EventEmitter<object>();\n    @ViewChild('toggleButton') toggleButton: ElementRef;\n    @ViewChild('menu') menu: ElementRef;\n    @ViewChild('recommendBox') recommendBox: ElementRef;\n    @ViewChild('boxSearch') boxSearch: ElementRef;\n    @ViewChild('searchInput') searchInput: ElementRef;\n    isSearching = false;\n    searchResults: any;\n    searchResultsFormat: any;\n    sub: Subscription;\n    keySearch = new FormControl();\n    debouncedValue = '';\n    selectedItem: any;\n    language: any;\n    isShowResult = false;\n    url = false;\n    previousSearchQuery: string = '';\n    searchEnter: string = '';\n    enterPressed: boolean = false;\n    enterTimeout: any;\n    searchTimer: any;\n\n    constructor(\n        private searchService: IcfService,\n        private route: ActivatedRoute,\n        private readonly router: Router,\n        private renderer: Renderer2,\n        private toastService: ToastrService,\n        public translate: TranslateService,\n        private el: ElementRef\n    ) {\n        this.renderer.listen('window', 'click', (e: Event) => {\n            if (\n                this.toggleButton &&\n                this.menu &&\n                e.target !== this.toggleButton.nativeElement &&\n                e.target !== this.menu?.nativeElement\n            ) {\n                this.isShowResult = false;\n            }\n            if (this.el.nativeElement !== e.target && !this.el.nativeElement.contains(e.target)) {\n                this.closeRec();\n            }\n        });\n    }\n\n    ngOnInit(): void {\n        this.language = localStorage.getItem('lang') ? localStorage.getItem('lang') : 'vi';\n        this.url = this.router.url.includes('icf-dual');\n    }\n\n    onSearch() {\n        if (!this.debouncedValue.trim()) {\n            // Nếu không có giá trị để tìm kiếm, có thể đặt searchResults về null hoặc mảng trống.\n            this.searchResults = null;\n            this.closeRec();\n            return;\n        }\n        this.isSearching = true;\n        this.previousSearchQuery = this.debouncedValue;\n        this.searchService.searchICF(this.debouncedValue, this.language).subscribe(\n            (data: any) => {\n                if (data) {\n                    this.searchResults = data;\n                    this.isShowResult = true;\n                    this.isSearching = false;\n                    this.openRec();\n                }\n            },\n            (error: any) => {\n                this.isSearching = false;\n                this.toastService.error(`${error?.message\n                }`, 'Thất bại');\n            }\n        );\n    }\n\n    handleInputChange() {\n        clearTimeout(this.searchTimer);\n        this.searchTimer = setTimeout(() => {\n            if (this.debouncedValue.trim() !== this.previousSearchQuery) {\n                this.onSearch();\n            }\n        }, 2000);\n    }\n    handleDelInput() {\n        this.debouncedValue = '';\n        this.searchResults = null;\n        this.closeRec();\n    }\n\n    handleKeyDown(event: KeyboardEvent) {\n        // event.preventDefault();\n        if (event.key == 'Enter') {\n            this.onSearch();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.unsubscriber.next();\n        this.unsubscriber.complete();\n        clearTimeout(this.enterTimeout);\n    }\n\n    convertChapter(input: any): Chapter {\n        return {\n            ID: input.data.ID,\n            model: input.model,\n            Code: input.data.Code,\n            Name: input.data.Name,\n            is_leaf: input.is_leaf,\n            children: input.children?.map((child: any) => this.convertChapter(child)),\n            html: input.data.html,\n        };\n    }\n\n    searchItem(event: any) {\n        this.closeRec();\n        event.preventDefault();\n        let href = '';\n        let target = event.target || event.srcElement;\n        while (target) {\n            if (target instanceof HTMLAnchorElement) {\n                href = target.getAttribute('href')!; //non-null assertion\n                break;\n            }\n            target = target.parentNode;\n        }\n        let id = href.split('/')[1];\n        let model = href.split('/')[0];\n        this.isShowResult = false;\n        let language = this.language;\n        this.url = this.router.url.includes('icf-dual');\n        if (this.url) language = 'dual';\n        this.searchService.getDetailOfModel(language, id, model).subscribe(\n            (res: any) => {\n                this.selectedItem = this.convertChapter(res.data);\n                this.messageEvent.emit(this.selectedItem); // gọi sang icf\n            },\n            (error: any) => {\n                console.error('Error occurred while fetching details:', error);\n                this.toastService.error(`${error?.error.error}`, 'Thất bại');\n            }\n        );\n    }\n\n    focusFunction(): void {\n        this.isShowResult = true;\n        if (!this.debouncedValue) {\n            this.searchResults = null;\n        } else {\n            let data = localStorage.getItem('searchResults');\n            if (data != null) {\n                this.searchResults = JSON.parse(data);\n            }\n        }\n    }\n    closeRec() {\n        if (this.recommendBox && this.recommendBox.nativeElement) {\n            this.recommendBox.nativeElement.classList.add('hidden');\n        }\n\n        if (this.boxSearch && this.boxSearch.nativeElement) {\n            this.boxSearch.nativeElement.classList.remove('bar-data');\n            this.boxSearch.nativeElement.classList.add('bar-1');\n        }\n        if (this.searchInput && this.searchInput.nativeElement) {\n            this.searchInput.nativeElement.classList.remove('searchbar-data');\n            this.searchInput.nativeElement.classList.add('searchbar');\n        }\n    }\n    handleOpen() {\n\n        if (this.searchResults) {\n            this.openRec();\n            this.isShowResult = true;\n        }\n    }\n    openRec() {\n        if (this.recommendBox && this.recommendBox.nativeElement) {\n            this.recommendBox.nativeElement.classList.remove('hidden');\n            this;\n        }\n\n        if (this.boxSearch && this.boxSearch.nativeElement) {\n            this.boxSearch.nativeElement.classList.add('bar-data');\n            this.boxSearch.nativeElement.classList.remove('bar-1');\n        }\n        if (this.searchInput && this.searchInput.nativeElement) {\n            this.searchInput.nativeElement.classList.add('searchbar-data');\n            this.searchInput.nativeElement.classList.remove('searchbar');\n        }\n    }\n}\n","<div class=\"w-full\">\n    <app-search-icf  (messageEvent)=\"receiveMessage($event)\"></app-search-icf>\n    <div class=\"row w-full\">\n        <div class=\"col-sm-6\">\n            <div class=\"card sidebar__common\">\n                <span class=\"text-xl font-semibold px-4 mt-2\">{{ root }}</span>\n                <div class=\"card-body\">\n                    <mat-tree\n                        [dataSource]=\"dataSource\"\n                        [treeControl]=\"treeControl\"\n                        class=\"example-tree\"\n                    >\n                        <mat-tree-node\n                            *matTreeNodeDef=\"let node\"\n                            matTreeNodeToggle\n                            id=\"{{ node.ID }}\"\n                        >\n                            <span\n                                [class.active]=\"isActive === node.ID\"\n                                class=\"cursor-pointer\"\n                                (click)=\"goToDetail(node)\"\n                                ><b>{{ node.Code }}</b> {{ node.Name }}</span\n                            >\n                        </mat-tree-node>\n                        <mat-nested-tree-node\n                            *matTreeNodeDef=\"let node; when: hasChild\"\n                            id=\"{{ node.ID }}\"\n                        >\n                            <div class=\"mat-tree-node\">\n                                <button\n                                    class=\"btn-size-small\"\n                                    mat-icon-button\n                                    matTreeNodeToggle\n                                    (click)=\"getChildrenOfTree(node)\"\n                                    [attr.aria-label]=\"'Toggle ' + node\"\n                                >\n                                    <mat-icon class=\"mat-icon-rtl-mirror\">\n                                        {{\n                                            treeControl.isExpanded(node)\n                                                ? 'expand_more'\n                                                : 'chevron_right'\n                                        }}\n                                    </mat-icon>\n                                </button>\n                                <span\n                                    [class.active]=\"isActive === node.ID\"\n                                    class=\"cursor-pointer\"\n                                    (click)=\"goToDetail(node)\"\n                                    ><b>{{ node.Code }}</b> {{ node.Name }}</span\n                                >\n                            </div>\n                            <div\n                                [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\"\n                                role=\"group\"\n                            >\n                                <ng-container matTreeNodeOutlet></ng-container>\n                            </div>\n                        </mat-nested-tree-node>\n                    </mat-tree>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-6 w-full\">\n            <div class=\"card sidebar__common w-full\" style=\"min-height: 100%\">\n                <div class=\"card-body w-full\">\n                    <!-- <div class=\"main-right w-full\" *ngIf=\"infoModel\">\n                        <div\n                            id=\"detail\"\n                            [innerHTML]=\"infoModel?.html\"\n                            class=\"w-full\"\n                            (click)=\"goToOpenTree($event)\"\n                        ></div>\n                    </div> -->\n                    <div *ngIf=\"htmlRoot\" [innerHTML]=\"htmlRoot\"></div>\n                    <ng-container *ngIf=\"isSearching; else info\">\n                        <div class=\"w-full h-full flex items-center justify-center\">\n                            <div class=\"spinner-container\">\n                                <div class=\"spinner\"></div>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <ng-template #info>\n                        <div class=\"main-right\" *ngIf=\"infoModel\">\n                            <div\n                                id=\"detail\"\n                                [innerHTML]=\"infoModel?.html || infoModel\"\n                                (click)=\"goToOpenTree($event)\"\n                            ></div>\n                        </div>\n                    </ng-template>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div id=\"floating-button-container\">\n    <button cButton [cOffcanvasToggle]=\"offcanvasNoBackdrop.id\" class=\"custom-button\">\n        <img ngSrc=\"assets/images/submid.svg\" alt=\"Góp ý Icon\" class=\"custom-icon\" height=\"16\" width=\"16\" />\n    </button>\n</div>\n\n<c-offcanvas\n    id=\"OffcanvasNoBackdrop\"\n    [backdrop]=\"false\"\n    [scroll]=\"true\"\n    placement=\"end\"\n    #offcanvasNoBackdrop\n    class=\"overflow-y-auto\"\n>\n    <c-offcanvas-header>\n        <div class=\"flex items-center justify-center gap-2 w-full h-fit\">\n            <button type=\"button\" class=\"btn btn-primary w-100\" (click)=\"toggleForm()\">\n                {{ showingComments ? 'Góp ý' : 'Xem góp ý' }}\n            </button>\n            <button\n                aria-label=\"Close\"\n                cButtonClose\n                class=\"w-10 h-10 rounded-lg hover:opacity-70 bg-red-600\"\n                [cOffcanvasToggle]=\"offcanvasNoBackdrop.id\"\n            >\n                <svg\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M18 6L6 18\"\n                        stroke=\"#ffffff\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                    />\n                    <path\n                        d=\"M6 6L18 18\"\n                        stroke=\"#ffffff\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                    />\n                </svg>\n            </button>\n        </div>\n    </c-offcanvas-header>\n    <c-offcanvas-body>\n        \n        <div *ngIf=\"showingComments\" class=\"mt-3\" id=\"userComment\">\n            <ng-container *ngFor=\"let comment of userCommentList\">\n                <div class=\"mb-2\" style=\"border-bottom: 1px solid black\">\n                    <div style=\"display: flex\">\n                        <p style=\"padding-right: 5px\">\n                            <strong>{{ comment.name }}</strong>\n                        </p>\n                        <small class=\"text-muted\">{{ comment.created_at }}</small>\n                    </div>\n                    <div style=\"text-decoration-line: underline\">\n                        {{ comment.subject }}\n                    </div>\n                    <div>{{ comment.content }}</div>\n                </div>\n            </ng-container>\n        </div>\n        <div *ngIf=\"!showingComments\">\n            <div class=\"mb-3\">\n                <label for=\"name\" class=\"form-label\">Tên</label>\n                <i style=\"color: red\">*</i>\n                <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Tên\" #nameInput />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                    {{ nameMessage }}\n                </div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"number\" class=\"form-label\">Số điện thoại</label>\n                <i style=\"color: red\">*</i>\n                <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"number\"\n                    placeholder=\"Số điện thoại\"\n                    #numberInput\n                />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                    {{ phoneMessage }}\n                </div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"email\" class=\"form-label\">Email</label>\n                <i style=\"color: red\">*</i>\n                <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    id=\"email\"\n                    placeholder=\"Email\"\n                    #emailInput\n                />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                    {{ emailMessage }}\n                </div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"title\" class=\"form-label\">Tiêu đề</label>\n                <i style=\"color: red\">*</i>\n                <input\n                    type=\"title\"\n                    class=\"form-control\"\n                    id=\"title\"\n                    placeholder=\"Tiêu đề\"\n                    #titleInput\n                />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                    {{ subjectMessage }}\n                </div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"feedback\" class=\"form-label\">Góp ý</label>\n                <i style=\"color: red\">*</i>\n                <textarea\n                    class=\"form-control\"\n                    id=\"feedback\"\n                    rows=\"4\"\n                    placeholder=\"Góp ý của bạn\"\n                    #feedbackInput\n                ></textarea>\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                    {{ contentMessage }}\n                </div>\n            </div>\n\n            <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                {{ errorMessage }}\n            </div>\n\n            <ng-container *ngIf=\"captchaImageUrl\">\n                <img [src]=\"captchaImageUrl\" alt=\"Captcha Image\" id=\"captchaImage\" />\n                <div class=\"mb-3\">\n                    <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        id=\"captcha\"\n                        placeholder=\"Nhập Captcha\"\n                        [(ngModel)]=\"userCaptcha\"\n                    />\n                </div>\n            </ng-container>\n\n            <!-- Submit button -->\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"submitForm()\">Gửi</button>\n        </div>\n    </c-offcanvas-body>\n</c-offcanvas>\n","import { NestedTreeControl } from '@angular/cdk/tree';\nimport { ViewportScroller } from '@angular/common';\nimport { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BASE } from 'src/shared/services/icd.service';\nimport { SearchService } from 'src/shared/services/search.search';\nimport { EventManager } from '../../../../shared/services/broadcast.service';\nimport { IcfService } from './../../../../shared/services/icf.service';\nimport { ToastrService } from 'ngx-toastr';\n\ninterface Chapter {\n    model: string;\n    Code?: string;\n    ID: string;\n    Name: string;\n    children?: Chapter[];\n    is_leaf: boolean;\n    data?: Chapter[];\n    expanded?: boolean;\n}\n\n@Component({\n    selector: 'app-icf',\n    templateUrl: './icf.component.html',\n    styleUrls: ['./icf.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class IcfComponent implements OnInit {\n    chapter: any[] = [];\n    infoModel: any;\n    htmlRoot:any;\n    dataSource = new MatTreeNestedDataSource<Chapter>();\n    treeControl = new NestedTreeControl<Chapter>((node) => node.children);\n    loaded: Set<string> = new Set<string>();\n    isActive: string | null = '';\n    language: any;\n    userCommentList: any[] = [];\n    showingComments = false;\n    userCaptcha: string = '';\n    errorMessage: string | undefined;\n    contentMessage: string | undefined;\n    nameMessage: string | undefined;\n    emailMessage: string | undefined;\n    phoneMessage: string | undefined;\n    subjectMessage: string | undefined;\n    isLeaf: boolean;\n    root: string;\n    public captchaImageUrl: string | undefined;\n    isSearching: boolean = false;\n\n    constructor(\n        private viewportScroller: ViewportScroller,\n        private router: Router,\n        private scroller: ViewportScroller,\n        private route: ActivatedRoute,\n        private eventManager: EventManager,\n        private _changeDetectorRef: ChangeDetectorRef,\n        private searchService: SearchService,\n        private ICFService: IcfService,\n        private toastService: ToastrService\n    ) {\n        this.dataSource.data = [];\n        this.eventManager.subscribe('changeLanguage', (lang: any) => {\n            this.language = lang.content;\n            this.getChapter();\n        });\n    }\n\n    hasChild = (_: number, node: Chapter) => !node.is_leaf;\n\n    ngOnInit(): void {\n        const langue = localStorage.getItem('lang');\n        this.language = langue === 'en' ? langue : 'vn';\n        this.getRoot();\n        this.getChapter();\n        this.isActive = this.route.snapshot.queryParamMap.get('ID');\n        this.getListFeedback();\n    }\n\n    getRoot() {\n        this.ICFService.getRoot(this.language).subscribe((res: any) => {\n            this.root = res.data[0].Name;\n        });\n    }\n\n    getChapter() {\n        this.ICFService.getChapter(this.language).subscribe((res: any) => {\n            this.chapter = res.data;\n            this.dataSource.data = this.chapter;\n            this.infoModel = res.html;\n            this.treeControl.dataNodes = this.chapter;\n        });\n    }\n\n    getListFeedback() {\n        this.ICFService.getListFeedback().subscribe((res: any) => {\n            this.userCommentList = res.data;\n        });\n    }\n\n    toggleForm() {\n        this.showingComments = !this.showingComments;\n    }\n\n    private getFeedbackData() {\n        const name = (document.getElementById('name') as HTMLInputElement).value;\n        const number = (document.getElementById('number') as HTMLInputElement).value;\n        const email = (document.getElementById('email') as HTMLInputElement).value;\n        const title = (document.getElementById('title') as HTMLInputElement).value;\n        const feedback = (document.getElementById('feedback') as HTMLTextAreaElement).value;\n\n        return {\n            app: 'ICF',\n            name: name,\n            phone: number,\n            email: email,\n            subject: title,\n            content: feedback,\n            captcha: this.userCaptcha,\n        };\n    }\n\n    private updateCaptchaImage(newCaptchaImageUrl: string) {\n        const timestamp = new Date().getTime();\n        this.captchaImageUrl = newCaptchaImageUrl + `?timestamp=${timestamp}`;\n    }\n\n    private handleSuccess(res: any) {\n        this.captchaImageUrl = undefined;\n        this.getListFeedback();\n        if (res.message) {\n            this.showingComments = true;\n        }\n    }\n\n    private handleError(error: any) {\n        this.errorMessage = error.error?.message;\n        // this.contentMessage = error.error.data?.content;\n        this.nameMessage = error.error.data?.name;\n        this.emailMessage = error.error.data?.email;\n        this.phoneMessage = error.error.data?.phone;\n        this.subjectMessage = error.error.data?.subject;\n\n        if (error.error.data?.captcha_image) {\n            const newCaptchaImageUrl = BASE + error.error.data.captcha_image;\n            this.updateCaptchaImage(newCaptchaImageUrl);\n        }\n\n        this.userCaptcha = '';\n    }\n\n    submitForm() {\n        const feedbackData = this.getFeedbackData();\n\n        this.ICFService.submitFeedback(feedbackData).subscribe(\n            (res: any) => {\n                if (res.status === 'success')\n                    this.toastService.success(`${res?.message}`, 'Thành công');\n                else this.toastService.error(`${res?.message}`, 'Thất bại');\n                if (res.captcha_image && this.captchaImageUrl !== res.captcha_image) {\n                    const newCaptchaImageUrl = BASE + res.captcha_image;\n                    this.updateCaptchaImage(newCaptchaImageUrl);\n                    this.userCaptcha = '';\n                } else {\n                    this.handleSuccess(res);\n                }\n            },\n            (error: any) => {\n                this.handleError(error);\n            }\n        );\n    }\n\n    getDetailModel(item: any) {\n        this.isSearching = true;\n        this.htmlRoot=\"\"\n        this.ICFService.getDetailOfModel(this.language, item.ID, item.model).subscribe(\n            (res: any) => {\n                this.isSearching = false;\n                this.infoModel = res.data.data;\n            }, (err) => {\n                this.isSearching = false;\n            this.toastService.error(`${err?.error.error}`, 'Thất bại');\n\n            }\n        );\n    }\n\n    convertChapter(input: any): Chapter {\n        return {\n            ID: input.data.ID,\n            model: input.model,\n            Code: input.data.Code,\n            Name: input.data.Name,\n            is_leaf: input.is_leaf,\n            children: input.children?.map((child: any) => this.convertChapter(child)),\n        };\n    }\n\n    getChildrenOfModel(item: Chapter) {\n        if (this.loaded.has(item.ID)) {\n            return;\n        }\n        this.loaded.add(item.ID);\n        this.ICFService.getChildrendModel(this.language, item?.ID, item?.model).subscribe(\n            (res: any) => {\n                // const children = res.data.map((value: any) => this.convertChapter(value));\n                item.children = res.data;\n                this.dataSource.data = [];\n                this.dataSource.data = this.chapter;\n                setTimeout(() => {\n                    this.treeControl.expand(item);\n                });\n            }\n        );\n    }\n\n    getChildrenOfTree(item: Chapter) {\n        this.getChildrenOfModel(item);\n        this.refreshTree();\n    }\n\n    goToDetail(item: Chapter) {\n        this.isActive = item.ID;\n        this.getDetailModel(item);\n    }\n\n    receiveMessage($event: any) {\n        this.infoModel = $event;\n        this.isActive = $event.ID;\n        this.getListTreeOfSearch($event);\n        this.handleScrollTree($event.ID || $event.data.ID);\n    }\n\n    openItem(node: Chapter): void {\n        if (node.children) this.treeControl.expand(node);\n        node.children?.forEach((item, _) => {\n            this.openItem(item);\n        });\n    }\n\n    refreshTree() {\n        let _data = this.dataSource.data;\n        this.dataSource.data = [];\n        this.dataSource.data = _data;\n    }\n\n    getListTreeOfSearch(item: any) {\n        this.ICFService.getChildrenOfModel(this.language, item.ID, item.model).subscribe(\n            (res: any) => {\n                const find = res.children.find((el: any) => el.children?.length > 0);\n                const findnode = this.treeControl.dataNodes.find((dtn) => {\n                    return dtn.ID === find.ID;\n                });\n                const children: Chapter[] = find.children.map((child: any) =>\n                    this.convertChapter(child)\n                );\n                if (findnode) {\n                    findnode.children = children;\n                    this.dataSource.data = [];\n                    this.dataSource.data = this.chapter;\n                    this.openItem(findnode);\n                }\n            }\n        );\n    }\n\n    goToOpenTree(event: any) {\n        event.preventDefault();\n        let item = {\n            model: '',\n            ID: '',\n        };\n        let href = '';\n        let target = event.target || event.srcElement;\n        while (target) {\n            if (target instanceof HTMLAnchorElement) {\n                href = target.getAttribute('href')!;\n                break;\n            }\n            target = target.parentNode;\n        }\n        item.ID = href.split('/')[1];\n        item.model = href.split('/')[0];\n        if (item && item.ID && item.model) {\n            this.isActive = item.ID;\n            this.getListTreeOfSearch(item);\n            this.getDetailModel(item);\n            this.handleScrollTree(item.ID);\n        }\n    }\n\n    handleScrollTree(id: any) {\n        setTimeout(() => {\n            this.router.navigate([], { fragment: id }).then((res: any) => {\n                const element = document.getElementById(id);\n                if (element != undefined) element.scrollIntoView({ behavior: 'smooth' });\n            });\n        }, 1000);\n    }\n}\n","<div class=\"w-full\">\n    <app-search-icf  (messageEvent)=\"receiveMessage($event)\"></app-search-icf>\n    <div class=\"row w-full\">\n        <div class=\"col-sm-4\">\n            <div class=\"card sidebar__common\">\n                <span class=\"text-xl font-semibold px-4 mt-2\">{{ root }}</span>\n                <div class=\"card-body\">\n                    <mat-tree\n                        [dataSource]=\"dataSource\"\n                        [treeControl]=\"treeControl\"\n                        class=\"example-tree\"\n                    >\n                        <mat-tree-node\n                            *matTreeNodeDef=\"let node\"\n                            matTreeNodeToggle\n                            id=\"{{ node.ID }}\"\n                        >\n                            <span\n                                [class.active]=\"isActive === node.ID\"\n                                class=\"cursor-pointer\"\n                                (click)=\"goToDetail(node)\"\n                                ><b>{{ node.Code }}</b> {{ node.Name }}</span\n                            >\n                        </mat-tree-node>\n                        <mat-nested-tree-node\n                            *matTreeNodeDef=\"let node; when: hasChild\"\n                            id=\"{{ node.ID }}\"\n                        >\n                            <div class=\"mat-tree-node\">\n                                <button\n                                    class=\"btn-size-small\"\n                                    mat-icon-button\n                                    matTreeNodeToggle\n                                    (click)=\"getChildrenOfTree(node)\"\n                                    [attr.aria-label]=\"'Toggle ' + node\"\n                                >\n                                    <mat-icon class=\"mat-icon-rtl-mirror\">\n                                        {{\n                                            treeControl.isExpanded(node)\n                                                ? 'expand_more'\n                                                : 'chevron_right'\n                                        }}\n                                    </mat-icon>\n                                </button>\n                                <span\n                                    [class.active]=\"isActive === node.ID\"\n                                    class=\"cursor-pointer\"\n                                    (click)=\"goToDetail(node)\"\n                                    ><b>{{ node.Code }}</b> {{ node.Name }}</span\n                                >\n                            </div>\n                            <div\n                                [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\"\n                                role=\"group\"\n                            >\n                                <ng-container matTreeNodeOutlet></ng-container>\n                            </div>\n                        </mat-nested-tree-node>\n                    </mat-tree>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-8 w-full\">\n            <div class=\"card sidebar__common w-full\" style=\"min-height: 100%\">\n                <div class=\"card-body w-full\">\n                    <div *ngIf=\"htmlRoot\" [innerHTML]=\"htmlRoot\"></div>\n                    <ng-container *ngIf=\"isSearching; else info\">\n                        <div class=\"w-full h-full flex items-center justify-center\">\n                            <div class=\"spinner-container\">\n                                <div class=\"spinner\"></div>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <ng-template #info>\n                        <div class=\"main-right\" *ngIf=\"infoModel\">\n                            <div\n                                id=\"detail\"\n                                [innerHTML]=\"infoModel?.html || infoModel\"\n                                (click)=\"goToOpenTree($event)\"\n                            ></div>\n                        </div>\n                    </ng-template>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div id=\"floating-button-container\">\n    <button cButton [cOffcanvasToggle]=\"offcanvasNoBackdrop.id\" class=\"custom-button\">\n        <img ngSrc=\"assets/images/submid.svg\" alt=\"Góp ý Icon\" class=\"custom-icon\" height=\"16\" width=\"16\" />\n    </button>\n</div>\n\n<c-offcanvas\n    id=\"OffcanvasNoBackdrop\"\n    [backdrop]=\"false\"\n    [scroll]=\"true\"\n    placement=\"end\"\n    #offcanvasNoBackdrop\n    class=\"overflow-y-auto\"\n>\n    <c-offcanvas-header>\n        <div class=\"flex items-center justify-center gap-2 w-full h-fit\">\n            <button type=\"button\" class=\"btn btn-primary w-100\" (click)=\"toggleForm()\">\n                {{ showingComments ? 'Góp ý' : 'Xem góp ý' }}\n            </button>\n            <button\n                aria-label=\"Close\"\n                cButtonClose\n                class=\"w-10 h-10 rounded-lg hover:opacity-70 bg-red-600\"\n                [cOffcanvasToggle]=\"offcanvasNoBackdrop.id\"\n            >\n                <svg\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M18 6L6 18\"\n                        stroke=\"#ffffff\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                    />\n                    <path\n                        d=\"M6 6L18 18\"\n                        stroke=\"#ffffff\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                    />\n                </svg>\n            </button>\n        </div>\n    </c-offcanvas-header>\n    <c-offcanvas-body>\n       \n        <div *ngIf=\"showingComments\" class=\"mt-3\" id=\"userComment\">\n            <ng-container *ngFor=\"let comment of userCommentList\">\n                <div class=\"mb-2\" style=\"border-bottom: 1px solid black\">\n                    <div style=\"display: flex\">\n                        <p style=\"padding-right: 5px\">\n                            <strong>{{ comment.name }}</strong>\n                        </p>\n                        <small class=\"text-muted\">{{ comment.created_at }}</small>\n                    </div>\n                    <div style=\"text-decoration-line: underline\">\n                        {{ comment.subject }}\n                    </div>\n                    <div>{{ comment.content }}</div>\n                </div>\n            </ng-container>\n        </div>\n        <div *ngIf=\"!showingComments\">\n            <div class=\"mb-3\">\n                <label for=\"name\" class=\"form-label\">Tên</label>\n                <i style=\"color: red\">*</i>\n                <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Tên\" #nameInput />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                    {{ nameMessage }}\n                </div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"number\" class=\"form-label\">Số điện thoại</label>\n                <i style=\"color: red\">*</i>\n                <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"number\"\n                    placeholder=\"Số điện thoại\"\n                    #numberInput\n                />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                    {{ phoneMessage }}\n                </div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"email\" class=\"form-label\">Email</label>\n                <i style=\"color: red\">*</i>\n                <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    id=\"email\"\n                    placeholder=\"Email\"\n                    #emailInput\n                />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                    {{ emailMessage }}\n                </div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"title\" class=\"form-label\">Tiêu đề</label>\n                <i style=\"color: red\">*</i>\n                <input\n                    type=\"title\"\n                    class=\"form-control\"\n                    id=\"title\"\n                    placeholder=\"Tiêu đề\"\n                    #titleInput\n                />\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                    {{ subjectMessage }}\n                </div>\n            </div>\n\n            <div class=\"mb-3\">\n                <label for=\"feedback\" class=\"form-label\">Góp ý</label>\n                <i style=\"color: red\">*</i>\n                <textarea\n                    class=\"form-control\"\n                    id=\"feedback\"\n                    rows=\"4\"\n                    placeholder=\"Góp ý của bạn\"\n                    #feedbackInput\n                ></textarea>\n                <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                    {{ contentMessage }}\n                </div>\n            </div>\n\n            <div for=\"feedback\" class=\"form-label\" style=\"color: red\">\n                {{ errorMessage }}\n            </div>\n\n            <ng-container *ngIf=\"captchaImageUrl\">\n                <img [src]=\"captchaImageUrl\" alt=\"Captcha Image\" id=\"captchaImage\" />\n                <div class=\"mb-3\">\n                    <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        id=\"captcha\"\n                        placeholder=\"Nhập Captcha\"\n                        [(ngModel)]=\"userCaptcha\"\n                    />\n                </div>\n            </ng-container>\n\n            <!-- Submit button -->\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"submitForm()\">Gửi</button>\n        </div>\n    </c-offcanvas-body>\n</c-offcanvas>\n","import { NestedTreeControl } from '@angular/cdk/tree';\nimport { ViewportScroller } from '@angular/common';\nimport { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\nimport { EventManager } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { BASE, IcdService } from 'src/shared/services/icd.service';\nimport { IcdServiceV1 } from 'src/shared/services/icdv1.service';\nimport { IcfService } from 'src/shared/services/icf.service';\nimport { SearchService } from 'src/shared/services/search.search';\ninterface ChapterNode {\n    model: string;\n    Code?: string;\n    ID: string;\n    Name: string;\n    children?: Chapter[];\n    is_leaf: boolean;\n    data?: Chapter[];\n    expanded?: boolean;\n}\ninterface Chapter {\n    model: string;\n    Code?: string;\n    ID: string;\n    Name: string;\n    children?: Chapter[];\n    is_leaf: boolean;\n}\n\n@Component({\n    selector: 'app-dual-version-icf',\n    templateUrl: './dual-version-icf.component.html',\n    styleUrls: ['./dual-version-icf.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class DualVersionIcfComponent implements OnInit {\n    chapter: any[] = [];\n    infoModel: any;\n    htmlRoot:any;\n    dataSource = new MatTreeNestedDataSource<Chapter>();\n    treeControl = new NestedTreeControl<Chapter>((node) => node.children);\n    loaded: Set<string> = new Set<string>();\n    isActive: string | null = '';\n    language: any;\n    userCommentList: any[] = [];\n    showingComments = false;\n    userCaptcha: string = '';\n    errorMessage: string | undefined;\n    contentMessage: string | undefined;\n    nameMessage: string | undefined;\n    emailMessage: string | undefined;\n    phoneMessage: string | undefined;\n    subjectMessage: string | undefined;\n    isLeaf: boolean;\n    root: string;\n    public captchaImageUrl: string | undefined;\n    isSearching: boolean = false;\n\n    constructor(\n        private viewportScroller: ViewportScroller,\n        private router: Router,\n        private scroller: ViewportScroller,\n        private route: ActivatedRoute,\n        private eventManager: EventManager,\n        public icdService: IcdService,\n        public icdServiceV1: IcdServiceV1,\n        private _changeDetectorRef: ChangeDetectorRef,\n        private searchService: SearchService,\n        private ICFService: IcfService,\n        private toastService: ToastrService\n    ) {\n        this.dataSource.data = [];\n        // this.eventManager.subscribe('changeLanguage', (lang: any) => {\n        //     this.language = lang.content;\n        //     this.getChapter();\n        // });\n    }\n\n    hasChild = (_: number, node: Chapter) => !node.is_leaf;\n\n    ngOnInit(): void {\n        const langue = localStorage.getItem('lang');\n        this.language = langue === 'en' ? langue : 'vn';\n        this.getRoot();\n        this.getChapter();\n        this.isActive = this.route.snapshot.queryParamMap.get('ID');\n        this.getListFeedback();\n    }\n\n    getRoot() {\n        this.ICFService.getRoot(\"getRoot\").subscribe((res: any) => {\n            this.root = res.data[0].Name;\n            this.htmlRoot=res.html\n        });\n    }\n\n    getChapter() {\n        this.ICFService.getChapter(this.language).subscribe((res: any) => {\n            this.chapter = res.data;\n            this.dataSource.data = this.chapter;\n            \n\n            this.treeControl.dataNodes = this.chapter;\n        });\n    }\n\n    getListFeedback() {\n        this.ICFService.getListFeedback().subscribe((res: any) => {\n            this.userCommentList = res.data;\n        });\n    }\n\n    toggleForm() {\n        this.showingComments = !this.showingComments;\n    }\n\n    private getFeedbackData() {\n        const name = (document.getElementById('name') as HTMLInputElement).value;\n        const number = (document.getElementById('number') as HTMLInputElement).value;\n        const email = (document.getElementById('email') as HTMLInputElement).value;\n        const title = (document.getElementById('title') as HTMLInputElement).value;\n        const feedback = (document.getElementById('feedback') as HTMLTextAreaElement).value;\n\n        return {\n            app: 'ICF',\n            name: name,\n            phone: number,\n            email: email,\n            subject: title,\n            content: feedback,\n            captcha: this.userCaptcha,\n        };\n    }\n\n    private updateCaptchaImage(newCaptchaImageUrl: string) {\n        const timestamp = new Date().getTime();\n        this.captchaImageUrl = newCaptchaImageUrl + `?timestamp=${timestamp}`;\n    }\n\n    private handleSuccess(res: any) {\n        this.captchaImageUrl = undefined;\n        this.getListFeedback();\n        if (res.message) {\n            this.showingComments = true;\n        }\n    }\n\n    private handleError(error: any) {\n        this.errorMessage = error.error?.message;\n        // this.contentMessage = error.error.data?.content;\n        this.nameMessage = error.error.data?.name;\n        this.emailMessage = error.error.data?.email;\n        this.phoneMessage = error.error.data?.phone;\n        this.subjectMessage = error.error.data?.subject;\n\n        if (error.error.data?.captcha_image) {\n            const newCaptchaImageUrl = BASE + error.error.data.captcha_image;\n            this.updateCaptchaImage(newCaptchaImageUrl);\n        }\n\n        this.userCaptcha = '';\n    }\n\n    submitForm() {\n        const feedbackData = this.getFeedbackData();\n\n        this.icdService.submitFeedback(feedbackData).subscribe(\n            (res: any) => {\n                if (res.status === 'success')\n                    this.toastService.success(`${res?.message}`, 'Thành công');\n                else this.toastService.error(`${res?.message}`, 'Thất bại');\n                if (res.captcha_image && this.captchaImageUrl !== res.captcha_image) {\n                    const newCaptchaImageUrl = BASE + res.captcha_image;\n                    this.updateCaptchaImage(newCaptchaImageUrl);\n                    this.userCaptcha = '';\n                } else {\n                    this.handleSuccess(res);\n                }\n            },\n            (error: any) => {\n                this.handleError(error);\n            }\n        );\n    }\n\n    getDetailModel(item: any) {\n        this.isSearching = true;\n        this.htmlRoot=\"\"\n        this.ICFService.getDetailOfModel('dual', item.ID, item.model).subscribe((res: any) => {\n            this.isSearching = false;\n            this.infoModel = res.data.data;\n        }, (error) => {\n            this.isSearching = false;\n            this.toastService.error(`${error?.error.error}`, 'Thất bại');\n\n        });\n    }\n\n    getChildrenOfModel(item: Chapter) {\n        if (this.loaded.has(item.ID)) {\n            return;\n        }\n        this.loaded.add(item.ID);\n        this.ICFService.getChildrendModel(this.language, item?.ID, item?.model).subscribe(\n            (res: any) => {\n                // const children = res.data.map((value: any) => this.convertChapter(value));\n                item.children = res.data;\n                this.dataSource.data = [];\n                this.dataSource.data = this.chapter;\n                setTimeout(() => {\n                    this.treeControl.expand(item);\n                });\n            }\n        );\n    }\n\n    getChildrenOfTree(item: Chapter) {\n        this.getChildrenOfModel(item);\n        this.refreshTree();\n    }\n\n    goToDetail(item: Chapter) {\n        this.isActive = item.ID;\n        this.getDetailModel(item);\n    }\n\n    receiveMessage($event: any) {\n        this.infoModel = $event;\n        this.isActive = $event.ID;\n        this.getListTreeOfSearch($event);\n        this.handleScrollTree($event.ID);\n    }\n\n    openItem(node: Chapter): void {\n        if (node.children) this.treeControl.expand(node);\n        node.children?.forEach((item, _) => {\n            this.openItem(item);\n        });\n    }\n\n    convertChapter(input: any): Chapter {\n        return {\n            ID: input.data.ID,\n            model: input.model,\n            Code: input.data.Code,\n            Name: input.data.Name,\n            is_leaf: input.is_leaf,\n            children: input.children?.map((child: any) => this.convertChapter(child)),\n        };\n    }\n\n    refreshTree() {\n        let _data = this.dataSource.data;\n        this.dataSource.data = [];\n        this.dataSource.data = _data;\n    }\n\n    getListTreeOfSearch(item: any) {\n        this.ICFService.getChildrenOfModel(null, item.ID, item.model).subscribe((res: any) => {\n            const find = res.children.find((el: any) => el.children?.length > 0);\n            const findnode = this.treeControl.dataNodes.find((dtn) => dtn.ID === find.ID);\n            const children: ChapterNode[] = find.children.map((child: any) =>\n                this.convertChapter(child)\n            );\n            if (findnode) {\n                findnode.children = children;\n                this.dataSource.data = [];\n                this.dataSource.data = this.chapter;\n                this.openItem(findnode);\n            }\n        });\n    }\n\n    goToOpenTree(event: any) {\n        event.preventDefault();\n        let item = {\n            model: '',\n            ID: '',\n        };\n        let href = '';\n        let target = event.target || event.srcElement;\n        while (target) {\n            if (target instanceof HTMLAnchorElement) {\n                href = target.getAttribute('href')!;\n                break;\n            }\n            target = target.parentNode;\n        }\n        item.ID = href.split('/')[1];\n        item.model = href.split('/')[0];\n        if (item && item.ID && item.model) {\n            this.isActive = item.ID;\n            this.getListTreeOfSearch(item);\n            this.getDetailModel(item);\n            this.handleScrollTree(item.ID);\n        }\n    }\n\n    handleScrollTree(id: any) {\n        setTimeout(() => {\n            this.router.navigate([], { fragment: id }).then((res: any) => {\n                const element = document.getElementById(id);\n                if (element != undefined) element.scrollIntoView({ behavior: 'smooth' });\n            });\n        }, 1000);\n    }\n}\n","<div class=\"card sidebar__common\">\n    <div class=\"card-body\">\n        <div class=\"flex-container\">\n            <div class=\"left-column\">\n                <ul class=\"list-item\">\n                    <li *ngFor=\"let doc of documents\" (click)=\"showDocumentDetails(doc.id)\" class=\"item\" [class.selected]=\"selectedItemId === doc.id\">\n                        <div class=\"font-semibold title\">{{ doc.subject }}</div>\n                        <div class=\"text-gray-500 date\">{{ doc.created_at }}</div>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"right-column\">\n                <div *ngIf=\"selectedDocument\">\n                    <div class=\"font-semibold title\">{{ selectedDocument.subject }}</div>\n                    <div class=\"text-gray-500 date\">{{ selectedDocument.created_at }}</div>\n                    <br/>\n                    <div class=\"details-item\" [innerHTML]=\"selectedDocument.content\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { IcdService } from 'src/shared/services/icd.service';\nimport { IcfService } from 'src/shared/services/icf.service';\n\n@Component({\n    selector: 'app-instruction-icf',\n    templateUrl: './instruction-icf.component.html',\n    styleUrls: ['./instruction-icf.component.scss'],\n})\nexport class InstructionIcfComponent implements OnInit {\n    documents: any[] = [];\n    selectedDocument: any = null;\n    selectedItemId: number | null = null;\n\n    constructor(public icdService: IcdService,public icfService:IcfService,private toastService:ToastrService) {}\n\n    ngOnInit(): void {\n        this.loadDocumentList('ICF');\n    }\n\n    loadDocumentList(category: string) {\n        this.icfService.getDocumentList(category).subscribe((data: any) => {\n            this.documents = data.data;\n        });\n    }\n\n    showDocumentDetails(id: number) {\n        this.icdService.getDocumentDetails(id).subscribe(\n            (data: any) => {\n                // On successful response\n                this.selectedDocument = data.data;\n                this.selectedItemId = id;\n            },\n            (error: any) => {\n                // On error\n                console.error('An error occurred while fetching document details:', error);\n                // Handle error here, for example, show a message to the user\n                this.toastService.error(`${error?.error.error}`, 'Thất bại');\n\n            }\n        );\n    }\n    \n}\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || _typeof(value) === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","var defaultOptions = {};\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function startOfUTCWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function getUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function startOfUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n  var year = getUTCWeekYear(dirtyDate, options);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, options);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    var signedYear = date.getUTCFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n      case 'aaa':\n        return dayPeriodEnumValue;\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, dirtyDelimiter);\n}\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000;\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","var dateLongFormatter = function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n};\nvar timeLongFormatter = function timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n};\nvar dateTimeLongFormatter = function dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n  var dateTimeFormat;\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n};\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  }\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n  return result;\n};\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, options) {\n    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n    if (!matchResult) {\n      return null;\n    }\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import defaultLocale from \"../../locale/en-US/index.js\";\nexport default defaultLocale;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\nvar ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n  var number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n      case 2:\n        return number + 'nd';\n      case 3:\n        return number + 'rd';\n    }\n  }\n  return number + 'th';\n};\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import isValid from \"../isValid/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n  var originalDate = toDate(dirtyDate);\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong);\n    }\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n    var firstCharacter = substring[0];\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n    var formatter = formatters[firstCharacter];\n    if (formatter) {\n      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n    return substring;\n  }).join('');\n  return result;\n}\nfunction cleanEscapedString(input) {\n  var matched = input.match(escapedStringRegExp);\n  if (!matched) {\n    return input;\n  }\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'dưới 1 giây',\n    other: 'dưới {{count}} giây'\n  },\n  xSeconds: {\n    one: '1 giây',\n    other: '{{count}} giây'\n  },\n  halfAMinute: 'nửa phút',\n  lessThanXMinutes: {\n    one: 'dưới 1 phút',\n    other: 'dưới {{count}} phút'\n  },\n  xMinutes: {\n    one: '1 phút',\n    other: '{{count}} phút'\n  },\n  aboutXHours: {\n    one: 'khoảng 1 giờ',\n    other: 'khoảng {{count}} giờ'\n  },\n  xHours: {\n    one: '1 giờ',\n    other: '{{count}} giờ'\n  },\n  xDays: {\n    one: '1 ngày',\n    other: '{{count}} ngày'\n  },\n  aboutXWeeks: {\n    one: 'khoảng 1 tuần',\n    other: 'khoảng {{count}} tuần'\n  },\n  xWeeks: {\n    one: '1 tuần',\n    other: '{{count}} tuần'\n  },\n  aboutXMonths: {\n    one: 'khoảng 1 tháng',\n    other: 'khoảng {{count}} tháng'\n  },\n  xMonths: {\n    one: '1 tháng',\n    other: '{{count}} tháng'\n  },\n  aboutXYears: {\n    one: 'khoảng 1 năm',\n    other: 'khoảng {{count}} năm'\n  },\n  xYears: {\n    one: '1 năm',\n    other: '{{count}} năm'\n  },\n  overXYears: {\n    one: 'hơn 1 năm',\n    other: 'hơn {{count}} năm'\n  },\n  almostXYears: {\n    one: 'gần 1 năm',\n    other: 'gần {{count}} năm'\n  }\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', String(count));\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + ' nữa';\n    } else {\n      return result + ' trước';\n    }\n  }\n  return result;\n};\nexport default formatDistance;","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  // thứ Sáu, ngày 25 tháng 08 năm 2017\n  full: \"EEEE, 'ngày' d MMMM 'năm' y\",\n  // ngày 25 tháng 08 năm 2017\n  long: \"'ngày' d MMMM 'năm' y\",\n  // 25 thg 08 năm 2017\n  medium: \"d MMM 'năm' y\",\n  // 25/08/2017\n  short: 'dd/MM/y'\n};\nvar timeFormats = {\n  full: 'HH:mm:ss zzzz',\n  long: 'HH:mm:ss z',\n  medium: 'HH:mm:ss',\n  short: 'HH:mm'\n};\nvar dateTimeFormats = {\n  // thứ Sáu, ngày 25 tháng 08 năm 2017 23:25:59\n  full: '{{date}} {{time}}',\n  // ngày 25 tháng 08 năm 2017 23:25\n  long: '{{date}} {{time}}',\n  medium: '{{date}} {{time}}',\n  short: '{{date}} {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"eeee 'tuần trước vào lúc' p\",\n  yesterday: \"'hôm qua vào lúc' p\",\n  today: \"'hôm nay vào lúc' p\",\n  tomorrow: \"'ngày mai vào lúc' p\",\n  nextWeek: \"eeee 'tới vào lúc' p\",\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\nexport default formatRelative;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary Vietnamese locale (Vietnam).\n * @language Vietnamese\n * @iso-639-2 vie\n * @author Thanh Tran [@trongthanh]{@link https://github.com/trongthanh}\n * @author Leroy Hopson [@lihop]{@link https://github.com/lihop}\n */\nvar locale = {\n  code: 'vi',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1 /* First week of new year contains Jan 1st  */\n  }\n};\n\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\"; // Vietnamese locale reference: http://www.localeplanet.com/icu/vi-VN/index.html\n// Capitalization reference: http://hcmup.edu.vn/index.php?option=com_content&view=article&id=4106%3Avit-hoa-trong-vn-bn-hanh-chinh&catid=2345%3Atham-kho&Itemid=4103&lang=vi&site=134\nvar eraValues = {\n  narrow: ['TCN', 'SCN'],\n  abbreviated: ['trước CN', 'sau CN'],\n  wide: ['trước Công Nguyên', 'sau Công Nguyên']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['Quý 1', 'Quý 2', 'Quý 3', 'Quý 4']\n};\nvar formattingQuarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  // I notice many news outlet use this \"quý II/2018\"\n  wide: ['quý I', 'quý II', 'quý III', 'quý IV']\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nvar monthValues = {\n  narrow: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\n  abbreviated: ['Thg 1', 'Thg 2', 'Thg 3', 'Thg 4', 'Thg 5', 'Thg 6', 'Thg 7', 'Thg 8', 'Thg 9', 'Thg 10', 'Thg 11', 'Thg 12'],\n  wide: ['Tháng Một', 'Tháng Hai', 'Tháng Ba', 'Tháng Tư', 'Tháng Năm', 'Tháng Sáu', 'Tháng Bảy', 'Tháng Tám', 'Tháng Chín', 'Tháng Mười', 'Tháng Mười Một', 'Tháng Mười Hai']\n};\n// In Vietnamese date formatting, month number less than 10 expected to have leading zero\nvar formattingMonthValues = {\n  narrow: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],\n  abbreviated: ['thg 1', 'thg 2', 'thg 3', 'thg 4', 'thg 5', 'thg 6', 'thg 7', 'thg 8', 'thg 9', 'thg 10', 'thg 11', 'thg 12'],\n  wide: ['tháng 01', 'tháng 02', 'tháng 03', 'tháng 04', 'tháng 05', 'tháng 06', 'tháng 07', 'tháng 08', 'tháng 09', 'tháng 10', 'tháng 11', 'tháng 12']\n};\nvar dayValues = {\n  narrow: ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'],\n  short: ['CN', 'Th 2', 'Th 3', 'Th 4', 'Th 5', 'Th 6', 'Th 7'],\n  abbreviated: ['CN', 'Thứ 2', 'Thứ 3', 'Thứ 4', 'Thứ 5', 'Thứ 6', 'Thứ 7'],\n  wide: ['Chủ Nhật', 'Thứ Hai', 'Thứ Ba', 'Thứ Tư', 'Thứ Năm', 'Thứ Sáu', 'Thứ Bảy']\n};\n\n// Vietnamese are used to AM/PM borrowing from English, hence `narrow` and\n// `abbreviated` are just like English but I'm leaving the `wide`\n// format being localized with abbreviations found in some systems (SÁng / CHiều);\n// however, personally, I don't think `Chiều` sounds appropriate for `PM`\nvar dayPeriodValues = {\n  // narrow date period is extremely rare in Vietnamese\n  // I used abbreviated form for noon, morning and afternoon\n  // which are regconizable by Vietnamese, others cannot be any shorter\n  narrow: {\n    am: 'am',\n    pm: 'pm',\n    midnight: 'nửa đêm',\n    noon: 'tr',\n    morning: 'sg',\n    afternoon: 'ch',\n    evening: 'tối',\n    night: 'đêm'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'nửa đêm',\n    noon: 'trưa',\n    morning: 'sáng',\n    afternoon: 'chiều',\n    evening: 'tối',\n    night: 'đêm'\n  },\n  wide: {\n    am: 'SA',\n    pm: 'CH',\n    midnight: 'nửa đêm',\n    noon: 'trưa',\n    morning: 'sáng',\n    afternoon: 'chiều',\n    evening: 'tối',\n    night: 'đêm'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'am',\n    pm: 'pm',\n    midnight: 'nửa đêm',\n    noon: 'tr',\n    morning: 'sg',\n    afternoon: 'ch',\n    evening: 'tối',\n    night: 'đêm'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'nửa đêm',\n    noon: 'trưa',\n    morning: 'sáng',\n    afternoon: 'chiều',\n    evening: 'tối',\n    night: 'đêm'\n  },\n  wide: {\n    am: 'SA',\n    pm: 'CH',\n    midnight: 'nửa đêm',\n    noon: 'giữa trưa',\n    morning: 'vào buổi sáng',\n    afternoon: 'vào buổi chiều',\n    evening: 'vào buổi tối',\n    night: 'vào ban đêm'\n  }\n};\nvar ordinalNumber = function ordinalNumber(dirtyNumber, options) {\n  var number = Number(dirtyNumber);\n  var unit = options === null || options === void 0 ? void 0 : options.unit;\n  if (unit === 'quarter') {\n    // many news outlets use \"quý I\"...\n    switch (number) {\n      case 1:\n        return 'I';\n      case 2:\n        return 'II';\n      case 3:\n        return 'III';\n      case 4:\n        return 'IV';\n    }\n  } else if (unit === 'day') {\n    // day of week in Vietnamese has ordinal number meaning,\n    // so we should use them, else it'll sound weird\n    switch (number) {\n      case 1:\n        return 'thứ 2';\n      // meaning 2nd day but it's the first day of the week :D\n      case 2:\n        return 'thứ 3';\n      // meaning 3rd day\n      case 3:\n        return 'thứ 4';\n      // meaning 4th day and so on\n      case 4:\n        return 'thứ 5';\n      case 5:\n        return 'thứ 6';\n      case 6:\n        return 'thứ 7';\n      case 7:\n        return 'chủ nhật';\n      // meaning Sunday, there's no 8th day :D\n    }\n  } else if (unit === 'week') {\n    if (number === 1) {\n      return 'thứ nhất';\n    } else {\n      return 'thứ ' + number;\n    }\n  } else if (unit === 'dayOfYear') {\n    if (number === 1) {\n      return 'đầu tiên';\n    } else {\n      return 'thứ ' + number;\n    }\n  }\n\n  // there are no different forms of ordinal numbers in Vietnamese\n  return String(number);\n};\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingQuarterValues,\n    defaultFormattingWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(tcn|scn)/i,\n  abbreviated: /^(trước CN|sau CN)/i,\n  wide: /^(trước Công Nguyên|sau Công Nguyên)/i\n};\nvar parseEraPatterns = {\n  any: [/^t/i, /^s/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^([1234]|i{1,3}v?)/i,\n  abbreviated: /^q([1234]|i{1,3}v?)/i,\n  wide: /^quý ([1234]|i{1,3}v?)/i\n};\nvar parseQuarterPatterns = {\n  any: [/(1|i)$/i, /(2|ii)$/i, /(3|iii)$/i, /(4|iv)$/i]\n};\nvar matchMonthPatterns = {\n  // month number may contain leading 0, 'thg' prefix may have space, underscore or empty before number\n  // note the order of '1' since it is a sub-string of '10', so must be lower priority\n  narrow: /^(0?[2-9]|10|11|12|0?1)/i,\n  // note the order of 'thg 1' since it is sub-string of 'thg 10', so must be lower priority\n  abbreviated: /^thg[ _]?(0?[1-9](?!\\d)|10|11|12)/i,\n  // note the order of 'Mười' since it is sub-string of Mười Một, so must be lower priority\n  wide: /^tháng ?(Một|Hai|Ba|Tư|Năm|Sáu|Bảy|Tám|Chín|Mười|Mười ?Một|Mười ?Hai|0?[1-9](?!\\d)|10|11|12)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/0?1$/i, /0?2/i, /3/, /4/, /5/, /6/, /7/, /8/, /9/, /10/, /11/, /12/],\n  abbreviated: [/^thg[ _]?0?1(?!\\d)/i, /^thg[ _]?0?2/i, /^thg[ _]?0?3/i, /^thg[ _]?0?4/i, /^thg[ _]?0?5/i, /^thg[ _]?0?6/i, /^thg[ _]?0?7/i, /^thg[ _]?0?8/i, /^thg[ _]?0?9/i, /^thg[ _]?10/i, /^thg[ _]?11/i, /^thg[ _]?12/i],\n  wide: [/^tháng ?(Một|0?1(?!\\d))/i, /^tháng ?(Hai|0?2)/i, /^tháng ?(Ba|0?3)/i, /^tháng ?(Tư|0?4)/i, /^tháng ?(Năm|0?5)/i, /^tháng ?(Sáu|0?6)/i, /^tháng ?(Bảy|0?7)/i, /^tháng ?(Tám|0?8)/i, /^tháng ?(Chín|0?9)/i, /^tháng ?(Mười|10)/i, /^tháng ?(Mười ?Một|11)/i, /^tháng ?(Mười ?Hai|12)/i]\n};\nvar matchDayPatterns = {\n  narrow: /^(CN|T2|T3|T4|T5|T6|T7)/i,\n  short: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,\n  abbreviated: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,\n  wide: /^(Chủ ?Nhật|Chúa ?Nhật|thứ ?Hai|thứ ?Ba|thứ ?Tư|thứ ?Năm|thứ ?Sáu|thứ ?Bảy)/i\n};\nvar parseDayPatterns = {\n  narrow: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],\n  short: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],\n  abbreviated: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],\n  wide: [/(Chủ|Chúa) ?Nhật/i, /Hai/i, /Ba/i, /Tư/i, /Năm/i, /Sáu/i, /Bảy/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i,\n  abbreviated: /^(am|pm|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i,\n  wide: /^(ch[^i]*|sa|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^(a|sa)/i,\n    pm: /^(p|ch[^i]*)/i,\n    midnight: /nửa đêm/i,\n    noon: /trưa/i,\n    morning: /sáng/i,\n    afternoon: /chiều/i,\n    evening: /tối/i,\n    night: /^đêm/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'wide'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'wide'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import type HighchartsESM from 'highcharts/es-modules/masters/highcharts.src';\n\nlet highcharts: typeof HighchartsESM | null = null;\n\nexport async function loadHighcharts(): Promise<typeof HighchartsESM> {\n    if (!highcharts) {\n        // First load core\n        const core = await import('highcharts/es-modules/masters/highcharts.src').then(m => m.default);\n        highcharts = core;\n\n        // Then load all modules in parallel, and in an unspecified order\n        await Promise.all([\n            import('highcharts/es-modules/masters/highcharts-more.src'),\n            import('highcharts/es-modules/masters/modules/exporting.src'),\n            import('highcharts/es-modules/masters/modules/export-data.src'),\n            import('highcharts/es-modules/masters/modules/accessibility.src'),\n            import('highcharts/es-modules/masters/modules/annotations.src'),\n            import('highcharts/es-modules/masters/modules/heatmap.src'),\n            import('highcharts/es-modules/masters/modules/map.src')\n        ]);\n    }\n\n    return highcharts;\n}","import { API_DASHBOARD, API_URL, API_VUNGHI } from './../common';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n  private line_api = `${API_DASHBOARD}/linearechart`;\n  private table_api=`${API_DASHBOARD}/tablechart`;\n  private grid_api=`${API_DASHBOARD}/mapchart`;\n  private disease_api=`${API_DASHBOARD}/get-list-disease`;\n  private hospital_api=`${API_DASHBOARD}/get-list-hospital`;\n\n  private text_api=`${API_DASHBOARD}/textbox`;\n  private sync_api=`${API_DASHBOARD}/syncchart`;\n\n  private nega_api = `${API_DASHBOARD}/negachart`;\n\n  private vn_api = `${API_DASHBOARD}/vietnamchart`; \n  private bubble_api = `${API_DASHBOARD}/bubblechart`;\n\n  private heat_api = `${API_DASHBOARD}/chart-matrix`; \n  \n  private ucud_text_box = `${API_DASHBOARD}/ucod-textbox`; \n\n  private ucud_table = `${API_DASHBOARD}/ucod-board`; \n  private ucud_line = `${API_DASHBOARD}/ucod-line`; \n  private ucud_heat= `${API_DASHBOARD}/ucod-confusion-matrix`; \n   \n  private sys_line_clients_api = `${API_VUNGHI}/unique_clients/`; \n  private sys_line_usages_api = `${API_VUNGHI}/unique_usage/`; \n  \n  private sys_sun_api = `${API_VUNGHI}/treemap_data/`; \n  \n  constructor(private http: HttpClient) { }\n  sysLineClients(param:string): Observable<any[]> {\n    const url = `${this.sys_line_clients_api}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  sysUsagesClients(param:string): Observable<any[]> {\n    const url = `${this.sys_line_usages_api}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  sysSun(param:string): Observable<any[]> {\n    const url = `${this.sys_sun_api}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  heatMap(param:string): Observable<any[]> {\n    const url = `${this.heat_api}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  line(param:string): Observable<any[]> {\n    const url = `${this.line_api}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  nega(param:string): Observable<any[]> {\n    const url = `${this.nega_api}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  ucodTable(param:string): Observable<any[]> {\n    const url = `${this.ucud_table}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  ucodLine(param:string): Observable<any[]> {\n    const url = `${this.ucud_line}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  ucodHeatMap(param:string): Observable<any[]> {\n    const url = `${this.ucud_heat}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  ucodTextbox(param:string): Observable<any[]> {\n    const url = `${this.ucud_text_box}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  textBox(param:string): Observable<any[]> {\n    const url = `${this.text_api}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  sync(param:string): Observable<any[]> {\n    const url = `${this.sync_api}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  table(param:string): Observable<any[]> {\n    const url = `${this.table_api}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  disease(param?:string): Observable<any[]> {\n    const url = `${this.disease_api}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  hospital(param?:string): Observable<any[]> {\n    const url = `${this.hospital_api}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  group100(param:string): Observable<any[]> {\n    const url = `${this.grid_api}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  vn(param:string): Observable<any[]> {\n    const url = `${this.vn_api}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  bubble(param:string): Observable<any[]> {\n    const url = `${this.bubble_api}${param}`;\n    return this.http.get<any[]>(url);\n  }\n  \n}\n","\r\n<div class=\"dashboard-tx  flex flex-col sticky top-[90px] z-[2000] -translate-x-[15px] -translate-y-[24px] pt-3 pb-2 pl-[77px]  bg-white box\"\r\n    style=\"box-shadow:0 4px 2px -2px rgba(0, 0, 0, 0.2);width:calc(100% + 30px)\">\r\n    <p class=\"text-2xl font-medium mb-2.5 text-[#003366]\">BÁO CÁO THỐNG KÊ PHIẾU TỬ VONG</p>\r\n    <div class=\" rounded-md mb-2 flex flex-row gap-3 dash\">\r\n        <form [formGroup]=\"stateForm\">\r\n            <mat-form-field class=\"small-form-field\" appearance=\"outline\">\r\n                <mat-label>Tỉnh/thành phố</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"vn_prov_d\" [matAutocomplete]=\"autoGroup\">\r\n                <mat-autocomplete (optionSelected)=\"onOptionSelected($event)\" #autoGroup=\"matAutocomplete\">\r\n                    <mat-optgroup *ngFor=\"let group of stateGroupOptions | async\" [label]=\"group.letter\">\r\n                        <mat-option *ngFor=\"let name of group.names\" [value]=\"name\">\r\n                            {{name}}\r\n                        </mat-option>\r\n                    </mat-optgroup>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n        </form>\r\n        <div class=\" flex items-center gap-3  relative\">\r\n           \r\n            <mat-form-field class=\"small-form-field dash1\" appearance=\"outline\">\r\n                <mat-label>Ngày bắt đầu</mat-label>\r\n                <input matInput [matDatepicker]=\"startPicker\" placeholder=\"Chọn ngày bắt đầu\"\r\n                    (dateChange)=\"startDateChanged($event)\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"startPicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #startPicker></mat-datepicker>\r\n            </mat-form-field>\r\n            đến\r\n            <mat-form-field class=\"small-form-field dash2\" appearance=\"outline\">\r\n                <mat-label>Ngày kết thúc</mat-label>\r\n                <input matInput [matDatepicker]=\"endPicker\" placeholder=\"Chọn ngày kết thúc\"\r\n                    (dateChange)=\"endDateChanged($event)\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"endPicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #endPicker></mat-datepicker>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n        <button mat-raised-button (click)=\"reGenerate()\" class=\"my-1 hover:opacity-95 text\" color=\"primary\">Thống\r\n            kê</button>\r\n    </div>\r\n</div>\r\n<div class=\"px-[60px] mt-[20px] mb-10 dashsing\">\r\n    <div class=\"grid  grid-cols-7 gap-4 \">\r\n        <div class=\"rounded-md col-span-4 h-full flex flex-col gap-4 mobile-col-1\">\r\n            <div class=\"rounded-md border-c p-3 bg-white\">\r\n                <div class=\"flex mb-2.5 gap-4 flex-row w-full items-end\">\r\n                    <span\r\n                        class=\"text-[45px] font-semibold block mb-2 text-black\">{{tNum(textBoxData.total_death)}}</span>\r\n                    <div class=\"flex flex-col gap-1 justify-between font-medium text-[16px] \"\r\n                        [ngClass]=\"textBoxData.asc === 1 ? 'text-[red]' : textBoxData.asc === 2 ?'text-[green]':'text-slate-500' \">\r\n                        <div class=\"flex flex-row  items-center\">\r\n                            <svg *ngIf=\"textBoxData.asc === 1\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M18.6806 13.9783L15.4706 10.7683L13.5106 8.79828C12.6806 7.96828 11.3306 7.96828 10.5006 8.79828L5.32056 13.9783C4.64056 14.6583 5.13056 15.8183 6.08056 15.8183H11.6906H17.9206C18.8806 15.8183 19.3606 14.6583 18.6806 13.9783Z\"\r\n                                    fill=\"currentColor\" />\r\n                            </svg>\r\n                            <svg *ngIf=\"textBoxData.asc === 2\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M17.9188 8.17969H11.6888H6.07877C5.11877 8.17969 4.63877 9.33969 5.31877 10.0197L10.4988 15.1997C11.3288 16.0297 12.6788 16.0297 13.5088 15.1997L15.4788 13.2297L18.6888 10.0197C19.3588 9.33969 18.8788 8.17969 17.9188 8.17969Z\"\r\n                                    fill=\"currentColor\" />\r\n                            </svg>\r\n\r\n                            {{tNum(textBoxData.transform)}}\r\n                        </div>\r\n                        <div>{{ textBoxData.asc===1 ? 'Tăng' : textBoxData.asc===2?'Giảm':\"Không đổi\" }} trong vòng {{\r\n                            textBoxData.day_gap >= 28 ? '28 ngày' : '24h' }} qua</div>\r\n                    </div>\r\n\r\n                </div>\r\n                <p class=\"font-semibold  text-black text-[17px] mb-1\">Báo cáo số lượng tử vong</p>\r\n                <span class=\"text-black\">{{getCity()}}, 28 ngày từ {{formatDate(this.endDate)}}</span>\r\n            </div>\r\n            <div class=\" p-2 bg-white border-c rounded-md \">\r\n                <div class=\"ml-2 my-2\">\r\n                    <mat-button-toggle-group class=\"tgBut\" [(ngModel)]=\"dateType\" (change)=\"onDateTypeChange($event)\"\r\n                        aria-label=\"date type\">\r\n                        <mat-button-toggle value=\"day\" checked>Ngày</mat-button-toggle>\r\n                        <mat-button-toggle value=\"month\">Tháng</mat-button-toggle>\r\n                        <mat-button-toggle value=\"year\">Năm</mat-button-toggle>\r\n                    </mat-button-toggle-group>\r\n                </div>\r\n                <div id=\"chart1\"></div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n        <div class=\"flex flex-col h-full gap-4 col-span-3 mobile-col-1\">\r\n\r\n            <div class=\"p-2 rounded-md border-c bg-white\">\r\n                <div class=\" overflow-y-auto h-[610px]\">\r\n                    <div class=\"ml-2 bg-white text-black pt-2 mb-3 text-[18px] font-bold  sticky top-0\"\r\n                        style=\"width:calc(100% - 25px)\">\r\n                        Số lượng người tử vong được ghi nhận bởi Bộ Y tế<br>\r\n                        <span class=\"text-black font-normal mt-1 block text-[14px]\">{{getCity()}}, từ\r\n                            {{formatDate2(this.startDate,'s')}} đến {{formatDate2(this.endDate)}}</span>\r\n                    </div>\r\n                    <table mat-table class=\"ml-2\" [dataSource]=\"dataSource\">\r\n\r\n                        <!-- Position Column -->\r\n                        <ng-container matColumnDef=\"name\">\r\n                            <th mat-header-cell *matHeaderCellDef> Tỉnh </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"count\">\r\n                            <th mat-header-cell *matHeaderCellDef> Tổng số ca </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.count}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Weight Column -->\r\n                        <ng-container matColumnDef=\"nam\">\r\n                            <th mat-header-cell *matHeaderCellDef> Nam </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.nam}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Symbol Column -->\r\n                        <ng-container matColumnDef=\"nu\">\r\n                            <th mat-header-cell *matHeaderCellDef> Nữ </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.nu}} </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n\r\n                        <tr mat-row *matRowDef=\"let row; let i = index; columns: displayedColumns;\"\r\n                            [ngClass]=\"{'first-row': i === 0 && getCity()===row.name}\"></tr>\r\n\r\n                    </table>\r\n                    <mat-paginator class=\"sticky bottom-0 z-1\" [length]=\"totalItems\" [pageSize]=\"9\"\r\n                        (page)=\"onPageChange($event)\" showFirstLastButtons></mat-paginator>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"grid grid-cols-2 mt-4 gap-4\">\r\n        <div class=\"col-span-1 ds1\">\r\n            <div class=\" p-2 bg-white rounded-md border-c relative \">\r\n\r\n                <div id=\"chart-vn\"></div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-span-1 flex flex-col gap-4 ds2\">\r\n            <div class=\" p-2 bg-white rounded-md border-c \">\r\n\r\n                <div id=\"chart-bubble\" class=\"h-[450px]\"></div>\r\n            </div>\r\n            <div class=\" p-2 rounded-md bg-white border-c \">\r\n\r\n                <div id=\"chart-nega\" class=\"h-[388xp]\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div [ngClass]=\"{'h-[670px]': displayValue==='table'}\" class=\"p-3 mt-4 rounded-md border-c grid-chart bg-white \">\r\n        <div class=\"sticky top-[-16px] bg-white py-3 stic\">\r\n            <div class=\"ml-2 bg-white  mb-2 text-[18px] font-bold \" style=\"width:calc(100% - 25px)\">\r\n                Thống kê tử vong theo mã bệnh<br>\r\n                <span class=\"text-black font-normal mt-1 block text-[14px]\">Tất cả các trường hợp tử vong đi sâu vào mã\r\n                    bệnh\r\n                    , Cả hai giới tính , mọi chủng tộc , mọi dân tộc</span>\r\n            </div>\r\n\r\n            <div class=\"mb-2 flex flex-row gap-3\">\r\n                <mat-form-field class=\"small-form-field  dash3\" appearance=\"outline\">\r\n                    <mat-label>Hiển thị</mat-label>\r\n                    <mat-select label placeholder=\"Chọn hiển thị\" [(value)]=\"displayValue\"\r\n                        (selectionChange)=\"onDisplayChange($event)\">\r\n                        <mat-option value=\"grid\">\r\n                            Dạng lưới\r\n                        </mat-option>\r\n                        <mat-option value=\"table\">\r\n                            Dạng bảng\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field class=\"small-form-field dash4\" appearance=\"outline\">\r\n                    <mat-label>Loại thống kê</mat-label>\r\n                    <mat-select label placeholder=\"Chọn định dạng\" [(value)]=\"displayValueType\"\r\n                        (selectionChange)=\"onDisplayValueTypeChange($event)\">\r\n                        <mat-option value=\"num\">\r\n                            Số lượng tử vong\r\n                        </mat-option>\r\n                        <mat-option value=\"per\">\r\n                            Tỷ lệ tử vong\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field class=\"small-form-field dash5\" appearance=\"outline\">\r\n                    <mat-label>Loại mã</mat-label>\r\n                    <mat-select label placeholder=\"Chọn mã theo\" [(value)]=\"displayValueCode\"\r\n                        (selectionChange)=\"onDisplayValueCodeChange($event)\">\r\n                        <mat-option value=\"code4\">\r\n                            Mã đầy đủ (4 ký tự)\r\n                        </mat-option>\r\n                        <mat-option value=\"code3\">\r\n                            Gộp loại bệnh (3 ký tự)\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <table class=\"grid-d\" *ngIf=\"dataGroup100 && displayValue==='grid'\">\r\n            <thead>\r\n                <tr>\r\n                    <th *ngFor=\"let ageGroup of dataGroup100[0]\">{{ ageGroup.name }}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <ng-container *ngFor=\"let row of dataGroup100; let i = index\">\r\n                    <tr *ngIf=\"i > 0\">\r\n                        <th>{{i}}</th>\r\n                        <td class=\"text-center\" *ngFor=\"let entry of row.slice(1); let index = index\">\r\n                            <div class=\"w-full\">\r\n                                <div\r\n                                    class=\"bg-[#efefef] boxer rounded-md w-[65px] h-[65px] text-[12px]  flex flex-col items-center justify-center\">\r\n                                    <span>{{entry.name}}</span>\r\n                                    <span class=\" mt-1 font-bold\" [innerHTML]=\"entry.value\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </ng-container>\r\n            </tbody>\r\n        </table>\r\n        <table class=\"mb-2\" *ngIf=\"dataGroup100 && displayValue==='table'\">\r\n            <thead class=\"bg-[#efefef] h-[42px] sticky top-[120px]\">\r\n                <tr>\r\n                    <th class=\"!font-semibold\" *ngFor=\"let ageGroup of dataGroup100[0]\">{{ ageGroup.name }}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <ng-container *ngFor=\"let row of dataGroup100.slice(1); let i = index\">\r\n                    <tr class=\"h-[35px]\" [ngClass]=\"{'bg-[#efefef]': i % 2 !== 0, 'bg-white': i % 2 === 0}\">\r\n                        <td class=\"text-center\" *ngFor=\"let entry of row; let idx = index\">\r\n                            <div class=\"w-full\" [ngClass]=\"{'font-medium': idx===0}\">\r\n                                <div>\r\n                                    <span class=\"mt-1\">{{entry.value}}</span>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </ng-container>\r\n            </tbody>\r\n\r\n        </table>\r\n\r\n    </div>\r\n    <div class=\"p-3 mt-4 rounded-md border-c bg-white\">\r\n        <div class=\"ml-2 bg-white  mb-2 text-[18px] font-bold text-black\" style=\"width:calc(100% - 25px)\">\r\n            Tình hình tử vong<br>\r\n            <span class=\" text-black font-normal mt-1 block text-[14px] text\"> Thống kê từ {{this.formatDateLine(\r\n                this.startDate,\r\n                's'\r\n            )}} đến {{this.formatDateLine(this.endDate)}}</span>\r\n        </div>\r\n\r\n        <div class=\"flex gap-3 flex-row sea\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Tỉnh/Thành phố</mat-label>\r\n                <mat-select [formControl]=\"prov_name_s\" multiple  (openedChange)=\"onOpenedChange1($event)\"  (keydown)=\"onKeydownIP1($event)\">\r\n\r\n                    <mat-select-trigger>\r\n                        {{provNameArray[0] || ''}}\r\n                        <span *ngIf=\"provNameArray.length > 1\" class=\"example-additional-selection\">\r\n                            (+{{provNameArray.length - 1}} {{provNameArray.length === 2 ? 'other' : 'others'}})\r\n                        </span>\r\n                    </mat-select-trigger>\r\n                    <mat-option *ngFor=\"let prov of filteredProvName\" [value]=\"prov\">{{prov}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Cơ sở khám chữa bệnh</mat-label>\r\n                <mat-select [formControl]=\"list_hos_s\" multiple (openedChange)=\"onOpenedChange2($event)\"  (keydown)=\"onKeydownIP2($event)\">\r\n                    <mat-select-trigger>\r\n                        {{hosArray[0] || ''}}\r\n                        <span *ngIf=\"hosArray.length > 1\" class=\"example-additional-selection\">\r\n                            (+{{hosArray.length - 1}} {{hosArray.length === 2 ? 'other' : 'others'}})\r\n                        </span>\r\n                    </mat-select-trigger>\r\n                    <mat-option *ngFor=\"let hos of filteredHos\" [value]=\"hos\">{{hos}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Mã bệnh</mat-label>\r\n                <mat-select [formControl]=\"list_dis_s\" multiple (openedChange)=\"onOpenedChange3($event)\"  (keydown)=\"onKeydownIP3($event)\">\r\n                    <mat-select-trigger>\r\n                        {{disArray[0] || ''}}\r\n                        <span *ngIf=\"hosArray.length > 1\" class=\"example-additional-selection\">\r\n                            (+{{disArray.length - 1}} {{disArray.length === 2 ? 'other' : 'others'}})\r\n                        </span>\r\n                    </mat-select-trigger>\r\n                    <mat-option *ngFor=\"let dis of filteredDis\" [value]=\"dis\">{{dis}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <button mat-raised-button (click)=\"reSync()\" class=\"my-1 hover:opacity-95\" color=\"primary\">Thống\r\n                kê</button>\r\n            \r\n        </div>\r\n        <div class=\"my-3\">\r\n            <mat-button-toggle-group class=\"tgBut\"  [(ngModel)]=\"viewType\" (change)=\"onViewTypeChange($event)\"\r\n                aria-label=\"view type\">\r\n                <mat-button-toggle value=\"1\" checked>Tỉnh</mat-button-toggle>\r\n                <mat-button-toggle value=\"2\">Cơ sở y tế</mat-button-toggle>\r\n                <mat-button-toggle value=\"3\">Mã bệnh</mat-button-toggle>\r\n            </mat-button-toggle-group>\r\n        </div>\r\n        <div id=\"boxChart__container\" (mousemove)=\"addHighlight($event)\" (touchmove)=\"addHighlight($event)\"\r\n            (touchstart)=\"addHighlight($event)\" >\r\n\r\n            \r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>","import { AfterViewInit, Component, OnInit, SimpleChanges } from '@angular/core';\nimport { format } from 'date-fns';\nimport * as vnMap from '../../../../../../vietnam_new.json';\nimport { vi } from 'date-fns/locale';\nimport { DashboardService } from './../../../../../shared/services/dashboard.service';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n// import * as Highcharts from 'highcharts';\n// import HighchartsMap from 'highcharts/modules/map';\n// Initialize Highcharts exporting module\nimport { MatTableDataSource } from '@angular/material/table';\nimport vn_prov from '../../../../../../output_file.json';\nimport vn_code from '../../../../../../vn_provi.json';\nimport prov_name from '../../../../../../prov_name.json';\nimport { FormControl, FormBuilder } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\n// import syncCharts from './syncAddition';\n//\n// syncCharts(Highcharts);\nimport HighchartsESM from 'highcharts/es-modules/masters/highcharts.src';\nimport {loadHighcharts} from '../../../../../shared/highcharts';\n\nexport interface PeriodicElement {\n    name: string;\n    count: number;\n    nam: number;\n    nu: string;\n}\n\nconst categories = [\n    '0-4',\n    '5-9',\n    '10-14',\n    '15-19',\n    '20-24',\n    '25-29',\n    '30-34',\n    '35-40',\n    '40-45',\n    '45-49',\n    '50-54',\n    '55-59',\n    '60-64',\n    '65-69',\n    '70-74',\n    '75-79',\n    '80-84',\n    '85+',\n];\n\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { Inject } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\n\n@Component({\n    selector: 'app-dashboard-mccd',\n    templateUrl: './dashboard-mccd.component.html',\n    styleUrls: ['./dashboard-mccd.component.scss'],\n})\nexport class DashboardMccdComponent implements AfterViewInit, OnInit {\n    public Highcharts: typeof HighchartsESM | null = null;\n    displayedColumns: string[] = ['name', 'count', 'nam', 'nu'];\n    vn_prov_d = vn_prov;\n    myControl = new FormControl();\n    filteredOptions: Observable<any[]>;\n    dataSource = new MatTableDataSource<PeriodicElement>([]);\n    colorDef: any = null;\n    totalItems = 0;\n    startDate: Date;\n    endDate: Date;\n    textBoxData: any = {\n        total_death: 0,\n        day_gap: 0,\n        asc: false,\n        transform: 0,\n    };\n    dateType?: string = 'day';\n    stateForm = this._formBuilder.group({\n        vn_prov_d: 'Cả nước',\n    });\n\n    displayValue = 'grid';\n    displayValueType = 'num';\n    displayValueCode = 'code4';\n    stateGroupOptions: Observable<any[]>;\n    //sync\n    chart: any;\n    viewType = '1';\n    list_hos: string[];\n    list_dis: string[];\n    list_hos_s: FormControl<string[] | null> = new FormControl<string[] | null>(null);\n    list_dis_s: FormControl<string[] | null> = new FormControl<string[] | null>(null);\n    prov_name: string[] = prov_name;\n    prov_name_s: FormControl<string[] | null> = new FormControl<string[] | null>(null);\n    chartCallback: any;\n    dataGroup100: any;\n    i: any;\n    constructor(\n        @Inject(MAT_DATE_FORMATS) private myFormats: any,\n        private dateAdapter: DateAdapter<Date>,\n        private dashboardService: DashboardService,\n        private _formBuilder: FormBuilder,\n        private toastService: ToastrService,\n        private sanitizer: DomSanitizer\n    ) {\n        this.dateAdapter.setLocale('vi-VN'); // Đặt ngôn ngữ mặc định\n    }\n    get provNameArray(): string[] {\n        return this.prov_name_s.value || [];\n    }\n    get hosArray(): string[] {\n        return this.list_hos_s.value || [];\n    }\n    get disArray(): string[] {\n        return this.list_dis_s.value || [];\n    }\n    syncExtremes(e: any) {\n        var thisChart = this.chart;\n        if (e.trigger !== 'syncExtremes') {\n            // Prevent feedback loop\n            this.Highcharts?.each(this.Highcharts.charts, function (chart: any) {\n                if (chart !== thisChart) {\n                    if (chart.xAxis[0].setExtremes) {\n                        // It is null while updating\n                        chart.xAxis[0].setExtremes(e.min, e.max, undefined, false, {\n                            trigger: 'syncExtremes',\n                        });\n                    }\n                }\n            });\n        }\n    }\n    ngOnInit() {\n        this.stateGroupOptions = this.stateForm.get('vn_prov_d')!.valueChanges.pipe(\n            startWith(''),\n            map((value) => this._filterGroup(value || ''))\n        );\n    }\n    addHighlight(e: any) {\n        let point, event;\n        const charts = this.Highcharts?.charts;\n        charts?.forEach((chart, index) => {\n            if (chart) {\n                chart = charts[index];\n                // Find coordinates within the chart\n                event = chart?.pointer.normalize(e);\n                // Get the hovered point\n                point = (chart?.series[0] as any).searchPoint(event, true);\n                if (point) {\n                    point.highlight(e);\n                }\n            }\n        });\n    }\n    ngAfterViewInit() {\n        // Use ngAfterViewInit\n        loadHighcharts().then(Highcharts => {\n            this.Highcharts = Highcharts;\n            this.colorDef = this.Highcharts?.getOptions().colors?.at(0);\n            this.textBox();\n            this.line();\n            this.table();\n            this.initializeVietNam();\n            this.getDisease();\n            this.bubbleGroup();\n            this.negaBar();\n            this.syncChart();\n            this.gridChart();\n            this.getHospital();\n        })\n    }\n    tNum(number: number): string {\n        if (number > 1000) {\n            return (number / 1000).toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + ',000';\n        } else {\n            return number.toString();\n        }\n    }\n    reSync() {\n        if (this.startDate && this.endDate) {\n            const param = `?&from=${format(this.startDate, 'yyyy-MM-dd')}&to=${format(\n                this.endDate,\n                'yyyy-MM-dd'\n            )}&view=${this.viewType}&city=${\n                this.prov_name_s.value?.map((item) => this.getCodeUnknow(item)).join(',') || ''\n            }&csyt=${this.list_hos_s.value?.join(',') || ''}&mabenh=${\n                this.list_dis_s.value?.join(',') || ''\n            }`;\n            this.syncChart(param);\n        } else {\n            const param = `?&from=${format(\n                new Date().setDate(new Date().getDate() - 28),\n                'yyyy-MM-dd'\n            )}&to=${format(new Date(), 'yyyy-MM-dd')}&view=${this.viewType}&city=${\n                this.prov_name_s.value?.map((item) => this.getCodeUnknow(item)).join(',') || ''\n            }&csyt=${this.list_hos_s.value?.join(',') || ''}&mabenh=${\n                this.list_dis_s.value?.join(',') || ''\n            }`;\n            this.syncChart(param);\n        }\n    }\n\n    syncChart(param?: string) {\n        const container = document.getElementById('boxChart__container');\n        if (container) {\n            container.addEventListener('mousemove', this.handleChartEvents);\n            container.addEventListener('touchmove', this.handleChartEvents);\n            container.addEventListener('touchstart', this.handleChartEvents);\n        }\n        this.dashboardService.sync(param || '?from=&to=').subscribe(\n            (results: any) => {\n                const dom_chart = document.getElementById('boxChart__container');\n                if (dom_chart) {\n                    const html = results.datasets\n                        .map(\n                            (_: any, i: any) => `\n                <div id=\"chartSync${i}\"></div>\n                `\n                        )\n                        .join('');\n                    dom_chart.innerHTML = `<div style=\"grid-template-columns: repeat(${Math.round(\n                        results.datasets.length / 2\n                    )}, minmax(0, 1fr));\" class=\" grid\">${html}</div>`;\n                }\n                results.datasets.forEach((dataset: any, i: any) => {\n                    const data = dataset.data.map((val: any, j: any) => [results.xData[j], val]);\n                    this.Highcharts?.chart(`chartSync${i}`, {\n                        chart: {\n                            marginLeft: 40, // Keep all charts left aligned\n                            spacingTop: 20,\n                            spacingBottom: 20,\n                            height: 250,\n                            zooming: {\n                                type: 'x',\n                            },\n                        },\n                        exporting: {\n                            enabled: false,\n                        },\n                        title: {\n                            text: dataset.name,\n                            align: 'left',\n                            margin: 0,\n                            x: 30,\n                        },\n                        credits: {\n                            enabled: false,\n                        },\n                        legend: {\n                            enabled: false,\n                        },\n                        xAxis: {\n                            crosshair: true,\n                            events: {\n                                setExtremes: this.syncExtremes,\n                            },\n                            type: 'datetime',\n                        },\n                        yAxis: {\n                            title: {\n                                text: null,\n                            },\n                            crosshair: true,\n                        },\n                        tooltip: {\n                            positioner: function (this: any) {\n                                return {\n                                    // right aligned\n                                    x: this.chart.chartWidth - this.label.width,\n                                    y: 10, // align to title\n                                };\n                            },\n                            borderWidth: 0,\n                            backgroundColor: 'none',\n                            pointFormat: '{point.y}',\n                            headerFormat: '',\n                            shadow: false,\n                            style: {\n                                fontSize: '18px',\n                            },\n                            valueDecimals: 0,\n                        },\n                        plotOptions: {\n                            series: {\n                                marker: {\n                                    enabledThreshold: 4,\n                                },\n                            },\n                        },\n                        series: [\n                            {\n                                data: data,\n                                name: dataset.name,\n                                type: dataset.type,\n                                color: (this.Highcharts.getOptions() as any).colors[i],\n                                fillOpacity: 0.3,\n                                tooltip: {\n                                    valueSuffix: ' ' + dataset.unit,\n                                },\n                            },\n                        ],\n                    } as any);\n                });\n            },\n            (err) => {\n                this.toastService.error(`Có lỗi xảy ra`, 'Thất bại');\n            }\n        );\n    }\n\n    handleChartEvents(e: any) {\n        let chart: Highcharts.Chart;\n        let point: Highcharts.Point | undefined;\n        let event: Highcharts.PointerEventObject;\n        let loop_length = 0;\n        if (this.Highcharts) {\n            loop_length = this.Highcharts.charts.length;\n        }\n        for (let i = 0; i < loop_length; i++) {\n            chart = this.Highcharts?.charts[i] as Highcharts.Chart;\n            if (!chart) continue;\n            event = chart.pointer.normalize(e); // Find coordinates within the chart\n            // Adjust event.chartX if necessary (custom logic)\n            event.chartX = e.offsetX;\n\n            point = chart.series[0].searchPoint(event, true); // Get the hovered point\n            if (point) {\n                (point as any).highlight(e);\n            }\n        }\n    }\n    onDisplayChange(event: any): void {\n        this.displayValue = event.value;\n        this.reRenderGrid();\n    }\n\n    onDisplayValueTypeChange(event: any): void {\n        this.displayValueType = event.value;\n        this.reRenderGrid();\n    }\n\n    onDisplayValueCodeChange(event: any): void {\n        this.displayValueCode = event.value;\n        this.reRenderGrid();\n    }\n\n    onViewTypeChange(event: any): void {\n        this.viewType = event.value;\n        this.reSync();\n    }\n    reRenderGrid() {\n        if (this.startDate && this.endDate) {\n            const param = `?&from=${format(this.startDate, 'yyyy-MM-dd')}&to=${format(\n                this.endDate,\n                'yyyy-MM-dd'\n            )}&type=${this.displayValueType}&display=${this.displayValue}`;\n            this.gridChart(param);\n        } else {\n            const param = `?&from=${format(\n                new Date().setDate(new Date().getDate() - 28),\n                'yyyy-MM-dd'\n            )}&to=${format(new Date(), 'yyyy-MM-dd')}&type=${this.displayValueType}&display=${\n                this.displayValue\n            }&code=${this.displayValueCode}`;\n            this.gridChart(param);\n        }\n    }\n    reGenerate() {\n        if (this.startDate && this.endDate) {\n            const param = `?city=${this.getCode()}&from=${format(\n                this.startDate,\n                'yyyy-MM-dd'\n            )}&to=${format(this.endDate, 'yyyy-MM-dd')}&type=${this.dateType}`;\n            const paramDate = `?city=${this.getCode()}&from=${format(\n                this.startDate,\n                'yyyy-MM-dd'\n            )}&to=${format(this.endDate, 'yyyy-MM-dd')}`;\n            const paramOnly = `?from=${format(this.startDate, 'yyyy-MM-dd')}&to=${format(\n                this.endDate,\n                'yyyy-MM-dd'\n            )}`;\n            this.line(param);\n            this.bubbleGroup(paramDate);\n            this.table(paramDate);\n            this.negaBar(paramDate);\n            this.textBox(paramDate);\n            this.initializeVietNam(paramOnly);\n            this.gridChart(paramOnly);\n\n            this.toastService.success('Thống kê thành công!', 'Thành công');\n        }\n        if ((this.startDate && !this.endDate) || (!this.startDate && this.endDate)) {\n            this.toastService.error('Nhập đủ hoặc bỏ trống 2 trường để thống kê', 'Thất bại');\n        }\n    }\n    getCode() {\n        const city = this.stateForm.get('vn_prov_d');\n        if (city !== null && (this.startDate !== null || this.endDate !== null)) {\n            // Kiểm tra city không null và startDate hoặc endDate không null\n            const cityName: string | null = city.value;\n\n            if (cityName !== null && vn_code.hasOwnProperty(cityName)) {\n                // Kiểm tra xem cityName không null và có trong danh sách mã code không\n                return vn_code[cityName];\n            }\n        }\n    }\n    getCodeUnknow(name: string) {\n        const city = name;\n        if (city !== null && (this.startDate !== null || this.endDate !== null)) {\n            // Kiểm tra city không null và startDate hoặc endDate không null\n            const cityName: string | null = city;\n\n            if (cityName !== null && vn_code.hasOwnProperty(cityName)) {\n                // Kiểm tra xem cityName không null và có trong danh sách mã code không\n                return vn_code[cityName];\n            }\n        }\n    }\n    onPageChange(event: any) {\n        if (this.startDate && this.endDate) {\n            this.table(\n                `?from=${format(this.startDate, 'yyyy-MM-dd')}&to=${format(\n                    this.endDate,\n                    'yyyy-MM-dd'\n                )}&city=${this.getCode()}&page=${event.pageIndex + 1}`\n            );\n        } else {\n            this.table(`?page=${event.pageIndex + 1}&city=${this.getCode()}`);\n        }\n    }\n    sanitizeHTML(html: string): SafeHtml {\n        return this.sanitizer.bypassSecurityTrustHtml(html);\n    }\n    textBox(param?: string) {\n        this.dashboardService.textBox(param || '').subscribe((results: any) => {\n            this.textBoxData = results;\n        });\n    }\n    startDateChanged(event: any) {\n        this.startDate = event.value;\n    }\n\n    endDateChanged(event: any) {\n        this.endDate = event.value;\n    }\n    table(param?: string) {\n        this.dashboardService.table(param || '').subscribe((results: any) => {\n            this.totalItems = results.totalRow;\n            this.dataSource = results.data;\n        });\n    }\n    gridChart(param?: string) {\n        this.dashboardService.group100(param || '').subscribe((results: any) => {\n            this.dataGroup100 = results;\n        });\n    }\n    onOptionSelected(event: MatAutocompleteSelectedEvent) {\n        this.city_main = event.option.value;\n        if (this.startDate && this.endDate) {\n            this.line(\n                `?from=${format(this.startDate, 'yyyy-MM-dd')}&to=${format(\n                    this.endDate,\n                    'yyyy-MM-dd'\n                )}&city=${this.getCode()}`\n            );\n            this.table(\n                `?from=${format(this.startDate, 'yyyy-MM-dd')}&to=${format(\n                    this.endDate,\n                    'yyyy-MM-dd'\n                )}&city=${this.getCode()}&page=1`\n            );\n        } else {\n            this.line(`?city=${this.getCode()}`);\n            this.table(`?page=1&city=${this.getCode()}`);\n        }\n    }\n    city_main = 'Cả nước';\n    getCity() {\n        return this.city_main;\n    }\n    getDisease(param?: string) {\n        this.dashboardService.disease(param || '').subscribe((results: any) => {\n            this.list_dis = results;\n            this.filteredDis = this.list_dis as any;\n        });\n    }\n    getHospital(param?: string) {\n        this.dashboardService.hospital(param || '').subscribe((results: any) => {\n            this.list_hos = results.map((item: any) => item.TENCSKCB);\n            this.filteredHos = this.list_hos as any;\n        });\n    }\n    formatDateLine(date?: Date, type?: string) {\n        if (type) {\n            if (this.dateType === 'day') {\n                return format(date || new Date().setDate(new Date().getDate() - 28), 'dd/MM/yyyy', {\n                    locale: vi,\n                });\n            }\n            if (this.dateType === 'month') {\n                return (\n                    'T' +\n                    format(date || new Date().setDate(new Date().getDate() - 28), 'M, yyyy', {\n                        locale: vi,\n                    })\n                );\n            }\n            if (this.dateType === 'year') {\n                return format(date || new Date().setDate(new Date().getDate() - 28), 'yyyy', {\n                    locale: vi,\n                });\n            }\n        } else {\n            if (this.dateType === 'day') {\n                return format(date || new Date(), 'dd/MM/yyyy', {\n                    locale: vi,\n                });\n            }\n            if (this.dateType === 'month') {\n                return (\n                    'T' +\n                    format(date || new Date(), 'M, yyyy', {\n                        locale: vi,\n                    })\n                );\n            }\n            if (this.dateType === 'year') {\n                return format(date || new Date(), 'yyyy', {\n                    locale: vi,\n                });\n            }\n        }\n        return '';\n    }\n    formatDate2(date?: Date, type?: string) {\n        if (type) {\n            return format(date || new Date().setDate(new Date().getDate() - 28), 'dd/MM/yyyy', {\n                locale: vi,\n            });\n        } else {\n            return format(date || new Date(), 'dd/MM/yyyy', { locale: vi });\n        }\n    }\n\n    formatDate(date?: Date, type?: string) {\n        if (type) {\n            return format(\n                date || new Date().setDate(new Date().getDate() - 28),\n                \"dd 'tháng' M, yyyy\",\n                { locale: vi }\n            );\n        } else {\n            return format(date || new Date(), \"dd 'tháng' M, yyyy\", { locale: vi });\n        }\n    }\n    line(param?: string) {\n        this.dashboardService.line(param || '').subscribe((results: any) => {\n            this.Highcharts?.chart('chart1', {\n                chart: {\n                    type: 'line',\n                    zoomType: 'x',\n                },\n                title: {\n                    text: `Theo dõi tình hình tử vong ${this.getCity()}, từ ${this.formatDateLine(\n                        this.startDate,\n                        's'\n                    )} đến ${this.formatDateLine(this.endDate)}`,\n                    align: 'left',\n                    style: {\n                        fontFamily: 'Roboto',\n                        fontWeight: 'bold',\n                    },\n                },\n                subtitle: {\n                    text:\n                        document.ontouchstart === undefined\n                            ? 'Nhấp và kéo trong vùng vẽ để phóng to'\n                            : 'Chụm biểu đồ để phóng to',\n                    align: 'left',\n                    style: {\n                        fontFamily: 'Roboto',\n                    },\n                },\n                xAxis: {\n                    // crosshair: {\n                    //     dashStyle: 'shortdot',\n                    //     color: Highcharts.getOptions().colors?.at(0),\n                    // },\n                    type: 'datetime',\n                    categories: results.x,\n                },\n                yAxis: {\n                    // title: {\n                    //     text: 'Exchange rate',\n                    // },\n                    // crosshair: {\n                    //     dashStyle: 'shortdot',\n                    //     color: Highcharts.getOptions().colors?.at(0),\n                    // },\n                },\n                legend: {\n                    enabled: false,\n                },\n                plotOptions: {\n                    area: {\n                        fillColor: {\n                            linearGradient: {\n                                x1: 0,\n                                y1: 0,\n                                x2: 0,\n                                y2: 1,\n                            },\n                            stops: [\n                                [0, this.Highcharts.getOptions().colors?.at(0)],\n                                [\n                                    1,\n                                    this.Highcharts.color(this.Highcharts.getOptions().colors?.at(0) as any)\n                                        .setOpacity(0)\n                                        .get('rgba'),\n                                ],\n                            ],\n                        },\n                        marker: {\n                            radius: 2,\n                        },\n                        lineWidth: 1,\n                        states: {\n                            hover: {\n                                lineWidth: 1,\n                            },\n                        },\n                        threshold: null,\n                    },\n                },\n\n                series: [\n                    {\n                        type: 'area',\n                        name: 'Số người tử vong',\n                        data: results.y,\n                    },\n                ],\n            } as any);\n        });\n    }\n    private _filterGroup(value: string): any[] {\n        if (value) {\n            return this.vn_prov_d\n                .map((group: any) => ({ letter: group.letter, names: _filter(group.names, value) }))\n                .filter((group: any) => group.names.length > 0);\n        }\n\n        return this.vn_prov_d;\n    }\n    onDateTypeChange(event: MatButtonToggleChange) {\n        if (this.startDate && this.endDate) {\n            const param = `?city=${this.getCode()}&from=${format(\n                this.startDate,\n                'yyyy-MM-dd'\n            )}&to=${format(this.endDate, 'yyyy-MM-dd')}&type=${this.dateType}`;\n            this.line(param);\n        }\n        if (!this.startDate && !this.endDate) {\n            const param = `?city=${this.getCode()}&type=${this.dateType}`;\n            this.line(param);\n        }\n    }\n    bubbleGroup(param?: string) {\n        this.dashboardService.bubble(param || '').subscribe((results: any) => {\n            this.Highcharts?.chart('chart-bubble', {\n                chart: {\n                    type: 'packedbubble',\n                    height: '450px',\n                },\n                title: {\n                    text: 'Biểu diễn số lượng người tử vong theo giới tính',\n                    align: 'left',\n                    style: {\n                        fontFamily: 'Roboto',\n                        fontWeight: 'bold',\n                    },\n                },\n                subtitle: {\n                    text: `${this.getCity()}, từ ${this.formatDateLine(\n                        this.startDate,\n                        's'\n                    )} đến ${this.formatDateLine(this.endDate)}`,\n                    align: 'left',\n                    style: {\n                        fontFamily: 'Roboto',\n                        fontSize: 14,\n                        color: 'black',\n                    },\n                },\n                tooltip: {\n                    useHTML: true,\n                    pointFormat: '<b>{point.name}:</b> {point.value} người',\n                },\n                plotOptions: {\n                    packedbubble: {\n                        minSize: '40%',\n                        maxSize: '100%',\n                        zMin: 0,\n                        zMax: 1000,\n                        layoutAlgorithm: {\n                            gravitationalConstant: 0.05,\n                            splitSeries: true,\n                            seriesInteraction: false,\n                            dragBetweenSeries: false,\n                            parentNodeLimit: true,\n                        },\n                        dataLabels: {\n                            enabled: true,\n                            format: '{point.name}',\n                            filter: {\n                                property: 'y',\n                                operator: '>',\n                                value: 10,\n                            },\n                            style: {\n                                color: 'black',\n                                textOutline: 'none',\n                                fontWeight: 'normal',\n                            },\n                        },\n                    },\n                },\n\n                series: results,\n            } as any);\n        });\n    }\n    negaBar(param?: string) {\n        this.dashboardService.nega(param || '').subscribe((results: any) => {\n            this.Highcharts?.chart('chart-nega', {\n                chart: {\n                    type: 'bar',\n                },\n                title: {\n                    text: 'Biểu đồ thể hiện tình hình tử vong của các nhóm tuổi',\n                    align: 'left',\n                    style: {\n                        fontFamily: 'Roboto',\n                        fontWeight: 'bold',\n                    },\n                },\n                subtitle: {\n                    text: `${this.getCity()}, từ ${this.formatDateLine(\n                        this.startDate,\n                        's'\n                    )} đến ${this.formatDateLine(this.endDate)}`,\n                    align: 'left',\n                    style: {\n                        fontFamily: 'Roboto',\n                        fontSize: 14,\n                        color: 'black',\n                    },\n                },\n                accessibility: {\n                    point: {\n                        valueDescriptionFormat: '{index}. Age {xDescription}, {value}%.',\n                    },\n                },\n                xAxis: [\n                    {\n                        categories: categories,\n                        reversed: false,\n                        labels: {\n                            step: 1,\n                        },\n                        accessibility: {\n                            description: 'Age (male)',\n                        },\n                    },\n                    {\n                        // mirror axis on right side\n                        opposite: true,\n                        reversed: false,\n                        categories: categories,\n                        linkedTo: 0,\n                        labels: {\n                            step: 1,\n                        },\n                        accessibility: {\n                            description: 'Age (female)',\n                        },\n                    },\n                ],\n                yAxis: {\n                    title: {\n                        text: null,\n                    },\n                    labels: {\n                        formatter(this: { value: number }) {\n                            return Math.abs(this.value) + '%';\n                        },\n                    },\n                    accessibility: {\n                        description: 'Percentage population',\n                        rangeDescription: 'Range: 0 to 5%',\n                    },\n                },\n\n                plotOptions: {\n                    series: {\n                        stacking: 'normal',\n                        borderRadius: 5,\n                    },\n                },\n\n                tooltip: {\n                    formatter(this: any): string {\n                        const absY = Math.abs(this.point.y);\n                        return `<b>${this.series.name}, age ${\n                            this.point.category\n                        }</b><br/>Population: ${absY.toFixed(1)}%`;\n                    },\n                },\n\n                series: results,\n            } as any);\n        });\n    }\n    initializeVietNam(param?: string) {\n        this.dashboardService.vn(param || '?from=&to=').subscribe((results: any) => {\n            this.Highcharts?.mapChart('chart-vn', {\n                chart: {\n                    map: vnMap,\n                },\n                title: {\n                    text: 'Phân bố tử vong theo địa lý',\n                    style: {\n                        fontFamily: 'Roboto',\n                        fontWeight: 'bold',\n                    },\n                },\n\n                subtitle: {\n                    text: '',\n                    style: {\n                        fontFamily: 'Roboto',\n                    },\n                },\n\n                mapNavigation: {\n                    enabled: true,\n                    buttonOptions: {\n                        verticalAlign: 'bottom',\n                    },\n                },\n\n                colorAxis: {\n                    min: 0,\n                },\n\n                series: [\n                    {\n                        data: results,\n                        name: 'Số ca tử vong',\n                        states: {\n                            hover: {\n                                color: '#BADA55',\n                            },\n                        },\n                        dataLabels: {\n                            enabled: true,\n                            format: '{point.name}',\n                        },\n                    },\n                ],\n            } as any);\n        });\n    }\n    saveStateKey1 = '';\n    saveStateKey2 = '';\n    saveStateKey3 = '';\n    filteredProvName = prov_name;\n    filteredHos: any = [];\n    filteredDis: any = [];\n    onOpenedChange1(isOpened: boolean) {\n        if (!isOpened) {\n            this.resetIP1();\n        }\n    }\n    onOpenedChange2(isOpened: boolean) {\n        if (!isOpened) {\n            this.resetIP2();\n        }\n    }\n    onOpenedChange3(isOpened: boolean) {\n        if (!isOpened) {\n            this.resetIP3();\n        }\n    }\n    resetIP1() {\n        this.saveStateKey1 = '';\n        this.filteredProvName = this.prov_name;\n\n        const a_code = this.prov_name_s.value?.map((item) => this.getCodeUnknow(item));\n        if (a_code) {\n            this.getHospital(`?city=${a_code?.join(',')}`);\n        }\n    }\n    resetIP2() {\n        this.saveStateKey2 = '';\n        this.filteredHos = this.list_hos as any;\n    }\n    resetIP3() {\n        this.saveStateKey2 = '';\n        this.filteredDis = this.list_dis as any;\n    }\n    onKeydownIP1(event: KeyboardEvent): void {\n        if (event.key === 'Backspace') {\n            // Remove the last character from saveStateKey1\n            this.saveStateKey1 = this.saveStateKey1.slice(0, -1);\n        }\n        if (event.key.length === 1) {\n            this.saveStateKey1 += event.key;\n        }\n        this.filteredProvName = this.prov_name.filter((val) =>\n            this.saveStateKey1.length > 0\n                ? this.removeAccents(val).toLowerCase().includes(this.saveStateKey1.toLowerCase())\n                : val\n        );\n    }\n    removeAccents(str: string): string {\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n    }\n    onKeydownIP2(event: KeyboardEvent): void {\n        if (event.key.length !== 1 && event.key !== ' ' && event.key !== 'Space') {\n            if (event.key === 'Backspace') {\n                // Remove the last character from saveStateKey1\n                this.saveStateKey1 = this.saveStateKey1.slice(0, -1);\n            }\n            return;\n        }\n\n        this.saveStateKey1 += event.key;\n        this.filteredHos = this.list_hos.filter((val) =>\n            val.toLowerCase().includes(this.saveStateKey2.toLowerCase())\n        );\n    }\n    onKeydownIP3(event: KeyboardEvent): void {\n        if (event.key.length !== 1 && event.key !== ' ' && event.key !== 'Space') {\n            if (event.key === 'Backspace') {\n                // Remove the last character from saveStateKey1\n                this.saveStateKey3 = this.saveStateKey3.slice(0, -1);\n            }\n            return;\n        }\n        this.saveStateKey3 += event.key;\n        this.filteredDis = this.list_dis.filter((val) =>\n            val.toLowerCase().includes(this.saveStateKey3.toLowerCase())\n        );\n    }\n}\nexport const _filter = (opt: string[], value: string): string[] => {\n    const filterValue = value.toLowerCase();\n\n    return opt.filter((item) => item.toLowerCase().includes(filterValue));\n};\n\n","\n<div class=\"dashboard-tx flex flex-col sticky top-[90px] z-[2000] -translate-x-[15px] -translate-y-[24px] pt-3 pb-2 pl-[77px]  bg-white\"\n    style=\"box-shadow:0 4px 2px -2px rgba(0, 0, 0, 0.2);width:calc(100% + 30px)\">\n    <p class=\"text-2xl font-medium mb-2.5 text-[#003366]\">BÁO CÁO THỐNG KÊ UCOD</p>\n    <div class=\" rounded-md mb-2 flex flex-row gap-3 dash\">\n        <div class=\" flex items-center gap-3  relative\">\n            <mat-form-field class=\"small-form-field dash1\" appearance=\"outline\">\n                <mat-label>Ngày bắt đầu</mat-label>\n                <input matInput [matDatepicker]=\"startPicker\" placeholder=\"Chọn ngày bắt đầu\"\n                    (dateChange)=\"startDateChanged($event)\">\n                <mat-datepicker-toggle matSuffix [for]=\"startPicker\"></mat-datepicker-toggle>\n                <mat-datepicker #startPicker></mat-datepicker>\n            </mat-form-field>\n            đến\n            <mat-form-field class=\"small-form-field dash2\" appearance=\"outline\">\n                <mat-label>Ngày kết thúc</mat-label>\n                <input matInput [matDatepicker]=\"endPicker\" placeholder=\"Chọn ngày kết thúc\"\n                    (dateChange)=\"endDateChanged($event)\">\n                <mat-datepicker-toggle matSuffix [for]=\"endPicker\"></mat-datepicker-toggle>\n                <mat-datepicker #endPicker></mat-datepicker>\n            </mat-form-field>\n        </div>\n        <button [disabled]=\"loadding\" mat-raised-button (click)=\"reGenerate()\" class=\"my-1  hover:opacity-95 button1 \" color=\"primary\"><span class=\"text1\">Thống kê</span>\n\n            <svg class=\"icon1\" xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"22.5\" viewBox=\"0 0 576 512\"><path fill=\"#ffffff\" d=\"M304 240l0-223.4c0-9 7-16.6 16-16.6C443.7 0 544 100.3 544 224c0 9-7.6 16-16.6 16L304 240zM32 272C32 150.7 122.1 50.3 239 34.3c9.2-1.3 17 6.1 17 15.4L256 288 412.5 444.5c6.7 6.7 6.2 17.7-1.5 23.1C371.8 495.6 323.8 512 272 512C139.5 512 32 404.6 32 272zm526.4 16c9.3 0 16.6 7.8 15.4 17c-7.7 55.9-34.6 105.6-73.9 142.3c-6 5.6-15.4 5.2-21.2-.7L320 288l238.4 0z\"/></svg>\n            \n           \n            <mat-spinner [diameter]=\"20\" *ngIf=\"loadding\"></mat-spinner>\n        </button>\n    </div>\n</div>\n<div class=\"px-[60px] mt-[20px] mb-10 dashsing\">\n    <div class=\"rounded-md border-c py-3 px-4 bg-white\">\n        <div class=\"flex  gap-2.5 flex-col w-full\">\n            <p class=\"font-semibold  text-black text-[17px] mb-1\">Độ chính xác</p>\n            <div class=\"flex flex-row gap-3 items-end\">\n                <span class=\"text-[25px] text-black leading-7 line font-semibold\">{{textBoxData?.ratio}}</span> <span\n                    class=\"text-gray-500 text-sm\">Chiếm {{textBoxData?.percent}}</span>\n            </div>\n            <p class=\"mb-0\">Đến ngày {{formatDateCus(textBoxData?.date_now)}}</p>\n        </div>\n    </div>\n    <div class=\"p-3 mt-4 max-h-[700px] overflow-auto rounded-md border-c grid-chart bg-white\">\n        <div class=\"sticky top-[-16px] bg-white py-3\">\n            <div class=\"ml-2 bg-white  mb-2 text-[18px] font-bold \" style=\"width:calc(100% - 25px)\">\n                Thống kê tử vong theo mã bệnh<br>\n                <span class=\"text-black font-normal mt-1 block text-[14px]\">Tất cả các trường hợp tử vong đi sâu vào mã\n                    bệnh\n                    , Cả hai giới tính , mọi chủng tộc , mọi dân tộc</span>\n            </div>\n        </div>\n        \n        <table class=\"mb-2\" *ngIf=\"tableData; else noData\">\n            <thead class=\"bg-[#efefef] h-[42px] sticky top-[60px]\">\n                <tr>\n                    <th class=\"!font-semibold text-center\" *ngFor=\"let ageGroup of tableData[0]\">{{ ageGroup.name }}\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <ng-container *ngFor=\"let row of tableData.slice(1); let i = index\">\n                    <tr class=\"h-[35px]\" [ngClass]=\"{'bg-white': i % 2 !== 0, 'bg-[#efefef]': i % 2 === 0}\">\n                        <td class=\"text-center\" *ngFor=\"let entry of row; let idx = index\">\n                            <div class=\"w-full\" [ngClass]=\"{'font-medium': idx===0}\">\n                                <div>\n                                    <span class=\"mt-1\">{{entry.value}}</span>\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                </ng-container>\n            </tbody>\n        </table>\n        \n        <ng-template #noData>\n            <div class=\"flex justify-center items-center h-[300px]\">\n                <p class=\"text-[#003 ]\">{{tableData_error}}</p>\n            </div>\n        </ng-template>\n\n\n      \n\n    </div>\n    <div class=\"rounded-md border-c p-3 bg-white mt-4\">\n        \n        <div id=\"ucod_line\"></div>\n    </div>\n\n    <div class=\"rounded-md border-c p-3 bg-white mt-4 items-center\">\n        <div #heatMap></div>\n    </div>\n</div>","import { AfterViewInit, Component, ElementRef, Inject, ViewChild } from '@angular/core';\nimport { DashboardService } from 'src/shared/services/dashboard.service';\nimport { format } from 'date-fns';\nimport { ToastrService } from 'ngx-toastr';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport HighchartsESM from 'highcharts/es-modules/masters/highcharts.src';\nimport { loadHighcharts } from '../../../../../shared/highcharts';\n\n@Component({\n    selector: 'app-dashboard-ucod',\n    templateUrl: './dashboard-ucod.component.html',\n    styleUrls: ['./dashboard-ucod.component.scss'],\n})\nexport class DashboardUcodComponent implements AfterViewInit {\n    @ViewChild('heatMap') heatMap: ElementRef;\n    startDate: Date;\n    endDate: Date;\n    textBoxData: any = {\n        percent: '0%',\n        ratio: '0',\n        date_now: null,\n    };\n    loadding: boolean = false;\n    tableData: any;\n    tableData_error: any;\n\n    public Highcharts: typeof HighchartsESM | null = null;\n\n    constructor(\n        @Inject(MAT_DATE_FORMATS) private myFormats: any,\n        private dateAdapter: DateAdapter<Date>,\n        private dashboardService: DashboardService,\n        private toastService: ToastrService\n    ) {\n        this.dateAdapter.setLocale('vi-VN');\n        loadHighcharts().then(Highcharts => (this.Highcharts = Highcharts))\n    }\n\n    ngAfterViewInit() {\n        this.generate();\n    }\n\n    generate() {\n        this.genTextBox();\n        this.genTable();\n        this.genLine();\n        this.genHeat();\n    }\n\n    reGenerate() {\n        if (this.startDate && this.endDate) {\n            const paramOnly = `?from=${format(this.startDate, 'yyyy-MM-dd')}&to=${format(\n                this.endDate,\n                'yyyy-MM-dd'\n            )}`;\n            this.genTextBox(paramOnly);\n            this.genTable(paramOnly);\n            this.genLine(paramOnly);\n\n            this.genHeat(paramOnly);\n\n            this.toastService.success('Thống kê thành công!', 'Thành công');\n            return;\n        }\n        if ((this.startDate && !this.endDate) || (!this.startDate && this.endDate)) {\n            this.toastService.error('Nhập đủ hoặc bỏ trống 2 trường để thống kê', 'Thất bại');\n            return;\n        }\n        this.genTextBox();\n        this.genTable();\n        this.genLine();\n        this.genHeat();\n        this.toastService.success('Thống kê thành công!', 'Thành công');\n\n        return;\n    }\n    startDateChanged(event: any) {\n        this.startDate = event.value;\n    }\n    formatDateCus(date: any) {\n        if (date === null) return format(new Date(), 'dd/MM/yyyy');\n        const [y, m, d] = date.split('-');\n        return `${d}/${m}/${y}`;\n    }\n    endDateChanged(event: any) {\n        this.endDate = event.value;\n    }\n    genTextBox(param?: string) {\n        this.loadding = true;\n\n        this.dashboardService.ucodTextbox(param || '?from=&to=').subscribe((results: any) => {\n            this.textBoxData = results;\n            this.loadding = false;\n        });\n    }\n    genTable(param?: string) {\n        this.loadding = true;\n\n        this.dashboardService.ucodTable(param || '?from=&to=').subscribe((results: any) => {\n            // error: Response({'status': 'error', 'message': f'Không có dữ liệu từ ngày {from_date} đến ngày {to_date}'})\n            if (results.status === 'error') {\n                this.tableData_error = results.message;\n                this.tableData = NaN;\n            }\n            else{\n                this.tableData = results;\n            }\n            this.loadding = false;\n        });\n    }\n    genLine(param?: string) {\n        this.dashboardService.ucodLine(param || '?from=&to=').subscribe((results: any) => {\n            this.Highcharts?.chart('ucod_line', {\n                chart: {\n                    zooming: {\n                        type: 'x',\n                    },\n                },\n                title: {\n                    text: 'Biểu đồ đánh giá độ chính xác theo thời gian',\n                    align: 'left',\n                    style: {\n                        fontFamily: 'Roboto',\n                        fontWeight: 'bold',\n                    },\n                },\n                subtitle: {\n                    text:\n                        document.ontouchstart === undefined\n                            ? 'Nhấp và kéo để phóng to'\n                            : 'Kéo để phóng to',\n                    align: 'left',\n                },\n                xAxis: {\n                    type: 'datetime',\n                },\n                yAxis: {\n                    title: {\n                        text: 'Độ chính xác',\n                    },\n                },\n                legend: {\n                    enabled: false,\n                },\n                plotOptions: {\n                    area: {\n                        fillColor: {\n                            linearGradient: {\n                                x1: 0,\n                                y1: 0,\n                                x2: 0,\n                                y2: 1,\n                            },\n                            stops: [\n                                [0, this.Highcharts.getOptions().colors?.at(0)],\n                                [\n                                    1,\n                                    this.Highcharts.color(this.Highcharts.getOptions().colors?.at(0) as any)\n                                        .setOpacity(0)\n                                        .get('rgba'),\n                                ],\n                            ],\n                        },\n                        marker: {\n                            radius: 2,\n                        },\n                        lineWidth: 1,\n                        states: {\n                            hover: {\n                                lineWidth: 1,\n                            },\n                        },\n                        threshold: null,\n                    },\n                },\n\n                series: [\n                    {\n                        type: 'area',\n                        name: 'Tỉ lệ',\n                        data: results,\n                    },\n                ],\n            } as any);\n        });\n    }\n\n    genHeat(param?: string) {\n        this.dashboardService.ucodHeatMap(param || '?from=&to=').subscribe((results: any) => {\n            this.Highcharts?.chart(this.heatMap.nativeElement, {\n                chart: {\n                    type: 'heatmap',\n                    marginLeft: 40,\n                    marginRight: 100,\n                    marginBottom: 85,\n                    marginTop: 100,\n                    height: results[0].height,\n                    width: results[0].width,\n                },\n                title: {\n                    text: results[0].title,\n                    style: {\n                        fontFamily: 'Arial',\n                        fontSize: '18px'\n                    }\n                },\n                xAxis: {\n                    categories: results[0].x\n                },\n                yAxis: {\n                    categories: results[0].y\n                },\n                colorAxis: {\n                    min: 0,\n                    minColor: '#ffffff',\n                    maxColor: '#0000ff',\n                },\n                legend: {\n                    align: 'right',\n                    layout: 'vertical',\n                    itemStyle: {\n                        color: '#ff0000',\n                    },\n                    margin: 0,\n                    verticalAlign: 'middle',\n                    symbolHeight: results[0].height / 2\n                },\n                tooltip: {\n                    formatter: function (tooltip) {\n                        return '<b>Dự đoán: </b>' + this.series.xAxis.categories[this.point.x] + '<br>' + '<b>Thực tế: </b>' + this.series.yAxis.categories[this.point.y as number];\n                    }\n                },\n                series: [{\n                    name: \"UCOD Confusion Matrix\",\n                    borderWidth: 1,\n                    data: this.getSeries(results[0].z),\n                    dataLabels: {\n                        enabled: true,\n                        style: {\n                            color: '#000',\n                            height: 16\n                        }\n                    },\n                    type: 'heatmap'\n                }]\n            })\n        })\n    }\n\n    private getSeries(z: number[][]): number[][] {\n        let series = [];\n        for (let i: number = 0; i < z.length; i++) {\n            for (let j: number = 0; j < z[i].length; j++) {\n                series.push([i, j, z[i][j]]);\n            }\n        }\n        return series;\n    }\n}\n","import { Component, OnInit , ViewChild,ElementRef  } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { catchError, share } from 'rxjs/operators';\nimport { of } from 'rxjs';\n// import { API_TOOL } from 'src/shared/common';\nimport { API_BASE, API_TOOL } from 'src/shared/common';\n\n\n@Component({\n  selector: 'app-tools-ucodvn',\n  templateUrl: './tools-ucod.component.html',\n  styleUrls: ['./tools-ucod.component.scss']\n})\nexport class ToolsUcodComponent implements OnInit {\n\n  @ViewChild('scrollContainer', { static: false }) scrollContainer!: ElementRef;\n  isDragging = false;\n  startX = 0;\n  scrollLeft = 0;\n\n  startDragging(event: MouseEvent) {\n    this.isDragging = true;\n    this.startX = event.pageX - this.scrollContainer.nativeElement.offsetLeft;\n    this.scrollLeft = this.scrollContainer.nativeElement.scrollLeft;\n  }\n\n  onMouseMove(event: MouseEvent) {\n    if (!this.isDragging) return;\n    event.preventDefault();\n    const x = event.pageX - this.scrollContainer.nativeElement.offsetLeft;\n    const walk = (x - this.startX) * 1.5; // Điều chỉnh tốc độ kéo\n    this.scrollContainer.nativeElement.scrollLeft = this.scrollLeft - walk;\n  }\n\n  stopDragging() {\n    this.isDragging = false;\n  }\n  isActive: boolean = true;\n\n  toggleActive(): void {\n    this.isActive = !this.isActive;\n  }\n\n  isModalVisible = false;\n  currentLanguage: 'vi' | 'en' = 'vi';\n\n  content = {\n    vi: {\n      title: 'Tiêu đề',\n      short: 'Mô tả ngắn',\n      version: 'Phiên bản',\n      change_lang: 'Thay đổi ngôn ngữ',\n      mccd: 'MCCD',\n      sex: 'Giới tính',\n      age: '9 năm',\n      age_unit1: 'Năm',\n      partI: 'Phần I',\n      partI_desc: 'Mô tả phần I',\n      partII: 'Phần II',\n      partII_desc: 'Mô tả phần II',\n      warning: 'Cảnh báo',\n      warning_desc: 'Mô tả cảnh báo',\n      btn_run: 'Chạy',\n      conclusion: '',\n      explanation: ''\n    },\n    en: {\n      title: 'Title',\n      short: 'Short Description',\n      version: 'Version',\n      change_lang: 'Change Language',\n      mccd: 'MCCD',\n      sex: 'Sex',\n      age: '9 years',\n      age_unit1: 'Years',\n      partI: 'Part I',\n      partI_desc: 'Description of Part I',\n      partII: 'Part II',\n      partII_desc: 'Description of Part II',\n      warning: 'Warning',\n      warning_desc: 'Description of Warning',\n      btn_run: 'Run',\n      conclusion: '',\n      explanation: ''\n    }\n  };\n  tablesection: any;\n  tablerela: any;\n  table: any;\n  result: any;\n  sex: string = '';\n  age: string = '';\n  ageUnit: string = 'y';\n  partI: string = '';\n  partII: string = '';\n  conclusion: string = this.content.vi.conclusion;\n  explanation: string = this.content.vi.explanation;\n\n  diagnosisData: { code: string; name: string; part: string; line: number; note: string }[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {}\n\n  updateDiagnosisData() {\n    this.diagnosisData = [];\n    this.processCodes(this.partI.split('\\n'), 'I');\n    this.processCodes(this.partII.split(','), 'II');\n  }\n\n  private processCodes(codesArray: string[], part: string) {\n    codesArray.forEach((code, index) => {\n      const trimmedCode = code.trim();\n      if (trimmedCode) {\n        this.diagnosisData.push({\n          code: trimmedCode,\n          name: '',\n          part,\n          line: index + 1,\n          note: ''\n        });\n      }\n    });\n  }\n\n  onCodesIChange() {\n    this.updateDiagnosisData();\n    this.onInputchange();\n  }\n\n  onCodesIIChange() {\n    this.updateDiagnosisData();\n    this.onInputchange();\n  }\n\n  openModal() {\n    this.isModalVisible = true;\n  }\n\n  closeModal() {\n    this.isModalVisible = false;\n  }\n\n  toggleLanguage() {\n    this.currentLanguage = this.currentLanguage === 'vi' ? 'en' : 'vi';\n    this.updateLanguageContent();\n    this.onInputchange();\n  }\n\n  updateLanguageContent() {\n    this.conclusion = this.content[this.currentLanguage].conclusion;\n    this.explanation = this.content[this.currentLanguage].explanation;\n  }\n\n  onSubmit() {\n    const formData = new FormData();\n    let sex = this.sex === 'Nam' ? 'm' : 'f';\n    let age = this.age || '9';\n    let ageUnit = this.ageUnit === 'Năm' ? 'y' : 'm';\n\n    formData.append('partI', this.partI.trim());\n    formData.append('partII', this.partII.trim());\n    formData.append('age', age);\n    formData.append('ageUnit', ageUnit);\n    formData.append('sex', sex);\n    formData.append('lang', 'VI');\n\n    const validation = this.isValidInput(formData);\n    if (!validation.isValid) {\n      alert(validation.messages.join('\\n'));\n      return;\n    }\n\n    this.http.post(API_TOOL, formData).subscribe(\n      (response: any) => {\n        if (response) {\n          this.conclusion = response?.result;\n          this.explanation = response?.table;\n          this.table = response.log;\n          this.tablerela = response.matrix;\n          this.tablesection = response.desc;\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n        this.handleApiError(error);\n      }\n    );\n  }\n\n  onInputchange() {\n    const formData = new FormData();\n    let sex = this.sex == 'Nam' ? 'm' : 'f';\n    let ageUnit = this.ageUnit === 'Năm' ? 'y' : 'm';\n\n    formData.append('text1', this.partI.trim());\n    formData.append('text2', this.partII.trim());\n    formData.append('age', this.age + '');\n    formData.append('age_unit', ageUnit);\n    formData.append('sex', sex);\n    formData.append('lang', 'VI');\n\n    this.http.post(`${API_BASE}/api/ucod/liveucod?lang=${this.currentLanguage}`, formData)\n    .subscribe(\n      (response: any) => {\n        if (response) {\n          this.conclusion = response?.result;\n          this.explanation = response?.table;\n          this.table = response.log;\n          this.tablerela = response.matrix;\n          this.tablesection = response.desc;\n        }\n      },\n      (error: any) => console.error(error)\n    );\n  }\n  \n  \n  public isValidInput(data: FormData): { isValid: boolean; messages: string[] } {\n    const messages: string[] = [];\n    const partI = data.get('partI') as string;\n    if (!partI || !partI.trim()) {\n      messages.push(this.currentLanguage === 'vi' ? 'Phần I không được để trống.' : 'Part I cannot be empty.');\n    }\n    return { isValid: messages.length === 0, messages };\n  }\n\n  private callDiagnoseApi(data: any): Observable<any> {\n    const body = new HttpParams()\n      .set('partI', data.partI)\n      .set('partII', data.partII)\n      .set('age', data.age.toString())\n      .set('ageUnit', data.ageUnit)\n      .set('sex', data.sex)\n      .set('lang', this.currentLanguage);\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    return this.http.post<any>(API_TOOL, body.toString(), { headers });\n  }\n\n  private handleApiError(error: any) {\n    let errorMessage = this.currentLanguage === 'vi' \n      ? 'Có lỗi xảy ra trong quá trình kết nối.' \n      : 'A connection error occurred.';\n\n    if (error?.error?.message) {\n      errorMessage = error.error.message;\n    } else if (error?.message) {\n      errorMessage = error.message;\n    }\n\n    alert(errorMessage);\n  }\n}\n","  <router-outlet></router-outlet>\n  <div class=\"dashboard-tx flex flex-col items-center justify-center sticky top-[90px] z-[1029] \n  -translate-y-[24px] pt-2 pb-1 w-full\" \n  style=\"background-color: white; \n  box-shadow: 0 4px 2px -2px rgba(0, 0, 0, 0.2);\">\n  \n  <div class=\"text-center w-full\">\n    <h1 class=\"text-xl font-medium mb-1 text-[#003366] text-center\">\n      {{ currentLanguage === 'vi' ? 'UCOD Việt Nam' : 'UCOD Vietnam' }}\n    </h1>\n    <h4 class=\"text-sm text-center\" style=\"margin-bottom: 0px;\">\n      {{ currentLanguage === 'vi' ? 'Chọn nguyên nhân tử vong chính (UCOD)' : 'Select the underlying cause of death (UCOD)' }}\n    </h4>\n  </div>\n\n  <div class=\"topcorner flex justify-end  w-full absolute top-1 right-0 pr-4\" style=\"flex-direction:row\">\n    <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"openModal()\">Phiên bản 3.0</button>\n    <button type=\"button\" id=\"languageToggleButton\" class=\"btn btn-secondary btn-sm ml-2\" (click)=\"toggleLanguage()\">\n      {{ currentLanguage === 'vi' ? 'English' : 'Tiếng Việt' }}\n    </button>\n  </div>\n</div>\n\n\n\n\n  <div class=\"container\" style=\"margin-top: 20px; display: flex;\">\n    \n    <div style=\"width: 40%; margin: 0 auto;\">\n    <div class=\"row left-section\" style=\"border: 1px solid #000000; background-color: #f9f2ff; border-radius: 10px; box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px; padding-left: 40px;padding-right: 20px;padding-bottom: 25px; width: 100%;\">\n      <form class=\"margin\"(ngSubmit)=\"onSubmit()\">\n        <h3><b>{{ currentLanguage === 'vi' ? 'Phiếu chẩn đoán nguyên nhân tử vong' : 'Cause of Death Diagnosis Form' }}</b></h3>\n\n      \n        <div class=\"row sex-age\" style=\"border-top: 1px solid #000000; padding-top: 10px; display: flex; justify-content: space-between; margin-bottom: 10px; width: 100%;\">\n          <div class=\"sex\" style=\"width: 48%; display: flex; align-items: center;\">\n            <b>{{ currentLanguage === 'vi' ? 'Giới: ' : 'Gender: ' }}</b>\n            <select name=\"sex\" [(ngModel)]=\"sex\" class=\"form-control\" style=\"margin-left: 10px; width: 50%; padding: 5px; font-size: 14px; text-align: center;\">\n              <option value=\"\" disabled selected>{{ currentLanguage === 'vi' ? 'Không' : 'No' }}</option>\n              <option value=\"Không xác định\">{{ currentLanguage === 'vi' ? 'Không xác định' : 'Not specified' }}</option>\n              <option value=\"Nam\">{{ currentLanguage === 'vi' ? 'Nam' : 'Male' }}</option>\n              <option value=\"Nữ\">{{ currentLanguage === 'vi' ? 'Nữ' : 'Female' }}</option>\n            </select>\n          </div>\n\n          <div class=\"age\" style=\"width: 48%; display: flex; align-items: center;\">\n            <b>{{ currentLanguage === 'vi' ? 'Tuổi: ' : 'Age: ' }}</b>\n            <input type=\"number\" [(ngModel)]=\"age\" name=\"age\" min=\"1\" max=\"50000\" class=\"form-control\" style=\"margin-left: 10px; padding: 5px; font-size: 14px; width: 50%;\">\n            <select name=\"ageUnit\" [(ngModel)]=\"ageUnit\" class=\"form-control\" style=\"text-align: center;margin-left: 10px; padding: 5px; width: 50%;\">\n              <option value=\"y\">{{ currentLanguage === 'vi' ? 'năm' : 'years' }}</option>\n              <option value=\"m\">{{ currentLanguage === 'vi' ? 'tháng' : 'months' }}</option>\n              <option value=\"d\">{{ currentLanguage === 'vi' ? 'ngày' : 'days' }}</option>\n            </select>\n          </div>\n        </div>\n\n        <!-- Phần I -->\n        <div class=\"row\" style=\"border-top: 1px solid #000000; padding-top: 10px; display: flex; margin-bottom: 10px; width: 100%;\">\n          <div class=\"part\" style=\"width: 50%;\">\n            <p><b>{{ currentLanguage === 'vi' ? 'Phần I' : 'Part I' }}</b></p>\n            <p style=\"font-size: 14px;\">\n              {{ currentLanguage === 'vi' ? 'Dòng đầu, chứa các mã bệnh hoặc bệnh lý trực tiếp dẫn tới tử vong...' : 'The first line contains codes for diseases or conditions directly leading to death...' }}\n            </p>\n          </div>\n          <div class=\"input-area\" style=\"width: 50%;\">\n            <textarea  [(ngModel)]=\"partI\" (ngModelChange)=\"onCodesIChange()\" name=\"partI\" class=\"textwrapper form-control\" placeholder=\"{{ currentLanguage === 'vi' ? 'Nhập mã bệnh' : 'Enter disease codes' }}\" id=\"liveboxI\" rows=\"5\" style=\"width: 100%; padding: 10px; font-size: 14px;\"></textarea>\n          </div>\n        </div>\n\n        <!-- Phần II -->\n        <div class=\"row\" style=\"border-top: 1px solid #000000; padding-top: 10px; display: flex; margin-bottom: 10px; width: 100%;\">\n          <div class=\"part\" style=\"width: 50%;\">\n            <b>{{ currentLanguage === 'vi' ? 'Phần II' : 'Part II' }}</b>\n            <p style=\"font-size: 14px;\">\n              {{ currentLanguage === 'vi' ? 'Các mã bệnh, điều kiện đáng kể khác góp phần gây tử vong...' : 'Codes for diseases or other significant conditions contributing to death...' }}\n            </p>\n          </div>\n          <div class=\"input-area\" style=\"width: 50%;\">\n            <input type=\"text\" [(ngModel)]=\"partII\" (ngModelChange)=\"onCodesIIChange()\" name=\"partII\" id=\"liveboxII\" placeholder=\"{{ currentLanguage === 'vi' ? 'Nhập mã bệnh' : 'Enter disease codes' }}\" class=\"form-control\" style=\"width: 100%; padding: 10px; font-size: 14px;\">\n          </div>\n        </div>\n\n        <!-- Action Row -->\n        <div class=\"row action-row\" style=\"display: flex; align-items: center; margin-top: 10px; width: 100%;\">\n          <div class=\"warning\" style=\"flex: 1; display: flex; justify-content: flex-end; padding-right: 10px;\">\n            <b style=\"white-space: nowrap;margin-right: 15px\">{{ currentLanguage === 'vi' ? 'Chú ý: ' : 'Note: ' }}</b> {{ currentLanguage === 'vi' ? 'Các mã bệnh cách nhau bởi khoảng trống và có thể nhập mã bỏ qua dấu chấm.' : 'Disease codes are separated by spaces and can be entered without periods.' }}\n          </div>\n          <button type=\"submit\" id=\"buttonRun\" class=\"btn-primary1\" style=\"background-color: #007bff; height: 45px;margin: 10px; width: 130px; border: 1px solid #0056b3; border-radius: 5px; color: white;\">\n            {{ currentLanguage === 'vi' ? 'Chẩn đoán UCOD' : 'Diagnose UCOD' }}\n          </button>\n        </div>\n      </form>\n    </div>\n    <div #scrollContainer class=\"scrollable-table\" (mousedown)=\"startDragging($event)\" \n    (mouseleave)=\"stopDragging()\" \n    (mouseup)=\"stopDragging()\" \n    (mousemove)=\"onMouseMove($event)\" style=\"margin-top:20px\">\n  <div class=\"column1\" [innerHTML]=\"tablerela\"></div>\n</div>\n    <!-- <div style=\"width: 100%; position: relative; z-index: 1;\">\n      <div class=\"column1\"  [innerHTML]=\"tablerela\"></div>\n      </div> -->\n    </div>\n  \n    <!-- Right Section -->\n    <div class=\"right-section\" style=\"margin-left: 20px; padding: 10px; width: 60%;\">\n      <div class=\"result-section\">\n        <h3><b style=\"\n          /* font-size: 25px; */\n          font-weight: 700;\n          font-size: 25px\"> {{ currentLanguage === 'vi' ? ' Chẩn đoán Nguyên nhân tử vong chính- UCOD' : ' Diagnosis of Underlying Cause of Death - UCOD.' }}</b>\n          \n        </h3>\n\n        <p style=\"margin-top: 30px;\"><b >{{ currentLanguage === 'vi' ? '1. Phiếu chẩn đoán nguyên nhân tử vong' : '1. Cause of Death Diagnosis Form' }}</b></p>\n        <p style=\"margin-top: 35px;\">Giới tính: <b>{{ sex|| 'Không xác định' }}</b></p>\n        <p>Tuổi: <b>{{ age || 'Không xác định'}} {{ ageUnit === 'y' ? 'năm' : ageUnit === 'm' ? 'tháng' : 'ngày' }} </b></p>\n      </div> \n\n      <table [class.table-section]=\"isActive\" [innerHTML]=\"tablesection\"style=\"width: 98%;\n      margin: 0 auto;\n      border-collapse: collapse;\n      text-align: left;\n      height: 100px\" ></table>\n      <!-- class=\"table-section mystyle -->\n \n<!-- \n      <div style=\"width: 100%; position: relative; z-index: 1; overflow-x: auto; white-space: nowrap; top: 30px;\">\n        <div class=\"column1\"  [innerHTML]=\"tablerela\"></div>\n        </div> -->\n          <!-- <div #scrollContainer class=\"scrollable-table\" (mousedown)=\"startDragging($event)\" \n      (mouseleave)=\"stopDragging()\" \n      (mouseup)=\"stopDragging()\" \n      (mousemove)=\"onMouseMove($event)\" style=\"margin-top:20px\">\n    <div class=\"column1\" [innerHTML]=\"tablerela\"></div>\n  </div> -->\n\n\n\n\n               \n      <div class=\"result-section\" style=\"\n      margin-top: 24px; \n      padding: 16px 20px;\n      border-radius: 8px; \n      background: #f8f9fa; /* Xám nhạt dịu mắt */\n      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.08); /* Đổ bóng nhẹ */\n  \">\n      <h3 style=\"\n          font-size: 18px;\n          font-weight: bold;\n          color: #333;\n          margin-bottom: 8px;\n          border-left: 4px solid #6c757d; /* Thanh sọc màu xám đậm */\n          padding-left: 12px;\n      \">\n          {{ currentLanguage === 'vi' ? '2. Kết luận' : '2. Conclusion' }}\n      </h3>\n  \n      <p style=\"\n          font-size: 16px;\n          color: #444;\n          line-height: 1.6;\n          margin: 0;\n      \">\n          <span style=\"\n              display: block;\n              background: #e9ecef;\n              padding: 10px;\n              border-radius: 6px;\n              font-size: 18px;\n              font-weight: bold;\n              color: #495057; \n          \">\n              {{ conclusion }}\n          </span>\n      </p>\n  </div>\n  <div class=\"result-section\">\n    <div class=\"column\" style=\"width: 100% ;padding-top: 40px; font-size: 18px;\n    \n    margin-bottom: 12px;\n    \n    padding-left: 12px; padding-bottom: 30px;\">  \n    \n    <b style=\" font-weight: bold;\">{{ currentLanguage === 'vi' ? '3. Diễn giải' : '3. Explanation' }}</b>\n      \n      <div class=\"margintb \" [innerHTML]=\"table\"style=\"margin-top: 20px;    width: 100%;\n      font-size: 11pt;\n      font-family: Arial;\n      border-collapse: collapse;\" >\n        <table border=\"1\" class=\"dataframe mystyle\" style=\"width: 100%; border-collapse: collapse;\"></table>\n      </div>\n    \n  </div>\n  </div>\n\n    </div>\n  </div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { API_URL } from '../common';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class WhatNewService {\r\n    private apiUrlRoot = `${API_URL}/api/whatnew`;\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getListWhatNew() {\r\n        return this.http.get<any>(`${this.apiUrlRoot}`);\r\n    }\r\n\r\n    getDetailWhatNew(id: string) {\r\n        return this.http.get<any>(`${this.apiUrlRoot}?id=${id}`);\r\n    }\r\n}\r\n","<link href=\"https://cdn.jsdelivr.net/npm/@tabler/icons-webfont@latest/tabler-icons.min.css\" rel=\"stylesheet\">\n\n\n<div class=\"card sidebar__common\">\n    <div class=\"card-body\">\n        <div class=\"flex-container\">\n            <div class=\"left-column\">\n                <ul class=\"list-item\">\n                    <li *ngFor=\"let doc of documents\" (click)=\"getDetailWhatNew(doc.id)\" class=\"item\" [class.selected]=\"selectedItemId === doc.id\">\n                        <div class=\"font-semibold title\">{{ doc.title }}</div>\n                      \n                    </li>\n                </ul> \n             \n                  \n            </div>\n            <div class=\"right-column\">\n                <div *ngIf=\"selectedDocument\">\n                    <div class=\"font-semibold title\">{{ selectedDocument.title }}</div>\n                    <div class=\"text-gray-500 date\">{{selectedDocument.timestamp}}</div>\n                    <br/>\n                    <div class=\"details-item\" [innerHTML]=\"selectedDocument.content\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { WhatNewService } from 'src/shared/services/whatnew.service';\n\n@Component({\n    selector: 'app-notification',\n    templateUrl: './notification.component.html',\n    styleUrls: ['./notification.component.scss'],\n})\nexport class NotificationComponent implements OnInit {\n\n    \n    documents: any[] = [];\n    selectedDocument: any = null;\n    selectedItemId: number | null = null;\n\n    constructor(private whatNewService: WhatNewService) {}\n\n    ngOnInit(): void {\n        this.getListWhatNew();\n    }\n\n    getListWhatNew() {\n        this.whatNewService.getListWhatNew().subscribe((data: any) => {\n            this.documents = data.data\n            this.getDetailWhatNew(this.documents[0].id)\n        });\n    }\n\n    getDetailWhatNew(id: string) {\n        this.whatNewService.getDetailWhatNew(id).subscribe((data: any) => {\n            this.selectedDocument = data.data;\n            this.selectedItemId = +id;\n        });\n        \n    }\n}\n","\n    \n    <div class=\"container\">\n        <div class=\"toolbar\">\n            <button (click)=\"exportFile()\">Xuất file</button>\n        </div>\n    \n        <div class=\"search-bar\">\n            <input type=\"text\" [(ngModel)]=\"searchKeyword\" placeholder=\"Nhập từ khóa tìm kiếm...\" (input)=\"onSearch()\">\n            <button (click)=\"onSearch()\">Tìm kiếm</button>\n        </div>\n    \n        <div class=\"action-bar\">\n            <select [(ngModel)]=\"selectedAction\">\n                <option value=\"\">Hành động</option>\n                <option value=\"add\">Thêm</option>\n                <option value=\"edit\">Sửa</option>\n                <option value=\"delete\">Xóa</option>\n            </select>\n            <button (click)=\"performAction()\">\n                <span class=\"icon\"><i class=\"fas fa-pencil-alt\"></i></span> Thực hiện\n            </button>\n            <span id=\"record-status\">{{ selectedCount }} của {{ totalCount }} được chọn</span>\n        </div>\n    \n        <div id=\"action-message\" class=\"message\" *ngIf=\"actionMessage\">\n            {{ actionMessage }}\n        </div>\n    \n\n        <div *ngIf=\"selectedAction === 'add' || selectedAction === 'edit'\" class=\"input-fields\">\n            <div>\n                <label for=\"name\">Tên:</label>\n                <input id=\"name\" type=\"text\" [(ngModel)]=\"newName\" placeholder=\"Nhập tên bệnh lý\">\n            </div>\n            <div>\n                <label for=\"details\">Chi tiết:</label>\n                <input id=\"details\" type=\"text\" [(ngModel)]=\"newDetails\" placeholder=\"Nhập chi tiết bệnh lý\">\n            </div>\n        </div>\n    \n        <div class=\"table-container\">\n            <table id=\"data-table\">\n                <thead>\n                    <tr>\n                        <th><input type=\"checkbox\" [(ngModel)]=\"selectAll\" (change)=\"toggleSelectAll()\"></th>\n                        <th>ID</th>\n                        <th>Tên</th>\n                        <th>Chi tiết</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let row of displayedRows; let i = index\">\n                        <td><input type=\"checkbox\" [(ngModel)]=\"row.selected\" (change)=\"updateSelectedCount()\"></td>\n                        <td>{{ row.id }}</td>\n                        <td (click)=\"startEditing(row)\">{{ row.name }}</td>\n                        <td>{{ row.details }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    \n\n        <div class=\"pagination\">\n            <button (click)=\"prevPage()\" [disabled]=\"currentPage === 1\">Prev</button>\n            <span>{{ currentPage }} / {{ totalPages }}</span>\n            <button (click)=\"nextPage()\" [disabled]=\"currentPage === totalPages\">Next</button>\n        </div>\n\n        <div class=\"feedback-section\">\n            <h3 class=\"feedback-title\">Góp ý của bạn</h3>\n            <p class=\"feedback-desc\">Chúng tôi luôn mong nhận được góp ý từ bạn để cải thiện hệ thống:</p>\n            <textarea\n                [(ngModel)]=\"userFeedback\"\n                class=\"feedback-input\"\n                placeholder=\"Nhập ý kiến của bạn...\"\n                rows=\"4\"\n            ></textarea>\n            <div class=\"feedback-actions\">\n                <button class=\"feedback-btn\" (click)=\"submitFeedback()\">Gửi góp ý</button>\n            </div>\n            <div *ngIf=\"feedbackMessage\" class=\"feedback-message\">\n                {{ feedbackMessage }}\n            </div>\n        </div>\n        \n    </div>\n    \n    ","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-icd10v3',\n  templateUrl: './icd10v3.component.html',\n  styleUrls: ['./icd10v3.component.scss']\n})\nexport class Icd10v3Component implements OnInit {\n  searchKeyword: string = '';\n  selectedAction: string = '';\n  selectedCount: number = 0;\n  totalCount: number = 0;\n  selectAll: boolean = false;\n  actionMessage: string = '';\n  rows: { id: number; name: string; details: string; selected: boolean }[] = [];\n  filteredRows: { id: number; name: string; details: string; selected: boolean }[] = [];\n  displayedRows: { id: number; name: string; details: string; selected: boolean }[] = [];\n  newName: string = '';\n  newDetails: string = '';\n  editingRow: { id: number; name: string; details: string } | null = null;\n  currentPage: number = 1;\n  rowsPerPage: number = 10;\n  totalPages: number = 0;\n\n  ngOnInit(): void {\n    this.rows = [\n      { id: 1, name: 'Bệnh lý 1', details: 'Chi tiết bệnh lý 1', selected: false },\n      { id: 2, name: 'Bệnh lý 2', details: 'Chi tiết bệnh lý 2', selected: false },\n      { id: 3, name: 'Bệnh lý 3', details: 'Chi tiết bệnh lý 3', selected: false },\n      { id: 4, name: 'Bệnh lý 4', details: 'Chi tiết bệnh lý 4', selected: false },\n      { id: 5, name: 'Bệnh lý 5', details: 'Chi tiết bệnh lý 5', selected: false },\n      { id: 6, name: 'Bệnh lý 6', details: 'Chi tiết bệnh lý 6', selected: false },\n      { id: 7, name: 'Bệnh lý 7', details: 'Chi tiết bệnh lý 7', selected: false },\n      { id: 8, name: 'Bệnh lý 8', details: 'Chi tiết bệnh lý 8', selected: false },\n      { id: 9, name: 'Bệnh lý 9', details: 'Chi tiết bệnh lý 9', selected: false },\n      { id: 10, name: 'Bệnh lý 10', details: 'Chi tiết bệnh lý 10', selected: false },\n      { id: 11, name: 'Bệnh lý 11', details: 'Chi tiết bệnh lý 11', selected: false },\n      { id: 12, name: 'Bệnh lý 12', details: 'Chi tiết bệnh lý 12', selected: false },\n      { id: 13, name: 'Bệnh lý 13', details: 'Chi tiết bệnh lý 13', selected: false },\n      { id: 14, name: 'Bệnh lý 14', details: 'Chi tiết bệnh lý 14', selected: false },\n      { id: 15, name: 'Bệnh lý 15', details: 'Chi tiết bệnh lý 15', selected: false },\n      { id: 16, name: 'Bệnh lý 16', details: 'Chi tiết bệnh lý 16', selected: false },\n      { id: 17, name: 'Bệnh lý 17', details: 'Chi tiết bệnh lý 17', selected: false },\n      { id: 18, name: 'Bệnh lý 18', details: 'Chi tiết bệnh lý 18', selected: false },\n      { id: 19, name: 'Bệnh lý 19', details: 'Chi tiết bệnh lý 19', selected: false },\n      { id: 20, name: 'Bệnh lý 20', details: 'Chi tiết bệnh lý 20', selected: false },\n    ];\n    this.filteredRows = [...this.rows];\n    this.totalCount = this.filteredRows.length;\n    this.totalPages = Math.ceil(this.totalCount / this.rowsPerPage);\n    this.updateDisplayedRows();\n  }\n\n  exportFile(): void {\n    const selectedRows = this.filteredRows.filter(row => row.selected);\n    if (selectedRows.length === 0) {\n      this.actionMessage = 'Vui lòng chọn ít nhất một bệnh lý để xuất!';\n      return;\n    }\n    const csvData = this.convertToCSV(selectedRows);\n    const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'selected_rows.csv';\n    link.click();\n    this.actionMessage = 'Xuất file thành công!';\n  }\n\n  convertToCSV(rows: { id: number; name: string; details: string; selected: boolean }[]): string {\n    if (!rows || rows.length === 0) {\n      console.error('No rows to convert to CSV');\n      return '';\n    }\n    const header = 'ID,Name,Details\\n';\n    const rowsData = rows.map(row => `${row.id},${row.name},${row.details}`).join('\\n');\n    return header + rowsData;\n  }\n\n  onSearch(): void {\n    if (this.searchKeyword.trim()) {\n      this.filteredRows = this.rows.filter(\n        row =>\n          row.name.toLowerCase().includes(this.searchKeyword.toLowerCase()) ||\n          row.details.toLowerCase().includes(this.searchKeyword.toLowerCase())\n      );\n    } else {\n      this.filteredRows = [...this.rows];\n    }\n    this.totalCount = this.filteredRows.length;\n    this.totalPages = Math.ceil(this.totalCount / this.rowsPerPage);\n    this.currentPage = 1;\n    this.updateDisplayedRows();\n  }\n\n  performAction(): void {\n    switch (this.selectedAction) {\n      case 'add':\n        this.addRow();\n        break;\n      case 'edit':\n        this.editRow();\n        break;\n      case 'delete':\n        this.deleteRows();\n        break;\n      case 'export':\n        this.exportFile();\n        break;\n      default:\n        this.actionMessage = 'Chọn hành động hợp lệ';\n        break;\n    }\n  }\n\n  addRow(): void {\n    if (this.newName && this.newDetails) {\n      const newRow = { \n        id: this.rows.length + 1, \n        name: this.newName, \n        details: this.newDetails, \n        selected: false \n      };\n      this.rows.push(newRow);\n      this.filteredRows = [...this.rows];\n      this.totalCount = this.rows.length;\n      this.totalPages = Math.ceil(this.totalCount / this.rowsPerPage);\n      this.updateDisplayedRows();\n      this.actionMessage = 'Thêm bệnh lý thành công!';\n      this.resetForm();\n    } else {\n      this.actionMessage = 'Vui lòng nhập tên và chi tiết bệnh lý!';\n    }\n  }\n\n  editRow(): void {\n    const selectedRows = this.filteredRows.filter(row => row.selected);\n    if (selectedRows.length === 1) {\n      const row = selectedRows[0];\n      if (this.newName && this.newDetails) {\n        row.name = this.newName;\n        row.details = this.newDetails;\n        this.actionMessage = 'Chỉnh sửa bệnh lý thành công!';\n        this.resetForm();\n      } else {\n        this.actionMessage = 'Vui lòng nhập tên và chi tiết bệnh lý!';\n      }\n    } else {\n      this.actionMessage = 'Vui lòng chọn một bệnh lý để chỉnh sửa.';\n    }\n  }\n\n  deleteRows(): void {\n    const selectedRows = this.filteredRows.filter(row => row.selected);\n    if (selectedRows.length > 0) {\n      this.rows = this.rows.filter(row => !row.selected);\n      this.filteredRows = this.filteredRows.filter(row => !row.selected);\n      this.totalCount = this.rows.length;\n      this.totalPages = Math.ceil(this.totalCount / this.rowsPerPage);\n      this.updateDisplayedRows();\n      this.actionMessage = 'Xóa bệnh lý thành công!';\n    } else {\n      this.actionMessage = 'Vui lòng chọn ít nhất một bệnh lý để xóa.';\n    }\n  }\n\n  updateSelectedCount(): void {\n    this.selectedCount = this.filteredRows.filter((row) => row.selected).length;\n  }\n\n  toggleSelectAll(): void {\n    this.filteredRows.forEach((row) => (row.selected = this.selectAll));\n    this.updateSelectedCount();\n  }\n\n  resetForm(): void {\n    this.newName = '';\n    this.newDetails = '';\n    this.editingRow = null;\n  }\n\n  startEditing(row: { id: number; name: string; details: string }): void {\n    this.newName = row.name;\n    this.newDetails = row.details;\n    this.editingRow = row;\n  }\n\n  updateDisplayedRows(): void {\n    const start = (this.currentPage - 1) * this.rowsPerPage;\n    const end = start + this.rowsPerPage;\n    this.displayedRows = this.filteredRows.slice(start, end);\n  }\n\n  goToPage(page: number): void {\n    if (page > 0 && page <= this.totalPages) {\n      this.currentPage = page;\n      this.updateDisplayedRows();\n    }\n  }\n\n  nextPage(): void {\n    if (this.currentPage < this.totalPages) {\n      this.currentPage++;\n      this.updateDisplayedRows();\n    }\n  }\n\n  prevPage(): void {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n      this.updateDisplayedRows();\n    }\n  }\n\n\n  userFeedback: string = '';\nfeedbackMessage: string = '';\n\nsubmitFeedback() {\n    if (this.userFeedback.trim()) {\n        \n        this.feedbackMessage = 'Cảm ơn bạn đã gửi góp ý!';\n        this.userFeedback = ''; \n    } else {\n        this.feedbackMessage = 'Vui lòng nhập nội dung góp ý.';\n    }\n\n    \n    setTimeout(() => {\n        this.feedbackMessage = '';\n    }, 3000);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n// import { API_URL } from '../common';\nimport { API_BASE_LOINC } from '../common';\n\nlet API_URL = `${API_BASE_LOINC}/api/`;\n\nexport interface LoincObjectProperty {\n  verbose_name: string;\n  value: string;\n}\n\nexport interface LoincObject {\n  [key: string]: LoincObjectProperty;\n}\n\nexport interface LoincObjectGroup {\n  [key: string]: LoincObject;\n}\n\nexport interface LoincObjectsList {\n  count: number;\n  next: string;\n  previous: string;\n  results: LoincObject[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoincService {\n  baseUrl = `${API_URL}`;\n  path = 'loinc/'\n  constructor(protected http: HttpClient) {}\n\n  list(query: string = '', page_size: number = 10, page: number = 1, ordering: string = ''): Observable<LoincObjectsList> {\n    let params = new HttpParams();\n    params = params.set('page_size', page_size);\n    params = params.set('page', page);\n    params = params.set('q', query);\n    params = params.set('ordering', ordering);\n\n    let headers = new HttpHeaders();\n    headers = headers.set('Accept-Language', localStorage.getItem('lang') || 'vi');\n\n    return this.http.get<LoincObjectsList>(`${API_URL}${this.path}`, { params: params, headers: headers });\n  }\n\n  retrieve(id: string): Observable<LoincObjectGroup> {\n    let params = new HttpParams();\n    params = params.set('groups', 1);\n\n    let headers = new HttpHeaders();\n    headers = headers.set('Accept-Language', localStorage.getItem('lang') || 'vi');\n\n    return this.http.get<LoincObjectGroup>(`${API_URL}${this.path}${id}/`, { params: params, headers: headers });\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoincTableService extends LoincService {\n  constructor(protected override http: HttpClient) {\n    super(http);\n    this.path = this.path + 'loinc-table/'\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapToService extends LoincService {\n  constructor(protected override http: HttpClient) {\n    super(http);\n    this.path = this.path + 'map-to/'\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PanelsAndFormsService extends LoincService {\n  constructor(protected override http: HttpClient) {\n    super(http);\n    this.path = this.path + 'panels-and-forms/'\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PartService extends LoincService {\n  constructor(protected override http: HttpClient) {\n    super(http);\n    this.path = this.path + 'part/'\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoincPartLinkService extends LoincService {\n  constructor(protected override http: HttpClient) {\n    super(http);\n    this.path = this.path + 'loinc-part-link/'\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnswerListService extends LoincService {\n  constructor(protected override http: HttpClient) {\n    super(http);\n    this.path = this.path + 'answer-list/'\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnswerService extends LoincService {\n  constructor(protected override http: HttpClient) {\n    super(http);\n    this.path = this.path + 'answer/'\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoincAnswerListLinkService extends LoincService {\n  constructor(protected override http: HttpClient) {\n    super(http);\n    this.path = this.path + 'loinc-answer-list-link/'\n  }\n}\n","import * as i1 from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, Input, Output, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Optional, Inject, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport * as i2 from '@angular/material/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i3 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true,\n};\n/** Change event object emitted by MatCheckbox. */\nclass MatCheckboxChange {\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}))));\nclass _MatCheckboxBase extends _MatCheckboxMixinBase {\n    constructor(idPrefix, elementRef, _changeDetectorRef, _ngZone, tabIndex, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* TransitionCheckState.Init */;\n        this._controlValueAccessorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || defaults;\n        this.color = this.defaultColor = this._options.color || defaults.color;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.id = this._uniqueId = `${idPrefix}${++nextUniqueId}`;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    /** Whether the checkbox is required. */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /** Whether the checkbox is checked. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        const checked = coerceBooleanProperty(value);\n        if (checked != this.checked) {\n            this._checked = checked;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() {\n        return this._indeterminate;\n    }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* TransitionCheckState.Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* TransitionCheckState.Checked */ : 2 /* TransitionCheckState.Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._getAnimationTargetElement();\n        if (oldState === newState || !element) {\n            return;\n        }\n        if (this._currentAnimationClass) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(this._createChangeEvent(this.checked));\n        // Assigning the value again here is redundant, but we have to do it in case it was\n        // changed inside the `change` listener which will cause the input to be out of sync.\n        if (this._inputElement) {\n            this._inputElement.nativeElement.checked = this.checked;\n        }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n    }\n    _handleInputClick() {\n        const clickAction = this._options?.clickAction;\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this._checked = !this._checked;\n            this._transitionCheckState(this._checked ? 1 /* TransitionCheckState.Checked */ : 2 /* TransitionCheckState.Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _onBlur() {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state change\n        // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        switch (oldState) {\n            case 0 /* TransitionCheckState.Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* TransitionCheckState.Checked */) {\n                    return this._animationClasses.uncheckedToChecked;\n                }\n                else if (newState == 3 /* TransitionCheckState.Indeterminate */) {\n                    return this._checked\n                        ? this._animationClasses.checkedToIndeterminate\n                        : this._animationClasses.uncheckedToIndeterminate;\n                }\n                break;\n            case 2 /* TransitionCheckState.Unchecked */:\n                return newState === 1 /* TransitionCheckState.Checked */\n                    ? this._animationClasses.uncheckedToChecked\n                    : this._animationClasses.uncheckedToIndeterminate;\n            case 1 /* TransitionCheckState.Checked */:\n                return newState === 2 /* TransitionCheckState.Unchecked */\n                    ? this._animationClasses.checkedToUnchecked\n                    : this._animationClasses.checkedToIndeterminate;\n            case 3 /* TransitionCheckState.Indeterminate */:\n                return newState === 1 /* TransitionCheckState.Checked */\n                    ? this._animationClasses.indeterminateToChecked\n                    : this._animationClasses.indeterminateToUnchecked;\n        }\n        return '';\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\n_MatCheckboxBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatCheckboxBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatCheckboxBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: _MatCheckboxBase, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], id: \"id\", required: \"required\", labelPosition: \"labelPosition\", name: \"name\", value: \"value\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"_labelElement\", first: true, predicate: [\"label\"], descendants: true }, { propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatCheckboxBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: undefined }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined }, { type: undefined }, { type: undefined }]; }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], id: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], indeterminateChange: [{\n                type: Output\n            }], value: [{\n                type: Input\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }], _labelElement: [{\n                type: ViewChild,\n                args: ['label']\n            }], ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], checked: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], indeterminate: [{\n                type: Input\n            }] } });\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxBase {\n    constructor(elementRef, changeDetectorRef, _focusMonitor, ngZone, tabIndex, animationMode, options) {\n        super('mat-checkbox-', elementRef, changeDetectorRef, ngZone, tabIndex, animationMode, options);\n        this._focusMonitor = _focusMonitor;\n        this._animationClasses = {\n            uncheckedToChecked: 'mat-checkbox-anim-unchecked-checked',\n            uncheckedToIndeterminate: 'mat-checkbox-anim-unchecked-indeterminate',\n            checkedToUnchecked: 'mat-checkbox-anim-checked-unchecked',\n            checkedToIndeterminate: 'mat-checkbox-anim-checked-indeterminate',\n            indeterminateToChecked: 'mat-checkbox-anim-indeterminate-checked',\n            indeterminateToUnchecked: 'mat-checkbox-anim-indeterminate-unchecked',\n        };\n    }\n    _createChangeEvent(isChecked) {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = isChecked;\n        return event;\n    }\n    _getAnimationTargetElement() {\n        return this._elementRef.nativeElement;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                this._onBlur();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        super._handleInputClick();\n    }\n    /** Focuses the checkbox. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n}\nMatCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCheckbox, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusMonitor }, { token: i0.NgZone }, { token: 'tabindex', attribute: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_CHECKBOX_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatCheckbox, selector: \"mat-checkbox\", inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, host: { properties: { \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"class.mat-checkbox-indeterminate\": \"indeterminate\", \"class.mat-checkbox-checked\": \"checked\", \"class.mat-checkbox-disabled\": \"disabled\", \"class.mat-checkbox-label-before\": \"labelPosition == \\\"before\\\"\", \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\" }, classAttribute: \"mat-checkbox\" }, providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR], exportAs: [\"matCheckbox\"], usesInheritance: true, ngImport: i0, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <span class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <span matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _animationMode === 'NoopAnimations' ? 0 : 150}\\\">\\n      <span class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></span>\\n    </span>\\n    <span class=\\\"mat-checkbox-frame\\\"></span>\\n    <span class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <span class=\\\"mat-checkbox-mixedmark\\\"></span>\\n    </span>\\n  </span>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);position:relative}.mat-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-checkbox-layout{-webkit-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:rgba(0,0,0,0);transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:rgba(0,0,0,0)}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox-input:focus~.mat-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i3.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCheckbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-checkbox', exportAs: 'matCheckbox', host: {\n                        'class': 'mat-checkbox',\n                        '[id]': 'id',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                        '[class.mat-checkbox-checked]': 'checked',\n                        '[class.mat-checkbox-disabled]': 'disabled',\n                        '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                    }, providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR], inputs: ['disableRipple', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <span class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <span matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _animationMode === 'NoopAnimations' ? 0 : 150}\\\">\\n      <span class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></span>\\n    </span>\\n    <span class=\\\"mat-checkbox-frame\\\"></span>\\n    <span class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <span class=\\\"mat-checkbox-mixedmark\\\"></span>\\n    </span>\\n  </span>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);position:relative}.mat-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-checkbox-layout{-webkit-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:rgba(0,0,0,0);transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:rgba(0,0,0,0)}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox-input:focus~.mat-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCheckboxRequiredValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatCheckboxRequiredValidator, selector: \"mat-checkbox[required][formControlName],\\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]\", providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                    providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based checkbox implementations. */\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n_MatCheckboxRequiredValidatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] });\n_MatCheckboxRequiredValidatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [MatCheckboxRequiredValidator],\n                    declarations: [MatCheckboxRequiredValidator],\n                }]\n        }] });\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCheckboxModule, declarations: [MatCheckbox], imports: [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule], exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule] });\nMatCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCheckboxModule, imports: [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule, MatCommonModule, _MatCheckboxRequiredValidatorModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule],\n                    exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                    declarations: [MatCheckbox],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxBase, _MatCheckboxRequiredValidatorModule };\n","<div class=\"flex flex-col gap-4\">\n    <div id=\"loinc-search\" class=\"main__search flex justify-between mb-2 relative\">\n        <div class=\"flex max-lg:flex-col max-lg:space-y-4 items-center lg:space-x-4\">\n            <div #boxSearch class=\" bar-1 bg-white flex items-center relative\">\n                <div class=\"w-[50px] h-full flex items-center justify-center\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        class=\"translate-x-[2px]\"\n                        height=\"24\"\n                        fill=\"#5F6368\"\n                    >\n                        <path\n                            d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n                        />\n                    </svg>\n                </div>\n                <input\n                    #searchInput\n                    [formControl]=\"query\"\n                    (keyup.enter)=\"search()\"\n                    id=\"search\"\n                    class=\"searchbar\"\n                    autocomplete=\"off\"\n                    placeholder=\"{{\n                        language === 'en' ? 'Enter keywords to search' : 'Nhập từ khóa để tìm kiếm...'\n                    }}\"\n                    type=\"text\"\n                    title=\"Search\"\n                />\n                <div\n                    (click)=\"emptySearchBox()\"\n                    [ngClass]=\"{ hidden: query.value.length <= 0, flex: query.value.length > 0 }\"\n                    class=\"w-[50px] h-6 items-center justify-center cursor-pointer z-[1001]\"\n                >\n                    <svg\n                        focusable=\"false\"\n                        width=\"24\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 24 24\"\n                        *ngIf=\"!loadingState.searching\"\n                    >\n                        <path\n                            fill=\"#70757a\"\n                            d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n                        ></path>\n                    </svg>\n                    <div class=\"spinner-container\">\n                        <div class=\"spinner\" *ngIf=\"loadingState.searching\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"h-[45px] flex space-x-4\">\n            <div *ngIf=\"loadingState.sorting\" class=\"spinner-container pt-[12px]\">\n                <div class=\"spinner\"></div>\n            </div>\n            <mat-form-field appearance=\"outline\" class=\"h-full\">\n                <mat-label>\n                    {{ language == 'en' ? 'Sort by' : 'Sắp xếp theo' }}\n                </mat-label>\n                <mat-select [formControl]=\"ordering\" (selectionChange)=\"sort()\">\n                    <mat-option *ngFor=\"let field of get_keys() | keyvalue : originalOrder\" [value]=\"field.key\">\n                        {{ field.value }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-checkbox class=\"h-full pt-[10px]\" [labelPosition]=\"'before'\" [formControl]=\"reverse\" (change)=\"sort()\">\n                {{ language == 'en' ? 'Reverse' : 'Giảm dần' }}\n            </mat-checkbox>\n        </div>\n    </div>\n    <span *ngIf=\"isResultEmpty()\" class=\"text-center text-gray-500\">\n        {{language === 'vi' ? 'Không tìm thấy kết quả nào!' : 'No results found.'}}\n    </span>\n    <table *ngIf=\"!isResultEmpty()\" cTable>\n        <thead>\n        <tr>\n            <th scope=\"col\" *ngFor=\"let field of get_keys() | keyvalue : originalOrder\">{{ field.value }}</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let result of results\" class=\"hover:bg-gray-300\">\n            <td *ngFor=\"let field of get_keys() | keyvalue : originalOrder\">\n                <a [routerLink]=\"result['id']['value']\" *ngIf=\"field.key === primaryKey\">{{ result[field.key]['value'] }}</a>\n                <span *ngIf=\"field.key !== primaryKey\">{{result[field.key]['value']}}</span>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    <div *ngIf=\"!isResultEmpty()\" class=\"flex justify-end space-x-4\">\n        <div *ngIf=\"loadingState.paginating\" class=\"spinner-container pt-[18px]\">\n            <div class=\"spinner\"></div>\n        </div>\n        <mat-paginator class=\"paginator\"\n                       [length]=\"totalPages\"\n                       [pageSize]=\"itemsPerPage\"\n                       [pageSizeOptions]=\"[10, 25, 50, 100]\"\n                       [pageIndex]=\"pageIndex\"\n                       (page)=\"paginate($event)\">\n        </mat-paginator>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LoincObject, LoincService } from '../../../../../shared/services/loinc.service';\nimport { PageEvent } from '@angular/material/paginator';\nimport { KeyValue } from '@angular/common';\n\ninterface LoadingState {\n  searching: boolean;\n  sorting: boolean;\n  paginating: boolean;\n}\n\n@Component({\n  selector: 'app-loinc-list-display',\n  templateUrl: './loinc-list-display.component.html',\n  styleUrls: ['./loinc-list-display.component.scss']\n})\nexport class LoincListDisplayComponent implements OnInit {\n  results: LoincObject[] = [];\n  query = new FormControl('', {nonNullable: true});\n  language: string\n  pageIndex = 0;\n  itemsPerPage = 25;\n  totalPages = 100;\n  ordering = new FormControl('', {nonNullable: true});\n  reverse = new FormControl(false);\n  loadingState: LoadingState = {\n    searching: false,\n    sorting: false,\n    paginating: false,\n  };\n\n  @Input() loincService!: LoincService;\n  @Input() primaryKey: string = 'id';\n\n  constructor(\n      public translate: TranslateService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.language = localStorage.getItem('lang') ?? 'vi';\n    this.ordering.setValue(this.primaryKey);\n    this.search();\n  }\n\n  emptySearchBox(): void {\n    this.query.setValue('');\n  }\n\n  getOrdering(): string {\n    if (this.reverse.value) {\n      return '-' + this.ordering.value;\n    }\n    return this.ordering.value;\n  }\n\n  search(): void {\n    this.loadingState.searching = true;\n    this.loincService.list(this.query.value, this.itemsPerPage, 1, this.getOrdering()).subscribe((data) => {\n      this.results = data.results;\n      this.totalPages = data.count;\n      this.loadingState.searching = false;\n      this.pageIndex = 0;\n    })\n  }\n\n  paginate(event: PageEvent) {\n    this.loadingState.paginating = true;\n    this.loincService.list(this.query.value, event.pageSize, event.pageIndex + 1, this.getOrdering()).subscribe((data) => {\n      this.results = data.results;\n      this.totalPages = data.count;\n      this.pageIndex = event.pageIndex;\n      this.loadingState.paginating = false;\n    })\n  }\n\n  sort() {\n    this.loadingState.sorting = true;\n    this.loincService.list(this.query.value, this.itemsPerPage, 1, this.getOrdering()).subscribe((data) => {\n      this.results = data.results;\n      this.totalPages = data.count;\n      this.pageIndex = 0;\n      this.loadingState.sorting = false;\n    })\n  }\n\n  get_keys(): {[key: string]: string} {\n    if (this.results.length == 0) {\n      return {};\n    }\n    let keys: {[key: string]: string} = {};\n    for (const key of Object.keys(this.results[0])) {\n      if (key !== 'id' || this.primaryKey === 'id') {\n        keys[key] = this.results[0][key]['verbose_name'];\n      }\n    }\n    return keys;\n  }\n\n  isResultEmpty(): boolean {\n    return this.results.length == 0;\n  }\n\n  originalOrder = (a: KeyValue<any,any>, b: KeyValue<any,any>): number => {\n    return 0;\n  }\n}\n","<!--<table cTable>-->\n<!--    <tbody>-->\n<!--        <tr *ngFor=\"let item of result | keyvalue: originalOrder\" class=\"hover:bg-gray-300\">-->\n<!--            <td class=\"font-semibold\">{{ item.key }}</td>-->\n<!--            <td>{{ item.value }}</td>-->\n<!--        </tr>-->\n<!--    </tbody>-->\n<!--</table>-->\n<div class=\"flex flex-col space-y-4\">\n    <div *ngFor=\"let field_group of result | keyvalue: originalOrder\" class=\"flex flex-col gap-y-4\">\n        <div class=\"w-full bg-blue-100 font-semibold px-4 py-3 rounded text-gray-900 text-sm \">\n            {{ field_group.key }}\n        </div>\n        <div cListGroup>\n            <div *ngFor=\"let field of field_group.value | keyvalue : originalOrder\" cListGroupItem>\n                <div class=\"flex justify-between w-full\">\n                    <span class=\"font-semibold\">{{ field.value['verbose_name'] }}</span>\n                    <span class=\"text-gray-500 w-2/3\" [innerHTML]=\"field.value['value']\"></span>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"flex justify-center mb-4\">\n        <a cButton color=\"primary\" [href]=\"feedbackURL\" target=\"_blank\">\n            {{ language === 'vi' ? \"Xem chi tiết và góp ý\" : \"See detail and feedback\"}}\n        </a>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { KeyValue } from '@angular/common';\nimport { LoincObjectGroup } from '../../../../../shared/services/loinc.service';\n\n@Component({\n  selector: 'app-loinc-detail-display',\n  templateUrl: './loinc-detail-display.component.html',\n  styleUrls: ['./loinc-detail-display.component.scss']\n})\nexport class LoincDetailDisplayComponent implements OnInit {\n  @Input() result: LoincObjectGroup = {};\n  @Input() feedbackURL: string = '';\n\n  language: string = localStorage.getItem('lang') ?? 'vi';\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.result && this.result.hasOwnProperty('id')) {\n      // @ts-ignore\n      delete this.result['id'];\n    }\n  }\n\n  originalOrder = (a: KeyValue<any,any>, b: KeyValue<any,any>): number => {\n    return 0;\n  }\n}\n","<app-loinc-list-display *ngIf=\"!isDetailView()\" [primaryKey]=\"key\" [loincService]=\"loincTableService\"></app-loinc-list-display>\n\n<div *ngIf=\"isDetailView()\" class=\"flex justify-center\">\n    <div class=\"w-1/5\"></div>\n    <div class=\"flex flex-col space-y-8 flex-1\">\n        <div class=\"flex space-x-8\">\n            <div class=\"flex flex-col space-y-2\">\n                <span class=\"text-gray-600 text-lg text-nowrap\">{{ headerFields.number?.verbose_name }}</span>\n                <span class=\"font-semibold text-3xl text-nowrap\">{{ headerFields.number?.value }}</span>\n            </div>\n            <div class=\"flex flex-col flex-grow space-y-2 min-w-0\">\n                <span class=\"text-gray-600 text-lg\">{{ headerFields.long_common_name?.verbose_name }}</span>\n                <span class=\"font-semibold text-3xl break-all\">{{ headerFields.long_common_name?.value }}</span>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <span class=\"text-gray-600 text-lg text-nowrap\">{{ headerFields.status?.verbose_name }}</span>\n                <span class=\"font-semibold text-3xl text-nowrap\">{{ headerFields.status?.value }}</span>\n            </div>\n        </div>\n        <app-loinc-detail-display class=\"flex-1\" [result]=\"singleResult\" [feedbackURL]=\"getFeedbackURL()\"></app-loinc-detail-display>\n    </div>\n    <div class=\"w-1/5\"></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  LoincObject,\n  LoincObjectGroup,\n  LoincObjectProperty,\n  LoincTableService,\n} from '../../../../../shared/services/loinc.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { API_BASE_LOINC } from '../../../../../shared/common';\n\n\ninterface HeaderField {\n  number?: LoincObjectProperty;\n  long_common_name?: LoincObjectProperty;\n  status?: LoincObjectProperty;\n}\n\n@Component({\n  selector: 'app-loinc-table',\n  templateUrl: './loinc-table.component.html',\n  styleUrls: ['./loinc-table.component.scss']\n})\nexport class LoincTableComponent implements OnInit {\n  private destroy$ = new Subject<void>();\n  singleResult:  LoincObjectGroup = {};\n  headerFields: HeaderField = {};\n  id: string = '';\n  key: string = 'number';\n  language: string = localStorage.getItem('lang') ?? 'vi';\n\n  constructor(\n    public loincTableService: LoincTableService,\n    private route: ActivatedRoute\n  ) {\n    this.route.params.pipe(takeUntil(this.destroy$)).subscribe((params: Params) => {\n      this.id = params['id'];\n      if (this.id) {\n        this.getDetail();\n      }\n      else {\n        this.singleResult = {}\n      }\n    })\n  }\n\n  ngOnInit(): void {}\n\n  getDetail() {\n    this.loincTableService.retrieve(this.id).subscribe((data) => {\n      this.singleResult = data;\n      this.headerFields = this.get_header_fields();\n    })\n  }\n\n  isDetailView(): boolean {\n    return Object.keys(this.singleResult).length > 0;\n  }\n\n  get_header_fields(): HeaderField {\n    let fields: LoincObject = {};\n    let headerKeys = ['number', 'long_common_name', 'status']\n\n    Object.entries(this.singleResult).forEach(([key, value]: [string, LoincObject]) => {\n      Object.entries(value).forEach(([key, value]: [string, LoincObjectProperty]) => {\n        if (headerKeys.includes(key)) {\n          if (!value.value) {\n            value.value = '-';\n          }\n          fields[key] = value;\n        }\n      })\n    })\n\n    return {\n      number: fields['number'],\n      long_common_name: fields['long_common_name'],\n      status: fields['status'],\n    };\n  }\n\n  getFeedbackURL() {\n    return `${API_BASE_LOINC}/${this.language}/admin/loinc_table/loinctable/${this.id}/change/`\n  }\n}\n","<app-loinc-list-display *ngIf=\"!isDetailView()\" [primaryKey]=\"key\" [loincService]=\"panelsAndFormsService\"></app-loinc-list-display>\n<div *ngIf=\"isDetailView()\" class=\"flex justify-center\">\n    <div class=\"w-1/5\"></div>\n    <app-loinc-detail-display class=\"flex-1\" [result]=\"singleResult\" [feedbackURL]=\"getFeedbackURL()\"></app-loinc-detail-display>\n    <div class=\"w-1/5\"></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { LoincObjectGroup, PanelsAndFormsService } from '../../../../../shared/services/loinc.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { API_BASE_LOINC } from '../../../../../shared/common';\n\n\n@Component({\n  selector: 'app-loinc-panels-forms',\n  templateUrl: './loinc-panels-forms.component.html',\n  styleUrls: ['./loinc-panels-forms.component.scss']\n})\nexport class LoincPanelsFormsComponent implements OnInit {\n  private destroy$ = new Subject<void>();\n  singleResult: LoincObjectGroup = {};\n  id: string = '';\n  key: string = 'id';\n  language: string = localStorage.getItem('lang') ?? 'vi';\n\n  constructor(\n    public panelsAndFormsService: PanelsAndFormsService,\n    private route: ActivatedRoute\n  ) {\n    this.route.params.pipe(takeUntil(this.destroy$)).subscribe((params: Params) => {\n      this.id = params['id'];\n      if (this.id) {\n        this.getDetail();\n      }\n    })\n  }\n\n  ngOnInit(): void {}\n\n  getDetail() {\n    this.panelsAndFormsService.retrieve(this.id).subscribe((data) => {\n      this.singleResult = data;\n    })\n  }\n\n  isDetailView(): boolean {\n    return Object.keys(this.singleResult).length > 0;\n  }\n\n  getFeedbackURL() {\n    return `${API_BASE_LOINC}/${this.language}/admin/panels_and_forms/panelsandforms/${this.id}/change/`\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DualVersionIcdComponent } from './DualVersionICD/dual-version-icd/dual-version-icd.component';\nimport { DualVersion9IcdComponent } from './DualVersionICD/dual-version9-icd/dual-version9-icd.component';\nimport { Icd10Component } from './icd10/icd10.component';\nimport { Icd9Component } from './icd9/icd9.component';\nimport { InstructionIcd10Component } from './instruction-icd10/instruction-icd10.component';\nimport { InstructionIcd9Component } from './instruction-icd9/instruction-icd9.component';\nimport { SearchGlobalDetailComponent } from './search-global-detail/search-global-detail.component';\nimport { SearchGlobalComponent } from './search-global/search-global.component';\nimport { IcfComponent } from './icf/icf.component';\nimport { DualVersionIcfComponent } from './DualVersionICD/dual-version-icf/dual-version-icf.component';\nimport { InstructionIcfComponent } from './instruction-icf/instruction-icf.component';\nimport { DashboardMccdComponent } from './dashboard/dashboard-mccd/dashboard-mccd.component';\nimport { DashboardUcodComponent } from './dashboard/dashboard-ucod/dashboard-ucod.component';\nimport  { ToolsUcodComponent}from './tools/tools-ucod/tools-ucod.component'\nimport { NotificationComponent } from './notification/notification.component';\nimport { Icd10v3Component } from './icd10v3/icd10v3.component';\n\n// Import new LOINC components\nimport { LoincTableComponent } from './loinc/loinc-table/loinc-table.component';\n// import { LoincMapToComponent } from './loinc/loinc-map-to/loinc-map-to.component';\n// import { LoincPartComponent } from './loinc/loinc-part/loinc-part.component';\n// import { LoincPartLinkComponent } from './loinc/loinc-part-link/loinc-part-link.component';\nimport { LoincPanelsFormsComponent } from './loinc/loinc-panels-forms/loinc-panels-forms.component';\n// import { LoincAnswerListsComponent } from './loinc/loinc-answer-lists/loinc-answer-lists.component';\n// import { LoincAnswersComponent } from './loinc/loinc-answers/loinc-answers.component';\n// import { LoincAnswerListLinksComponent } from './loinc/loinc-answer-list-links/loinc-answer-list-links.component';\n\n\n\n\nconst searchRoutes: Routes = [\n    {\n        path: 'search-global',\n        component: SearchGlobalComponent,\n        data: { title: 'ICD Smart Search' },\n    },\n    {\n        path: 'query-global',\n        component: SearchGlobalDetailComponent,\n        data: { title: 'ICD Smart Search' },\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(searchRoutes)],\n    exports: [RouterModule],\n})\nexport class SearchRoutingModule {}\n\nconst toolRoutes: Routes = [\n    {\n        path: 'ucod',\n        component: ToolsUcodComponent,\n        data: { title: 'Tools UCOD VIET NAM' },\n    }\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(toolRoutes)],\n    exports: [RouterModule],\n})\nexport class ToolsRoutingModule {}\n\nconst notificationRoutes: Routes = [\n    {\n        path: 'notification-list',\n        component: NotificationComponent,\n        data: { title: 'Notification List' },\n    }\n]\n\n\n@NgModule({\n    imports: [RouterModule.forChild(notificationRoutes)],\n    exports: [RouterModule],\n})\nexport class NotificationRoutingModule {}\n\nconst dashboardRoutes: Routes = [\n    {\n        path: 'ucod',\n        component: DashboardUcodComponent,\n        data: { title: 'Dashboard UCOD' },\n    },\n    {\n        path: 'mccd',\n        component: DashboardMccdComponent,\n        data: { title: 'Dashboard MCCD' },\n    }\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(dashboardRoutes)],\n    exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n\nconst icd9Routes: Routes = [\n    {\n        path: 'icd9',\n        component: Icd9Component,\n        data: { title: 'ICD-9' },\n    },\n    {\n        path: 'icd9-dual',\n        component: DualVersion9IcdComponent,\n        data: { title: 'ICD-9 Dual' },\n    },\n    {\n        path: 'instruction-icd9',\n        component: InstructionIcd9Component,\n        data: { title: 'ICD-9 Instruction' },\n    }\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(icd9Routes)],\n    exports: [RouterModule],\n})\nexport class Icd9RoutingModule {}\n\nconst icd10Routes: Routes = [\n    {\n        path: 'icd10',\n        component: Icd10Component,\n        data: { title: 'ICD-10' },\n    },\n    {\n        path: 'icd10-dual',\n        component: DualVersionIcdComponent,\n        data: { title: 'ICD-10 Dual' },\n    },\n    {\n        path: 'instruction-icd10',\n        component: InstructionIcd10Component,\n        data: { title: 'ICD-10 Instruction' },\n    },\n    {\n        path: 'icd10v3',\n        component: Icd10v3Component,\n        data: { title: 'ICD10 v3' },\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(icd10Routes)],\n    exports: [RouterModule],\n})\nexport class ICD10RoutingModule {}\n\nconst icfRoutes: Routes = [\n    {\n        path: 'icf',\n        component: IcfComponent,\n        data: { title: 'ICF' },\n    },\n    {\n        path: 'icf-dual',\n        component: DualVersionIcfComponent,\n        data: { title: 'ICF Dual' },\n    },\n    {\n        path: 'instruction-icf',\n        component: InstructionIcfComponent,\n        data: { title: 'ICF - Instruction' },\n    }\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(icfRoutes)],\n    exports: [RouterModule],\n})\nexport class ICFRoutingModule {}\n\n\nconst loincRoutes: Routes = [\n    {\n        path: 'loinc-table',\n        component: LoincTableComponent,\n        data: { title: 'LOINC Table' },\n    },\n    {\n        path: 'loinc-table/:id',\n        component: LoincTableComponent,\n        data: { title: 'LOINC Table' },\n    },\n    // {\n    //     path: 'loinc-table/map-to',\n    //     component: LoincMapToComponent,\n    //     data: { title: 'LOINC Map To' },\n    // },\n    // {\n    //     path: 'loinc-table/map-to/:id',\n    //     component: LoincMapToComponent,\n    //     data: { title: 'LOINC Map To' },\n    // },\n    // {\n    //     path: 'loinc-part/part',\n    //     component: LoincPartComponent,\n    //     data: { title: 'LOINC Part' },\n    // },\n    // {\n    //     path: 'loinc-part/part/:id',\n    //     component: LoincPartComponent,\n    //     data: { title: 'LOINC Part' },\n    // },\n    // {\n    //     path: 'loinc-part/part-link',\n    //     component: LoincPartLinkComponent,\n    //     data: { title: 'LOINC Part Link' },\n    // },\n    // {\n    //     path: 'loinc-part/part-link/:id',\n    //     component: LoincPartLinkComponent,\n    //     data: { title: 'LOINC Part Link' },\n    // },\n    {\n        path: 'panels-and-forms',\n        component: LoincPanelsFormsComponent,\n        data: { title: 'LOINC Panels & Forms' },\n    },\n    {\n        path: 'panels-and-forms/:id',\n        component: LoincPanelsFormsComponent,\n        data: { title: 'LOINC Panels & Forms' },\n    },\n    // {\n    //     path: 'loinc-answers/answer-lists',\n    //     component: LoincAnswerListsComponent,\n    //     data: { title: 'LOINC Answer Lists' },\n    // },\n    // {\n    //     path: 'loinc-answers/answer-lists/:id',\n    //     component: LoincAnswerListsComponent,\n    //     data: { title: 'LOINC Answer Lists' },\n    // },\n    // {\n    //     path: 'loinc-answers/answers',\n    //     component: LoincAnswersComponent,\n    //     data: { title: 'LOINC Answers' },\n    // },\n    // {\n    //     path: 'loinc-answers/answers/:id',\n    //     component: LoincAnswersComponent,\n    //     data: { title: 'LOINC Answers' },\n    // },\n    // {\n    //     path: 'loinc-answers/answer-list-links',\n    //     component: LoincAnswerListLinksComponent,\n    //     data: { title: 'LOINC Answer List Links' },\n    // },\n    // {\n    //     path: 'loinc-answers/answer-list-links/:id',\n    //     component: LoincAnswerListLinksComponent,\n    //     data: { title: 'LOINC Answer List Links' },\n    // }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(loincRoutes)],\n    exports: [RouterModule],\n})\nexport class LoincRoutingModule {} ","import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\n\nclass HighchartsChartComponent {\n    constructor(el, _zone // #75\n    ) {\n        this.el = el;\n        this._zone = _zone;\n        this.updateChange = new EventEmitter(true);\n        this.chartInstance = new EventEmitter(); // #26\n    }\n    ngOnChanges(changes) {\n        const update = changes.update && changes.update.currentValue;\n        if (changes.options || update) {\n            this.wrappedUpdateOrCreateChart();\n            if (update) {\n                this.updateChange.emit(false); // clear the flag after update\n            }\n        }\n    }\n    wrappedUpdateOrCreateChart() {\n        if (this.runOutsideAngular) {\n            this._zone.runOutsideAngular(() => {\n                this.updateOrCreateChart();\n            });\n        }\n        else {\n            this.updateOrCreateChart();\n        }\n    }\n    updateOrCreateChart() {\n        if (this.chart && this.chart.update) {\n            this.chart.update(this.options, true, this.oneToOne || false);\n        }\n        else {\n            this.chart = this.Highcharts[this.constructorType || 'chart'](this.el.nativeElement, this.options, this.callbackFunction || null);\n            // emit chart instance on init\n            this.chartInstance.emit(this.chart);\n        }\n    }\n    ngOnDestroy() {\n        if (this.chart) { // #56\n            this.chart.destroy();\n            this.chart = null;\n        }\n    }\n}\nHighchartsChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: HighchartsChartComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nHighchartsChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.2\", type: HighchartsChartComponent, selector: \"highcharts-chart\", inputs: { Highcharts: \"Highcharts\", constructorType: \"constructorType\", callbackFunction: \"callbackFunction\", oneToOne: \"oneToOne\", runOutsideAngular: \"runOutsideAngular\", options: \"options\", update: \"update\" }, outputs: { updateChange: \"updateChange\", chartInstance: \"chartInstance\" }, usesOnChanges: true, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: HighchartsChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'highcharts-chart',\n                    template: ''\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { Highcharts: [{\n                type: Input\n            }], constructorType: [{\n                type: Input\n            }], callbackFunction: [{\n                type: Input\n            }], oneToOne: [{\n                type: Input\n            }], runOutsideAngular: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], update: [{\n                type: Input\n            }], updateChange: [{\n                type: Output\n            }], chartInstance: [{\n                type: Output\n            }] } });\n\nclass HighchartsChartModule {\n}\nHighchartsChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: HighchartsChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHighchartsChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: HighchartsChartModule, declarations: [HighchartsChartComponent], exports: [HighchartsChartComponent] });\nHighchartsChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: HighchartsChartModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: HighchartsChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [HighchartsChartComponent],\n                    exports: [HighchartsChartComponent]\n                }]\n        }] });\n\n/*\n * Public API Surface of highcharts-angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HighchartsChartComponent, HighchartsChartModule };\n"," import { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatPaginatorIntl, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { ButtonModule, ListGroupModule, OffcanvasModule, PaginationModule, TableModule } from '@coreui/angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DashboardMccdComponent } from './dashboard/dashboard-mccd/dashboard-mccd.component';\nimport { DashboardUcodComponent } from './dashboard/dashboard-ucod/dashboard-ucod.component';\nimport { ToolsUcodComponent } from './tools/tools-ucod/tools-ucod.component';\n// import { SystemComponent } from './dashboard/system/system.component';\nimport { DualVersionIcdComponent } from './DualVersionICD/dual-version-icd/dual-version-icd.component';\nimport { DualVersionIcfComponent } from './DualVersionICD/dual-version-icf/dual-version-icf.component';\nimport { DualVersion9IcdComponent } from './DualVersionICD/dual-version9-icd/dual-version9-icd.component';\nimport { Icd10Component } from './icd10/icd10.component';\nimport { Icd9Component } from './icd9/icd9.component';\nimport { IcfComponent } from './icf/icf.component';\nimport { InstructionIcd10Component } from './instruction-icd10/instruction-icd10.component';\nimport { InstructionIcd9Component } from './instruction-icd9/instruction-icd9.component';\nimport { InstructionIcfComponent } from './instruction-icf/instruction-icf.component';\nimport { NotificationComponent } from './notification/notification.component';\nimport { SearchGlobalDetailComponent } from './search-global-detail/search-global-detail.component';\nimport { SearchGlobalComponent } from './search-global/search-global.component';\nimport { SearchIcd9Component } from './search-icd9/search-icd9.component';\nimport { SearchIcfComponent } from './search-icf/search-icf.component';\nimport { SearchComponent } from './search/search.component';\n\nimport{ Icd10v3Component } from'./icd10v3/icd10v3.component'\nimport {\n    SearchRoutingModule,\n    NotificationRoutingModule,\n    DashboardRoutingModule,\n    Icd9RoutingModule,\n    ICD10RoutingModule,\n    ICFRoutingModule,\n    ToolsRoutingModule,\n    LoincRoutingModule // Import the new LoincRoutingModule\n} from './who-routing.module';\nimport { HighchartsChartModule } from \"highcharts-angular\";\nimport {MatSelectModule} from '@angular/material/select';\nimport { RouterModule } from '@angular/router';\n\nimport { LoincTableComponent } from './loinc/loinc-table/loinc-table.component';\n// import { LoincMapToComponent } from './loinc/loinc-map-to/loinc-map-to.component';\n// import { LoincPartComponent } from './loinc/loinc-part/loinc-part.component';\n// import { LoincPartLinkComponent } from './loinc/loinc-part-link/loinc-part-link.component';\nimport { LoincPanelsFormsComponent } from './loinc/loinc-panels-forms/loinc-panels-forms.component';\n// import { LoincAnswerListsComponent } from './loinc/loinc-answer-lists/loinc-answer-lists.component';\n// import { LoincAnswersComponent } from './loinc/loinc-answers/loinc-answers.component';\n// import { LoincAnswerListLinksComponent } from './loinc/loinc-answer-list-links/loinc-answer-list-links.component';\nimport { LoincListDisplayComponent } from './loinc/loinc-list-display/loinc-list-display.component';\nimport { LoincDetailDisplayComponent } from './loinc/loinc-detail-display/loinc-detail-display.component';\n import { MatCheckboxModule } from '@angular/material/checkbox';\n\n\nexport class CustomPaginatorIntl extends MatPaginatorIntl {\n  constructor() {\n    super();\n\n    this.itemsPerPageLabel = 'Số bản ghi mỗi trang: ';\n  }\n\n}\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SearchRoutingModule,\n    FormsModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatTreeModule,\n    MatIconModule,\n    MatButtonModule,\n    PaginationModule,\n    TableModule,\n  ],\n    declarations: [\n        SearchGlobalComponent,\n        SearchGlobalDetailComponent\n    ],\n})\nexport class SearchGlobalModule {}\n\n@NgModule({\n    imports: [\n        RouterModule,\n        FormsModule,\n        ToolsRoutingModule\n    ],\n    declarations: [\n        ToolsUcodComponent\n    ]\n})\nexport class ToolsModule {}\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NotificationRoutingModule\n    ],\n    declarations: [\n        NotificationComponent\n    ]\n})\nexport class NotificationModule {}\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatAutocompleteModule,\n        MatInputModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatButtonToggleModule,\n        MatButtonModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n        HighchartsChartModule,\n        DashboardRoutingModule,\n    ],\n    declarations: [\n        DashboardUcodComponent,\n        DashboardMccdComponent\n    ]\n})\nexport class DashboardModule {}\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatTreeModule,\n        MatIconModule,\n        MatButtonModule,\n        OffcanvasModule,\n        ButtonModule,\n        NgOptimizedImage,\n        Icd9RoutingModule\n    ],\n    declarations: [\n        Icd9Component,\n        DualVersion9IcdComponent,\n        InstructionIcd9Component,\n        SearchIcd9Component\n    ]\n})\nexport class Icd9Module {}\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatTreeModule,\n        MatIconModule,\n        MatButtonModule,\n        ButtonModule,\n        OffcanvasModule,\n        FormsModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        NgOptimizedImage,\n        ICD10RoutingModule\n    ],\n    declarations: [\n        Icd10Component,\n        DualVersionIcdComponent,\n        InstructionIcd10Component,\n        SearchComponent\n    ]\n})\nexport class Icd10Module {}\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatTreeModule,\n        MatButtonModule,\n        MatIconModule,\n        ButtonModule,\n        OffcanvasModule,\n        FormsModule,\n        NgOptimizedImage,\n        ICFRoutingModule\n    ],\n    declarations: [\n        IcfComponent,\n        DualVersionIcfComponent,\n        InstructionIcfComponent,\n        SearchIcfComponent\n    ]\n})\nexport class IcfModule {}\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        LoincRoutingModule,\n        FormsModule,\n        TableModule,\n        RouterModule,\n        MatPaginatorModule,\n        ReactiveFormsModule,\n        ListGroupModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        ButtonModule\n    ],\n    declarations: [\n        LoincListDisplayComponent,\n        LoincDetailDisplayComponent,\n        LoincTableComponent,\n        // LoincMapToComponent,\n        // LoincPartComponent,\n        // LoincPartLinkComponent,\n        LoincPanelsFormsComponent,\n        // LoincAnswerListsComponent,\n        // LoincAnswersComponent,\n        // LoincAnswerListLinksComponent\n    ]\n})\nexport class LoincModule {}"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,124,134]}