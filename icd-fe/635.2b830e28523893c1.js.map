{"version":3,"file":"635.2b830e28523893c1.js","mappings":"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","names":["addEvent","U","correctFloat","defined","extend","merge","pick","splat","Chart","Pane","options","chart","this","background","center","coll","defaultOptions","size","innerSize","startAngle","defaultBackgroundOptions","shape","borderWidth","borderColor","backgroundColor","linearGradient","x1","y1","x2","y2","stops","from","Number","MAX_VALUE","innerRadius","to","outerRadius","init","prototype","pane","push","setOptions","angular","render","len","i","backgroundOption","group","renderer","g","attr","zIndex","add","updateCenter","Math","max","length","axis","renderBackground","destroy","splice","backgroundOptions","method","attribs","class","className","styledMode","fill","stroke","path","d","getPlotBandPath","CU","update","redraw","axes","forEach","isInsidePane","x","y","endAngle","insideSlice","cx","cy","distance","sqrt","pow","angle","atan2","PI","ceil","eventArgs","hoverPane","chartX","plotLeft","chartY","plotTop","e","_a","polar","inverted","isInsidePlot","some","normalizedStartAngleRad","normalizedEndAngleRad","Pointer","getHoverPane","filter","s","visible","shared","directTouch","enableMouseTracking","xAxis","hoverPoint","plotX","plotY","H","extendStatics","__extends","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","call","TypeError","String","__","constructor","create","SeriesRegistry","areaProto","pointClass","isNumber","AreaRangePoint","_super","_this","apply","arguments","high","low","series","setState","prevState","state","isPolar","plotHigh","yAxis","toPixels","plotLow","stateMarkerGraphic","lowerStateMarkerGraphic","upperStateMarkerGraphic","graphic","graphics","plotHighX","plotLowX","haloPath","isInside","isTopInside","concat","isValid","noop","AreaSeries","area","columnProto","column","isArray","areaRangeSeriesOptions","lineWidth","threshold","tooltip","pointFormat","trackByArea","dataLabels","align","verticalAlign","xLow","xHigh","yLow","yHigh","AreaRangeSeries","data","points","toYData","point","highToXY","xy","postTranslate","rectPlotX","getGraphPath","pointShim","highPoints","highAreaPoints","connectEnds","connectNulls","step","highAreaPoint","yBottom","doCurve","isNull","polarPlotY","lowerPath","left","right","higherPath","higherAreaPath","linePath","graphPath","areaPath","isArea","xMap","drawDataLabels","up","upperDataLabelOptions","lowerDataLabelOptions","originalDataLabels","dataLabelOptions","enabled","_hasPointLabels","_b","inside","_plotY","dataLabel","dataLabelUpper","below","_c","_d","label","alignDataLabel","drawPoints","pointLength","origProps","negative","zone","zones","getZone","pointArrayMap","join","translate","dataModify","modifyValue","order","tooltipPos","pos","posHigh","deferTranslatePolar","pointValKey","setStackedPoints","splineProto","AreaSplineRangeSeries","getPointSpline","BoxPlotSeries","pointAttribs","key","highPlot","q1Plot","q3Plot","lowPlot","medianPlot","crispCorr","width","halfWidth","pointWiskerLength","crispX","doQuartiles","whiskerLength","verb","shapeArgs","boxAttr","stemAttr","whiskersAttr","medianAttr","color","round","floor","stem","addClass","whiskers","box","boxPath","medianShape","medianPath","stemColor","stemWidth","dashstyle","stemDashStyle","dashStyle","whiskerColor","whiskerWidth","whiskerDashStyle","fillColor","lineColor","boxDashStyle","medianColor","medianWidth","medianDashStyle","strokeWidth","test","parseFloat","q1","median","q3","ColumnSeries","ColumnRangePoint","arearange","clamp","columnRangeOptions","pointRange","marker","states","hover","halo","ColumnRangeSeries","stacking","height","heightDifference","start","startAngleRad","isRadial","safeDistance","chartWidth","chartHeight","safeBounds","pixelPos","minPointLength","rectPlotY","abs","barX","shapeType","arc","pointWidth","translate3dPoints","translate3dShapes","trackerGroups","adjustForMissingColumns","animate","crispCol","drawGraph","getSymbol","drawTracker","getColumnMetrics","colProto","ColumnPyramidSeries","dense","closestPointRange","transA","translatedThreshold","getThreshold","metrics","seriesBarW","barW","pointXOffset","offset","pointPadding","stackTotal","stackHeight","topPointY","topXwidth","bottomXwidth","invBarPos","x3","x4","barY","min","barH","total","plotHeight","grouping","linkedTo","ErrorBarSeries","linkedParent","columnMetrics","valKey","ErrorBarSeriesDefaults","GaugePoint","Series","pInt","GaugeSeries","generatePoints","dialOptions","dial","radius","baseLength","rearLength","baseWidth","topWidth","overshoot","rotation","wrap","endAngleRad","translateX","translateY","pivot","pivotOptions","circle","animation","plotGroup","seriesGroup","clip","clipRect","setData","processData","hasData","borderRadius","crop","defer","headerFormat","showInLegend","fixedBox","forceDL","noSharedTooltip","composedClasses","onChartLoad","mousedownUnbinder","mousemoveUnbinder","mouseupUnbinder","container","event","hasDraggableNodes","draggable","onMouseDown","onMouseMove","ownerDocument","onMouseUp","DragNodesComposition","compose","ChartClass","indexOf","normalizedEvent","pointer","normalize","fixedPosition","inDragMode","diffX","diffY","graphLayoutsLookup","newPlotX","newPlotY","hasDragged","redrawHalo","layout","restartSimulation","_event","enableSimulation","fixedDraggable","setAnimation","A","onChartAfterPrint","updateSimulation","onChartBeforePrint","onChartPredraw","stop","onChartRender","systemsStable","afterRender","layoutStep","maxIterations","isFinite","temperature","isStable","beforeStep","GraphLayoutComposition","integrations","layouts","PackedBubblePoint","degree","NaN","mass","value","removeElementFromCollection","nodes","Point","firePointEvent","seriesOptions","isParentNode","parentNode","temp","allowPointSelect","select","getSelectedPoints","getSelectedParentNodes","PackedBubbleSeriesDefaults","minSize","maxSize","sizeBy","zoneAxis","crisp","useSimulation","formatter","numberFormatter","parentNodeFormatter","name","parentNodeTextPath","padding","style","transition","layoutAlgorithm","initialPositions","initialPositionRadius","bubblePadding","parentNodeLimit","seriesInteraction","dragBetweenSeries","parentNodeOptions","gravitationalConstant","maxSpeed","fillOpacity","symbol","type","integration","splitSeries","friction","VerletIntegration","attractive","link","force","distanceXY","massFactor","getMass","translatedX","diffTemperature","translatedY","fromNode","toNode","attractiveForceFunction","k","barycenter","xFactor","yFactor","top","node","getK","integrate","dispX","prevX","dispY","prevY","signX","signY","vectorLength","repulsive","factor","repulsiveForceFunction","PackedBubbleIntegration","centerX","centerY","_i","nodes_1","repNode","EulerIntegration","distanceR","getDegree","phi","QuadTreeNode","body","isEmpty","isInternal","boxSize","divideBox","halfHeight","getBoxPosition","insert","depth","newQuadTreeNode","updateMassAndCenter","pointMass","QuadTree","maxDepth","root","isRoot","calculateMassAndCenter","visitNodeRecursive","insertNodes","points_1","beforeCallback","afterCallback","goFurther","qtNode","win","isFunction","ReingoldFruchtermanLayout","attractiveForce","currentStep","initialRendering","links","quadTree","repulsiveForce","simulation","GraphLayout","setInitialRendering","approximation","enable","forces","initPositions","finishedAnimating","setK","resetSimulation","allSeries","createQuadTree","applyLimits","coolDown","startTemperature","prevSystemTemperature","systemTemperature","getSystemTemperature","allSeries_1","cancelAnimationFrame","requestAnimationFrame","setArea","w","h","linkLength","addElementsToCollection","elements","collection","elements_1","element","index","clear","forcedStop","setMaxIterations","setTemperature","setDiffTemperature","setCircularPositions","setRandomPositions","rootNodes","linksTo","visitedNodes","addToNodes","linksFrom","id","sortedNodes","rootNodes_1","rootNode","node_1","iEnd","cos","sin","nodesLength","unrandom","n","rand","args","barycenterForces","getBarycenter","systemMass","barnesHutApproximation","quadNode","goDeeper","getDistXY","theta","repulsiveForces","_loop_1","this_1","_e","attractiveForces","nodes_2","applyLimitBox","temperatureStep","vector","getDistR","nodeA","nodeB","xDist","yDist","absX","absY","chartGetSelectedParentNodes","selectedParentsNodes","selected","onChartBeforeRedraw","allDataPoints","PackedBubbleLayout","calculateParentRadius","tempDiff","upScaledTemperature","neighbours","parentNodeRadius","Color","seriesProto","BubbleSeries","fireEvent","PackedBubbleSeries","parentNodeMass","xData","AxisClass","LegendClass","SeriesClass","accumulateAllPoints","yData","is","ignoreHiddenSeries","j","addLayout","layoutOptions","layoutType","chartOptions","graphLayoutsStorage","forExport","collisionNmb","plotWidth","addSeriesLayout","seriesLayout","parentNodeLayout","createParentNodes","bBox","seriesBox","calculateZExtremes","zMin","zMax","valMin","Infinity","valMax","checkOverlap","bubble1","bubble2","sumRad","nodeAdded","parentMarkerOptions","brighten","get","seriesIndex","normal","dataLabelOnNull","deferLayout","formatPrefix","parentAttribs","nodeMarker","parentOptions","opacity","parentNodesGroup","graph","div","getPointRadius","smallestSize","extremes","radii","allDataPointsLength","prop","parseInt","isPercent","minRadius","maxRadius","zExtremes","getRadius","eventsToUnbind","isDirty","dnPoint","removed","distanceXY_1","layout_1","addPoint","remove","placeBubbles","calculatedBubble","positionBubble","bubblePos","stage","arr","sortedArr","sort","a","stages","rawPositions","resizeRadius","markerOptions","lastBubble","newOrigin","nextBubble","asin","acos","alfa","beta","finalAngle","cosA","sinA","allowOverlap","hideOverlappingLabels","minX","maxX","minY","maxY","positions","POSITIVE_INFINITY","NEGATIVE_INFINITY","positions_1","position","smallerDimension","positions_2","setVisible","show","hide","processedXData","positions_3","axisTypes","isCartesian","requireSorting","indexateNodes","searchPoint","LineSeries","line","ScatterSeries","scatter","PolygonSeries","stickyTracking","followPointer","drawLegendSymbol","LegendSymbol","WaterfallAxis","objectEach","Composition","stacks","changed","renderStackTotals","waterfallStacks","waterfall","stackTotalGroup","dummyStackItem","StackItem","stackLabels","stackItem","onAfterBuildStacks","alreadyChanged","onAfterRender","stackLabelOptions","onBeforeRedraw","isXAxis","onInit","WaterfallPoint","getClassName","isSum","isIntermediateSum","Boolean","arrayMax","arrayMin","ownProp","obj","WaterfallSeries","stackedYNeg","stackedYPos","stackKey","processedYData","yPos","hPos","halfMinPointLength","actualStack","previousIntermediate","previousY","yValue","range","pointY","actualStackX","stackState","stateIndex","absolutePos","absoluteNeg","posTotal","negTotal","connectorThreshold","reversed","setOffset","minPointLengthOffset","tooltipY","isPointInside","subSum","sum","dataMin","dataMax","dataLength","pt","updateParallelArrays","upColor","getCrispPath","prevStack","prevPoint","isPos","prevArgs","pointArgs","graphNormalizer","borderNormalizer","reversedXAxis","reversedYAxis","nextLast","last","totalYVal","actualSum","prevSum","statesLen","xPoint","yVal","seriesThreshold","stackThreshold","interSum","xLength","calculateStackState","firstS","nextS","sInx","sOff","usePercentage","getExtremes","stackX","lineWidthPlus","getZonesGraphs","showLine","Axis","RadialAxis","D","relativeLength","defaultCircularOptions","gridLineWidth","labels","textOverflow","maxPadding","minPadding","showLastLabel","tickLength","defaultRadialGaugeOptions","minorGridLineWidth","minorTickInterval","minorTickLength","minorTickPosition","minorTickWidth","tickPosition","tickWidth","title","defaultRadialOptions","gridLineInterpolation","text","beforeSetTickPositions","autoConnect","isCircular","userMax","categories","createLabelCollector","tickPositions","map","ticks","createLabelCollectorHidden","getCrosshairPosition","end","getPosition","getLinePath","_lineWidth","r","horiz","symbols","open","innerR","xBounds","yBounds","angleRad","getOffset","axisOffset","side","xOnPerimeter","radiusToPixels","percentRegex","fullRadius","thickness","getPlotLinePath","reverse","transFrom","transTo","innerRatio","otherAxis","crossPos","isCrosshair","paneInnerR","slice","translatedVal","getTitlePosition","titleOptions","middle","modify","setAxisSize","setAxisTranslation","onAxisAfterInit","paneOptions","fullCircle","normalizedStart","normalizedEnd","onAxisAutoLabelAlign","preventDefault","onAxisDestroy","labelCollectors","labelCollector","onAxisInit","isX","isHidden","userOptions","modifyAsHidden","radialAxis","renderHidden","setScale","setCategories","setTitle","defaultPolarOptions","AxisDefaults","reversedStacks","onAxisInitialAxisTranslation","onTickAfterGetLabelPosition","ret","labelBBox","getBBox","labelOptions","correctAngle","labelYPosCorrection","optionsY","centerSlot","labelDir","reducedAngle1","reducedAngle2","fontMetrics","styles","fontSize","tickInterval","onTickAfterGetPosition","sector","minPixelPadding","minPointOffset","plotBands","wrapTickGetMarkPath","proceed","endPoint","TickClass","__spreadArray","pack","ar","l","animObject","find","uniqueKey","getConnectors","segment","calculateNeighbours","leftContX","leftContY","rightContX","rightContY","jointAngle","smoothing","denom","addedNumber","prevPointInd","previousPoint","nextPoint","dLControlPoint","dRControlPoint","leftContAngle","rightContAngle","prevPointCont","onChartAfterDrawChartBox","onChartAfterInit","startOnTick","endOnTick","onChartGetAxes","onPointerGetSelectionBox","linearAxis","result","onPointerGetSelectionMarkerAttrs","mouseDownX","mouseDownY","attrs","zoomHor","paneRadRange","pathStart","toValue","pathEnd","trimPath","zoomVert","linearAxis_1","innerPath","outerPath","radialAxis_1","onSeriesAfterInit","PolarAdditions","isRadialSeries","isRadialBar","onSeriesAfterTranslate","chart_1","kdByAngle","searchPointByAngle","findNearestPointBy","preventPostTranslate","toXY","hasParallelCoordinates","MIN_VALUE","hasClipCircleSetter","circ","clipCircle","clipPath","createElement","defs","wrapper","setClip","searchKDTree","clientX","lastTick","tick","firstTick","unshift","wrapChartGet","wrapColumnSeriesAlignDataLabel","alignTo","isNew","labelPos","findAlignments","getPrototypeOf","wrapColumnSeriesTranslate","yMin","yMax","pointX","stackValues","stack","visibleRange","thresholdAngleRad","getStackIndicator","ttBelow","wrapLineSeriesGetGraphPath","firstValid","popLastPoint","pop","wrapPointerGetCoordinates","wrapPointerPinch","wrapSeriesAnimate","markerGroup","isSVG","scaleX","scaleY","wrapSplineSeriesGetPointSpline","connectors","PointerClass","AreaSplineRangeSeriesClass","ColumnSeriesClass","LineSeriesClass","SplineSeriesClass","pointerProto","polarPlotX","G","Highcharts","Legend","Tick"],"sourceRoot":"webpack:///","sources":["./node_modules/highcharts/es-modules/Extensions/Pane.js","./node_modules/highcharts/es-modules/Series/AreaRange/AreaRangePoint.js","./node_modules/highcharts/es-modules/Series/AreaRange/AreaRangeSeries.js","./node_modules/highcharts/es-modules/Series/AreaSplineRange/AreaSplineRangeSeries.js","./node_modules/highcharts/es-modules/Series/BoxPlot/BoxPlotSeries.js","./node_modules/highcharts/es-modules/Series/ColumnRange/ColumnRangePoint.js","./node_modules/highcharts/es-modules/Series/ColumnRange/ColumnRangeSeries.js","./node_modules/highcharts/es-modules/Series/ColumnPyramid/ColumnPyramidSeries.js","./node_modules/highcharts/es-modules/Series/ErrorBar/ErrorBarSeriesDefaults.js","./node_modules/highcharts/es-modules/Series/ErrorBar/ErrorBarSeries.js","./node_modules/highcharts/es-modules/Series/Gauge/GaugePoint.js","./node_modules/highcharts/es-modules/Series/Gauge/GaugeSeries.js","./node_modules/highcharts/es-modules/Series/DragNodesComposition.js","./node_modules/highcharts/es-modules/Series/GraphLayoutComposition.js","./node_modules/highcharts/es-modules/Series/PackedBubble/PackedBubblePoint.js","./node_modules/highcharts/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js","./node_modules/highcharts/es-modules/Series/Networkgraph/VerletIntegration.js","./node_modules/highcharts/es-modules/Series/PackedBubble/PackedBubbleIntegration.js","./node_modules/highcharts/es-modules/Series/Networkgraph/EulerIntegration.js","./node_modules/highcharts/es-modules/Series/Networkgraph/QuadTreeNode.js","./node_modules/highcharts/es-modules/Series/Networkgraph/QuadTree.js","./node_modules/highcharts/es-modules/Series/Networkgraph/ReingoldFruchtermanLayout.js","./node_modules/highcharts/es-modules/Series/PackedBubble/PackedBubbleLayout.js","./node_modules/highcharts/es-modules/Series/PackedBubble/PackedBubbleSeries.js","./node_modules/highcharts/es-modules/Series/Polygon/PolygonSeries.js","./node_modules/highcharts/es-modules/Core/Axis/WaterfallAxis.js","./node_modules/highcharts/es-modules/Series/Waterfall/WaterfallPoint.js","./node_modules/highcharts/es-modules/Series/Waterfall/WaterfallSeries.js","./node_modules/highcharts/es-modules/Core/Axis/RadialAxis.js","./node_modules/highcharts/es-modules/Series/PolarComposition.js","./node_modules/highcharts/es-modules/masters/highcharts-more.src.js"],"sourcesContent":["/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport Chart from '../Core/Chart/Chart.js';\nimport CU from '../Series/CenteredUtilities.js';\nimport H from '../Core/Globals.js';\nimport Pointer from '../Core/Pointer.js';\nimport U from '../Core/Utilities.js';\nvar addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, extend = U.extend, merge = U.merge, pick = U.pick, splat = U.splat;\n/**\n * @typedef {\"arc\"|\"circle\"|\"solid\"} Highcharts.PaneBackgroundShapeValue\n */\n/* eslint-disable no-invalid-this, valid-jsdoc */\nChart.prototype.collectionsWithUpdate.push('pane');\n/**\n * The Pane object allows options that are common to a set of X and Y axes.\n *\n * In the future, this can be extended to basic Highcharts and Highcharts Stock.\n *\n * @private\n * @class\n * @name Highcharts.Pane\n * @param {Highcharts.PaneOptions} options\n * @param {Highcharts.Chart} chart\n */\nvar Pane = /** @class */ (function () {\n    function Pane(options, chart) {\n        this.background = void 0;\n        this.center = void 0;\n        this.chart = void 0;\n        this.options = void 0;\n        this.coll = 'pane'; // Member of chart.pane\n        /**\n         * The pane serves as a container for axes and backgrounds for circular\n         * gauges and polar charts.\n         *\n         * @since        2.3.0\n         * @product      highcharts\n         * @requires     highcharts-more\n         * @optionparent pane\n         */\n        this.defaultOptions = {\n            /**\n             * The end angle of the polar X axis or gauge value axis, given in\n             * degrees where 0 is north. Defaults to [startAngle](#pane.startAngle)\n             * + 360.\n             *\n             * @sample {highcharts} highcharts/demo/gauge-vu-meter/\n             *         VU-meter with custom start and end angle\n             *\n             * @type      {number}\n             * @since     2.3.0\n             * @product   highcharts\n             * @apioption pane.endAngle\n             */\n            /**\n             * The center of a polar chart or angular gauge, given as an array\n             * of [x, y] positions. Positions can be given as integers that\n             * transform to pixels, or as percentages of the plot area size.\n             *\n             * @sample {highcharts} highcharts/demo/gauge-vu-meter/\n             *         Two gauges with different center\n             *\n             * @type    {Array<string|number>}\n             * @default [\"50%\", \"50%\"]\n             * @since   2.3.0\n             * @product highcharts\n             */\n            center: ['50%', '50%'],\n            /**\n             * The size of the pane, either as a number defining pixels, or a\n             * percentage defining a percentage of the available plot area (the\n             * smallest of the plot height or plot width).\n             *\n             * @sample {highcharts} highcharts/demo/gauge-vu-meter/\n             *         Smaller size\n             *\n             * @type    {number|string}\n             * @product highcharts\n             */\n            size: '85%',\n            /**\n             * The inner size of the pane, either as a number defining pixels, or a\n             * percentage defining a percentage of the pane's size.\n             *\n             * @sample {highcharts} highcharts/series-polar/column-inverted-inner\n             *         The inner size set to 20%\n             *\n             * @type    {number|string}\n             * @product highcharts\n             */\n            innerSize: '0%',\n            /**\n             * The start angle of the polar X axis or gauge axis, given in degrees\n             * where 0 is north. Defaults to 0.\n             *\n             * @sample {highcharts} highcharts/demo/gauge-vu-meter/\n             *         VU-meter with custom start and end angle\n             *\n             * @since   2.3.0\n             * @product highcharts\n             */\n            startAngle: 0\n        };\n        /**\n         * An array of background items for the pane.\n         *\n         * @sample {highcharts} highcharts/demo/gauge-speedometer/\n         *         Speedometer gauge with multiple backgrounds\n         *\n         * @type         {Array<*>}\n         * @optionparent pane.background\n         */\n        this.defaultBackgroundOptions = {\n            /**\n             * The class name for this background.\n             *\n             * @sample {highcharts} highcharts/css/pane/\n             *         Panes styled by CSS\n             * @sample {highstock} highcharts/css/pane/\n             *         Panes styled by CSS\n             * @sample {highmaps} highcharts/css/pane/\n             *         Panes styled by CSS\n             *\n             * @type      {string}\n             * @default   highcharts-pane\n             * @since     5.0.0\n             * @apioption pane.background.className\n             */\n            /**\n             * The shape of the pane background. When `solid`, the background\n             * is circular. When `arc`, the background extends only from the min\n             * to the max of the value axis.\n             *\n             * @type    {Highcharts.PaneBackgroundShapeValue}\n             * @since   2.3.0\n             * @product highcharts\n             */\n            shape: 'circle',\n            /**\n             * The pixel border width of the pane background.\n             *\n             * @since 2.3.0\n             * @product highcharts\n             */\n            borderWidth: 1,\n            /**\n             * The pane background border color.\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @since   2.3.0\n             * @product highcharts\n             */\n            borderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The background color or gradient for the pane.\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default { linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 }, stops: [[0, #ffffff], [1, #e6e6e6]] }\n             * @since   2.3.0\n             * @product highcharts\n             */\n            backgroundColor: {\n                /** @ignore-option */\n                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                /** @ignore-option */\n                stops: [\n                    [0, \"#ffffff\" /* Palette.backgroundColor */],\n                    [1, \"#e6e6e6\" /* Palette.neutralColor10 */]\n                ]\n            },\n            /** @ignore-option */\n            from: -Number.MAX_VALUE,\n            /**\n             * The inner radius of the pane background. Can be either numeric\n             * (pixels) or a percentage string.\n             *\n             * @type    {number|string}\n             * @since   2.3.0\n             * @product highcharts\n             */\n            innerRadius: 0,\n            /** @ignore-option */\n            to: Number.MAX_VALUE,\n            /**\n             * The outer radius of the circular pane background. Can be either\n             * numeric (pixels) or a percentage string.\n             *\n             * @type     {number|string}\n             * @since    2.3.0\n             * @product  highcharts\n             */\n            outerRadius: '105%'\n        };\n        this.init(options, chart);\n    }\n    /**\n     * Initialize the Pane object\n     *\n     * @private\n     * @function Highcharts.Pane#init\n     *\n     * @param {Highcharts.PaneOptions} options\n     *\n     * @param {Highcharts.Chart} chart\n     */\n    Pane.prototype.init = function (options, chart) {\n        this.chart = chart;\n        this.background = [];\n        chart.pane.push(this);\n        this.setOptions(options);\n    };\n    /**\n     * @private\n     * @function Highcharts.Pane#setOptions\n     *\n     * @param {Highcharts.PaneOptions} options\n     */\n    Pane.prototype.setOptions = function (options) {\n        // Set options. Angular charts have a default background (#3318)\n        this.options = options = merge(this.defaultOptions, this.chart.angular ? { background: {} } : void 0, options);\n    };\n    /**\n     * Render the pane with its backgrounds.\n     *\n     * @private\n     * @function Highcharts.Pane#render\n     */\n    Pane.prototype.render = function () {\n        var options = this.options, backgroundOption = this.options.background, renderer = this.chart.renderer, len, i;\n        if (!this.group) {\n            this.group = renderer.g('pane-group')\n                .attr({ zIndex: options.zIndex || 0 })\n                .add();\n        }\n        this.updateCenter();\n        // Render the backgrounds\n        if (backgroundOption) {\n            backgroundOption = splat(backgroundOption);\n            len = Math.max(backgroundOption.length, this.background.length || 0);\n            for (i = 0; i < len; i++) {\n                // #6641 - if axis exists, chart is circular and apply\n                // background\n                if (backgroundOption[i] && this.axis) {\n                    this.renderBackground(merge(this.defaultBackgroundOptions, backgroundOption[i]), i);\n                }\n                else if (this.background[i]) {\n                    this.background[i] = this.background[i].destroy();\n                    this.background.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Render an individual pane background.\n     *\n     * @private\n     * @function Highcharts.Pane#renderBackground\n     *\n     * @param {Highcharts.PaneBackgroundOptions} backgroundOptions\n     *        Background options\n     *\n     * @param {number} i\n     *        The index of the background in this.backgrounds\n     */\n    Pane.prototype.renderBackground = function (backgroundOptions, i) {\n        var method = 'animate', attribs = {\n            'class': 'highcharts-pane ' + (backgroundOptions.className || '')\n        };\n        if (!this.chart.styledMode) {\n            extend(attribs, {\n                'fill': backgroundOptions.backgroundColor,\n                'stroke': backgroundOptions.borderColor,\n                'stroke-width': backgroundOptions.borderWidth\n            });\n        }\n        if (!this.background[i]) {\n            this.background[i] = this.chart.renderer\n                .path()\n                .add(this.group);\n            method = 'attr';\n        }\n        this.background[i][method]({\n            'd': this.axis.getPlotBandPath(backgroundOptions.from, backgroundOptions.to, backgroundOptions)\n        }).attr(attribs);\n    };\n    /**\n     * Gets the center for the pane and its axis.\n     *\n     * @private\n     * @function Highcharts.Pane#updateCenter\n     * @param {Highcharts.Axis} [axis]\n     */\n    Pane.prototype.updateCenter = function (axis) {\n        this.center = (axis ||\n            this.axis ||\n            {}).center = CU.getCenter.call(this);\n    };\n    /**\n     * Destroy the pane item\n     *\n     * @ignore\n     * @private\n     * @function Highcharts.Pane#destroy\n     * /\n    destroy: function () {\n        erase(this.chart.pane, this);\n        this.background.forEach(function (background) {\n            background.destroy();\n        });\n        this.background.length = 0;\n        this.group = this.group.destroy();\n    },\n    */\n    /**\n     * Update the pane item with new options\n     *\n     * @private\n     * @function Highcharts.Pane#update\n     * @param {Highcharts.PaneOptions} options\n     *        New pane options\n     * @param {boolean} [redraw]\n     */\n    Pane.prototype.update = function (options, redraw) {\n        merge(true, this.options, options);\n        this.setOptions(this.options);\n        this.render();\n        this.chart.axes.forEach(function (axis) {\n            if (axis.pane === this) {\n                axis.pane = null;\n                axis.update({}, redraw);\n            }\n        }, this);\n    };\n    return Pane;\n}());\n/**\n * Check whether element is inside or outside pane.\n * @private\n * @param  {number} x\n * Element's x coordinate\n * @param  {number} y\n * Element's y coordinate\n * @param  {Array<number>} inverted\n * `Chart.inverted` param\n * @param  {Array<number>} center\n * Pane's center (x, y) and diameter\n * @param  {number} startAngle\n * Pane's normalized start angle in radians (<-PI, PI>)\n * @param  {number} endAngle\n * Pane's normalized end angle in radians (<-PI, PI>)\n */\nfunction isInsidePane(x, y, center, startAngle, endAngle) {\n    var insideSlice = true;\n    var cx = center[0], cy = center[1];\n    var distance = Math.sqrt(Math.pow(x - cx, 2) + Math.pow(y - cy, 2));\n    if (defined(startAngle) && defined(endAngle)) {\n        // Round angle to N-decimals to avoid numeric errors\n        var angle = Math.atan2(correctFloat(y - cy, 8), correctFloat(x - cx, 8));\n        // Ignore full circle panes:\n        if (endAngle !== startAngle) {\n            // If normalized start angle is bigger than normalized end,\n            // it means angles have different signs. In such situation we\n            // check the <-PI, startAngle> and <endAngle, PI> ranges.\n            if (startAngle > endAngle) {\n                insideSlice = (angle >= startAngle &&\n                    angle <= Math.PI) || (angle <= endAngle &&\n                    angle >= -Math.PI);\n            }\n            else {\n                // In this case, we simple check if angle is within the\n                // <startAngle, endAngle> range\n                insideSlice = angle >= startAngle &&\n                    angle <= correctFloat(endAngle, 8);\n            }\n        }\n    }\n    // Round up radius because x and y values are rounded\n    return distance <= Math.ceil(center[2] / 2) && insideSlice;\n}\nChart.prototype.getHoverPane = function (eventArgs) {\n    var chart = this;\n    var hoverPane;\n    if (eventArgs) {\n        chart.pane.forEach(function (pane) {\n            var x = eventArgs.chartX - chart.plotLeft, y = eventArgs.chartY - chart.plotTop;\n            if (isInsidePane(x, y, pane.center)) {\n                hoverPane = pane;\n            }\n        });\n    }\n    return hoverPane;\n};\n// Check if (x, y) position is within pane for polar\naddEvent(Chart, 'afterIsInsidePlot', function (e) {\n    var _a;\n    var chart = this;\n    if (chart.polar) {\n        if (e.options.inverted) {\n            _a = [e.y, e.x], e.x = _a[0], e.y = _a[1];\n        }\n        e.isInsidePlot = chart.pane.some(function (pane) { return isInsidePane(e.x, e.y, pane.center, pane.axis && pane.axis.normalizedStartAngleRad, pane.axis && pane.axis.normalizedEndAngleRad); });\n    }\n});\naddEvent(Pointer, 'beforeGetHoverData', function (eventArgs) {\n    var chart = this.chart;\n    if (chart.polar) {\n        // Find pane we are currently hovering over.\n        chart.hoverPane = chart.getHoverPane(eventArgs);\n        // Edit filter method to handle polar\n        eventArgs.filter = function (s) {\n            return (s.visible &&\n                !(!eventArgs.shared && s.directTouch) && // #3821\n                pick(s.options.enableMouseTracking, true) &&\n                (!chart.hoverPane || s.xAxis.pane === chart.hoverPane));\n        };\n    }\n    else {\n        chart.hoverPane = void 0;\n    }\n});\naddEvent(Pointer, 'afterGetHoverData', function (eventArgs) {\n    var chart = this.chart;\n    if (eventArgs.hoverPoint &&\n        eventArgs.hoverPoint.plotX &&\n        eventArgs.hoverPoint.plotY &&\n        chart.hoverPane &&\n        !isInsidePane(eventArgs.hoverPoint.plotX, eventArgs.hoverPoint.plotY, chart.hoverPane.center)) {\n        eventArgs.hoverPoint = void 0;\n    }\n});\nH.Pane = Pane;\nexport default H.Pane;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar _a = SeriesRegistry.seriesTypes.area.prototype, AreaPoint = _a.pointClass, areaProto = _a.pointClass.prototype;\nimport U from '../../Core/Utilities.js';\nvar defined = U.defined, isNumber = U.isNumber;\n/* *\n *\n *  Class\n *\n * */\nvar AreaRangePoint = /** @class */ (function (_super) {\n    __extends(AreaRangePoint, _super);\n    function AreaRangePoint() {\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Range series only. The high or maximum value for each data point.\n         * @name Highcharts.Point#high\n         * @type {number|undefined}\n         */\n        _this.high = void 0;\n        /**\n         * Range series only. The low or minimum value for each data point.\n         * @name Highcharts.Point#low\n         * @type {number|undefined}\n         */\n        _this.low = void 0;\n        _this.options = void 0;\n        _this.plotX = void 0;\n        _this.series = void 0;\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    AreaRangePoint.prototype.setState = function () {\n        var prevState = this.state, series = this.series, isPolar = series.chart.polar;\n        if (!defined(this.plotHigh)) {\n            // Boost doesn't calculate plotHigh\n            this.plotHigh = series.yAxis.toPixels(this.high, true);\n        }\n        if (!defined(this.plotLow)) {\n            // Boost doesn't calculate plotLow\n            this.plotLow = this.plotY = series.yAxis.toPixels(this.low, true);\n        }\n        if (series.stateMarkerGraphic) {\n            series.lowerStateMarkerGraphic = series.stateMarkerGraphic;\n            series.stateMarkerGraphic = series.upperStateMarkerGraphic;\n        }\n        // Change state also for the top marker\n        this.graphic = this.graphics && this.graphics[1];\n        this.plotY = this.plotHigh;\n        if (isPolar && isNumber(this.plotHighX)) {\n            this.plotX = this.plotHighX;\n        }\n        // Top state:\n        areaProto.setState.apply(this, arguments);\n        this.state = prevState;\n        // Now restore defaults\n        this.plotY = this.plotLow;\n        this.graphic = this.graphics && this.graphics[0];\n        if (isPolar && isNumber(this.plotLowX)) {\n            this.plotX = this.plotLowX;\n        }\n        if (series.stateMarkerGraphic) {\n            series.upperStateMarkerGraphic = series.stateMarkerGraphic;\n            series.stateMarkerGraphic = series.lowerStateMarkerGraphic;\n            // Lower marker is stored at stateMarkerGraphic\n            // to avoid reference duplication (#7021)\n            series.lowerStateMarkerGraphic = void 0;\n        }\n        areaProto.setState.apply(this, arguments);\n    };\n    AreaRangePoint.prototype.haloPath = function () {\n        var isPolar = this.series.chart.polar;\n        var path = [];\n        // Bottom halo\n        this.plotY = this.plotLow;\n        if (isPolar && isNumber(this.plotLowX)) {\n            this.plotX = this.plotLowX;\n        }\n        if (this.isInside) {\n            path = areaProto.haloPath.apply(this, arguments);\n        }\n        // Top halo\n        this.plotY = this.plotHigh;\n        if (isPolar && isNumber(this.plotHighX)) {\n            this.plotX = this.plotHighX;\n        }\n        if (this.isTopInside) {\n            path = path.concat(areaProto.haloPath.apply(this, arguments));\n        }\n        return path;\n    };\n    AreaRangePoint.prototype.isValid = function () {\n        return isNumber(this.low) && isNumber(this.high);\n    };\n    return AreaRangePoint;\n}(AreaPoint));\n/* *\n *\n *  Default Export\n *\n * */\nexport default AreaRangePoint;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport AreaRangePoint from './AreaRangePoint.js';\nimport H from '../../Core/Globals.js';\nvar noop = H.noop;\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar _a = SeriesRegistry.seriesTypes, AreaSeries = _a.area, areaProto = _a.area.prototype, columnProto = _a.column.prototype;\nimport U from '../../Core/Utilities.js';\nvar addEvent = U.addEvent, defined = U.defined, extend = U.extend, isArray = U.isArray, isNumber = U.isNumber, pick = U.pick, merge = U.merge;\n/* *\n *\n *  Constants\n *\n * */\n/**\n * The area range series is a carteseian series with higher and lower values for\n * each point along an X axis, where the area between the values is shaded.\n *\n * @sample {highcharts} highcharts/demo/arearange/\n *         Area range chart\n * @sample {highstock} stock/demo/arearange/\n *         Area range chart\n *\n * @extends      plotOptions.area\n * @product      highcharts highstock\n * @excluding    stack, stacking\n * @requires     highcharts-more\n * @optionparent plotOptions.arearange\n *\n * @private\n */\nvar areaRangeSeriesOptions = {\n    /**\n     * @see [fillColor](#plotOptions.arearange.fillColor)\n     * @see [fillOpacity](#plotOptions.arearange.fillOpacity)\n     *\n     * @apioption plotOptions.arearange.color\n     */\n    /**\n     * @default   low\n     * @apioption plotOptions.arearange.colorKey\n     */\n    /**\n     * @see [color](#plotOptions.arearange.color)\n     * @see [fillOpacity](#plotOptions.arearange.fillOpacity)\n     *\n     * @apioption plotOptions.arearange.fillColor\n     */\n    /**\n     * @see [color](#plotOptions.arearange.color)\n     * @see [fillColor](#plotOptions.arearange.fillColor)\n     *\n     * @default   {highcharts} 0.75\n     * @default   {highstock} 0.75\n     * @apioption plotOptions.arearange.fillOpacity\n     */\n    /**\n     * Whether to apply a drop shadow to the graph line. Since 2.3 the\n     * shadow can be an object configuration containing `color`, `offsetX`,\n     * `offsetY`, `opacity` and `width`.\n     *\n     * @type      {boolean|Highcharts.ShadowOptionsObject}\n     * @product   highcharts\n     * @apioption plotOptions.arearange.shadow\n     */\n    /**\n     * Pixel width of the arearange graph line.\n     *\n     * @since 2.3.0\n     *\n     * @private\n     */\n    lineWidth: 1,\n    /**\n     * @type {number|null}\n     */\n    threshold: null,\n    tooltip: {\n        pointFormat: '<span style=\"color:{series.color}\">\\u25CF</span> ' +\n            '{series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>'\n    },\n    /**\n     * Whether the whole area or just the line should respond to mouseover\n     * tooltips and other mouse or touch events.\n     *\n     * @since 2.3.0\n     *\n     * @private\n     */\n    trackByArea: true,\n    /**\n     * Extended data labels for range series types. Range series data\n     * labels use no `x` and `y` options. Instead, they have `xLow`,\n     * `xHigh`, `yLow` and `yHigh` options to allow the higher and lower\n     * data label sets individually.\n     *\n     * @declare Highcharts.SeriesAreaRangeDataLabelsOptionsObject\n     * @exclude x, y\n     * @since   2.3.0\n     * @product highcharts highstock\n     *\n     * @private\n     */\n    dataLabels: {\n        align: void 0,\n        verticalAlign: void 0,\n        /**\n         * X offset of the lower data labels relative to the point value.\n         *\n         * @sample highcharts/plotoptions/arearange-datalabels/\n         *         Data labels on range series\n         * @sample highcharts/plotoptions/arearange-datalabels/\n         *         Data labels on range series\n         */\n        xLow: 0,\n        /**\n         * X offset of the higher data labels relative to the point value.\n         *\n         * @sample highcharts/plotoptions/arearange-datalabels/\n         *         Data labels on range series\n         */\n        xHigh: 0,\n        /**\n         * Y offset of the lower data labels relative to the point value.\n         *\n         * @sample highcharts/plotoptions/arearange-datalabels/\n         *         Data labels on range series\n         */\n        yLow: 0,\n        /**\n         * Y offset of the higher data labels relative to the point value.\n         *\n         * @sample highcharts/plotoptions/arearange-datalabels/\n         *         Data labels on range series\n         */\n        yHigh: 0\n    }\n};\n/* *\n *\n *  Class\n *\n * */\n/**\n * The AreaRange series type.\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.arearange\n *\n * @augments Highcharts.Series\n */\nvar AreaRangeSeries = /** @class */ (function (_super) {\n    __extends(AreaRangeSeries, _super);\n    function AreaRangeSeries() {\n        /**\n         *\n         *  Static Properties\n         *\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.data = void 0;\n        _this.options = void 0;\n        _this.points = void 0;\n        _this.lowerStateMarkerGraphic = void 0;\n        _this.xAxis = void 0;\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    AreaRangeSeries.prototype.toYData = function (point) {\n        return [point.low, point.high];\n    };\n    /**\n     * Translate a point's plotHigh from the internal angle and radius measures\n     * to true plotHigh coordinates. This is an addition of the toXY method\n     * found in Polar.js, because it runs too early for arearanges to be\n     * considered (#3419).\n     * @private\n     */\n    AreaRangeSeries.prototype.highToXY = function (point) {\n        // Find the polar plotX and plotY\n        var chart = this.chart, xy = this.xAxis.postTranslate(point.rectPlotX || 0, this.yAxis.len - (point.plotHigh || 0));\n        point.plotHighX = xy.x - chart.plotLeft;\n        point.plotHigh = xy.y - chart.plotTop;\n        point.plotLowX = point.plotX;\n    };\n    /**\n     * Extend the line series' getSegmentPath method by applying the segment\n     * path to both lower and higher values of the range.\n     * @private\n     */\n    AreaRangeSeries.prototype.getGraphPath = function (points) {\n        var highPoints = [], highAreaPoints = [], getGraphPath = areaProto.getGraphPath, options = this.options, polar = this.chart.polar, connectEnds = polar && options.connectEnds !== false, connectNulls = options.connectNulls;\n        var i, point, pointShim, step = options.step;\n        points = points || this.points;\n        // Create the top line and the top part of the area fill. The area fill\n        // compensates for null points by drawing down to the lower graph,\n        // moving across the null gap and starting again at the lower graph.\n        i = points.length;\n        while (i--) {\n            point = points[i];\n            // Support for polar\n            var highAreaPoint = polar ? {\n                plotX: point.rectPlotX,\n                plotY: point.yBottom,\n                doCurve: false // #5186, gaps in areasplinerange fill\n            } : {\n                plotX: point.plotX,\n                plotY: point.plotY,\n                doCurve: false // #5186, gaps in areasplinerange fill\n            };\n            if (!point.isNull &&\n                !connectEnds &&\n                !connectNulls &&\n                (!points[i + 1] || points[i + 1].isNull)) {\n                highAreaPoints.push(highAreaPoint);\n            }\n            pointShim = {\n                polarPlotY: point.polarPlotY,\n                rectPlotX: point.rectPlotX,\n                yBottom: point.yBottom,\n                // plotHighX is for polar charts\n                plotX: pick(point.plotHighX, point.plotX),\n                plotY: point.plotHigh,\n                isNull: point.isNull\n            };\n            highAreaPoints.push(pointShim);\n            highPoints.push(pointShim);\n            if (!point.isNull &&\n                !connectEnds &&\n                !connectNulls &&\n                (!points[i - 1] || points[i - 1].isNull)) {\n                highAreaPoints.push(highAreaPoint);\n            }\n        }\n        // Get the paths\n        var lowerPath = getGraphPath.call(this, points);\n        if (step) {\n            if (step === true) {\n                step = 'left';\n            }\n            options.step = {\n                left: 'right',\n                center: 'center',\n                right: 'left'\n            }[step]; // swap for reading in getGraphPath\n        }\n        var higherPath = getGraphPath.call(this, highPoints);\n        var higherAreaPath = getGraphPath.call(this, highAreaPoints);\n        options.step = step;\n        // Create a line on both top and bottom of the range\n        var linePath = [].concat(lowerPath, higherPath);\n        // For the area path, we need to change the 'move' statement into\n        // 'lineTo'\n        if (!this.chart.polar &&\n            higherAreaPath[0] &&\n            higherAreaPath[0][0] === 'M') {\n            // This probably doesn't work for spline\n            higherAreaPath[0] = [\n                'L',\n                higherAreaPath[0][1],\n                higherAreaPath[0][2]\n            ];\n        }\n        this.graphPath = linePath;\n        this.areaPath = lowerPath.concat(higherAreaPath);\n        // Prepare for sideways animation\n        linePath.isArea = true;\n        linePath.xMap = lowerPath.xMap;\n        this.areaPath.xMap = lowerPath.xMap;\n        return linePath;\n    };\n    /**\n     * Extend the basic drawDataLabels method by running it for both lower and\n     * higher values.\n     * @private\n     */\n    AreaRangeSeries.prototype.drawDataLabels = function () {\n        var data = this.points, length = data.length, originalDataLabels = [], dataLabelOptions = this.options.dataLabels, inverted = this.chart.inverted;\n        var i, point, up, upperDataLabelOptions, lowerDataLabelOptions;\n        if (dataLabelOptions) {\n            // Split into upper and lower options. If data labels is an array,\n            // the first element is the upper label, the second is the lower.\n            //\n            // TODO: We want to change this and allow multiple labels for both\n            // upper and lower values in the future - introducing some options\n            // for which point value to use as Y for the dataLabel, so that this\n            // could be handled in Series.drawDataLabels. This would also\n            // improve performance since we now have to loop over all the points\n            // multiple times to work around the data label logic.\n            if (isArray(dataLabelOptions)) {\n                upperDataLabelOptions = dataLabelOptions[0] || {\n                    enabled: false\n                };\n                lowerDataLabelOptions = dataLabelOptions[1] || {\n                    enabled: false\n                };\n            }\n            else {\n                // Make copies\n                upperDataLabelOptions = extend({}, dataLabelOptions);\n                upperDataLabelOptions.x = dataLabelOptions.xHigh;\n                upperDataLabelOptions.y = dataLabelOptions.yHigh;\n                lowerDataLabelOptions = extend({}, dataLabelOptions);\n                lowerDataLabelOptions.x = dataLabelOptions.xLow;\n                lowerDataLabelOptions.y = dataLabelOptions.yLow;\n            }\n            // Draw upper labels\n            if (upperDataLabelOptions.enabled || this._hasPointLabels) {\n                // Set preliminary values for plotY and dataLabel\n                // and draw the upper labels\n                i = length;\n                while (i--) {\n                    point = data[i];\n                    if (point) {\n                        var _a = point.plotHigh, plotHigh = _a === void 0 ? 0 : _a, _b = point.plotLow, plotLow = _b === void 0 ? 0 : _b;\n                        up = upperDataLabelOptions.inside ?\n                            plotHigh < plotLow :\n                            plotHigh > plotLow;\n                        point.y = point.high;\n                        point._plotY = point.plotY;\n                        point.plotY = plotHigh;\n                        // Store original data labels and set preliminary label\n                        // objects to be picked up in the uber method\n                        originalDataLabels[i] = point.dataLabel;\n                        point.dataLabel = point.dataLabelUpper;\n                        // Set the default offset\n                        point.below = up;\n                        if (inverted) {\n                            if (!upperDataLabelOptions.align) {\n                                upperDataLabelOptions.align = up ?\n                                    'right' : 'left';\n                            }\n                        }\n                        else {\n                            if (!upperDataLabelOptions.verticalAlign) {\n                                upperDataLabelOptions.verticalAlign = up ?\n                                    'top' :\n                                    'bottom';\n                            }\n                        }\n                    }\n                }\n                this.options.dataLabels = upperDataLabelOptions;\n                if (areaProto.drawDataLabels) {\n                    // #1209:\n                    areaProto.drawDataLabels.apply(this, arguments);\n                }\n                // Reset state after the upper labels were created. Move\n                // it to point.dataLabelUpper and reassign the originals.\n                // We do this here to support not drawing a lower label.\n                i = length;\n                while (i--) {\n                    point = data[i];\n                    if (point) {\n                        point.dataLabelUpper = point.dataLabel;\n                        point.dataLabel = originalDataLabels[i];\n                        delete point.dataLabels;\n                        point.y = point.low;\n                        point.plotY = point._plotY;\n                    }\n                }\n            }\n            // Draw lower labels\n            if (lowerDataLabelOptions.enabled || this._hasPointLabels) {\n                i = length;\n                while (i--) {\n                    point = data[i];\n                    if (point) {\n                        var _c = point.plotHigh, plotHigh = _c === void 0 ? 0 : _c, _d = point.plotLow, plotLow = _d === void 0 ? 0 : _d;\n                        up = lowerDataLabelOptions.inside ?\n                            plotHigh < plotLow :\n                            plotHigh > plotLow;\n                        // Set the default offset\n                        point.below = !up;\n                        if (inverted) {\n                            if (!lowerDataLabelOptions.align) {\n                                lowerDataLabelOptions.align = up ?\n                                    'left' : 'right';\n                            }\n                        }\n                        else {\n                            if (!lowerDataLabelOptions.verticalAlign) {\n                                lowerDataLabelOptions.verticalAlign = up ?\n                                    'bottom' :\n                                    'top';\n                            }\n                        }\n                    }\n                }\n                this.options.dataLabels = lowerDataLabelOptions;\n                if (areaProto.drawDataLabels) {\n                    areaProto.drawDataLabels.apply(this, arguments);\n                }\n            }\n            // Merge upper and lower into point.dataLabels for later destroying\n            if (upperDataLabelOptions.enabled) {\n                i = length;\n                while (i--) {\n                    point = data[i];\n                    if (point) {\n                        point.dataLabels = [\n                            point.dataLabelUpper,\n                            point.dataLabel\n                        ].filter(function (label) {\n                            return !!label;\n                        });\n                    }\n                }\n            }\n            // Reset options\n            this.options.dataLabels = dataLabelOptions;\n        }\n    };\n    AreaRangeSeries.prototype.alignDataLabel = function () {\n        columnProto.alignDataLabel.apply(this, arguments);\n    };\n    AreaRangeSeries.prototype.drawPoints = function () {\n        var series = this, pointLength = series.points.length;\n        var i, point;\n        // Draw bottom points\n        areaProto.drawPoints.apply(series, arguments);\n        // Prepare drawing top points\n        i = 0;\n        while (i < pointLength) {\n            point = series.points[i];\n            /**\n             * Array for multiple SVG graphics representing the point in the\n             * chart. Only used in cases where the point can not be represented\n             * by a single graphic.\n             *\n             * @see Highcharts.Point#graphic\n             *\n             * @name Highcharts.Point#graphics\n             * @type {Array<Highcharts.SVGElement>|undefined}\n             */\n            point.graphics = point.graphics || [];\n            // Save original props to be overridden by temporary props for top\n            // points\n            point.origProps = {\n                plotY: point.plotY,\n                plotX: point.plotX,\n                isInside: point.isInside,\n                negative: point.negative,\n                zone: point.zone,\n                y: point.y\n            };\n            if (point.graphic || point.graphics[0]) {\n                point.graphics[0] = point.graphic;\n            }\n            point.graphic = point.graphics[1];\n            point.plotY = point.plotHigh;\n            if (defined(point.plotHighX)) {\n                point.plotX = point.plotHighX;\n            }\n            point.y = pick(point.high, point.origProps.y); // #15523\n            point.negative = point.y < (series.options.threshold || 0);\n            if (series.zones.length) {\n                point.zone = point.getZone();\n            }\n            if (!series.chart.polar) {\n                point.isInside = point.isTopInside = (typeof point.plotY !== 'undefined' &&\n                    point.plotY >= 0 &&\n                    point.plotY <= series.yAxis.len && // #3519\n                    point.plotX >= 0 &&\n                    point.plotX <= series.xAxis.len);\n            }\n            i++;\n        }\n        // Draw top points\n        areaProto.drawPoints.apply(series, arguments);\n        // Reset top points preliminary modifications\n        i = 0;\n        while (i < pointLength) {\n            point = series.points[i];\n            point.graphics = point.graphics || [];\n            if (point.graphic || point.graphics[1]) {\n                point.graphics[1] = point.graphic;\n            }\n            point.graphic = point.graphics[0];\n            if (point.origProps) {\n                extend(point, point.origProps);\n                delete point.origProps;\n            }\n            i++;\n        }\n    };\n    AreaRangeSeries.defaultOptions = merge(AreaSeries.defaultOptions, areaRangeSeriesOptions);\n    return AreaRangeSeries;\n}(AreaSeries));\naddEvent(AreaRangeSeries, 'afterTranslate', function () {\n    // Set plotLow and plotHigh\n    var _this = this;\n    // Rules out lollipop, but lollipop should not inherit range series in the\n    // first place\n    if (this.pointArrayMap.join(',') === 'low,high') {\n        this.points.forEach(function (point) {\n            var high = point.high, plotY = point.plotY;\n            if (point.isNull) {\n                point.plotY = void 0;\n            }\n            else {\n                point.plotLow = plotY;\n                // Calculate plotHigh value based on each yAxis scale (#15752)\n                point.plotHigh = isNumber(high) ? _this.yAxis.translate(_this.dataModify ?\n                    _this.dataModify.modifyValue(high) : high, false, true, void 0, true) : void 0;\n                if (_this.dataModify) {\n                    point.yBottom = point.plotHigh;\n                }\n            }\n        });\n    }\n}, { order: 0 });\naddEvent(AreaRangeSeries, 'afterTranslate', function () {\n    var _this = this;\n    var inverted = this.chart.inverted;\n    this.points.forEach(function (point) {\n        // Postprocessing after the PolarComposition's afterTranslate\n        if (_this.chart.polar) {\n            _this.highToXY(point);\n            point.plotLow = point.plotY;\n            point.tooltipPos = [\n                ((point.plotHighX || 0) + (point.plotLowX || 0)) / 2,\n                ((point.plotHigh || 0) + (point.plotLow || 0)) / 2\n            ];\n            // Put the tooltip in the middle of the range\n        }\n        else {\n            var tooltipPos = point.pos(false, point.plotLow), posHigh = point.pos(false, point.plotHigh);\n            if (tooltipPos && posHigh) {\n                tooltipPos[0] = (tooltipPos[0] + posHigh[0]) / 2;\n                tooltipPos[1] = (tooltipPos[1] + posHigh[1]) / 2;\n            }\n            point.tooltipPos = tooltipPos;\n        }\n    });\n}, { order: 3 });\nextend(AreaRangeSeries.prototype, {\n    deferTranslatePolar: true,\n    pointArrayMap: ['low', 'high'],\n    pointClass: AreaRangePoint,\n    pointValKey: 'low',\n    setStackedPoints: noop\n});\nSeriesRegistry.registerSeriesType('arearange', AreaRangeSeries);\n/* *\n *\n *  Default Export\n *\n * */\nexport default AreaRangeSeries;\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A `arearange` series. If the [type](#series.arearange.type) option is not\n * specified, it is inherited from [chart.type](#chart.type).\n *\n *\n * @extends   series,plotOptions.arearange\n * @excluding dataParser, dataURL, stack, stacking\n * @product   highcharts highstock\n * @requires  highcharts-more\n * @apioption series.arearange\n */\n/**\n * @see [fillColor](#series.arearange.fillColor)\n * @see [fillOpacity](#series.arearange.fillOpacity)\n *\n * @apioption series.arearange.color\n */\n/**\n * An array of data points for the series. For the `arearange` series type,\n * points can be given in the following ways:\n *\n * 1.  An array of arrays with 3 or 2 values. In this case, the values\n *     correspond to `x,low,high`. If the first value is a string, it is\n *     applied as the name of the point, and the `x` value is inferred.\n *     The `x` value can also be omitted, in which case the inner arrays\n *     should be of length 2\\. Then the `x` value is automatically calculated,\n *     either starting at 0 and incremented by 1, or from `pointStart`\n *     and `pointInterval` given in the series options.\n *     ```js\n *     data: [\n *         [0, 8, 3],\n *         [1, 1, 1],\n *         [2, 6, 8]\n *     ]\n *     ```\n *\n * 2.  An array of objects with named values. The following snippet shows only a\n *     few settings, see the complete options set below. If the total number of\n *     data points exceeds the series'\n *     [turboThreshold](#series.arearange.turboThreshold),\n *     this option is not available.\n *     ```js\n *     data: [{\n *         x: 1,\n *         low: 9,\n *         high: 0,\n *         name: \"Point2\",\n *         color: \"#00FF00\"\n *     }, {\n *         x: 1,\n *         low: 3,\n *         high: 4,\n *         name: \"Point1\",\n *         color: \"#FF00FF\"\n *     }]\n *     ```\n *\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<Array<(number|string),number>|Array<(number|string),number,number>|*>}\n * @extends   series.line.data\n * @excluding marker, y\n * @product   highcharts highstock\n * @apioption series.arearange.data\n */\n/**\n * @extends   series.arearange.dataLabels\n * @product   highcharts highstock\n * @apioption series.arearange.data.dataLabels\n */\n/**\n * @see [color](#series.arearange.color)\n * @see [fillOpacity](#series.arearange.fillOpacity)\n *\n * @apioption series.arearange.fillColor\n */\n/**\n * @see [color](#series.arearange.color)\n * @see [fillColor](#series.arearange.fillColor)\n *\n * @default   {highcharts} 0.75\n * @default   {highstock} 0.75\n * @apioption series.arearange.fillOpacity\n */\n/**\n * The high or maximum value for each data point.\n *\n * @type      {number}\n * @product   highcharts highstock\n * @apioption series.arearange.data.high\n */\n/**\n * The low or minimum value for each data point.\n *\n * @type      {number}\n * @product   highcharts highstock\n * @apioption series.arearange.data.low\n */\n''; // adds doclets above to tranpiled file\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport AreaRangeSeries from '../AreaRange/AreaRangeSeries.js';\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar splineProto = SeriesRegistry.seriesTypes.spline.prototype;\nimport U from '../../Core/Utilities.js';\nvar merge = U.merge, extend = U.extend;\n/* *\n *\n *  Class\n *\n * */\n/**\n * The areasplinerange series type.\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.areasplinerange\n *\n * @augments Highcharts.Series\n */\nvar AreaSplineRangeSeries = /** @class */ (function (_super) {\n    __extends(AreaSplineRangeSeries, _super);\n    function AreaSplineRangeSeries() {\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.options = void 0;\n        _this.data = void 0;\n        _this.points = void 0;\n        return _this;\n    }\n    AreaSplineRangeSeries.defaultOptions = merge(AreaRangeSeries.defaultOptions);\n    return AreaSplineRangeSeries;\n}(AreaRangeSeries));\nextend(AreaSplineRangeSeries.prototype, {\n    getPointSpline: splineProto.getPointSpline\n});\nSeriesRegistry.registerSeriesType('areasplinerange', AreaSplineRangeSeries);\n/* *\n *\n *  Default Export\n *\n * */\nexport default AreaSplineRangeSeries;\n/* *\n *\n *  API Options\n *\n * */\n/**\n * The area spline range is a cartesian series type with higher and\n * lower Y values along an X axis. The area inside the range is colored, and\n * the graph outlining the area is a smoothed spline.\n *\n * @sample {highstock|highstock} stock/demo/areasplinerange/\n *         Area spline range\n *\n * @extends   plotOptions.arearange\n * @since     2.3.0\n * @excluding step, boostThreshold, boostBlending\n * @product   highcharts highstock\n * @requires  highcharts-more\n * @apioption plotOptions.areasplinerange\n */\n/**\n * @see [fillColor](#plotOptions.areasplinerange.fillColor)\n * @see [fillOpacity](#plotOptions.areasplinerange.fillOpacity)\n *\n * @apioption plotOptions.areasplinerange.color\n */\n/**\n * @see [color](#plotOptions.areasplinerange.color)\n * @see [fillOpacity](#plotOptions.areasplinerange.fillOpacity)\n *\n * @apioption plotOptions.areasplinerange.fillColor\n */\n/**\n * @see [color](#plotOptions.areasplinerange.color)\n * @see [fillColor](#plotOptions.areasplinerange.fillColor)\n *\n * @default   0.75\n * @apioption plotOptions.areasplinerange.fillOpacity\n */\n/**\n * A `areasplinerange` series. If the [type](#series.areasplinerange.type)\n * option is not specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.areasplinerange\n * @excluding dataParser, dataURL, stack, step, boostThreshold, boostBlending\n * @product   highcharts highstock\n * @requires  highcharts-more\n * @apioption series.areasplinerange\n */\n/**\n * @see [fillColor](#series.areasplinerange.fillColor)\n * @see [fillOpacity](#series.areasplinerange.fillOpacity)\n *\n * @apioption series.areasplinerange.color\n */\n/**\n * An array of data points for the series. For the `areasplinerange`\n * series type, points can be given in the following ways:\n *\n * 1. An array of arrays with 3 or 2 values. In this case, the values correspond\n *    to `x,low,high`. If the first value is a string, it is applied as the name\n *    of the point, and the `x` value is inferred. The `x` value can also be\n *    omitted, in which case the inner arrays should be of length 2\\. Then the\n *    `x` value is automatically calculated, either starting at 0 and\n *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n *    series options.\n *    ```js\n *    data: [\n *        [0, 0, 5],\n *        [1, 9, 1],\n *        [2, 5, 2]\n *    ]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.areasplinerange.turboThreshold), this option is\n *    not available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        low: 5,\n *        high: 0,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        low: 4,\n *        high: 1,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<Array<(number|string),number>|Array<(number|string),number,number>|*>}\n * @extends   series.arearange.data\n * @product   highcharts highstock\n * @apioption series.areasplinerange.data\n */\n/**\n * @see [color](#series.areasplinerange.color)\n * @see [fillOpacity](#series.areasplinerange.fillOpacity)\n *\n * @apioption series.areasplinerange.fillColor\n */\n/**\n * @see [color](#series.areasplinerange.color)\n * @see [fillColor](#series.areasplinerange.fillColor)\n *\n * @default   0.75\n * @apioption series.areasplinerange.fillOpacity\n */\n''; // adds doclets above to transpiled file\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ColumnSeries from '../Column/ColumnSeries.js';\nimport H from '../../Core/Globals.js';\nvar noop = H.noop;\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nimport U from '../../Core/Utilities.js';\nvar extend = U.extend, merge = U.merge, pick = U.pick;\n/**\n * The boxplot series type.\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes#boxplot\n *\n * @augments Highcharts.Series\n */\n/* *\n *\n *  Class\n *\n * */\nvar BoxPlotSeries = /** @class */ (function (_super) {\n    __extends(BoxPlotSeries, _super);\n    function BoxPlotSeries() {\n        /* *\n         *\n         * Static Properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /* *\n         *\n         * Properties\n         *\n         * */\n        _this.data = void 0;\n        _this.options = void 0;\n        _this.points = void 0;\n        return _this;\n    }\n    /* *\n     *\n     * Functions\n     *\n     * */\n    // Get presentational attributes\n    BoxPlotSeries.prototype.pointAttribs = function () {\n        // No attributes should be set on point.graphic which is the group\n        return {};\n    };\n    // Translate data points from raw values x and y to plotX and plotY\n    BoxPlotSeries.prototype.translate = function () {\n        var series = this, yAxis = series.yAxis, pointArrayMap = series.pointArrayMap;\n        _super.prototype.translate.apply(series);\n        // do the translation on each point dimension\n        series.points.forEach(function (point) {\n            pointArrayMap.forEach(function (key) {\n                if (point[key] !== null) {\n                    point[key + 'Plot'] = yAxis.translate(point[key], 0, 1, 0, 1);\n                }\n            });\n            point.plotHigh = point.highPlot; // For data label validation\n        });\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Draw the data points\n     * @private\n     */\n    BoxPlotSeries.prototype.drawPoints = function () {\n        var series = this, points = series.points, options = series.options, chart = series.chart, renderer = chart.renderer, q1Plot, q3Plot, highPlot, lowPlot, medianPlot, medianPath, crispCorr, crispX = 0, boxPath, width, left, right, halfWidth, \n        // error bar inherits this series type but doesn't do quartiles\n        doQuartiles = series.doQuartiles !== false, pointWiskerLength, whiskerLength = series.options.whiskerLength;\n        points.forEach(function (point) {\n            var graphic = point.graphic, verb = graphic ? 'animate' : 'attr', shapeArgs = point.shapeArgs, boxAttr = {}, stemAttr = {}, whiskersAttr = {}, medianAttr = {}, color = point.color || series.color;\n            if (typeof point.plotY !== 'undefined') {\n                // crisp vector coordinates\n                width = Math.round(shapeArgs.width);\n                left = Math.floor(shapeArgs.x);\n                right = left + width;\n                halfWidth = Math.round(width / 2);\n                q1Plot = Math.floor(doQuartiles ? point.q1Plot : point.lowPlot);\n                q3Plot = Math.floor(doQuartiles ? point.q3Plot : point.lowPlot);\n                highPlot = Math.floor(point.highPlot);\n                lowPlot = Math.floor(point.lowPlot);\n                if (!graphic) {\n                    point.graphic = graphic = renderer.g('point')\n                        .add(series.group);\n                    point.stem = renderer.path()\n                        .addClass('highcharts-boxplot-stem')\n                        .add(graphic);\n                    if (whiskerLength) {\n                        point.whiskers = renderer.path()\n                            .addClass('highcharts-boxplot-whisker')\n                            .add(graphic);\n                    }\n                    if (doQuartiles) {\n                        point.box = renderer.path(boxPath)\n                            .addClass('highcharts-boxplot-box')\n                            .add(graphic);\n                    }\n                    point.medianShape = renderer.path(medianPath)\n                        .addClass('highcharts-boxplot-median')\n                        .add(graphic);\n                }\n                if (!chart.styledMode) {\n                    // Stem attributes\n                    stemAttr.stroke =\n                        point.stemColor || options.stemColor || color;\n                    stemAttr['stroke-width'] = pick(point.stemWidth, options.stemWidth, options.lineWidth);\n                    stemAttr.dashstyle = (point.stemDashStyle ||\n                        options.stemDashStyle ||\n                        options.dashStyle);\n                    point.stem.attr(stemAttr);\n                    // Whiskers attributes\n                    if (whiskerLength) {\n                        whiskersAttr.stroke = (point.whiskerColor ||\n                            options.whiskerColor ||\n                            color);\n                        whiskersAttr['stroke-width'] = pick(point.whiskerWidth, options.whiskerWidth, options.lineWidth);\n                        whiskersAttr.dashstyle = (point.whiskerDashStyle ||\n                            options.whiskerDashStyle ||\n                            options.dashStyle);\n                        point.whiskers.attr(whiskersAttr);\n                    }\n                    if (doQuartiles) {\n                        boxAttr.fill = (point.fillColor ||\n                            options.fillColor ||\n                            color);\n                        boxAttr.stroke = options.lineColor || color;\n                        boxAttr['stroke-width'] = options.lineWidth || 0;\n                        boxAttr.dashstyle = (point.boxDashStyle ||\n                            options.boxDashStyle ||\n                            options.dashStyle);\n                        point.box.attr(boxAttr);\n                    }\n                    // Median attributes\n                    medianAttr.stroke = (point.medianColor ||\n                        options.medianColor ||\n                        color);\n                    medianAttr['stroke-width'] = pick(point.medianWidth, options.medianWidth, options.lineWidth);\n                    medianAttr.dashstyle = (point.medianDashStyle ||\n                        options.medianDashStyle ||\n                        options.dashStyle);\n                    point.medianShape.attr(medianAttr);\n                }\n                var d = void 0;\n                // The stem\n                crispCorr = (point.stem.strokeWidth() % 2) / 2;\n                crispX = left + halfWidth + crispCorr;\n                d = [\n                    // stem up\n                    ['M', crispX, q3Plot],\n                    ['L', crispX, highPlot],\n                    // stem down\n                    ['M', crispX, q1Plot],\n                    ['L', crispX, lowPlot]\n                ];\n                point.stem[verb]({ d: d });\n                // The box\n                if (doQuartiles) {\n                    crispCorr = (point.box.strokeWidth() % 2) / 2;\n                    q1Plot = Math.floor(q1Plot) + crispCorr;\n                    q3Plot = Math.floor(q3Plot) + crispCorr;\n                    left += crispCorr;\n                    right += crispCorr;\n                    d = [\n                        ['M', left, q3Plot],\n                        ['L', left, q1Plot],\n                        ['L', right, q1Plot],\n                        ['L', right, q3Plot],\n                        ['L', left, q3Plot],\n                        ['Z']\n                    ];\n                    point.box[verb]({ d: d });\n                }\n                // The whiskers\n                if (whiskerLength) {\n                    crispCorr = (point.whiskers.strokeWidth() % 2) / 2;\n                    highPlot = highPlot + crispCorr;\n                    lowPlot = lowPlot + crispCorr;\n                    pointWiskerLength = (/%$/).test(whiskerLength) ?\n                        halfWidth * parseFloat(whiskerLength) / 100 :\n                        whiskerLength / 2;\n                    d = [\n                        // High whisker\n                        ['M', crispX - pointWiskerLength, highPlot],\n                        ['L', crispX + pointWiskerLength, highPlot],\n                        // Low whisker\n                        ['M', crispX - pointWiskerLength, lowPlot],\n                        ['L', crispX + pointWiskerLength, lowPlot]\n                    ];\n                    point.whiskers[verb]({ d: d });\n                }\n                // The median\n                medianPlot = Math.round(point.medianPlot);\n                crispCorr = (point.medianShape.strokeWidth() % 2) / 2;\n                medianPlot = medianPlot + crispCorr;\n                d = [\n                    ['M', left, medianPlot],\n                    ['L', right, medianPlot]\n                ];\n                point.medianShape[verb]({ d: d });\n            }\n        });\n    };\n    // return a plain array for speedy calculation\n    BoxPlotSeries.prototype.toYData = function (point) {\n        return [point.low, point.q1, point.median, point.q3, point.high];\n    };\n    /**\n     * A box plot is a convenient way of depicting groups of data through their\n     * five-number summaries: the smallest observation (sample minimum), lower\n     * quartile (Q1), median (Q2), upper quartile (Q3), and largest observation\n     * (sample maximum).\n     *\n     * @sample highcharts/demo/box-plot/\n     *         Box plot\n     *\n     * @extends      plotOptions.column\n     * @excluding    borderColor, borderRadius, borderWidth, groupZPadding,\n     *               states, boostThreshold, boostBlending\n     * @product      highcharts\n     * @requires     highcharts-more\n     * @optionparent plotOptions.boxplot\n     */\n    BoxPlotSeries.defaultOptions = merge(ColumnSeries.defaultOptions, {\n        /**\n         * @type {number|null}\n         */\n        threshold: null,\n        tooltip: {\n            pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b>' +\n                '{series.name}</b><br/>' +\n                'Maximum: {point.high}<br/>' +\n                'Upper quartile: {point.q3}<br/>' +\n                'Median: {point.median}<br/>' +\n                'Lower quartile: {point.q1}<br/>' +\n                'Minimum: {point.low}<br/>'\n        },\n        /**\n         * The length of the whiskers, the horizontal lines marking low and\n         * high values. It can be a numerical pixel value, or a percentage\n         * value of the box width. Set `0` to disable whiskers.\n         *\n         * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n         *         True by default\n         *\n         * @type    {number|string}\n         * @since   3.0\n         * @product highcharts\n         */\n        whiskerLength: '50%',\n        /**\n         * The fill color of the box.\n         *\n         * In styled mode, the fill color can be set with the\n         * `.highcharts-boxplot-box` class.\n         *\n         * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n         *         Box plot styling\n         *\n         * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @default #ffffff\n         * @since   3.0\n         * @product highcharts\n         */\n        fillColor: \"#ffffff\" /* Palette.backgroundColor */,\n        /**\n         * The width of the line surrounding the box. If any of\n         * [stemWidth](#plotOptions.boxplot.stemWidth),\n         * [medianWidth](#plotOptions.boxplot.medianWidth)\n         * or [whiskerWidth](#plotOptions.boxplot.whiskerWidth) are `null`,\n         * the lineWidth also applies to these lines.\n         *\n         * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n         *         Box plot styling\n         * @sample {highcharts} highcharts/plotoptions/error-bar-styling/\n         *         Error bar styling\n         *\n         * @since   3.0\n         * @product highcharts\n         */\n        lineWidth: 1,\n        /**\n         * The color of the median line. If `undefined`, the general series\n         * color applies.\n         *\n         * In styled mode, the median stroke width can be set with the\n         * `.highcharts-boxplot-median` class.\n         *\n         * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n         *         Box plot styling\n         * @sample {highcharts} highcharts/css/boxplot/\n         *         Box plot in styled mode\n         * @sample {highcharts} highcharts/plotoptions/error-bar-styling/\n         *         Error bar styling\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject}\n         * @since     3.0\n         * @product   highcharts\n         * @apioption plotOptions.boxplot.medianColor\n         */\n        /**\n         * The pixel width of the median line. If `null`, the\n         * [lineWidth](#plotOptions.boxplot.lineWidth) is used.\n         *\n         * In styled mode, the median stroke width can be set with the\n         * `.highcharts-boxplot-median` class.\n         *\n         * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n         *         Box plot styling\n         * @sample {highcharts} highcharts/css/boxplot/\n         *         Box plot in styled mode\n         *\n         * @type    {number|null}\n         * @since   3.0\n         * @product highcharts\n         */\n        medianWidth: 2,\n        /*\n        // States are not working and are removed from docs.\n        // Refer to: #2340\n        states: {\n            hover: {\n                brightness: -0.3\n            }\n        },\n        */\n        /**\n         * The color of the stem, the vertical line extending from the box to\n         * the whiskers. If `undefined`, the series color is used.\n         *\n         * In styled mode, the stem stroke can be set with the\n         * `.highcharts-boxplot-stem` class.\n         *\n         * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n         *         Box plot styling\n         * @sample {highcharts} highcharts/css/boxplot/\n         *         Box plot in styled mode\n         * @sample {highcharts} highcharts/plotoptions/error-bar-styling/\n         *         Error bar styling\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @since     3.0\n         * @product   highcharts\n         * @apioption plotOptions.boxplot.stemColor\n         */\n        /**\n         * The dash style of the box.\n         *\n         * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n         *         Box plot styling\n         * @sample {highcharts} highcharts/css/boxplot/\n         *         Box plot in styled mode\n         *\n         * @type      {Highcharts.DashStyleValue}\n         * @default   Solid\n         * @since 8.1.0\n         * @product   highcharts\n         * @apioption plotOptions.boxplot.boxDashStyle\n         */\n        /**\n         * The dash style of the median.\n         *\n         * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n         *         Box plot styling\n         * @sample {highcharts} highcharts/css/boxplot/\n         *         Box plot in styled mode\n         *\n         * @type      {Highcharts.DashStyleValue}\n         * @default   Solid\n         * @since 8.1.0\n         * @product   highcharts\n         * @apioption plotOptions.boxplot.medianDashStyle\n         */\n        /**\n         * The dash style of the stem, the vertical line extending from the\n         * box to the whiskers.\n         *\n         * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n         *         Box plot styling\n         * @sample {highcharts} highcharts/css/boxplot/\n         *         Box plot in styled mode\n         * @sample {highcharts} highcharts/plotoptions/error-bar-styling/\n         *         Error bar styling\n         *\n         * @type      {Highcharts.DashStyleValue}\n         * @default   Solid\n         * @since     3.0\n         * @product   highcharts\n         * @apioption plotOptions.boxplot.stemDashStyle\n         */\n        /**\n         * The dash style of the whiskers.\n         *\n         * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n         *         Box plot styling\n         * @sample {highcharts} highcharts/css/boxplot/\n         *         Box plot in styled mode\n         *\n         * @type      {Highcharts.DashStyleValue}\n         * @default   Solid\n         * @since 8.1.0\n         * @product   highcharts\n         * @apioption plotOptions.boxplot.whiskerDashStyle\n         */\n        /**\n         * The width of the stem, the vertical line extending from the box to\n         * the whiskers. If `undefined`, the width is inherited from the\n         * [lineWidth](#plotOptions.boxplot.lineWidth) option.\n         *\n         * In styled mode, the stem stroke width can be set with the\n         * `.highcharts-boxplot-stem` class.\n         *\n         * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n         *         Box plot styling\n         * @sample {highcharts} highcharts/css/boxplot/\n         *         Box plot in styled mode\n         * @sample {highcharts} highcharts/plotoptions/error-bar-styling/\n         *         Error bar styling\n         *\n         * @type      {number}\n         * @since     3.0\n         * @product   highcharts\n         * @apioption plotOptions.boxplot.stemWidth\n         */\n        /**\n         * @default   high\n         * @apioption plotOptions.boxplot.colorKey\n         */\n        /**\n         * The color of the whiskers, the horizontal lines marking low and high\n         * values. When `undefined`, the general series color is used.\n         *\n         * In styled mode, the whisker stroke can be set with the\n         * `.highcharts-boxplot-whisker` class .\n         *\n         * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n         *         Box plot styling\n         * @sample {highcharts} highcharts/css/boxplot/\n         *         Box plot in styled mode\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @since     3.0\n         * @product   highcharts\n         * @apioption plotOptions.boxplot.whiskerColor\n         */\n        /**\n         * The line width of the whiskers, the horizontal lines marking low and\n         * high values. When `undefined`, the general\n         * [lineWidth](#plotOptions.boxplot.lineWidth) applies.\n         *\n         * In styled mode, the whisker stroke width can be set with the\n         * `.highcharts-boxplot-whisker` class.\n         *\n         * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n         *         Box plot styling\n         * @sample {highcharts} highcharts/css/boxplot/\n         *         Box plot in styled mode\n         *\n         * @since   3.0\n         * @product highcharts\n         */\n        whiskerWidth: 2\n    });\n    return BoxPlotSeries;\n}(ColumnSeries));\nextend(BoxPlotSeries.prototype, {\n    // array point configs are mapped to this\n    pointArrayMap: ['low', 'q1', 'median', 'q3', 'high'],\n    // defines the top of the tracker\n    pointValKey: 'high',\n    // Disable data labels for box plot\n    drawDataLabels: noop,\n    setStackedPoints: noop // #3890\n});\n/* *\n *\n * Registry\n *\n * */\nSeriesRegistry.registerSeriesType('boxplot', BoxPlotSeries);\n/* *\n *\n * Default Export\n *\n * */\nexport default BoxPlotSeries;\n/* *\n *\n * API Options\n *\n * */\n/**\n * A `boxplot` series. If the [type](#series.boxplot.type) option is\n * not specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.boxplot\n * @excluding dataParser, dataURL, marker, stack, stacking, states,\n *            boostThreshold, boostBlending\n * @product   highcharts\n * @requires  highcharts-more\n * @apioption series.boxplot\n */\n/**\n * An array of data points for the series. For the `boxplot` series\n * type, points can be given in the following ways:\n *\n * 1. An array of arrays with 6 or 5 values. In this case, the values correspond\n *    to `x,low,q1,median,q3,high`. If the first value is a string, it is\n *    applied as the name of the point, and the `x` value is inferred. The `x`\n *    value can also be omitted, in which case the inner arrays should be of\n *    length 5. Then the `x` value is automatically calculated, either starting\n *    at 0 and incremented by 1, or from `pointStart` and `pointInterval` given\n *    in the series options.\n *    ```js\n *    data: [\n *        [0, 3, 0, 10, 3, 5],\n *        [1, 7, 8, 7, 2, 9],\n *        [2, 6, 9, 5, 1, 3]\n *    ]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.boxplot.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        low: 4,\n *        q1: 9,\n *        median: 9,\n *        q3: 1,\n *        high: 10,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        low: 5,\n *        q1: 7,\n *        median: 3,\n *        q3: 6,\n *        high: 2,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<Array<(number|string),number,number,number,number>|Array<(number|string),number,number,number,number,number>|*>}\n * @extends   series.line.data\n * @excluding marker\n * @product   highcharts\n * @apioption series.boxplot.data\n */\n/**\n * The `high` value for each data point, signifying the highest value\n * in the sample set. The top whisker is drawn here.\n *\n * @type      {number}\n * @product   highcharts\n * @apioption series.boxplot.data.high\n */\n/**\n * The `low` value for each data point, signifying the lowest value\n * in the sample set. The bottom whisker is drawn here.\n *\n * @type      {number}\n * @product   highcharts\n * @apioption series.boxplot.data.low\n */\n/**\n * The median for each data point. This is drawn as a line through the\n * middle area of the box.\n *\n * @type      {number}\n * @product   highcharts\n * @apioption series.boxplot.data.median\n */\n/**\n * The lower quartile for each data point. This is the bottom of the\n * box.\n *\n * @type      {number}\n * @product   highcharts\n * @apioption series.boxplot.data.q1\n */\n/**\n * The higher quartile for each data point. This is the top of the box.\n *\n * @type      {number}\n * @product   highcharts\n * @apioption series.boxplot.data.q3\n */\n/**\n * The dash style of the box.\n *\n * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n *         Box plot styling\n * @sample {highcharts} highcharts/css/boxplot/\n *         Box plot in styled mode\n *\n * @type      {Highcharts.DashStyleValue}\n * @default   Solid\n * @since 8.1.0\n * @product   highcharts\n * @apioption series.boxplot.data.boxDashStyle\n */\n/**\n * The dash style of the median.\n *\n * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n *         Box plot styling\n * @sample {highcharts} highcharts/css/boxplot/\n *         Box plot in styled mode\n *\n * @type      {Highcharts.DashStyleValue}\n * @default   Solid\n * @since 8.1.0\n * @product   highcharts\n * @apioption series.boxplot.data.medianDashStyle\n */\n/**\n * The dash style of the stem.\n *\n * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n *         Box plot styling\n * @sample {highcharts} highcharts/css/boxplot/\n *         Box plot in styled mode\n *\n * @type      {Highcharts.DashStyleValue}\n * @default   Solid\n * @since 8.1.0\n * @product   highcharts\n * @apioption series.boxplot.data.stemDashStyle\n */\n/**\n * The dash style of the whiskers.\n *\n * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n *         Box plot styling\n * @sample {highcharts} highcharts/css/boxplot/\n *         Box plot in styled mode\n *\n * @type      {Highcharts.DashStyleValue}\n * @default   Solid\n * @since 8.1.0\n * @product   highcharts\n * @apioption series.boxplot.data.whiskerDashStyle\n */\n''; // adds doclets above to transpiled file\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar _a = SeriesRegistry.seriesTypes, columnProto = _a.column.prototype.pointClass.prototype, AreaRangePoint = _a.arearange.prototype.pointClass;\nimport U from '../../Core/Utilities.js';\nvar extend = U.extend, isNumber = U.isNumber;\n/* *\n *\n *  Class\n *\n * */\nvar ColumnRangePoint = /** @class */ (function (_super) {\n    __extends(ColumnRangePoint, _super);\n    function ColumnRangePoint() {\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.options = void 0;\n        _this.series = void 0;\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    ColumnRangePoint.prototype.isValid = function () {\n        return isNumber(this.low);\n    };\n    return ColumnRangePoint;\n}(AreaRangePoint));\nextend(ColumnRangePoint.prototype, {\n    setState: columnProto.setState\n});\n/* *\n *\n *  Default Export\n *\n * */\nexport default ColumnRangePoint;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ColumnRangePoint from './ColumnRangePoint.js';\nimport H from '../../Core/Globals.js';\nvar noop = H.noop;\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar _a = SeriesRegistry.seriesTypes, AreaRangeSeries = _a.arearange, ColumnSeries = _a.column, columnProto = _a.column.prototype;\nimport U from '../../Core/Utilities.js';\nvar clamp = U.clamp, extend = U.extend, isNumber = U.isNumber, merge = U.merge, pick = U.pick;\n/* *\n *\n *  Constants\n *\n * */\n/**\n * The column range is a cartesian series type with higher and lower\n * Y values along an X axis. To display horizontal bars, set\n * [chart.inverted](#chart.inverted) to `true`.\n *\n * @sample {highcharts|highstock} highcharts/demo/columnrange/\n *         Inverted column range\n *\n * @extends      plotOptions.column\n * @since        2.3.0\n * @excluding    negativeColor, stacking, softThreshold, threshold\n * @product      highcharts highstock\n * @requires     highcharts-more\n * @optionparent plotOptions.columnrange\n */\nvar columnRangeOptions = {\n    /**\n     * Extended data labels for range series types. Range series data labels\n     * have no `x` and `y` options. Instead, they have `xLow`, `xHigh`,\n     * `yLow` and `yHigh` options to allow the higher and lower data label\n     * sets individually.\n     *\n     * @declare   Highcharts.SeriesAreaRangeDataLabelsOptionsObject\n     * @extends   plotOptions.arearange.dataLabels\n     * @since     2.3.0\n     * @product   highcharts highstock\n     * @apioption plotOptions.columnrange.dataLabels\n     */\n    pointRange: null,\n    /** @ignore-option */\n    marker: null,\n    states: {\n        hover: {\n            /** @ignore-option */\n            halo: false\n        }\n    }\n};\n/* *\n *\n *  Class\n *\n * */\n/**\n * The ColumnRangeSeries class\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.columnrange\n *\n * @augments Highcharts.Series\n */\nvar ColumnRangeSeries = /** @class */ (function (_super) {\n    __extends(ColumnRangeSeries, _super);\n    function ColumnRangeSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    ColumnRangeSeries.prototype.setOptions = function () {\n        // #14359 Prevent side-effect from stacking.\n        merge(true, arguments[0], { stacking: void 0 });\n        return AreaRangeSeries.prototype.setOptions.apply(this, arguments);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Translate data points from raw values x and y to plotX and plotY\n     * @private\n     */\n    ColumnRangeSeries.prototype.translate = function () {\n        var _this = this;\n        var yAxis = this.yAxis, xAxis = this.xAxis, startAngleRad = xAxis.startAngleRad, chart = this.chart, isRadial = this.xAxis.isRadial, safeDistance = Math.max(chart.chartWidth, chart.chartHeight) + 999;\n        var height, heightDifference, start, plotHigh, y;\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * Don't draw too far outside plot area (#6835)\n         * @private\n         */\n        function safeBounds(pixelPos) {\n            return clamp(pixelPos, -safeDistance, safeDistance);\n        }\n        columnProto.translate.apply(this);\n        // Set plotLow and plotHigh\n        this.points.forEach(function (point) {\n            var shapeArgs = point.shapeArgs || {}, minPointLength = _this.options.minPointLength, plotY = point.plotY, plotHigh = yAxis.translate(point.high, 0, 1, 0, 1);\n            if (isNumber(plotHigh) && isNumber(plotY)) {\n                point.plotHigh = safeBounds(plotHigh);\n                point.plotLow = safeBounds(plotY);\n                // adjust shape\n                y = point.plotHigh;\n                height = pick(point.rectPlotY, point.plotY) - point.plotHigh;\n                // Adjust for minPointLength\n                if (Math.abs(height) < minPointLength) {\n                    heightDifference = (minPointLength - height);\n                    height += heightDifference;\n                    y -= heightDifference / 2;\n                    // Adjust for negative ranges or reversed Y axis (#1457)\n                }\n                else if (height < 0) {\n                    height *= -1;\n                    y -= height;\n                }\n                if (isRadial && _this.polar) {\n                    start = point.barX + startAngleRad;\n                    point.shapeType = 'arc';\n                    point.shapeArgs = _this.polar.arc(y + height, y, start, start + point.pointWidth);\n                }\n                else {\n                    shapeArgs.height = height;\n                    shapeArgs.y = y;\n                    var _a = shapeArgs.x, x = _a === void 0 ? 0 : _a, _b = shapeArgs.width, width = _b === void 0 ? 0 : _b;\n                    point.tooltipPos = chart.inverted ?\n                        [\n                            yAxis.len + yAxis.pos - chart.plotLeft - y -\n                                height / 2,\n                            xAxis.len + xAxis.pos - chart.plotTop - x -\n                                width / 2,\n                            height\n                        ] : [\n                        xAxis.left - chart.plotLeft + x + width / 2,\n                        yAxis.pos - chart.plotTop + y + height / 2,\n                        height\n                    ]; // don't inherit from column tooltip position - #3372\n                }\n            }\n        });\n    };\n    // Overrides from modules that may be loaded after this module\n    // @todo move to compositions\n    // public crispCol(): BBoxObject {\n    //     return columnProto.crispCol.apply(this, arguments as any);\n    // }\n    // public drawPoints(): void {\n    //     return columnProto.drawPoints.apply(this, arguments as any);\n    // }\n    // public drawTracker(): void {\n    //     return columnProto.drawTracker.apply(this, arguments as any);\n    // }\n    // public getColumnMetrics(): ColumnMetricsObject {\n    //     return columnProto.getColumnMetrics.apply(this, arguments as any);\n    // }\n    ColumnRangeSeries.prototype.pointAttribs = function () {\n        return columnProto.pointAttribs.apply(this, arguments);\n    };\n    // public adjustForMissingColumns(): number {\n    //     return columnProto.adjustForMissingColumns.apply(this, arguments);\n    // }\n    // public animate(): void {\n    //     return columnProto.animate.apply(this, arguments as any);\n    // }\n    ColumnRangeSeries.prototype.translate3dPoints = function () {\n        return columnProto.translate3dPoints.apply(this, arguments);\n    };\n    ColumnRangeSeries.prototype.translate3dShapes = function () {\n        return columnProto.translate3dShapes.apply(this, arguments);\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    ColumnRangeSeries.defaultOptions = merge(ColumnSeries.defaultOptions, AreaRangeSeries.defaultOptions, columnRangeOptions);\n    return ColumnRangeSeries;\n}(AreaRangeSeries));\nextend(ColumnRangeSeries.prototype, {\n    directTouch: true,\n    pointClass: ColumnRangePoint,\n    trackerGroups: ['group', 'dataLabelsGroup'],\n    adjustForMissingColumns: columnProto.adjustForMissingColumns,\n    animate: columnProto.animate,\n    crispCol: columnProto.crispCol,\n    drawGraph: noop,\n    drawPoints: columnProto.drawPoints,\n    getSymbol: noop,\n    drawTracker: columnProto.drawTracker,\n    getColumnMetrics: columnProto.getColumnMetrics\n    // pointAttribs: columnProto.pointAttribs,\n    // polarArc: columnProto.polarArc\n    // translate3dPoints: columnProto.translate3dPoints,\n    // translate3dShapes: columnProto.translate3dShapes\n});\nSeriesRegistry.registerSeriesType('columnrange', ColumnRangeSeries);\n/* *\n *\n *  Default Export\n *\n * */\nexport default ColumnRangeSeries;\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A `columnrange` series. If the [type](#series.columnrange.type)\n * option is not specified, it is inherited from\n * [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.columnrange\n * @excluding dataParser, dataURL, stack, stacking\n * @product   highcharts highstock\n * @requires  highcharts-more\n * @apioption series.columnrange\n */\n/**\n * An array of data points for the series. For the `columnrange` series\n * type, points can be given in the following ways:\n *\n * 1. An array of arrays with 3 or 2 values. In this case, the values correspond\n *    to `x,low,high`. If the first value is a string, it is applied as the name\n *    of the point, and the `x` value is inferred. The `x` value can also be\n *    omitted, in which case the inner arrays should be of length 2\\. Then the\n *    `x` value is automatically calculated, either starting at 0 and\n *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n *    series options.\n *    ```js\n *    data: [\n *        [0, 4, 2],\n *        [1, 2, 1],\n *        [2, 9, 10]\n *    ]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.columnrange.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        low: 0,\n *        high: 4,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        low: 5,\n *        high: 3,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<Array<(number|string),number>|Array<(number|string),number,number>|*>}\n * @extends   series.arearange.data\n * @excluding marker\n * @product   highcharts highstock\n * @apioption series.columnrange.data\n */\n/**\n * @extends   series.columnrange.dataLabels\n * @product   highcharts highstock\n * @apioption series.columnrange.data.dataLabels\n */\n/**\n * @excluding halo, lineWidth, lineWidthPlus, marker\n * @product   highcharts highstock\n * @apioption series.columnrange.states.hover\n */\n/**\n * @excluding halo, lineWidth, lineWidthPlus, marker\n * @product   highcharts highstock\n * @apioption series.columnrange.states.select\n */\n''; // adds doclets above into transpiled\n","/* *\n *\n *  (c) 2010-2021 Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ColumnSeries from '../Column/ColumnSeries.js';\nvar colProto = ColumnSeries.prototype;\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nimport U from '../../Core/Utilities.js';\nvar clamp = U.clamp, extend = U.extend, merge = U.merge, pick = U.pick;\n/**\n * The ColumnPyramidSeries class\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.columnpyramid\n *\n * @augments Highcharts.Series\n */\nvar ColumnPyramidSeries = /** @class */ (function (_super) {\n    __extends(ColumnPyramidSeries, _super);\n    function ColumnPyramidSeries() {\n        /* *\n         *\n         * Static properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /* *\n         *\n         * Properties\n         *\n         * */\n        _this.data = void 0;\n        _this.options = void 0;\n        _this.points = void 0;\n        return _this;\n    }\n    /* *\n     *\n     * Functions\n     *\n     * */\n    /* eslint-disable-next-line valid-jsdoc */\n    /**\n     * Overrides the column translate method\n     * @private\n     */\n    ColumnPyramidSeries.prototype.translate = function () {\n        var series = this, chart = series.chart, options = series.options, dense = series.dense =\n            series.closestPointRange * series.xAxis.transA < 2, borderWidth = series.borderWidth = pick(options.borderWidth, dense ? 0 : 1 // #3635\n        ), yAxis = series.yAxis, threshold = options.threshold, translatedThreshold = series.translatedThreshold =\n            yAxis.getThreshold(threshold), minPointLength = pick(options.minPointLength, 5), metrics = series.getColumnMetrics(), pointWidth = metrics.width, \n        // postprocessed for border width\n        seriesBarW = series.barW =\n            Math.max(pointWidth, 1 + 2 * borderWidth), pointXOffset = series.pointXOffset = metrics.offset;\n        if (chart.inverted) {\n            translatedThreshold -= 0.5; // #3355\n        }\n        // When the pointPadding is 0,\n        // we want the pyramids to be packed tightly,\n        // so we allow individual pyramids to have individual sizes.\n        // When pointPadding is greater,\n        // we strive for equal-width columns (#2694).\n        if (options.pointPadding) {\n            seriesBarW = Math.ceil(seriesBarW);\n        }\n        colProto.translate.apply(series);\n        // Record the new values\n        series.points.forEach(function (point) {\n            var yBottom = pick(point.yBottom, translatedThreshold), safeDistance = 999 + Math.abs(yBottom), plotY = clamp(point.plotY, -safeDistance, yAxis.len + safeDistance), \n            // Don't draw too far outside plot area\n            // (#1303, #2241, #4264)\n            barX = point.plotX + pointXOffset, barW = seriesBarW / 2, barY = Math.min(plotY, yBottom), barH = Math.max(plotY, yBottom) - barY, stackTotal, stackHeight, topPointY, topXwidth, bottomXwidth, invBarPos, x1, x2, x3, x4, y1, y2;\n            point.barX = barX;\n            point.pointWidth = pointWidth;\n            // Fix the tooltip on center of grouped pyramids\n            // (#1216, #424, #3648)\n            point.tooltipPos = chart.inverted ?\n                [\n                    yAxis.len + yAxis.pos - chart.plotLeft - plotY,\n                    series.xAxis.len - barX - barW,\n                    barH\n                ] :\n                [\n                    barX + barW,\n                    plotY + yAxis.pos - chart.plotTop,\n                    barH\n                ];\n            stackTotal =\n                threshold + (point.total || point.y);\n            // overwrite stacktotal (always 100 / -100)\n            if (options.stacking === 'percent') {\n                stackTotal =\n                    threshold + (point.y < 0) ?\n                        -100 :\n                        100;\n            }\n            // get the highest point (if stack, extract from total)\n            topPointY = yAxis.toPixels((stackTotal), true);\n            // calculate height of stack (in pixels)\n            stackHeight =\n                chart.plotHeight - topPointY -\n                    (chart.plotHeight - translatedThreshold);\n            // topXwidth and bottomXwidth = width of lines from the center\n            // calculated from tanges proportion.\n            // Cannot be a NaN #12514\n            topXwidth = stackHeight ?\n                (barW * (barY - topPointY)) / stackHeight : 0;\n            // like topXwidth, but with height of point\n            bottomXwidth = stackHeight ?\n                (barW * (barY + barH - topPointY)) / stackHeight :\n                0;\n            /*\n                    /\\\n                   /  \\\n            x1,y1,------ x2,y1\n                /      \\\n               ----------\n            x4,y2        x3,y2\n            */\n            x1 = barX - topXwidth + barW;\n            x2 = barX + topXwidth + barW;\n            x3 = barX + bottomXwidth + barW;\n            x4 = barX - bottomXwidth + barW;\n            y1 = barY - minPointLength;\n            y2 = barY + barH;\n            if (point.y < 0) {\n                y1 = barY;\n                y2 = barY + barH + minPointLength;\n            }\n            // inverted chart\n            if (chart.inverted) {\n                invBarPos = yAxis.width - barY;\n                stackHeight =\n                    topPointY - (yAxis.width - translatedThreshold);\n                // proportion tanges\n                topXwidth = (barW *\n                    (topPointY - invBarPos)) / stackHeight;\n                bottomXwidth = (barW *\n                    (topPointY - (invBarPos - barH))) / stackHeight;\n                x1 = barX + barW + topXwidth; // top bottom\n                x2 = x1 - 2 * topXwidth; // top top\n                x3 = barX - bottomXwidth + barW; // bottom top\n                x4 = barX + bottomXwidth + barW; // bottom bottom\n                y1 = barY;\n                y2 = barY + barH - minPointLength;\n                if (point.y < 0) {\n                    y2 = barY + barH + minPointLength;\n                }\n            }\n            // Register shape type and arguments to be used in drawPoints\n            point.shapeType = 'path';\n            point.shapeArgs = {\n                // args for datalabels positioning\n                x: x1,\n                y: y1,\n                width: x2 - x1,\n                height: barH,\n                // path of pyramid\n                d: [\n                    ['M', x1, y1],\n                    ['L', x2, y1],\n                    ['L', x3, y2],\n                    ['L', x4, y2],\n                    ['Z']\n                ]\n            };\n        });\n    };\n    /**\n     * Column pyramid series display one pyramid per value along an X axis.\n     * To display horizontal pyramids, set [chart.inverted](#chart.inverted) to\n     * `true`.\n     *\n     * @sample {highcharts|highstock} highcharts/demo/column-pyramid/\n     *         Column pyramid\n     * @sample {highcharts|highstock} highcharts/plotoptions/columnpyramid-stacked/\n     *         Column pyramid stacked\n     * @sample {highcharts|highstock} highcharts/plotoptions/columnpyramid-inverted/\n     *         Column pyramid inverted\n     *\n     * @extends      plotOptions.column\n     * @since        7.0.0\n     * @product      highcharts highstock\n     * @excluding    boostThreshold, borderRadius, crisp, depth, edgeColor,\n     *               edgeWidth, groupZPadding, negativeColor, softThreshold,\n     *               threshold, zoneAxis, zones, boostBlending\n     * @requires     highcharts-more\n     * @optionparent plotOptions.columnpyramid\n     */\n    ColumnPyramidSeries.defaultOptions = merge(ColumnSeries.defaultOptions, {\n    // Nothing here\n    });\n    return ColumnPyramidSeries;\n}(ColumnSeries));\nSeriesRegistry.registerSeriesType('columnpyramid', ColumnPyramidSeries);\n/* *\n *\n * Default export\n *\n * */\nexport default ColumnPyramidSeries;\n/* *\n *\n * API Options\n *\n * */\n/**\n * A `columnpyramid` series. If the [type](#series.columnpyramid.type) option is\n * not specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.columnpyramid\n * @excluding connectEnds, connectNulls, dashStyle, dataParser, dataURL,\n *            gapSize, gapUnit, linecap, lineWidth, marker, step,\n *            boostThreshold, boostBlending\n * @product   highcharts highstock\n * @requires  highcharts-more\n * @apioption series.columnpyramid\n */\n/**\n * @excluding halo, lineWidth, lineWidthPlus, marker\n * @product   highcharts highstock\n * @apioption series.columnpyramid.states.hover\n */\n/**\n * @excluding halo, lineWidth, lineWidthPlus, marker\n * @product   highcharts highstock\n * @apioption series.columnpyramid.states.select\n */\n/**\n * An array of data points for the series. For the `columnpyramid` series type,\n * points can be given in the following ways:\n *\n * 1. An array of numerical values. In this case, the numerical values will be\n *    interpreted as `y` options. The `x` values will be automatically\n *    calculated, either starting at 0 and incremented by 1, or from\n *    `pointStart` and `pointInterval` given in the series options. If the axis\n *    has categories, these will be used. Example:\n *    ```js\n *    data: [0, 5, 3, 5]\n *    ```\n *\n * 2. An array of arrays with 2 values. In this case, the values correspond to\n *    `x,y`. If the first value is a string, it is applied as the name of the\n *    point, and the `x` value is inferred.\n *    ```js\n *    data: [\n *        [0, 6],\n *        [1, 2],\n *        [2, 6]\n *    ]\n *    ```\n *\n * 3. An array of objects with named values. The objects are point configuration\n *    objects as seen below. If the total number of data points exceeds the\n *    series' [turboThreshold](#series.columnpyramid.turboThreshold), this\n *    option is not available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        y: 9,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        y: 6,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/chart/reflow-true/\n *         Numerical values\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<number|Array<(number|string),(number|null)>|null|*>}\n * @extends   series.line.data\n * @excluding marker\n * @product   highcharts highstock\n * @apioption series.columnpyramid.data\n */\n''; // adds doclets above to transpiled file;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Error bars are a graphical representation of the variability of data and\n * are used on graphs to indicate the error, or uncertainty in a reported\n * measurement.\n *\n * @sample highcharts/demo/error-bar/\n *         Error bars on a column series\n * @sample highcharts/series-errorbar/on-scatter/\n *         Error bars on a scatter series\n * @sample highcharts/series-errorbar/datalabels/\n *         Error bars with data labels\n *\n * @extends      plotOptions.boxplot\n * @excluding    boostBlending, boostThreshold\n * @product      highcharts\n * @requires     highcharts-more\n * @optionparent plotOptions.errorbar\n */\nvar ErrorBarSeriesDefaults = {\n    /**\n     * The main color of the bars. This can be overridden by\n     * [stemColor](#plotOptions.errorbar.stemColor) and\n     * [whiskerColor](#plotOptions.errorbar.whiskerColor) individually.\n     *\n     * @sample {highcharts} highcharts/plotoptions/error-bar-styling/\n     *         Error bar styling\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @default #000000\n     * @since   3.0\n     * @product highcharts\n     */\n    color: \"#000000\" /* Palette.neutralColor100 */,\n    grouping: false,\n    /**\n     * The parent series of the error bar. The default value links it to\n     * the previous series. Otherwise, use the id of the parent series.\n     *\n     * @since   3.0\n     * @product highcharts\n     */\n    linkedTo: ':previous',\n    tooltip: {\n        pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>'\n    },\n    /**\n     * The line width of the whiskers, the horizontal lines marking\n     * low and high values. When `null`, the general\n     * [lineWidth](#plotOptions.errorbar.lineWidth) applies.\n     *\n     * @sample {highcharts} highcharts/plotoptions/error-bar-styling/\n     *         Error bar styling\n     *\n     * @type    {number}\n     * @since   3.0\n     * @product highcharts\n     */\n    whiskerWidth: null\n};\n/**\n * A `errorbar` series. If the [type](#series.errorbar.type) option\n * is not specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.errorbar\n * @excluding dataParser, dataURL, stack, stacking, boostThreshold,\n *            boostBlending\n * @product   highcharts\n * @requires  highcharts-more\n * @apioption series.errorbar\n */\n/**\n * An array of data points for the series. For the `errorbar` series\n * type, points can be given in the following ways:\n *\n * 1. An array of arrays with 3 or 2 values. In this case, the values correspond\n *    to `x,low,high`. If the first value is a string, it is applied as the name\n *    of the point, and the `x` value is inferred. The `x` value can also be\n *    omitted, in which case the inner arrays should be of length 2\\. Then the\n *    `x` value is automatically calculated, either starting at 0 and\n *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n *    series options.\n *    ```js\n *    data: [\n *        [0, 10, 2],\n *        [1, 1, 8],\n *        [2, 4, 5]\n *    ]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.errorbar.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        low: 0,\n *        high: 0,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        low: 5,\n *        high: 5,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<Array<(number|string),number>|Array<(number|string),number,number>|*>}\n * @extends   series.arearange.data\n * @excluding dataLabels, drilldown, marker, states\n * @product   highcharts\n * @apioption series.errorbar.data\n */\n''; // adds doclets above to transpiled file\n/* *\n *\n *  Default Export\n *\n * */\nexport default ErrorBarSeriesDefaults;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport BoxPlotSeries from '../BoxPlot/BoxPlotSeries.js';\nimport ColumnSeries from '../Column/ColumnSeries.js';\nimport ErrorBarSeriesDefaults from './ErrorBarSeriesDefaults.js';\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar AreaRangeSeries = SeriesRegistry.seriesTypes.arearange;\nimport U from '../../Core/Utilities.js';\nvar addEvent = U.addEvent, merge = U.merge, extend = U.extend;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Errorbar series type\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.errorbar\n *\n * @augments Highcharts.Series\n *\n */\nvar ErrorBarSeries = /** @class */ (function (_super) {\n    __extends(ErrorBarSeries, _super);\n    function ErrorBarSeries() {\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.data = void 0;\n        _this.options = void 0;\n        _this.points = void 0;\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    ErrorBarSeries.prototype.getColumnMetrics = function () {\n        // Get the width and X offset, either on top of the linked series\n        // column or standalone\n        return ((this.linkedParent && this.linkedParent.columnMetrics) ||\n            ColumnSeries.prototype.getColumnMetrics.call(this));\n    };\n    ErrorBarSeries.prototype.drawDataLabels = function () {\n        var valKey = this.pointValKey;\n        if (AreaRangeSeries) {\n            AreaRangeSeries.prototype.drawDataLabels.call(this);\n            // Arearange drawDataLabels does not reset point.y to high,\n            // but to low after drawing (#4133)\n            this.data.forEach(function (point) {\n                point.y = point[valKey];\n            });\n        }\n    };\n    ErrorBarSeries.prototype.toYData = function (point) {\n        // return a plain array for speedy calculation\n        return [point.low, point.high];\n    };\n    ErrorBarSeries.defaultOptions = merge(BoxPlotSeries.defaultOptions, ErrorBarSeriesDefaults);\n    return ErrorBarSeries;\n}(BoxPlotSeries));\naddEvent(ErrorBarSeries, 'afterTranslate', function () {\n    this.points.forEach(function (point) {\n        point.plotLow = point.plotY;\n    });\n}, { order: 0 });\nextend(ErrorBarSeries.prototype, {\n    // pointClass: ErrorBarPoint, // just a declaration\n    pointArrayMap: ['low', 'high'],\n    pointValKey: 'high',\n    doQuartiles: false\n});\nSeriesRegistry.registerSeriesType('errorbar', ErrorBarSeries);\n/* *\n *\n *  Default Export\n *\n * */\nexport default ErrorBarSeries;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar Point = SeriesRegistry.series.prototype.pointClass;\n/* *\n *\n *  Class\n *\n * */\nvar GaugePoint = /** @class */ (function (_super) {\n    __extends(GaugePoint, _super);\n    function GaugePoint() {\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.options = void 0;\n        _this.series = void 0;\n        _this.shapeArgs = void 0;\n        return _this;\n        /* eslint-enable valid-jsdoc */\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Don't do any hover colors or anything\n     * @private\n     */\n    GaugePoint.prototype.setState = function (state) {\n        this.state = state;\n    };\n    return GaugePoint;\n}(Point));\n/* *\n *\n *  Default Export\n *\n * */\nexport default GaugePoint;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GaugePoint from './GaugePoint.js';\nimport H from '../../Core/Globals.js';\nvar noop = H.noop;\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar Series = SeriesRegistry.series, ColumnSeries = SeriesRegistry.seriesTypes.column;\nimport U from '../../Core/Utilities.js';\nvar clamp = U.clamp, isNumber = U.isNumber, extend = U.extend, merge = U.merge, pick = U.pick, pInt = U.pInt;\n/* *\n *\n *  Class\n *\n * */\n/**\n *\n * The `gauge` series type\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.map\n *\n * @augments Highcharts.Series\n */\nvar GaugeSeries = /** @class */ (function (_super) {\n    __extends(GaugeSeries, _super);\n    function GaugeSeries() {\n        /* *\n         *\n         *  Static properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.data = void 0;\n        _this.points = void 0;\n        _this.options = void 0;\n        _this.yAxis = void 0;\n        return _this;\n        /* eslint-enable valid-jsdoc */\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Calculate paths etc\n     * @private\n     */\n    GaugeSeries.prototype.translate = function () {\n        var series = this, yAxis = series.yAxis, options = series.options, center = yAxis.center;\n        series.generatePoints();\n        series.points.forEach(function (point) {\n            var dialOptions = merge(options.dial, point.dial), radius = (pInt(dialOptions.radius) * center[2]) / 200, baseLength = (pInt(dialOptions.baseLength) * radius) / 100, rearLength = (pInt(dialOptions.rearLength) * radius) / 100, baseWidth = dialOptions.baseWidth, topWidth = dialOptions.topWidth;\n            var overshoot = options.overshoot, rotation = yAxis.startAngleRad + yAxis.translate(point.y, void 0, void 0, void 0, true);\n            // Handle the wrap and overshoot options\n            if (isNumber(overshoot) || options.wrap === false) {\n                overshoot = isNumber(overshoot) ?\n                    (overshoot / 180 * Math.PI) : 0;\n                rotation = clamp(rotation, yAxis.startAngleRad - overshoot, yAxis.endAngleRad + overshoot);\n            }\n            rotation = rotation * 180 / Math.PI;\n            point.shapeType = 'path';\n            var d = dialOptions.path || [\n                ['M', -rearLength, -baseWidth / 2],\n                ['L', baseLength, -baseWidth / 2],\n                ['L', radius, -topWidth / 2],\n                ['L', radius, topWidth / 2],\n                ['L', baseLength, baseWidth / 2],\n                ['L', -rearLength, baseWidth / 2],\n                ['Z']\n            ];\n            point.shapeArgs = {\n                d: d,\n                translateX: center[0],\n                translateY: center[1],\n                rotation: rotation\n            };\n            // Positions for data label\n            point.plotX = center[0];\n            point.plotY = center[1];\n        });\n    };\n    /**\n     * Draw the points where each point is one needle\n     * @private\n     */\n    GaugeSeries.prototype.drawPoints = function () {\n        var series = this, chart = series.chart, center = series.yAxis.center, pivot = series.pivot, options = series.options, pivotOptions = options.pivot, renderer = chart.renderer;\n        series.points.forEach(function (point) {\n            var graphic = point.graphic, shapeArgs = point.shapeArgs, d = shapeArgs.d, dialOptions = merge(options.dial, point.dial); // #1233\n            if (graphic) {\n                graphic.animate(shapeArgs);\n                shapeArgs.d = d; // animate alters it\n            }\n            else {\n                point.graphic =\n                    renderer[point.shapeType](shapeArgs)\n                        .attr({\n                        // required by VML when animation is false\n                        rotation: shapeArgs.rotation,\n                        zIndex: 1\n                    })\n                        .addClass('highcharts-dial')\n                        .add(series.group);\n            }\n            // Presentational attributes\n            if (!chart.styledMode) {\n                point.graphic[graphic ? 'animate' : 'attr']({\n                    stroke: dialOptions.borderColor,\n                    'stroke-width': dialOptions.borderWidth,\n                    fill: dialOptions.backgroundColor\n                });\n            }\n        });\n        // Add or move the pivot\n        if (pivot) {\n            pivot.animate({\n                translateX: center[0],\n                translateY: center[1]\n            });\n        }\n        else if (pivotOptions) {\n            series.pivot =\n                renderer.circle(0, 0, pivotOptions.radius)\n                    .attr({\n                    zIndex: 2\n                })\n                    .addClass('highcharts-pivot')\n                    .translate(center[0], center[1])\n                    .add(series.group);\n            // Presentational attributes\n            if (!chart.styledMode) {\n                series.pivot.attr({\n                    fill: pivotOptions.backgroundColor,\n                    stroke: pivotOptions.borderColor,\n                    'stroke-width': pivotOptions.borderWidth\n                });\n            }\n        }\n    };\n    /**\n     * Animate the arrow up from startAngle\n     * @private\n     */\n    GaugeSeries.prototype.animate = function (init) {\n        var series = this;\n        if (!init) {\n            series.points.forEach(function (point) {\n                var graphic = point.graphic;\n                if (graphic) {\n                    // start value\n                    graphic.attr({\n                        rotation: series.yAxis.startAngleRad * 180 / Math.PI\n                    });\n                    // animate\n                    graphic.animate({\n                        rotation: point.shapeArgs.rotation\n                    }, series.options.animation);\n                }\n            });\n        }\n    };\n    /**\n     * @private\n     */\n    GaugeSeries.prototype.render = function () {\n        this.group = this.plotGroup('group', 'series', this.visible ? 'inherit' : 'hidden', this.options.zIndex, this.chart.seriesGroup);\n        Series.prototype.render.call(this);\n        this.group.clip(this.chart.clipRect);\n    };\n    /**\n     * Extend the basic setData method by running processData and generatePoints\n     * immediately, in order to access the points from the legend.\n     * @private\n     */\n    GaugeSeries.prototype.setData = function (data, redraw) {\n        Series.prototype.setData.call(this, data, false);\n        this.processData();\n        this.generatePoints();\n        if (pick(redraw, true)) {\n            this.chart.redraw();\n        }\n    };\n    /**\n     * Define hasData function for non-cartesian series.\n     * Returns true if the series has points at all.\n     * @private\n     */\n    GaugeSeries.prototype.hasData = function () {\n        return !!this.points.length; // != 0\n    };\n    /**\n     * Gauges are circular plots displaying one or more values with a dial\n     * pointing to values along the perimeter.\n     *\n     * @sample highcharts/demo/gauge-speedometer/\n     *         Gauge chart\n     *\n     * @extends      plotOptions.line\n     * @excluding    animationLimit, boostThreshold, colorAxis, colorKey,\n     *               connectEnds, connectNulls, cropThreshold, dashStyle,\n     *               dragDrop, findNearestPointBy, getExtremesFromAll, marker,\n     *               negativeColor, pointPlacement, shadow, softThreshold,\n     *               stacking, states, step, threshold, turboThreshold, xAxis,\n     *               zoneAxis, zones, dataSorting, boostBlending\n     * @product      highcharts\n     * @requires     highcharts-more\n     * @optionparent plotOptions.gauge\n     */\n    GaugeSeries.defaultOptions = merge(Series.defaultOptions, {\n        /**\n         * When this option is `true`, the dial will wrap around the axes.\n         * For instance, in a full-range gauge going from 0 to 360, a value\n         * of 400 will point to 40\\. When `wrap` is `false`, the dial stops\n         * at 360.\n         *\n         * @see [overshoot](#plotOptions.gauge.overshoot)\n         *\n         * @type      {boolean}\n         * @default   true\n         * @since     3.0\n         * @product   highcharts\n         * @apioption plotOptions.gauge.wrap\n         */\n        /**\n         * Data labels for the gauge. For gauges, the data labels are\n         * enabled by default and shown in a bordered box below the point.\n         *\n         * @since   2.3.0\n         * @product highcharts\n         */\n        dataLabels: {\n            borderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            borderRadius: 3,\n            borderWidth: 1,\n            crop: false,\n            defer: false,\n            enabled: true,\n            verticalAlign: 'top',\n            y: 15,\n            zIndex: 2\n        },\n        /**\n         * Options for the dial or arrow pointer of the gauge.\n         *\n         * In styled mode, the dial is styled with the\n         * `.highcharts-gauge-series .highcharts-dial` rule.\n         *\n         * @sample {highcharts} highcharts/css/gauge/\n         *         Styled mode\n         *\n         * @type    {*}\n         * @since   2.3.0\n         * @product highcharts\n         */\n        dial: {\n            /**\n             * The background or fill color of the gauge's dial.\n             *\n             * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n             *         Dial options demonstrated\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default   #000000\n             * @since     2.3.0\n             * @product   highcharts\n             * @apioption plotOptions.gauge.dial.backgroundColor\n             */\n            backgroundColor: \"#000000\" /* Palette.neutralColor100 */,\n            /**\n             * The length of the dial's base part, relative to the total\n             * radius or length of the dial.\n             *\n             * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n             *         Dial options demonstrated\n             *\n             * @type      {string}\n             * @default   70%\n             * @since     2.3.0\n             * @product   highcharts\n             * @apioption plotOptions.gauge.dial.baseLength\n             */\n            baseLength: '70%',\n            /**\n             * The pixel width of the base of the gauge dial. The base is\n             * the part closest to the pivot, defined by baseLength.\n             *\n             * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n             *         Dial options demonstrated\n             *\n             * @type      {number}\n             * @default   3\n             * @since     2.3.0\n             * @product   highcharts\n             * @apioption plotOptions.gauge.dial.baseWidth\n             */\n            baseWidth: 3,\n            /**\n             * The border color or stroke of the gauge's dial. By default,\n             * the borderWidth is 0, so this must be set in addition to a\n             * custom border color.\n             *\n             * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n             *         Dial options demonstrated\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default   #cccccc\n             * @since     2.3.0\n             * @product   highcharts\n             * @apioption plotOptions.gauge.dial.borderColor\n             */\n            borderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The width of the gauge dial border in pixels.\n             *\n             * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n             *         Dial options demonstrated\n             *\n             * @type      {number}\n             * @default   0\n             * @since     2.3.0\n             * @product   highcharts\n             * @apioption plotOptions.gauge.dial.borderWidth\n             */\n            borderWidth: 0,\n            /**\n             * An array with an SVG path for the custom dial.\n             *\n             * @sample {highcharts} highcharts/plotoptions/gauge-path/\n             *         Dial options demonstrated\n             *\n             * @type      {Highcharts.SVGPathArray}\n             * @since 10.2.0\n             * @product   highcharts\n             * @apioption plotOptions.gauge.dial.path\n             */\n            /**\n             * The radius or length of the dial, in percentages relative to\n             * the radius of the gauge itself.\n             *\n             * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n             *         Dial options demonstrated\n             *\n             * @type      {string}\n             * @default   80%\n             * @since     2.3.0\n             * @product   highcharts\n             * @apioption plotOptions.gauge.dial.radius\n             */\n            radius: '80%',\n            /**\n             * The length of the dial's rear end, the part that extends out\n             * on the other side of the pivot. Relative to the dial's\n             * length.\n             *\n             * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n             *         Dial options demonstrated\n             *\n             * @type      {string}\n             * @default   10%\n             * @since     2.3.0\n             * @product   highcharts\n             * @apioption plotOptions.gauge.dial.rearLength\n             */\n            rearLength: '10%',\n            /**\n             * The width of the top of the dial, closest to the perimeter.\n             * The pivot narrows in from the base to the top.\n             *\n             * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n             *         Dial options demonstrated\n             *\n             * @type      {number}\n             * @default   1\n             * @since     2.3.0\n             * @product   highcharts\n             * @apioption plotOptions.gauge.dial.topWidth\n             */\n            topWidth: 1\n        },\n        /**\n         * Allow the dial to overshoot the end of the perimeter axis by\n         * this many degrees. Say if the gauge axis goes from 0 to 60, a\n         * value of 100, or 1000, will show 5 degrees beyond the end of the\n         * axis when this option is set to 5.\n         *\n         * @see [wrap](#plotOptions.gauge.wrap)\n         *\n         * @sample {highcharts} highcharts/plotoptions/gauge-overshoot/\n         *         Allow 5 degrees overshoot\n         *\n         * @type      {number}\n         * @since     3.0.10\n         * @product   highcharts\n         * @apioption plotOptions.gauge.overshoot\n         */\n        /**\n         * Options for the pivot or the center point of the gauge.\n         *\n         * In styled mode, the pivot is styled with the\n         * `.highcharts-gauge-series .highcharts-pivot` rule.\n         *\n         * @sample {highcharts} highcharts/css/gauge/\n         *         Styled mode\n         *\n         * @type    {*}\n         * @since   2.3.0\n         * @product highcharts\n         */\n        pivot: {\n            /**\n             * The pixel radius of the pivot.\n             *\n             * @sample {highcharts} highcharts/plotoptions/gauge-pivot/\n             *         Pivot options demonstrated\n             *\n             * @type      {number}\n             * @default   5\n             * @since     2.3.0\n             * @product   highcharts\n             * @apioption plotOptions.gauge.pivot.radius\n             */\n            radius: 5,\n            /**\n             * The border or stroke width of the pivot.\n             *\n             * @sample {highcharts} highcharts/plotoptions/gauge-pivot/\n             *         Pivot options demonstrated\n             *\n             * @type      {number}\n             * @default   0\n             * @since     2.3.0\n             * @product   highcharts\n             * @apioption plotOptions.gauge.pivot.borderWidth\n             */\n            borderWidth: 0,\n            /**\n             * The border or stroke color of the pivot. In able to change\n             * this, the borderWidth must also be set to something other\n             * than the default 0.\n             *\n             * @sample {highcharts} highcharts/plotoptions/gauge-pivot/\n             *         Pivot options demonstrated\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default   #cccccc\n             * @since     2.3.0\n             * @product   highcharts\n             * @apioption plotOptions.gauge.pivot.borderColor\n             */\n            borderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The background color or fill of the pivot.\n             *\n             * @sample {highcharts} highcharts/plotoptions/gauge-pivot/\n             *         Pivot options demonstrated\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default   #000000\n             * @since     2.3.0\n             * @product   highcharts\n             * @apioption plotOptions.gauge.pivot.backgroundColor\n             */\n            backgroundColor: \"#000000\" /* Palette.neutralColor100 */\n        },\n        tooltip: {\n            headerFormat: ''\n        },\n        /**\n         * Whether to display this particular series or series type in the\n         * legend. Defaults to false for gauge series.\n         *\n         * @since   2.3.0\n         * @product highcharts\n         */\n        showInLegend: false\n        // Prototype members\n    });\n    return GaugeSeries;\n}(Series));\nextend(GaugeSeries.prototype, {\n    // chart.angular will be set to true when a gauge series is present,\n    // and this will be used on the axes\n    angular: true,\n    directTouch: true,\n    drawGraph: noop,\n    drawTracker: ColumnSeries.prototype.drawTracker,\n    fixedBox: true,\n    forceDL: true,\n    noSharedTooltip: true,\n    pointClass: GaugePoint,\n    trackerGroups: ['group', 'dataLabelsGroup']\n});\nSeriesRegistry.registerSeriesType('gauge', GaugeSeries);\n/* *\n *\n *  Default Export\n *\n * */\nexport default GaugeSeries;\n/* *\n *\n *  API options\n *\n * */\n/**\n * A `gauge` series. If the [type](#series.gauge.type) option is not\n * specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.gauge\n * @excluding animationLimit, boostThreshold, connectEnds, connectNulls,\n *            cropThreshold, dashStyle, dataParser, dataURL, findNearestPointBy,\n *            getExtremesFromAll, marker, negativeColor, pointPlacement, shadow,\n *            softThreshold, stack, stacking, states, step, threshold,\n *            turboThreshold, zoneAxis, zones, dataSorting, boostBlending\n * @product   highcharts\n * @requires  highcharts-more\n * @apioption series.gauge\n */\n/**\n * An array of data points for the series. For the `gauge` series type,\n * points can be given in the following ways:\n *\n * 1. An array of numerical values. In this case, the numerical values will be\n *    interpreted as `y` options. Example:\n *    ```js\n *    data: [0, 5, 3, 5]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.gauge.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        y: 6,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        y: 8,\n *        name: \"Point1\",\n *       color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * The typical gauge only contains a single data value.\n *\n * @sample {highcharts} highcharts/chart/reflow-true/\n *         Numerical values\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<number|null|*>}\n * @extends   series.line.data\n * @excluding drilldown, marker, x\n * @product   highcharts\n * @apioption series.gauge.data\n */\n''; // adds the doclets above in the transpiled file\n","/* *\n *\n *  Networkgraph series\n *\n *  (c) 2010-2021 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport U from '../Core/Utilities.js';\nvar addEvent = U.addEvent;\n/* *\n *\n *  Constants\n *\n * */\nvar composedClasses = [];\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction compose(ChartClass) {\n    if (composedClasses.indexOf(ChartClass) === -1) {\n        composedClasses.push(ChartClass);\n        addEvent(ChartClass, 'load', onChartLoad);\n    }\n}\n/**\n * Draggable mode:\n * @private\n */\nfunction onChartLoad() {\n    var chart = this;\n    var mousedownUnbinder, mousemoveUnbinder, mouseupUnbinder;\n    if (chart.container) {\n        mousedownUnbinder = addEvent(chart.container, 'mousedown', function (event) {\n            var point = chart.hoverPoint;\n            if (point &&\n                point.series &&\n                point.series.hasDraggableNodes &&\n                point.series.options.draggable) {\n                point.series.onMouseDown(point, event);\n                mousemoveUnbinder = addEvent(chart.container, 'mousemove', function (e) { return (point &&\n                    point.series &&\n                    point.series.onMouseMove(point, e)); });\n                mouseupUnbinder = addEvent(chart.container.ownerDocument, 'mouseup', function (e) {\n                    mousemoveUnbinder();\n                    mouseupUnbinder();\n                    return point &&\n                        point.series &&\n                        point.series.onMouseUp(point, e);\n                });\n            }\n        });\n    }\n    addEvent(chart, 'destroy', function () {\n        mousedownUnbinder();\n    });\n}\n/**\n * Mouse down action, initializing drag&drop mode.\n *\n * @private\n * @param {Highcharts.Point} point\n *        The point that event occured.\n * @param {Highcharts.PointerEventObject} event\n *        Browser event, before normalization.\n */\nfunction onMouseDown(point, event) {\n    var normalizedEvent = this.chart.pointer.normalize(event);\n    point.fixedPosition = {\n        chartX: normalizedEvent.chartX,\n        chartY: normalizedEvent.chartY,\n        plotX: point.plotX,\n        plotY: point.plotY\n    };\n    point.inDragMode = true;\n}\n/**\n * Mouse move action during drag&drop.\n *\n * @private\n *\n * @param {global.Event} event\n *        Browser event, before normalization.\n * @param {Highcharts.Point} point\n *        The point that event occured.\n *\n */\nfunction onMouseMove(point, event) {\n    if (point.fixedPosition && point.inDragMode) {\n        var series = this, chart = series.chart, normalizedEvent = chart.pointer.normalize(event), diffX = point.fixedPosition.chartX - normalizedEvent.chartX, diffY = point.fixedPosition.chartY - normalizedEvent.chartY, graphLayoutsLookup = chart.graphLayoutsLookup;\n        var newPlotX = void 0, newPlotY = void 0;\n        // At least 5px to apply change (avoids simple click):\n        if (Math.abs(diffX) > 5 || Math.abs(diffY) > 5) {\n            newPlotX = point.fixedPosition.plotX - diffX;\n            newPlotY = point.fixedPosition.plotY - diffY;\n            if (chart.isInsidePlot(newPlotX, newPlotY)) {\n                point.plotX = newPlotX;\n                point.plotY = newPlotY;\n                point.hasDragged = true;\n                this.redrawHalo(point);\n                graphLayoutsLookup.forEach(function (layout) {\n                    layout.restartSimulation();\n                });\n            }\n        }\n    }\n}\n/**\n * Mouse up action, finalizing drag&drop.\n *\n * @private\n * @param {Highcharts.Point} point\n *        The point that event occured.\n */\nfunction onMouseUp(point, _event) {\n    if (point.fixedPosition) {\n        if (point.hasDragged) {\n            if (this.layout.enableSimulation) {\n                this.layout.start();\n            }\n            else {\n                this.chart.redraw();\n            }\n        }\n        point.inDragMode = point.hasDragged = false;\n        if (!this.options.fixedDraggable) {\n            delete point.fixedPosition;\n        }\n    }\n}\n/**\n * Redraw halo on mousemove during the drag&drop action.\n *\n * @private\n * @param {Highcharts.Point} point\n *        The point that should show halo.\n */\nfunction redrawHalo(point) {\n    if (point && this.halo) {\n        this.halo.attr({\n            d: point.haloPath(this.options.states.hover.halo.size)\n        });\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar DragNodesComposition = {\n    compose: compose,\n    onMouseDown: onMouseDown,\n    onMouseMove: onMouseMove,\n    onMouseUp: onMouseUp,\n    redrawHalo: redrawHalo\n};\nexport default DragNodesComposition;\n","/* *\n *\n *  Networkgraph series\n *\n *  (c) 2010-2021 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport A from '../Core/Animation/AnimationUtilities.js';\nvar setAnimation = A.setAnimation;\nimport U from '../Core/Utilities.js';\nvar addEvent = U.addEvent;\n/* *\n *\n *  Constants\n *\n * */\nvar composedClasses = [];\nvar integrations = {};\nvar layouts = {};\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction compose(ChartClass) {\n    if (composedClasses.indexOf(ChartClass)) {\n        composedClasses.push(ChartClass);\n        addEvent(ChartClass, 'afterPrint', onChartAfterPrint);\n        addEvent(ChartClass, 'beforePrint', onChartBeforePrint);\n        addEvent(ChartClass, 'predraw', onChartPredraw);\n        addEvent(ChartClass, 'render', onChartRender);\n    }\n}\n/**\n * Re-enable simulation after print.\n * @private\n */\nfunction onChartAfterPrint() {\n    if (this.graphLayoutsLookup) {\n        this.graphLayoutsLookup.forEach(function (layout) {\n            // return to default simulation\n            layout.updateSimulation();\n        });\n        this.redraw();\n    }\n}\n/**\n * Disable simulation before print if enabled.\n * @private\n */\nfunction onChartBeforePrint() {\n    if (this.graphLayoutsLookup) {\n        this.graphLayoutsLookup.forEach(function (layout) {\n            layout.updateSimulation(false);\n        });\n        this.redraw();\n    }\n}\n/**\n * Clear previous layouts.\n * @private\n */\nfunction onChartPredraw() {\n    if (this.graphLayoutsLookup) {\n        this.graphLayoutsLookup.forEach(function (layout) {\n            layout.stop();\n        });\n    }\n}\n/**\n * @private\n */\nfunction onChartRender() {\n    var systemsStable, afterRender = false;\n    var layoutStep = function (layout) {\n        if (layout.maxIterations-- &&\n            isFinite(layout.temperature) &&\n            !layout.isStable() &&\n            !layout.enableSimulation) {\n            // Hook similar to build-in addEvent, but instead of\n            // creating whole events logic, use just a function.\n            // It's faster which is important for rAF code.\n            // Used e.g. in packed-bubble series for bubble radius\n            // calculations\n            if (layout.beforeStep) {\n                layout.beforeStep();\n            }\n            layout.step();\n            systemsStable = false;\n            afterRender = true;\n        }\n    };\n    if (this.graphLayoutsLookup) {\n        setAnimation(false, this);\n        // Start simulation\n        this.graphLayoutsLookup.forEach(function (layout) { return layout.start(); });\n        // Just one sync step, to run different layouts similar to\n        // async mode.\n        while (!systemsStable) {\n            systemsStable = true;\n            this.graphLayoutsLookup.forEach(layoutStep);\n        }\n        if (afterRender) {\n            this.series.forEach(function (series) {\n                if (series && series.layout) {\n                    series.render();\n                }\n            });\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar GraphLayoutComposition = {\n    compose: compose,\n    integrations: integrations,\n    layouts: layouts\n};\nexport default GraphLayoutComposition;\n","/* *\n *\n *  (c) 2010-2021 Grzegorz Blachlinski, Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Chart from '../../Core/Chart/Chart.js';\nimport Point from '../../Core/Series/Point.js';\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar BubblePoint = SeriesRegistry.seriesTypes.bubble.prototype.pointClass;\n/* *\n *\n *  Class\n *\n * */\nvar PackedBubblePoint = /** @class */ (function (_super) {\n    __extends(PackedBubblePoint, _super);\n    function PackedBubblePoint() {\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.degree = NaN;\n        _this.mass = NaN;\n        _this.radius = NaN;\n        _this.options = void 0;\n        _this.series = void 0;\n        _this.value = null;\n        return _this;\n        /* eslint-enable valid-jsdoc */\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Destroy point.\n     * Then remove point from the layout.\n     * @private\n     */\n    PackedBubblePoint.prototype.destroy = function () {\n        if (this.series.layout) {\n            this.series.layout.removeElementFromCollection(this, this.series.layout.nodes);\n        }\n        return Point.prototype.destroy.apply(this, arguments);\n    };\n    PackedBubblePoint.prototype.firePointEvent = function () {\n        var point = this, series = this.series, seriesOptions = series.options;\n        if (this.isParentNode && seriesOptions.parentNode) {\n            var temp = seriesOptions.allowPointSelect;\n            seriesOptions.allowPointSelect = (seriesOptions.parentNode.allowPointSelect);\n            Point.prototype.firePointEvent.apply(this, arguments);\n            seriesOptions.allowPointSelect = temp;\n        }\n        else {\n            Point.prototype.firePointEvent.apply(this, arguments);\n        }\n    };\n    PackedBubblePoint.prototype.select = function () {\n        var point = this, series = this.series, chart = series.chart;\n        if (point.isParentNode) {\n            chart.getSelectedPoints = chart.getSelectedParentNodes;\n            Point.prototype.select.apply(this, arguments);\n            chart.getSelectedPoints = Chart.prototype.getSelectedPoints;\n        }\n        else {\n            Point.prototype.select.apply(this, arguments);\n        }\n    };\n    return PackedBubblePoint;\n}(BubblePoint));\n/* *\n *\n *  Default Export\n *\n * */\nexport default PackedBubblePoint;\n","/* *\n *\n *  Imports\n *\n * */\nimport U from '../../Core/Utilities.js';\nvar isNumber = U.isNumber;\n/* *\n *\n *  Constants\n *\n * */\n/**\n * A packed bubble series is a two dimensional series type, where each point\n * renders a value in X, Y position. Each point is drawn as a bubble\n * where the bubbles don't overlap with each other and the radius\n * of the bubble relates to the value.\n *\n * @sample highcharts/demo/packed-bubble/\n *         Packed bubble chart\n * @sample highcharts/demo/packed-bubble-split/\n *         Split packed bubble chart\n *\n * @extends      plotOptions.bubble\n * @excluding    connectEnds, connectNulls, cropThreshold, dragDrop, jitter,\n *               keys, pointPlacement, sizeByAbsoluteValue, step, xAxis,\n *               yAxis, zMax, zMin, dataSorting, boostThreshold,\n *               boostBlending\n * @product      highcharts\n * @since        7.0.0\n * @requires     highcharts-more\n * @optionparent plotOptions.packedbubble\n *\n * @private\n */\nvar PackedBubbleSeriesDefaults = {\n    /**\n     * Minimum bubble size. Bubbles will automatically size between the\n     * `minSize` and `maxSize` to reflect the value of each bubble.\n     * Can be either pixels (when no unit is given), or a percentage of\n     * the smallest one of the plot width and height, divided by the square\n     * root of total number of points.\n     *\n     * @sample highcharts/plotoptions/bubble-size/\n     *         Bubble size\n     *\n     * @type {number|string}\n     *\n     * @private\n     */\n    minSize: '10%',\n    /**\n     * Maximum bubble size. Bubbles will automatically size between the\n     * `minSize` and `maxSize` to reflect the value of each bubble.\n     * Can be either pixels (when no unit is given), or a percentage of\n     * the smallest one of the plot width and height, divided by the square\n     * root of total number of points.\n     *\n     * @sample highcharts/plotoptions/bubble-size/\n     *         Bubble size\n     *\n     * @type {number|string}\n     *\n     * @private\n     */\n    maxSize: '50%',\n    sizeBy: 'area',\n    zoneAxis: 'y',\n    crisp: false,\n    tooltip: {\n        pointFormat: 'Value: {point.value}'\n    },\n    /**\n     * Flag to determine if nodes are draggable or not. Available for\n     * graph with useSimulation set to true only.\n     *\n     * @since 7.1.0\n     *\n     * @private\n     */\n    draggable: true,\n    /**\n     * An option is giving a possibility to choose between using simulation\n     * for calculating bubble positions. These reflects in both animation\n     * and final position of bubbles. Simulation is also adding options to\n     * the series graph based on used layout. In case of big data sets, with\n     * any performance issues, it is possible to disable animation and pack\n     * bubble in a simple circular way.\n     *\n     * @sample highcharts/series-packedbubble/spiral/\n     *         useSimulation set to false\n     *\n     * @since 7.1.0\n     *\n     * @private\n     */\n    useSimulation: true,\n    /**\n     * Series options for parent nodes.\n     *\n     * @since 8.1.1\n     *\n     * @private\n     */\n    parentNode: {\n        /**\n         * Allow this series' parent nodes to be selected\n         * by clicking on the graph.\n         *\n         * @since 8.1.1\n         */\n        allowPointSelect: false\n    },\n    /**\n    /**\n     *\n     * @declare Highcharts.SeriesPackedBubbleDataLabelsOptionsObject\n     *\n     * @private\n     */\n    dataLabels: {\n        /**\n         * The\n         * [format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\n         * specifying what to show for _node_ in the networkgraph. In v7.0\n         * defaults to `{key}`, since v7.1 defaults to `undefined` and\n         * `formatter` is used instead.\n         *\n         * @type      {string}\n         * @since     7.0.0\n         * @apioption plotOptions.packedbubble.dataLabels.format\n         */\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * Callback JavaScript function to format the data label for a node.\n         * Note that if a `format` is defined, the format takes precedence\n         * and the formatter is ignored.\n         *\n         * @type  {Highcharts.SeriesPackedBubbleDataLabelsFormatterCallbackFunction}\n         * @since 7.0.0\n         */\n        formatter: function () {\n            var numberFormatter = this.series.chart.numberFormatter;\n            var value = this.point.value;\n            return isNumber(value) ? numberFormatter(value, -1) : '';\n        },\n        /**\n         * @type      {string}\n         * @since     7.1.0\n         * @apioption plotOptions.packedbubble.dataLabels.parentNodeFormat\n         */\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * @type  {Highcharts.SeriesPackedBubbleDataLabelsFormatterCallbackFunction}\n         * @since 7.1.0\n         */\n        parentNodeFormatter: function () {\n            return this.name;\n        },\n        /**\n         * @sample {highcharts} highcharts/series-packedbubble/packed-dashboard\n         *         Dashboard with dataLabels on parentNodes\n         *\n         * @declare Highcharts.SeriesPackedBubbleDataLabelsTextPathOptionsObject\n         * @since   7.1.0\n         */\n        parentNodeTextPath: {\n            /**\n             * Presentation attributes for the text path.\n             *\n             * @type      {Highcharts.SVGAttributes}\n             * @since     7.1.0\n             * @apioption plotOptions.packedbubble.dataLabels.attributes\n             */\n            /**\n             * Enable or disable `textPath` option for link's or marker's\n             * data labels.\n             *\n             * @since 7.1.0\n             */\n            enabled: true\n        },\n        /**\n         * Options for a _node_ label text which should follow marker's\n         * shape.\n         *\n         * **Note:** Only SVG-based renderer supports this option.\n         *\n         * @extends   plotOptions.series.dataLabels.textPath\n         * @apioption plotOptions.packedbubble.dataLabels.textPath\n         */\n        padding: 0,\n        style: {\n            transition: 'opacity 2000ms'\n        }\n    },\n    /**\n     * Options for layout algorithm when simulation is enabled. Inside there\n     * are options to change the speed, padding, initial bubbles positions\n     * and more.\n     *\n     * @extends   plotOptions.networkgraph.layoutAlgorithm\n     * @excluding approximation, attractiveForce, repulsiveForce, theta\n     * @since     7.1.0\n     *\n     * @private\n     */\n    layoutAlgorithm: {\n        /**\n         * Initial layout algorithm for positioning nodes. Can be one of\n         * the built-in options (\"circle\", \"random\") or a function where\n         * positions should be set on each node (`this.nodes`) as\n         * `node.plotX` and `node.plotY`.\n         *\n         * @sample highcharts/series-networkgraph/initial-positions/\n         *         Initial positions with callback\n         *\n         * @type {\"circle\"|\"random\"|Function}\n         */\n        initialPositions: 'circle',\n        /**\n         * @sample highcharts/series-packedbubble/initial-radius/\n         *         Initial radius set to 200\n         *\n         * @extends   plotOptions.networkgraph.layoutAlgorithm.initialPositionRadius\n         * @excluding states\n         */\n        initialPositionRadius: 20,\n        /**\n         * The distance between two bubbles, when the algorithm starts to\n         * treat two bubbles as overlapping. The `bubblePadding` is also the\n         * expected distance between all the bubbles on simulation end.\n         */\n        bubblePadding: 5,\n        /**\n         * Whether bubbles should interact with their parentNode to keep\n         * them inside.\n         */\n        parentNodeLimit: false,\n        /**\n         * Whether series should interact with each other or not. When\n         * `parentNodeLimit` is set to true, thi option should be set to\n         * false to avoid sticking points in wrong series parentNode.\n         */\n        seriesInteraction: true,\n        /**\n         * In case of split series, this option allows user to drag and\n         * drop points between series, for changing point related series.\n         *\n         * @sample highcharts/series-packedbubble/packed-dashboard/\n         *         Example of drag'n drop bubbles for bubble kanban\n         */\n        dragBetweenSeries: false,\n        /**\n         * Layout algorithm options for parent nodes.\n         *\n         * @extends   plotOptions.networkgraph.layoutAlgorithm\n         * @excluding approximation, attractiveForce, enableSimulation,\n         *            repulsiveForce, theta\n         */\n        parentNodeOptions: {\n            maxIterations: 400,\n            gravitationalConstant: 0.03,\n            maxSpeed: 50,\n            initialPositionRadius: 100,\n            seriesInteraction: true,\n            /**\n             * Styling options for parentNodes markers. Similar to\n             * line.marker options.\n             *\n             * @sample highcharts/series-packedbubble/parentnode-style/\n             *         Bubble size\n             *\n             * @extends   plotOptions.series.marker\n             * @excluding states\n             */\n            marker: {\n                fillColor: null,\n                fillOpacity: 1,\n                lineWidth: null,\n                lineColor: null,\n                symbol: 'circle'\n            }\n        },\n        enableSimulation: true,\n        /**\n         * Type of the algorithm used when positioning bubbles.\n         * @ignore-option\n         */\n        type: 'packedbubble',\n        /**\n         * Integration type. Integration determines how forces are applied\n         * on particles. The `packedbubble` integration is based on\n         * the networkgraph `verlet` integration, where the new position\n         * is based on a previous position without velocity:\n         * `newPosition += previousPosition - newPosition`.\n         *\n         * @sample highcharts/series-networkgraph/forces/\n         *\n         * @ignore-option\n         */\n        integration: 'packedbubble',\n        maxIterations: 1000,\n        /**\n         * Whether to split series into individual groups or to mix all\n         * series together.\n         *\n         * @since   7.1.0\n         * @default false\n         */\n        splitSeries: false,\n        /**\n         * Max speed that node can get in one iteration. In terms of\n         * simulation, it's a maximum translation (in pixels) that a node\n         * can move (in both, x and y, dimensions). While `friction` is\n         * applied on all nodes, max speed is applied only for nodes that\n         * move very fast, for example small or disconnected ones.\n         *\n         * @see [layoutAlgorithm.integration](#series.networkgraph.layoutAlgorithm.integration)\n         *\n         * @see [layoutAlgorithm.friction](#series.networkgraph.layoutAlgorithm.friction)\n         */\n        maxSpeed: 5,\n        gravitationalConstant: 0.01,\n        friction: -0.981\n    }\n};\n/* *\n *\n *  Default Export\n *\n * */\nexport default PackedBubbleSeriesDefaults;\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A `packedbubble` series. If the [type](#series.packedbubble.type) option is\n * not specified, it is inherited from [chart.type](#chart.type).\n *\n * @type      {Object}\n * @extends   series,plotOptions.packedbubble\n * @excluding cropThreshold, dataParser, dataSorting, dataURL, dragDrop, stack,\n *            boostThreshold, boostBlending\n * @product   highcharts\n * @requires  highcharts-more\n * @apioption series.packedbubble\n */\n/**\n * An array of data points for the series. For the `packedbubble` series type,\n * points can be given in the following ways:\n *\n * 1.  An array of `values`.\n *\n *  ```js\n *     data: [5, 1, 20]\n *  ```\n *\n * 2.  An array of objects with named values. The objects are point\n * configuration objects as seen below. If the total number of data points\n * exceeds the series' [turboThreshold](#series.packedbubble.turboThreshold),\n * this option is not available.\n *\n *  ```js\n *     data: [{\n *         value: 1,\n *         name: \"Point2\",\n *         color: \"#00FF00\"\n *     }, {\n *         value: 5,\n *         name: \"Point1\",\n *         color: \"#FF00FF\"\n *     }]\n *  ```\n *\n * @type      {Array<Object|Array>}\n * @extends   series.line.data\n * @excluding marker, x, y\n * @sample    {highcharts} highcharts/series/data-array-of-objects/\n *            Config objects\n * @product   highcharts\n * @apioption series.packedbubble.data\n */\n/**\n * @type      {Highcharts.SeriesPackedBubbleDataLabelsOptionsObject|Array<Highcharts.SeriesPackedBubbleDataLabelsOptionsObject>}\n * @product   highcharts\n * @apioption series.packedbubble.data.dataLabels\n */\n/**\n * @excluding enabled,enabledThreshold,height,radius,width\n * @product   highcharts\n * @apioption series.packedbubble.marker\n */\n''; // adds doclets above to transpiled file\n","/* *\n *\n *  Networkgraph series\n *\n *  (c) 2010-2021 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Attractive force.\n *\n * In Verlet integration, force is applied on a node immidatelly to it's\n * `plotX` and `plotY` position.\n *\n * @private\n * @param {Highcharts.Point} link\n *        Link that connects two nodes\n * @param {number} force\n *        Force calcualated in `repulsiveForceFunction`\n * @param {Highcharts.PositionObject} distance\n *        Distance between two nodes e.g. `{x, y}`\n */\nfunction attractive(link, force, distanceXY) {\n    var massFactor = link.getMass(), translatedX = -distanceXY.x * force * this.diffTemperature, translatedY = -distanceXY.y * force * this.diffTemperature;\n    if (!link.fromNode.fixedPosition) {\n        link.fromNode.plotX -=\n            translatedX * massFactor.fromNode / link.fromNode.degree;\n        link.fromNode.plotY -=\n            translatedY * massFactor.fromNode / link.fromNode.degree;\n    }\n    if (!link.toNode.fixedPosition) {\n        link.toNode.plotX +=\n            translatedX * massFactor.toNode / link.toNode.degree;\n        link.toNode.plotY +=\n            translatedY * massFactor.toNode / link.toNode.degree;\n    }\n}\n/**\n * Attractive force funtion. Can be replaced by API's\n * `layoutAlgorithm.attractiveForce`\n *\n * @private\n * @param {number} d current distance between two nodes\n * @param {number} k expected distance between two nodes\n * @return {number} force\n */\nfunction attractiveForceFunction(d, k) {\n    // Used in API:\n    return (k - d) / d;\n}\n/**\n * Barycenter force. Calculate and applys barycenter forces on the\n * nodes. Making them closer to the center of their barycenter point.\n *\n * In Verlet integration, force is applied on a node immidatelly to it's\n * `plotX` and `plotY` position.\n *\n * @private\n */\nfunction barycenter() {\n    var gravitationalConstant = this.options.gravitationalConstant, xFactor = this.barycenter.xFactor, yFactor = this.barycenter.yFactor;\n    // To consider:\n    xFactor = (xFactor - (this.box.left + this.box.width) / 2) *\n        gravitationalConstant;\n    yFactor = (yFactor - (this.box.top + this.box.height) / 2) *\n        gravitationalConstant;\n    this.nodes.forEach(function (node) {\n        if (!node.fixedPosition) {\n            node.plotX -=\n                xFactor / node.mass / node.degree;\n            node.plotY -=\n                yFactor / node.mass / node.degree;\n        }\n    });\n}\n/**\n * Estiamte the best possible distance between two nodes, making graph\n * readable.\n * @private\n */\nfunction getK(layout) {\n    return Math.pow(layout.box.width * layout.box.height / layout.nodes.length, 0.5);\n}\n/**\n * Integration method.\n *\n * In Verlet integration, forces are applied on node immidatelly to it's\n * `plotX` and `plotY` position.\n *\n * Verlet without velocity:\n *\n *    x(n+1) = 2 * x(n) - x(n-1) + A(T) * deltaT ^ 2\n *\n * where:\n *     - x(n+1) - new position\n *     - x(n) - current position\n *     - x(n-1) - previous position\n *\n * Assuming A(t) = 0 (no acceleration) and (deltaT = 1) we get:\n *\n *     x(n+1) = x(n) + (x(n) - x(n-1))\n *\n * where:\n *     - (x(n) - x(n-1)) - position change\n *\n * TO DO:\n * Consider Verlet with velocity to support additional\n * forces. Or even Time-Corrected Verlet by Jonathan\n * \"lonesock\" Dummer\n *\n * @private\n * @param {Highcharts.NetworkgraphLayout} layout layout object\n * @param {Highcharts.Point} node node that should be translated\n */\nfunction integrate(layout, node) {\n    var friction = -layout.options.friction, maxSpeed = layout.options.maxSpeed, prevX = node.prevX, prevY = node.prevY, \n    // Apply friciton:\n    diffX = ((node.plotX + node.dispX -\n        prevX) * friction), diffY = ((node.plotY + node.dispY -\n        prevY) * friction), abs = Math.abs, signX = abs(diffX) / (diffX || 1), // need to deal with 0\n    signY = abs(diffY) / (diffY || 1);\n    // Apply max speed:\n    diffX = signX * Math.min(maxSpeed, Math.abs(diffX));\n    diffY = signY * Math.min(maxSpeed, Math.abs(diffY));\n    // Store for the next iteration:\n    node.prevX = node.plotX + node.dispX;\n    node.prevY = node.plotY + node.dispY;\n    // Update positions:\n    node.plotX += diffX;\n    node.plotY += diffY;\n    node.temperature = layout.vectorLength({\n        x: diffX,\n        y: diffY\n    });\n}\n/**\n * Repulsive force.\n *\n * In Verlet integration, force is applied on a node immidatelly to it's\n * `plotX` and `plotY` position.\n *\n * @private\n * @param {Highcharts.Point} node\n *        Node that should be translated by force.\n * @param {number} force\n *        Force calcualated in `repulsiveForceFunction`\n * @param {Highcharts.PositionObject} distance\n *        Distance between two nodes e.g. `{x, y}`\n */\nfunction repulsive(node, force, distanceXY) {\n    var factor = force * this.diffTemperature / node.mass / node.degree;\n    if (!node.fixedPosition) {\n        node.plotX += distanceXY.x * factor;\n        node.plotY += distanceXY.y * factor;\n    }\n}\n/**\n * Repulsive force funtion. Can be replaced by API's\n * `layoutAlgorithm.repulsiveForce`\n *\n * @private\n * @param {number} d current distance between two nodes\n * @param {number} k expected distance between two nodes\n * @return {number} force\n */\nfunction repulsiveForceFunction(d, k) {\n    // Used in API:\n    return (k - d) / d * (k > d ? 1 : 0); // Force only for close nodes\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar VerletIntegration = {\n    attractive: attractive,\n    attractiveForceFunction: attractiveForceFunction,\n    barycenter: barycenter,\n    getK: getK,\n    integrate: integrate,\n    repulsive: repulsive,\n    repulsiveForceFunction: repulsiveForceFunction\n};\nexport default VerletIntegration;\n","/* *\n *\n *  (c) 2010-2021 Grzegorz Blachlinski, Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport H from '../../Core/Globals.js';\nvar noop = H.noop;\nimport VerletIntegration from '../Networkgraph/VerletIntegration.js';\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction barycenter() {\n    var layout = this, gravitationalConstant = layout.options.gravitationalConstant, box = layout.box, nodes = layout.nodes;\n    var centerX, centerY;\n    for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n        var node = nodes_1[_i];\n        if (layout.options.splitSeries && !node.isParentNode) {\n            centerX = node.series.parentNode.plotX;\n            centerY = node.series.parentNode.plotY;\n        }\n        else {\n            centerX = box.width / 2;\n            centerY = box.height / 2;\n        }\n        if (!node.fixedPosition) {\n            node.plotX -=\n                (node.plotX - centerX) *\n                    gravitationalConstant /\n                    (node.mass * Math.sqrt(nodes.length));\n            node.plotY -=\n                (node.plotY - centerY) *\n                    gravitationalConstant /\n                    (node.mass * Math.sqrt(nodes.length));\n        }\n    }\n}\n/**\n * @private\n */\nfunction repulsive(node, force, distanceXY, repNode) {\n    var factor = (force * this.diffTemperature / node.mass /\n        node.degree), x = distanceXY.x * factor, y = distanceXY.y * factor;\n    if (!node.fixedPosition) {\n        node.plotX += x;\n        node.plotY += y;\n    }\n    if (!repNode.fixedPosition) {\n        repNode.plotX -= x;\n        repNode.plotY -= y;\n    }\n}\n/**\n * @private\n */\nfunction repulsiveForceFunction(d, k, node, repNode) {\n    return Math.min(d, (node.marker.radius +\n        repNode.marker.radius) / 2);\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar PackedBubbleIntegration = {\n    barycenter: barycenter,\n    getK: noop,\n    integrate: VerletIntegration.integrate,\n    repulsive: repulsive,\n    repulsiveForceFunction: repulsiveForceFunction\n};\nexport default PackedBubbleIntegration;\n","/* *\n *\n *  Networkgraph series\n *\n *  (c) 2010-2021 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Attractive force.\n *\n * In Euler integration, force is stored in a node, not changing it's\n * position. Later, in `integrate()` forces are applied on nodes.\n *\n * @private\n * @param {Highcharts.Point} link\n *        Link that connects two nodes\n * @param {number} force\n *        Force calcualated in `repulsiveForceFunction`\n * @param {Highcharts.PositionObject} distanceXY\n *        Distance between two nodes e.g. `{x, y}`\n * @param {number} distanceR\n     */\nfunction attractive(link, force, distanceXY, distanceR) {\n    var massFactor = link.getMass(), translatedX = (distanceXY.x / distanceR) * force, translatedY = (distanceXY.y / distanceR) * force;\n    if (!link.fromNode.fixedPosition) {\n        link.fromNode.dispX -=\n            translatedX * massFactor.fromNode / link.fromNode.degree;\n        link.fromNode.dispY -=\n            translatedY * massFactor.fromNode / link.fromNode.degree;\n    }\n    if (!link.toNode.fixedPosition) {\n        link.toNode.dispX +=\n            translatedX * massFactor.toNode / link.toNode.degree;\n        link.toNode.dispY +=\n            translatedY * massFactor.toNode / link.toNode.degree;\n    }\n}\n/**\n * Attractive force funtion. Can be replaced by API's\n * `layoutAlgorithm.attractiveForce`\n *\n * Other forces that can be used:\n *\n * basic, not recommended:\n *    `function (d, k) { return d / k }`\n *\n * @private\n * @param {number} d current distance between two nodes\n * @param {number} k expected distance between two nodes\n * @return {number} force\n */\nfunction attractiveForceFunction(d, k) {\n    return d * d / k;\n}\n/**\n * Barycenter force. Calculate and applys barycenter forces on the\n * nodes. Making them closer to the center of their barycenter point.\n *\n * In Euler integration, force is stored in a node, not changing it's\n * position. Later, in `integrate()` forces are applied on nodes.\n *\n * @private\n */\nfunction barycenter() {\n    var gravitationalConstant = this.options.gravitationalConstant, xFactor = this.barycenter.xFactor, yFactor = this.barycenter.yFactor;\n    this.nodes.forEach(function (node) {\n        if (!node.fixedPosition) {\n            var degree = node.getDegree(), phi = degree * (1 + degree / 2);\n            node.dispX += ((xFactor - node.plotX) *\n                gravitationalConstant *\n                phi / node.degree);\n            node.dispY += ((yFactor - node.plotY) *\n                gravitationalConstant *\n                phi / node.degree);\n        }\n    });\n}\n/**\n * Estiamte the best possible distance between two nodes, making graph\n * readable.\n * @private\n */\nfunction getK(layout) {\n    return Math.pow(layout.box.width * layout.box.height / layout.nodes.length, 0.3);\n}\n/**\n * Integration method.\n *\n * In Euler integration, force were stored in a node, not changing it's\n * position. Now, in the integrator method, we apply changes.\n *\n * Euler:\n *\n * Basic form: `x(n+1) = x(n) + v(n)`\n *\n * With Rengoild-Fruchterman we get:\n * `x(n+1) = x(n) + v(n) / length(v(n)) * min(v(n), temperature(n))`\n * where:\n * - `x(n+1)`: next position\n * - `x(n)`: current position\n * - `v(n)`: velocity (comes from net force)\n * - `temperature(n)`: current temperature\n *\n * Known issues:\n * Oscillations when force vector has the same magnitude but opposite\n * direction in the next step. Potentially solved by decreasing force by\n * `v * (1 / node.degree)`\n *\n * Note:\n * Actually `min(v(n), temperature(n))` replaces simulated annealing.\n *\n * @private\n * @param {Highcharts.NetworkgraphLayout} layout\n *        Layout object\n * @param {Highcharts.Point} node\n *        Node that should be translated\n */\nfunction integrate(layout, node) {\n    var distanceR;\n    node.dispX +=\n        node.dispX * layout.options.friction;\n    node.dispY +=\n        node.dispY * layout.options.friction;\n    distanceR = node.temperature = layout.vectorLength({\n        x: node.dispX,\n        y: node.dispY\n    });\n    if (distanceR !== 0) {\n        node.plotX += (node.dispX / distanceR *\n            Math.min(Math.abs(node.dispX), layout.temperature));\n        node.plotY += (node.dispY / distanceR *\n            Math.min(Math.abs(node.dispY), layout.temperature));\n    }\n}\n/**\n * Repulsive force.\n *\n * @private\n * @param {Highcharts.Point} node\n *        Node that should be translated by force.\n * @param {number} force\n *        Force calcualated in `repulsiveForceFunction`\n * @param {Highcharts.PositionObject} distanceXY\n *        Distance between two nodes e.g. `{x, y}`\n */\nfunction repulsive(node, force, distanceXY, distanceR) {\n    node.dispX +=\n        (distanceXY.x / distanceR) * force / node.degree;\n    node.dispY +=\n        (distanceXY.y / distanceR) * force / node.degree;\n}\n/**\n * Repulsive force funtion. Can be replaced by API's\n * `layoutAlgorithm.repulsiveForce`.\n *\n * Other forces that can be used:\n *\n * basic, not recommended:\n *    `function (d, k) { return k / d }`\n *\n * standard:\n *    `function (d, k) { return k * k / d }`\n *\n * grid-variant:\n *    `function (d, k) { return k * k / d * (2 * k - d > 0 ? 1 : 0) }`\n *\n * @private\n * @param {number} d current distance between two nodes\n * @param {number} k expected distance between two nodes\n * @return {number} force\n */\nfunction repulsiveForceFunction(d, k) {\n    return k * k / d;\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar EulerIntegration = {\n    attractive: attractive,\n    attractiveForceFunction: attractiveForceFunction,\n    barycenter: barycenter,\n    getK: getK,\n    integrate: integrate,\n    repulsive: repulsive,\n    repulsiveForceFunction: repulsiveForceFunction\n};\nexport default EulerIntegration;\n","/* *\n *\n *  Networkgraph series\n *\n *  (c) 2010-2021 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n/* *\n *\n *  Class\n *\n * */\n/**\n * The QuadTree node class. Used in Networkgraph chart as a base for Barnes-Hut\n * approximation.\n *\n * @private\n * @class\n * @name Highcharts.QuadTreeNode\n *\n * @param {Highcharts.Dictionary<number>} box\n *        Available space for the node\n */\nvar QuadTreeNode = /** @class */ (function () {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    function QuadTreeNode(box) {\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        /**\n         * Read only. If QuadTreeNode is an external node, Point is stored in\n         * `this.body`.\n         *\n         * @name Highcharts.QuadTreeNode#body\n         * @type {boolean|Highcharts.Point}\n         */\n        this.body = false;\n        /**\n         * Read only. Internal nodes when created are empty to reserve the\n         * space. If Point is added to this QuadTreeNode, QuadTreeNode is no\n         * longer empty.\n         *\n         * @name Highcharts.QuadTreeNode#isEmpty\n         * @type {boolean}\n         */\n        this.isEmpty = false;\n        /**\n         * Read only. Flag to determine if QuadTreeNode is internal (and has\n         * subnodes with mass and central position) or external (bound to\n         * Point).\n         *\n         * @name Highcharts.QuadTreeNode#isInternal\n         * @type {boolean}\n         */\n        this.isInternal = false;\n        /**\n         * Read only. Array of subnodes. Empty if QuadTreeNode has just one\n         * Point. When added another Point to this QuadTreeNode, array is\n         * filled with four subnodes.\n         *\n         * @name Highcharts.QuadTreeNode#nodes\n         * @type {Array<Highcharts.QuadTreeNode>}\n         */\n        this.nodes = [];\n        /**\n         * Read only. The available space for node.\n         *\n         * @name Highcharts.QuadTreeNode#box\n         * @type {Highcharts.Dictionary<number>}\n         */\n        this.box = box;\n        /**\n         * Read only. The minium of width and height values.\n         *\n         * @name Highcharts.QuadTreeNode#boxSize\n         * @type {number}\n         */\n        this.boxSize = Math.min(box.width, box.height);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * When inserting another node into the box, that already hove one node,\n     * divide the available space into another four quadrants.\n     *\n     * Indexes of quadrants are:\n     * ```\n     * -------------               -------------\n     * |           |               |     |     |\n     * |           |               |  0  |  1  |\n     * |           |   divide()    |     |     |\n     * |     1     | ----------->  -------------\n     * |           |               |     |     |\n     * |           |               |  3  |  2  |\n     * |           |               |     |     |\n     * -------------               -------------\n     * ```\n     */\n    QuadTreeNode.prototype.divideBox = function () {\n        var halfWidth = this.box.width / 2, halfHeight = this.box.height / 2;\n        // Top left\n        this.nodes[0] = new QuadTreeNode({\n            left: this.box.left,\n            top: this.box.top,\n            width: halfWidth,\n            height: halfHeight\n        });\n        // Top right\n        this.nodes[1] = new QuadTreeNode({\n            left: this.box.left + halfWidth,\n            top: this.box.top,\n            width: halfWidth,\n            height: halfHeight\n        });\n        // Bottom right\n        this.nodes[2] = new QuadTreeNode({\n            left: this.box.left + halfWidth,\n            top: this.box.top + halfHeight,\n            width: halfWidth,\n            height: halfHeight\n        });\n        // Bottom left\n        this.nodes[3] = new QuadTreeNode({\n            left: this.box.left,\n            top: this.box.top + halfHeight,\n            width: halfWidth,\n            height: halfHeight\n        });\n    };\n    /**\n     * Determine which of the quadrants should be used when placing node in\n     * the QuadTree. Returned index is always in range `< 0 , 3 >`.\n     * @private\n     */\n    QuadTreeNode.prototype.getBoxPosition = function (point) {\n        var left = point.plotX < this.box.left + this.box.width / 2, top = point.plotY < this.box.top + this.box.height / 2;\n        var index;\n        if (left) {\n            if (top) {\n                // Top left\n                index = 0;\n            }\n            else {\n                // Bottom left\n                index = 3;\n            }\n        }\n        else {\n            if (top) {\n                // Top right\n                index = 1;\n            }\n            else {\n                // Bottom right\n                index = 2;\n            }\n        }\n        return index;\n    };\n    /**\n     * Insert recursively point(node) into the QuadTree. If the given\n     * quadrant is already occupied, divide it into smaller quadrants.\n     *\n     * @param {Highcharts.Point} point\n     *        Point/node to be inserted\n     * @param {number} depth\n     *        Max depth of the QuadTree\n     */\n    QuadTreeNode.prototype.insert = function (point, depth) {\n        var newQuadTreeNode;\n        if (this.isInternal) {\n            // Internal node:\n            this.nodes[this.getBoxPosition(point)].insert(point, depth - 1);\n        }\n        else {\n            this.isEmpty = false;\n            if (!this.body) {\n                // First body in a quadrant:\n                this.isInternal = false;\n                this.body = point;\n            }\n            else {\n                if (depth) {\n                    // Every other body in a quadrant:\n                    this.isInternal = true;\n                    this.divideBox();\n                    // Reinsert main body only once:\n                    if (this.body !== true) {\n                        this.nodes[this.getBoxPosition(this.body)]\n                            .insert(this.body, depth - 1);\n                        this.body = true;\n                    }\n                    // Add second body:\n                    this.nodes[this.getBoxPosition(point)]\n                        .insert(point, depth - 1);\n                }\n                else {\n                    // We are below max allowed depth. That means either:\n                    // - really huge number of points\n                    // - falling two points into exactly the same position\n                    // In this case, create another node in the QuadTree.\n                    //\n                    // Alternatively we could add some noise to the\n                    // position, but that could result in different\n                    // rendered chart in exporting.\n                    newQuadTreeNode = new QuadTreeNode({\n                        top: point.plotX || NaN,\n                        left: point.plotY || NaN,\n                        // Width/height below 1px\n                        width: 0.1,\n                        height: 0.1\n                    });\n                    newQuadTreeNode.body = point;\n                    newQuadTreeNode.isInternal = false;\n                    this.nodes.push(newQuadTreeNode);\n                }\n            }\n        }\n    };\n    /**\n     * Each quad node requires it's mass and center position. That mass and\n     * position is used to imitate real node in the layout by approximation.\n     */\n    QuadTreeNode.prototype.updateMassAndCenter = function () {\n        var mass = 0, plotX = 0, plotY = 0;\n        if (this.isInternal) {\n            // Calcualte weightened mass of the quad node:\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var pointMass = _a[_i];\n                if (!pointMass.isEmpty) {\n                    mass += pointMass.mass;\n                    plotX += pointMass.plotX * pointMass.mass;\n                    plotY += pointMass.plotY * pointMass.mass;\n                }\n            }\n            plotX /= mass;\n            plotY /= mass;\n        }\n        else if (this.body) {\n            // Just one node, use coordinates directly:\n            mass = this.body.mass;\n            plotX = this.body.plotX;\n            plotY = this.body.plotY;\n        }\n        // Store details:\n        this.mass = mass;\n        this.plotX = plotX;\n        this.plotY = plotY;\n    };\n    return QuadTreeNode;\n}());\n/* *\n *\n *  Default Export\n *\n * */\nexport default QuadTreeNode;\n","/* *\n *\n *  Networkgraph series\n *\n *  (c) 2010-2021 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport QuadTreeNode from './QuadTreeNode.js';\n/* *\n *\n *  Class\n *\n * */\n/**\n * The QuadTree class. Used in Networkgraph chart as a base for Barnes-Hut\n * approximation.\n *\n * @private\n * @class\n * @name Highcharts.QuadTree\n *\n * @param {number} x\n *        Left position of the plotting area\n * @param {number} y\n *        Top position of the plotting area\n * @param {number} width\n *        Width of the plotting area\n * @param {number} height\n *        Height of the plotting area\n */\nvar QuadTree = /** @class */ (function () {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    function QuadTree(x, y, width, height) {\n        // Boundary rectangle:\n        this.box = {\n            left: x,\n            top: y,\n            width: width,\n            height: height\n        };\n        this.maxDepth = 25;\n        this.root = new QuadTreeNode(this.box);\n        this.root.isInternal = true;\n        this.root.isRoot = true;\n        this.root.divideBox();\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Calculate mass of the each QuadNode in the tree.\n     */\n    QuadTree.prototype.calculateMassAndCenter = function () {\n        this.visitNodeRecursive(null, null, function (node) {\n            node.updateMassAndCenter();\n        });\n    };\n    /**\n     * Insert nodes into the QuadTree\n     *\n     * @param {Array<Highcharts.Point>} points\n     *        Points as nodes\n     */\n    QuadTree.prototype.insertNodes = function (points) {\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var point = points_1[_i];\n            this.root.insert(point, this.maxDepth);\n        }\n    };\n    /**\n     * Depfth first treversal (DFS). Using `before` and `after` callbacks,\n     * we can get two results: preorder and postorder traversals, reminder:\n     *\n     * ```\n     *     (a)\n     *     / \\\n     *   (b) (c)\n     *   / \\\n     * (d) (e)\n     * ```\n     *\n     * DFS (preorder): `a -> b -> d -> e -> c`\n     *\n     * DFS (postorder): `d -> e -> b -> c -> a`\n     *\n     * @param {Highcharts.QuadTreeNode|null} node\n     *        QuadTree node\n     * @param {Function} [beforeCallback]\n     *        Function to be called before visiting children nodes.\n     * @param {Function} [afterCallback]\n     *        Function to be called after visiting children nodes.\n     */\n    QuadTree.prototype.visitNodeRecursive = function (node, beforeCallback, afterCallback) {\n        var goFurther;\n        if (!node) {\n            node = this.root;\n        }\n        if (node === this.root && beforeCallback) {\n            goFurther = beforeCallback(node);\n        }\n        if (goFurther === false) {\n            return;\n        }\n        for (var _i = 0, _a = node.nodes; _i < _a.length; _i++) {\n            var qtNode = _a[_i];\n            if (qtNode.isInternal) {\n                if (beforeCallback) {\n                    goFurther = beforeCallback(qtNode);\n                }\n                if (goFurther === false) {\n                    continue;\n                }\n                this.visitNodeRecursive(qtNode, beforeCallback, afterCallback);\n            }\n            else if (qtNode.body) {\n                if (beforeCallback) {\n                    beforeCallback(qtNode.body);\n                }\n            }\n            if (afterCallback) {\n                afterCallback(qtNode);\n            }\n        }\n        if (node === this.root && afterCallback) {\n            afterCallback(node);\n        }\n    };\n    return QuadTree;\n}());\n/* *\n *\n *  Default Export\n *\n * */\nexport default QuadTree;\n","/* *\n *\n *  Networkgraph series\n *\n *  (c) 2010-2021 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport EulerIntegration from './EulerIntegration.js';\nimport H from '../../Core/Globals.js';\nvar win = H.win;\nimport GraphLayout from '../GraphLayoutComposition.js';\nimport QuadTree from './QuadTree.js';\nimport U from '../../Core/Utilities.js';\nvar clamp = U.clamp, defined = U.defined, isFunction = U.isFunction, pick = U.pick;\nimport VerletIntegration from './VerletIntegration.js';\n/* *\n *\n *  Class\n *\n * */\n/**\n * Reingold-Fruchterman algorithm from\n * \"Graph Drawing by Force-directed Placement\" paper.\n * @private\n */\nvar ReingoldFruchtermanLayout = /** @class */ (function () {\n    function ReingoldFruchtermanLayout() {\n        /* *\n         *\n         *  Static Functions\n         *\n         * */\n        this.attractiveForce = void 0;\n        this.box = {};\n        this.currentStep = 0;\n        this.initialRendering = true;\n        this.integration = void 0;\n        this.links = [];\n        this.nodes = [];\n        this.options = void 0;\n        this.quadTree = void 0;\n        this.repulsiveForce = void 0;\n        this.series = [];\n        this.simulation = false;\n    }\n    ReingoldFruchtermanLayout.compose = function (ChartClass) {\n        GraphLayout.compose(ChartClass);\n        GraphLayout.integrations.euler = EulerIntegration;\n        GraphLayout.integrations.verlet = VerletIntegration;\n        GraphLayout.layouts['reingold-fruchterman'] =\n            ReingoldFruchtermanLayout;\n    };\n    ReingoldFruchtermanLayout.prototype.init = function (options) {\n        this.options = options;\n        this.nodes = [];\n        this.links = [];\n        this.series = [];\n        this.box = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        };\n        this.setInitialRendering(true);\n        this.integration =\n            GraphLayout.integrations[options.integration];\n        this.enableSimulation = options.enableSimulation;\n        this.attractiveForce = pick(options.attractiveForce, this.integration.attractiveForceFunction);\n        this.repulsiveForce = pick(options.repulsiveForce, this.integration.repulsiveForceFunction);\n        this.approximation = options.approximation;\n    };\n    ReingoldFruchtermanLayout.prototype.updateSimulation = function (enable) {\n        this.enableSimulation = pick(enable, this.options.enableSimulation);\n    };\n    ReingoldFruchtermanLayout.prototype.start = function () {\n        var layout = this, series = this.series, options = this.options;\n        layout.currentStep = 0;\n        layout.forces = series[0] && series[0].forces || [];\n        layout.chart = series[0] && series[0].chart;\n        if (layout.initialRendering) {\n            layout.initPositions();\n            // Render elements in initial positions:\n            series.forEach(function (s) {\n                s.finishedAnimating = true; // #13169\n                s.render();\n            });\n        }\n        layout.setK();\n        layout.resetSimulation(options);\n        if (layout.enableSimulation) {\n            layout.step();\n        }\n    };\n    ReingoldFruchtermanLayout.prototype.step = function () {\n        var _this = this;\n        var anyLayout = this, allSeries = this.series;\n        // Algorithm:\n        this.currentStep++;\n        if (this.approximation === 'barnes-hut') {\n            this.createQuadTree();\n            this.quadTree.calculateMassAndCenter();\n        }\n        for (var _i = 0, _a = this.forces || []; _i < _a.length; _i++) {\n            var forceName = _a[_i];\n            anyLayout[forceName + 'Forces'](this.temperature);\n        }\n        // Limit to the plotting area and cool down:\n        this.applyLimits();\n        // Cool down the system:\n        this.temperature = this.coolDown(this.startTemperature, this.diffTemperature, this.currentStep);\n        this.prevSystemTemperature = this.systemTemperature;\n        this.systemTemperature = this.getSystemTemperature();\n        if (this.enableSimulation) {\n            for (var _b = 0, allSeries_1 = allSeries; _b < allSeries_1.length; _b++) {\n                var series = allSeries_1[_b];\n                // Chart could be destroyed during the simulation\n                if (series.chart) {\n                    series.render();\n                }\n            }\n            if (this.maxIterations-- &&\n                isFinite(this.temperature) &&\n                !this.isStable()) {\n                if (this.simulation) {\n                    win.cancelAnimationFrame(this.simulation);\n                }\n                this.simulation = win.requestAnimationFrame(function () { return _this.step(); });\n            }\n            else {\n                this.simulation = false;\n            }\n        }\n    };\n    ReingoldFruchtermanLayout.prototype.stop = function () {\n        if (this.simulation) {\n            win.cancelAnimationFrame(this.simulation);\n        }\n    };\n    ReingoldFruchtermanLayout.prototype.setArea = function (x, y, w, h) {\n        this.box = {\n            left: x,\n            top: y,\n            width: w,\n            height: h\n        };\n    };\n    ReingoldFruchtermanLayout.prototype.setK = function () {\n        // Optimal distance between nodes,\n        // available space around the node:\n        this.k = this.options.linkLength || this.integration.getK(this);\n    };\n    ReingoldFruchtermanLayout.prototype.addElementsToCollection = function (elements, collection) {\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            if (collection.indexOf(element) === -1) {\n                collection.push(element);\n            }\n        }\n    };\n    ReingoldFruchtermanLayout.prototype.removeElementFromCollection = function (element, collection) {\n        var index = collection.indexOf(element);\n        if (index !== -1) {\n            collection.splice(index, 1);\n        }\n    };\n    ReingoldFruchtermanLayout.prototype.clear = function () {\n        this.nodes.length = 0;\n        this.links.length = 0;\n        this.series.length = 0;\n        this.resetSimulation();\n    };\n    ReingoldFruchtermanLayout.prototype.resetSimulation = function () {\n        this.forcedStop = false;\n        this.systemTemperature = 0;\n        this.setMaxIterations();\n        this.setTemperature();\n        this.setDiffTemperature();\n    };\n    ReingoldFruchtermanLayout.prototype.restartSimulation = function () {\n        if (!this.simulation) {\n            // When dragging nodes, we don't need to calculate\n            // initial positions and rendering nodes:\n            this.setInitialRendering(false);\n            // Start new simulation:\n            if (!this.enableSimulation) {\n                // Run only one iteration to speed things up:\n                this.setMaxIterations(1);\n            }\n            else {\n                this.start();\n            }\n            if (this.chart) {\n                this.chart.redraw();\n            }\n            // Restore defaults:\n            this.setInitialRendering(true);\n        }\n        else {\n            // Extend current simulation:\n            this.resetSimulation();\n        }\n    };\n    ReingoldFruchtermanLayout.prototype.setMaxIterations = function (maxIterations) {\n        this.maxIterations = pick(maxIterations, this.options.maxIterations);\n    };\n    ReingoldFruchtermanLayout.prototype.setTemperature = function () {\n        this.temperature = this.startTemperature =\n            Math.sqrt(this.nodes.length);\n    };\n    ReingoldFruchtermanLayout.prototype.setDiffTemperature = function () {\n        this.diffTemperature = this.startTemperature /\n            (this.options.maxIterations + 1);\n    };\n    ReingoldFruchtermanLayout.prototype.setInitialRendering = function (enable) {\n        this.initialRendering = enable;\n    };\n    ReingoldFruchtermanLayout.prototype.createQuadTree = function () {\n        this.quadTree = new QuadTree(this.box.left, this.box.top, this.box.width, this.box.height);\n        this.quadTree.insertNodes(this.nodes);\n    };\n    ReingoldFruchtermanLayout.prototype.initPositions = function () {\n        var initialPositions = this.options.initialPositions;\n        if (isFunction(initialPositions)) {\n            initialPositions.call(this);\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var node = _a[_i];\n                if (!defined(node.prevX)) {\n                    node.prevX = node.plotX;\n                }\n                if (!defined(node.prevY)) {\n                    node.prevY = node.plotY;\n                }\n                node.dispX = 0;\n                node.dispY = 0;\n            }\n        }\n        else if (initialPositions === 'circle') {\n            this.setCircularPositions();\n        }\n        else {\n            this.setRandomPositions();\n        }\n    };\n    ReingoldFruchtermanLayout.prototype.setCircularPositions = function () {\n        var box = this.box, nodes = this.nodes, nodesLength = nodes.length + 1, angle = 2 * Math.PI / nodesLength, rootNodes = nodes.filter(function (node) {\n            return node.linksTo.length === 0;\n        }), visitedNodes = {}, radius = this.options.initialPositionRadius, addToNodes = function (node) {\n            for (var _i = 0, _a = node.linksFrom || []; _i < _a.length; _i++) {\n                var link = _a[_i];\n                if (!visitedNodes[link.toNode.id]) {\n                    visitedNodes[link.toNode.id] = true;\n                    sortedNodes.push(link.toNode);\n                    addToNodes(link.toNode);\n                }\n            }\n        };\n        var sortedNodes = [];\n        // Start with identified root nodes an sort the nodes by their\n        // hierarchy. In trees, this ensures that branches don't cross\n        // eachother.\n        for (var _i = 0, rootNodes_1 = rootNodes; _i < rootNodes_1.length; _i++) {\n            var rootNode = rootNodes_1[_i];\n            sortedNodes.push(rootNode);\n            addToNodes(rootNode);\n        }\n        // Cyclic tree, no root node found\n        if (!sortedNodes.length) {\n            sortedNodes = nodes;\n            // Dangling, cyclic trees\n        }\n        else {\n            for (var _a = 0, nodes_1 = nodes; _a < nodes_1.length; _a++) {\n                var node_1 = nodes_1[_a];\n                if (sortedNodes.indexOf(node_1) === -1) {\n                    sortedNodes.push(node_1);\n                }\n            }\n        }\n        var node;\n        // Initial positions are laid out along a small circle, appearing\n        // as a cluster in the middle\n        for (var i = 0, iEnd = sortedNodes.length; i < iEnd; ++i) {\n            node = sortedNodes[i];\n            node.plotX = node.prevX = pick(node.plotX, box.width / 2 + radius * Math.cos(i * angle));\n            node.plotY = node.prevY = pick(node.plotY, box.height / 2 + radius * Math.sin(i * angle));\n            node.dispX = 0;\n            node.dispY = 0;\n        }\n    };\n    ReingoldFruchtermanLayout.prototype.setRandomPositions = function () {\n        var box = this.box, nodes = this.nodes, nodesLength = nodes.length + 1, \n        /**\n         * Return a repeatable, quasi-random number based on an integer\n         * input. For the initial positions\n         * @private\n         */\n        unrandom = function (n) {\n            var rand = n * n / Math.PI;\n            rand = rand - Math.floor(rand);\n            return rand;\n        };\n        var node;\n        // Initial positions:\n        for (var i = 0, iEnd = nodes.length; i < iEnd; ++i) {\n            node = nodes[i];\n            node.plotX = node.prevX = pick(node.plotX, box.width * unrandom(i));\n            node.plotY = node.prevY = pick(node.plotY, box.height * unrandom(nodesLength + i));\n            node.dispX = 0;\n            node.dispY = 0;\n        }\n    };\n    ReingoldFruchtermanLayout.prototype.force = function (name) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        this.integration[name].apply(this, args);\n    };\n    ReingoldFruchtermanLayout.prototype.barycenterForces = function () {\n        this.getBarycenter();\n        this.force('barycenter');\n    };\n    ReingoldFruchtermanLayout.prototype.getBarycenter = function () {\n        var systemMass = 0, cx = 0, cy = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var node = _a[_i];\n            cx += node.plotX * node.mass;\n            cy += node.plotY * node.mass;\n            systemMass += node.mass;\n        }\n        this.barycenter = {\n            x: cx,\n            y: cy,\n            xFactor: cx / systemMass,\n            yFactor: cy / systemMass\n        };\n        return this.barycenter;\n    };\n    ReingoldFruchtermanLayout.prototype.barnesHutApproximation = function (node, quadNode) {\n        var distanceXY = this.getDistXY(node, quadNode), distanceR = this.vectorLength(distanceXY);\n        var goDeeper, force;\n        if (node !== quadNode && distanceR !== 0) {\n            if (quadNode.isInternal) {\n                // Internal node:\n                if (quadNode.boxSize / distanceR <\n                    this.options.theta &&\n                    distanceR !== 0) {\n                    // Treat as an external node:\n                    force = this.repulsiveForce(distanceR, this.k);\n                    this.force('repulsive', node, force * quadNode.mass, distanceXY, distanceR);\n                    goDeeper = false;\n                }\n                else {\n                    // Go deeper:\n                    goDeeper = true;\n                }\n            }\n            else {\n                // External node, direct force:\n                force = this.repulsiveForce(distanceR, this.k);\n                this.force('repulsive', node, force * quadNode.mass, distanceXY, distanceR);\n            }\n        }\n        return goDeeper;\n    };\n    ReingoldFruchtermanLayout.prototype.repulsiveForces = function () {\n        var _this = this;\n        if (this.approximation === 'barnes-hut') {\n            var _loop_1 = function (node) {\n                this_1.quadTree.visitNodeRecursive(null, function (quadNode) { return (_this.barnesHutApproximation(node, quadNode)); });\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var node = _a[_i];\n                _loop_1(node);\n            }\n        }\n        else {\n            var force = void 0, distanceR = void 0, distanceXY = void 0;\n            for (var _b = 0, _c = this.nodes; _b < _c.length; _b++) {\n                var node = _c[_b];\n                for (var _d = 0, _e = this.nodes; _d < _e.length; _d++) {\n                    var repNode = _e[_d];\n                    if (\n                    // Node cannot repulse itself:\n                    node !== repNode &&\n                        // Only close nodes affect each other:\n                        // layout.getDistR(node, repNode) < 2 * k &&\n                        // Not dragged:\n                        !node.fixedPosition) {\n                        distanceXY = this.getDistXY(node, repNode);\n                        distanceR = this.vectorLength(distanceXY);\n                        if (distanceR !== 0) {\n                            force = this.repulsiveForce(distanceR, this.k);\n                            this.force('repulsive', node, force * repNode.mass, distanceXY, distanceR);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ReingoldFruchtermanLayout.prototype.attractiveForces = function () {\n        var distanceXY, distanceR, force;\n        for (var _i = 0, _a = this.links; _i < _a.length; _i++) {\n            var link = _a[_i];\n            if (link.fromNode && link.toNode) {\n                distanceXY = this.getDistXY(link.fromNode, link.toNode);\n                distanceR = this.vectorLength(distanceXY);\n                if (distanceR !== 0) {\n                    force = this.attractiveForce(distanceR, this.k);\n                    this.force('attractive', link, force, distanceXY, distanceR);\n                }\n            }\n        }\n    };\n    ReingoldFruchtermanLayout.prototype.applyLimits = function () {\n        var nodes = this.nodes;\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (node.fixedPosition) {\n                return;\n            }\n            this.integration.integrate(this, node);\n            this.applyLimitBox(node, this.box);\n            // Reset displacement:\n            node.dispX = 0;\n            node.dispY = 0;\n        }\n    };\n    /**\n     * External box that nodes should fall. When hitting an edge, node\n     * should stop or bounce.\n     * @private\n     */\n    ReingoldFruchtermanLayout.prototype.applyLimitBox = function (node, box) {\n        var radius = node.radius;\n        /*\n        TO DO: Consider elastic collision instead of stopping.\n        o' means end position when hitting plotting area edge:\n\n        - \"inelastic\":\n        o\n            \\\n        ______\n        |  o'\n        |   \\\n        |    \\\n\n        - \"elastic\"/\"bounced\":\n        o\n            \\\n        ______\n        |  ^\n        | / \\\n        |o'  \\\n\n        Euler sample:\n        if (plotX < 0) {\n            plotX = 0;\n            dispX *= -1;\n        }\n\n        if (plotX > box.width) {\n            plotX = box.width;\n            dispX *= -1;\n        }\n\n        */\n        // Limit X-coordinates:\n        node.plotX = clamp(node.plotX, box.left + radius, box.width - radius);\n        // Limit Y-coordinates:\n        node.plotY = clamp(node.plotY, box.top + radius, box.height - radius);\n    };\n    /**\n     * From \"A comparison of simulated annealing cooling strategies\" by\n     * Nourani and Andresen work.\n     * @private\n     */\n    ReingoldFruchtermanLayout.prototype.coolDown = function (temperature, temperatureStep, currentStep) {\n        // Logarithmic:\n        /*\n        return Math.sqrt(this.nodes.length) -\n            Math.log(\n                currentStep * layout.diffTemperature\n            );\n        */\n        // Exponential:\n        /*\n        let alpha = 0.1;\n        layout.temperature = Math.sqrt(layout.nodes.length) *\n            Math.pow(alpha, layout.diffTemperature);\n        */\n        // Linear:\n        return temperature - temperatureStep * currentStep;\n    };\n    ReingoldFruchtermanLayout.prototype.isStable = function () {\n        return Math.abs(this.systemTemperature -\n            this.prevSystemTemperature) < 0.00001 || this.temperature <= 0;\n    };\n    ReingoldFruchtermanLayout.prototype.getSystemTemperature = function () {\n        var value = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var node = _a[_i];\n            value += node.temperature;\n        }\n        return value;\n    };\n    ReingoldFruchtermanLayout.prototype.vectorLength = function (vector) {\n        return Math.sqrt(vector.x * vector.x + vector.y * vector.y);\n    };\n    ReingoldFruchtermanLayout.prototype.getDistR = function (nodeA, nodeB) {\n        var distance = this.getDistXY(nodeA, nodeB);\n        return this.vectorLength(distance);\n    };\n    ReingoldFruchtermanLayout.prototype.getDistXY = function (nodeA, nodeB) {\n        var xDist = nodeA.plotX - nodeB.plotX, yDist = nodeA.plotY - nodeB.plotY;\n        return {\n            x: xDist,\n            y: yDist,\n            absX: Math.abs(xDist),\n            absY: Math.abs(yDist)\n        };\n    };\n    return ReingoldFruchtermanLayout;\n}());\n/* *\n *\n *  Default Export\n *\n * */\nexport default ReingoldFruchtermanLayout;\n","/* *\n *\n *  (c) 2010-2021 Grzegorz Blachlinski, Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GraphLayout from '../GraphLayoutComposition.js';\nimport PackedBubbleIntegration from './PackedBubbleIntegration.js';\nimport ReingoldFruchtermanLayout from '../Networkgraph/ReingoldFruchtermanLayout.js';\nimport U from '../../Core/Utilities.js';\nvar addEvent = U.addEvent, pick = U.pick;\n/* *\n *\n *  Constants\n *\n * */\nvar composedClasses = [];\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction chartGetSelectedParentNodes() {\n    var allSeries = this.series, selectedParentsNodes = [];\n    allSeries.forEach(function (series) {\n        if (series.parentNode && series.parentNode.selected) {\n            selectedParentsNodes.push(series.parentNode);\n        }\n    });\n    return selectedParentsNodes;\n}\n/**\n * Remove accumulated data points to redistribute all of them again\n * (i.e after hiding series by legend)\n * @private\n */\nfunction onChartBeforeRedraw() {\n    if (this.allDataPoints) {\n        delete this.allDataPoints;\n    }\n}\n/* *\n *\n *  Class\n *\n * */\nvar PackedBubbleLayout = /** @class */ (function (_super) {\n    __extends(PackedBubbleLayout, _super);\n    function PackedBubbleLayout() {\n        /* *\n         *\n         *  Static Functions\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.index = NaN;\n        _this.nodes = [];\n        _this.options = void 0;\n        _this.series = [];\n        return _this;\n    }\n    PackedBubbleLayout.compose = function (ChartClass) {\n        ReingoldFruchtermanLayout.compose(ChartClass);\n        GraphLayout.integrations.packedbubble = PackedBubbleIntegration;\n        GraphLayout.layouts.packedbubble = PackedBubbleLayout;\n        if (composedClasses.indexOf(ChartClass) === -1) {\n            composedClasses.push(ChartClass);\n            addEvent(ChartClass, 'beforeRedraw', onChartBeforeRedraw);\n            var chartProto = ChartClass.prototype;\n            chartProto.getSelectedParentNodes = chartGetSelectedParentNodes;\n        }\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    PackedBubbleLayout.prototype.beforeStep = function () {\n        if (this.options.marker) {\n            this.series.forEach(function (series) {\n                if (series) {\n                    series.calculateParentRadius();\n                }\n            });\n        }\n    };\n    // #14439, new stable check.\n    PackedBubbleLayout.prototype.isStable = function () {\n        var tempDiff = Math.abs(this.prevSystemTemperature -\n            this.systemTemperature);\n        var upScaledTemperature = 10 * this.systemTemperature /\n            Math.sqrt(this.nodes.length);\n        return Math.abs(upScaledTemperature) < 1 &&\n            tempDiff < 0.00001 ||\n            this.temperature <= 0;\n    };\n    PackedBubbleLayout.prototype.setCircularPositions = function () {\n        var layout = this, box = layout.box, nodes = layout.nodes, nodesLength = nodes.length + 1, angle = 2 * Math.PI / nodesLength, radius = layout.options.initialPositionRadius;\n        var centerX, centerY, index = 0;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (layout.options.splitSeries &&\n                !node.isParentNode) {\n                centerX = node.series.parentNode.plotX;\n                centerY = node.series.parentNode.plotY;\n            }\n            else {\n                centerX = box.width / 2;\n                centerY = box.height / 2;\n            }\n            node.plotX = node.prevX = pick(node.plotX, centerX +\n                radius * Math.cos(node.index || index * angle));\n            node.plotY = node.prevY = pick(node.plotY, centerY +\n                radius * Math.sin(node.index || index * angle));\n            node.dispX = 0;\n            node.dispY = 0;\n            index++;\n        }\n    };\n    PackedBubbleLayout.prototype.repulsiveForces = function () {\n        var layout = this, bubblePadding = layout.options.bubblePadding;\n        var force, distanceR, distanceXY;\n        layout.nodes.forEach(function (node) {\n            node.degree = node.mass;\n            node.neighbours = 0;\n            layout.nodes.forEach(function (repNode) {\n                force = 0;\n                if (\n                // Node cannot repulse itself:\n                node !== repNode &&\n                    // Only close nodes affect each other:\n                    // Not dragged:\n                    !node.fixedPosition &&\n                    (layout.options.seriesInteraction ||\n                        node.series === repNode.series)) {\n                    distanceXY = layout.getDistXY(node, repNode);\n                    distanceR = (layout.vectorLength(distanceXY) -\n                        (node.marker.radius +\n                            repNode.marker.radius +\n                            bubblePadding));\n                    // TODO padding configurable\n                    if (distanceR < 0) {\n                        node.degree += 0.01;\n                        node.neighbours++;\n                        force = layout.repulsiveForce(-distanceR / Math.sqrt(node.neighbours), layout.k, node, repNode);\n                    }\n                    layout.force('repulsive', node, force * repNode.mass, distanceXY, repNode, distanceR);\n                }\n            });\n        });\n    };\n    PackedBubbleLayout.prototype.applyLimitBox = function (node, box) {\n        var layout = this, factor = 0.01;\n        var distanceXY, distanceR;\n        // parentNodeLimit should be used together\n        // with seriesInteraction: false\n        if (layout.options.splitSeries &&\n            !node.isParentNode &&\n            layout.options.parentNodeLimit) {\n            distanceXY = layout.getDistXY(node, node.series.parentNode);\n            distanceR = (node.series.parentNodeRadius -\n                node.marker.radius -\n                layout.vectorLength(distanceXY));\n            if (distanceR < 0 &&\n                distanceR > -2 * node.marker.radius) {\n                node.plotX -= distanceXY.x * factor;\n                node.plotY -= distanceXY.y * factor;\n            }\n        }\n        _super.prototype.applyLimitBox.call(this, node, box);\n    };\n    return PackedBubbleLayout;\n}(ReingoldFruchtermanLayout));\n/* *\n *\n *  Registry\n *\n * */\nGraphLayout.layouts.packedbubble = PackedBubbleLayout;\n/* *\n *\n *  Default Export\n *\n * */\nexport default PackedBubbleLayout;\n","/* *\n *\n *  (c) 2010-2021 Grzegorz Blachlinski, Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Color from '../../Core/Color/Color.js';\nvar color = Color.parse;\nimport DragNodesComposition from '../DragNodesComposition.js';\nimport GraphLayout from '../GraphLayoutComposition.js';\nimport H from '../../Core/Globals.js';\nvar noop = H.noop;\nimport PackedBubblePoint from './PackedBubblePoint.js';\nimport PackedBubbleSeriesDefaults from './PackedBubbleSeriesDefaults.js';\nimport PackedBubbleLayout from './PackedBubbleLayout.js';\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar seriesProto = SeriesRegistry.series.prototype, BubbleSeries = SeriesRegistry.seriesTypes.bubble;\nimport U from '../../Core/Utilities.js';\nvar addEvent = U.addEvent, clamp = U.clamp, defined = U.defined, extend = U.extend, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick;\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n * @class\n * @name Highcharts.seriesTypes.packedbubble\n *\n * @extends Highcharts.Series\n */\nvar PackedBubbleSeries = /** @class */ (function (_super) {\n    __extends(PackedBubbleSeries, _super);\n    function PackedBubbleSeries() {\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.chart = void 0;\n        _this.data = void 0;\n        _this.layout = void 0;\n        _this.options = void 0;\n        _this.parentNodeMass = 0;\n        _this.points = void 0;\n        _this.xData = void 0;\n        return _this;\n        /* eslint-enable valid-jsdoc */\n    }\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    PackedBubbleSeries.compose = function (AxisClass, ChartClass, LegendClass, SeriesClass) {\n        BubbleSeries.compose(AxisClass, ChartClass, LegendClass, SeriesClass);\n        DragNodesComposition.compose(ChartClass);\n        PackedBubbleLayout.compose(ChartClass);\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Create a single array of all points from all series\n     * @private\n     */\n    PackedBubbleSeries.prototype.accumulateAllPoints = function () {\n        var chart = this.chart, allDataPoints = [];\n        var yData;\n        for (var _i = 0, _a = chart.series; _i < _a.length; _i++) {\n            var series = _a[_i];\n            if (series.is('packedbubble') && // #13574\n                series.visible ||\n                !chart.options.chart.ignoreHiddenSeries) {\n                yData = series.yData || [];\n                // add data to array only if series is visible\n                for (var j = 0; j < yData.length; j++) {\n                    allDataPoints.push([\n                        null, null,\n                        yData[j],\n                        series.index,\n                        j,\n                        {\n                            id: j,\n                            marker: {\n                                radius: 0\n                            }\n                        }\n                    ]);\n                }\n            }\n        }\n        return allDataPoints;\n    };\n    /**\n     * Adding the basic layout to series points.\n     * @private\n     */\n    PackedBubbleSeries.prototype.addLayout = function () {\n        var layoutOptions = this.options.layoutAlgorithm =\n            this.options.layoutAlgorithm || {}, layoutType = layoutOptions.type || 'packedbubble', chartOptions = this.chart.options.chart;\n        var graphLayoutsStorage = this.chart.graphLayoutsStorage, graphLayoutsLookup = this.chart.graphLayoutsLookup, layout;\n        if (!graphLayoutsStorage) {\n            this.chart.graphLayoutsStorage = graphLayoutsStorage = {};\n            this.chart.graphLayoutsLookup = graphLayoutsLookup = [];\n        }\n        layout = graphLayoutsStorage[layoutType];\n        if (!layout) {\n            layoutOptions.enableSimulation =\n                !defined(chartOptions.forExport) ?\n                    layoutOptions.enableSimulation :\n                    !chartOptions.forExport;\n            graphLayoutsStorage[layoutType] = layout =\n                new GraphLayout.layouts[layoutType]();\n            layout.init(layoutOptions);\n            graphLayoutsLookup.splice(layout.index, 0, layout);\n        }\n        this.layout = layout;\n        this.points.forEach(function (node) {\n            node.mass = 2;\n            node.degree = 1;\n            node.collisionNmb = 1;\n        });\n        layout.setArea(0, 0, this.chart.plotWidth, this.chart.plotHeight);\n        layout.addElementsToCollection([this], layout.series);\n        layout.addElementsToCollection(this.points, layout.nodes);\n    };\n    /**\n     * Function responsible for adding series layout, used for parent nodes.\n     * @private\n     */\n    PackedBubbleSeries.prototype.addSeriesLayout = function () {\n        var layoutOptions = this.options.layoutAlgorithm =\n            this.options.layoutAlgorithm || {}, layoutType = (layoutOptions.type || 'packedbubble'), graphLayoutsStorage = this.chart.graphLayoutsStorage, graphLayoutsLookup = this.chart.graphLayoutsLookup, parentNodeOptions = merge(layoutOptions, layoutOptions.parentNodeOptions, {\n            enableSimulation: this.layout.options.enableSimulation\n        });\n        var seriesLayout = graphLayoutsStorage[layoutType + '-series'];\n        if (!seriesLayout) {\n            graphLayoutsStorage[layoutType + '-series'] = seriesLayout =\n                new GraphLayout.layouts[layoutType]();\n            seriesLayout.init(parentNodeOptions);\n            graphLayoutsLookup.splice(seriesLayout.index, 0, seriesLayout);\n        }\n        this.parentNodeLayout = seriesLayout;\n        this.createParentNodes();\n    };\n    /**\n     * The function responsible for calculating the parent node radius\n     * based on the total surface of iniside-bubbles and the group BBox\n     * @private\n     */\n    PackedBubbleSeries.prototype.calculateParentRadius = function () {\n        var bBox = this.seriesBox(), parentPadding = 20, minParentRadius = 20;\n        this.parentNodeRadius = clamp(Math.sqrt(2 * this.parentNodeMass / Math.PI) + parentPadding, minParentRadius, bBox ?\n            Math.max(Math.sqrt(Math.pow(bBox.width, 2) +\n                Math.pow(bBox.height, 2)) / 2 + parentPadding, minParentRadius) :\n            Math.sqrt(2 * this.parentNodeMass / Math.PI) + parentPadding);\n        if (this.parentNode) {\n            this.parentNode.marker.radius =\n                this.parentNode.radius = this.parentNodeRadius;\n        }\n    };\n    /**\n     * Calculate min and max bubble value for radius calculation.\n     * @private\n     */\n    PackedBubbleSeries.prototype.calculateZExtremes = function () {\n        var chart = this.chart, allSeries = chart.series;\n        var zMin = this.options.zMin, zMax = this.options.zMax, valMin = Infinity, valMax = -Infinity;\n        if (zMin && zMax) {\n            return [zMin, zMax];\n        }\n        // it is needed to deal with null\n        // and undefined values\n        allSeries.forEach(function (series) {\n            series.yData.forEach(function (y) {\n                if (defined(y)) {\n                    if (y > valMax) {\n                        valMax = y;\n                    }\n                    if (y < valMin) {\n                        valMin = y;\n                    }\n                }\n            });\n        });\n        zMin = pick(zMin, valMin);\n        zMax = pick(zMax, valMax);\n        return [zMin, zMax];\n    };\n    /**\n     * Check if two bubbles overlaps.\n     * @private\n     */\n    PackedBubbleSeries.prototype.checkOverlap = function (bubble1, bubble2) {\n        var diffX = bubble1[0] - bubble2[0], // diff of X center values\n        diffY = bubble1[1] - bubble2[1], // diff of Y center values\n        sumRad = bubble1[2] + bubble2[2]; // sum of bubble radius\n        return (Math.sqrt(diffX * diffX + diffY * diffY) -\n            Math.abs(sumRad)) < -0.001;\n    };\n    /**\n     * Creating parent nodes for split series, in which all the bubbles\n     * are rendered.\n     * @private\n     */\n    PackedBubbleSeries.prototype.createParentNodes = function () {\n        var _this = this;\n        var PackedBubblePoint = this.pointClass, chart = this.chart, parentNodeLayout = this.parentNodeLayout, layoutOptions = this.layout.options;\n        var nodeAdded, parentNode = this.parentNode, parentMarkerOptions = {\n            radius: this.parentNodeRadius,\n            lineColor: this.color,\n            fillColor: color(this.color).brighten(0.4).get()\n        };\n        if (layoutOptions.parentNodeOptions) {\n            parentMarkerOptions = merge(layoutOptions.parentNodeOptions.marker || {}, parentMarkerOptions);\n        }\n        this.parentNodeMass = 0;\n        this.points.forEach(function (p) {\n            _this.parentNodeMass +=\n                Math.PI * Math.pow(p.marker.radius, 2);\n        });\n        this.calculateParentRadius();\n        parentNodeLayout.nodes.forEach(function (node) {\n            if (node.seriesIndex === _this.index) {\n                nodeAdded = true;\n            }\n        });\n        parentNodeLayout.setArea(0, 0, chart.plotWidth, chart.plotHeight);\n        if (!nodeAdded) {\n            if (!parentNode) {\n                parentNode = (new PackedBubblePoint()).init(this, {\n                    mass: this.parentNodeRadius / 2,\n                    marker: parentMarkerOptions,\n                    dataLabels: {\n                        inside: false\n                    },\n                    states: {\n                        normal: {\n                            marker: parentMarkerOptions\n                        },\n                        hover: {\n                            marker: parentMarkerOptions\n                        }\n                    },\n                    dataLabelOnNull: true,\n                    degree: this.parentNodeRadius,\n                    isParentNode: true,\n                    seriesIndex: this.index\n                });\n            }\n            if (this.parentNode) {\n                parentNode.plotX = this.parentNode.plotX;\n                parentNode.plotY = this.parentNode.plotY;\n            }\n            this.parentNode = parentNode;\n            parentNodeLayout.addElementsToCollection([this], parentNodeLayout.series);\n            parentNodeLayout.addElementsToCollection([parentNode], parentNodeLayout.nodes);\n        }\n    };\n    /**\n     * Function responsible for adding all the layouts to the chart.\n     * @private\n     */\n    PackedBubbleSeries.prototype.deferLayout = function () {\n        // TODO split layouts to independent methods\n        var layoutOptions = this.options.layoutAlgorithm;\n        if (!this.visible) {\n            return;\n        }\n        // layout is using nodes for position calculation\n        this.addLayout();\n        if (layoutOptions.splitSeries) {\n            this.addSeriesLayout();\n        }\n    };\n    PackedBubbleSeries.prototype.destroy = function () {\n        var _this = this;\n        // Remove the series from all layouts series collections #11469\n        if (this.chart.graphLayoutsLookup) {\n            this.chart.graphLayoutsLookup.forEach(function (layout) {\n                layout.removeElementFromCollection(_this, layout.series);\n            }, this);\n        }\n        if (this.parentNode &&\n            this.parentNodeLayout) {\n            this.parentNodeLayout.removeElementFromCollection(this.parentNode, this.parentNodeLayout.nodes);\n            if (this.parentNode.dataLabel) {\n                this.parentNode.dataLabel =\n                    this.parentNode.dataLabel.destroy();\n            }\n        }\n        seriesProto.destroy.apply(this, arguments);\n    };\n    /**\n     * Packedbubble has two separate collecions of nodes if split, render\n     * dataLabels for both sets:\n     * @private\n     */\n    PackedBubbleSeries.prototype.drawDataLabels = function () {\n        seriesProto.drawDataLabels.call(this, this.points);\n        // Render parentNode labels:\n        if (this.parentNode) {\n            this.parentNode.formatPrefix = 'parentNode';\n            seriesProto.drawDataLabels.call(this, [this.parentNode]);\n        }\n    };\n    /**\n     * Create Background/Parent Nodes for split series.\n     * @private\n     */\n    PackedBubbleSeries.prototype.drawGraph = function () {\n        // if the series is not using layout, don't add parent nodes\n        if (!this.layout || !this.layout.options.splitSeries) {\n            return;\n        }\n        var chart = this.chart, nodeMarker = this.layout.options.parentNodeOptions.marker, parentOptions = {\n            fill: (nodeMarker.fillColor ||\n                color(this.color).brighten(0.4).get()),\n            opacity: nodeMarker.fillOpacity,\n            stroke: nodeMarker.lineColor || this.color,\n            'stroke-width': pick(nodeMarker.lineWidth, this.options.lineWidth)\n        };\n        var parentAttribs = {};\n        // create the group for parent Nodes if doesn't exist\n        if (!this.parentNodesGroup) {\n            this.parentNodesGroup = this.plotGroup('parentNodesGroup', 'parentNode', this.visible ? 'inherit' : 'hidden', 0.1, chart.seriesGroup);\n            this.group.attr({\n                zIndex: 2\n            });\n        }\n        this.calculateParentRadius();\n        parentAttribs = merge({\n            x: this.parentNode.plotX -\n                this.parentNodeRadius,\n            y: this.parentNode.plotY -\n                this.parentNodeRadius,\n            width: this.parentNodeRadius * 2,\n            height: this.parentNodeRadius * 2\n        }, parentOptions);\n        if (!this.parentNode.graphic) {\n            this.graph = this.parentNode.graphic =\n                chart.renderer.symbol(parentOptions.symbol)\n                    .add(this.parentNodesGroup);\n        }\n        this.parentNode.graphic.attr(parentAttribs);\n    };\n    PackedBubbleSeries.prototype.drawTracker = function () {\n        var parentNode = this.parentNode;\n        // chart = series.chart,\n        // pointer = chart.pointer,\n        // onMouseOver = function (e: PointerEvent): void {\n        //     const point = pointer.getPointFromEvent(e);\n        //     // undefined on graph in scatterchart\n        //     if (typeof point !== 'undefined') {\n        //         pointer.isDirectTouch = true;\n        //         point.onMouseOver(e);\n        //     }\n        // };\n        var dataLabels;\n        _super.prototype.drawTracker.call(this);\n        // Add reference to the point\n        if (parentNode) {\n            dataLabels = (isArray(parentNode.dataLabels) ?\n                parentNode.dataLabels :\n                (parentNode.dataLabel ? [parentNode.dataLabel] : []));\n            if (parentNode.graphic) {\n                parentNode.graphic.element.point = parentNode;\n            }\n            dataLabels.forEach(function (dataLabel) {\n                if (dataLabel.div) {\n                    dataLabel.div.point = parentNode;\n                }\n                else {\n                    dataLabel.element.point = parentNode;\n                }\n            });\n        }\n    };\n    /**\n     * Calculate radius of bubbles in series.\n     * @private\n     */\n    PackedBubbleSeries.prototype.getPointRadius = function () {\n        var _this = this;\n        var chart = this.chart, plotWidth = chart.plotWidth, plotHeight = chart.plotHeight, seriesOptions = this.options, useSimulation = seriesOptions.useSimulation, smallestSize = Math.min(plotWidth, plotHeight), extremes = {}, radii = [], allDataPoints = chart.allDataPoints || [], allDataPointsLength = allDataPoints.length;\n        var minSize, maxSize, value, radius;\n        ['minSize', 'maxSize'].forEach(function (prop) {\n            var length = parseInt(seriesOptions[prop], 10), isPercent = /%$/.test(seriesOptions[prop]);\n            extremes[prop] = isPercent ?\n                smallestSize * length / 100 :\n                length * Math.sqrt(allDataPointsLength);\n        });\n        chart.minRadius = minSize = extremes.minSize /\n            Math.sqrt(allDataPointsLength);\n        chart.maxRadius = maxSize = extremes.maxSize /\n            Math.sqrt(allDataPointsLength);\n        var zExtremes = useSimulation ?\n            this.calculateZExtremes() :\n            [minSize, maxSize];\n        allDataPoints.forEach(function (point, i) {\n            value = useSimulation ?\n                clamp(point[2], zExtremes[0], zExtremes[1]) :\n                point[2];\n            radius = _this.getRadius(zExtremes[0], zExtremes[1], minSize, maxSize, value);\n            if (radius === 0) {\n                radius = null;\n            }\n            allDataPoints[i][2] = radius;\n            radii.push(radius);\n        });\n        this.radii = radii;\n    };\n    PackedBubbleSeries.prototype.init = function () {\n        seriesProto.init.apply(this, arguments);\n        /* eslint-disable no-invalid-this */\n        // When one series is modified, the others need to be recomputed\n        this.eventsToUnbind.push(addEvent(this, 'updatedData', function () {\n            var _this = this;\n            this.chart.series.forEach(function (s) {\n                if (s.type === _this.type) {\n                    s.isDirty = true;\n                }\n            }, this);\n        }));\n        /* eslint-enable no-invalid-this */\n        return this;\n    };\n    /**\n     * Mouse up action, finalizing drag&drop.\n     * @private\n     * @param {Highcharts.Point} point The point that event occured.\n     */\n    PackedBubbleSeries.prototype.onMouseUp = function (dnPoint) {\n        var point = dnPoint;\n        if (point.fixedPosition && !point.removed) {\n            var layout_1 = this.layout, parentNodeLayout = this.parentNodeLayout;\n            var distanceXY_1, distanceR_1;\n            if (parentNodeLayout && layout_1.options.dragBetweenSeries) {\n                parentNodeLayout.nodes.forEach(function (node) {\n                    if (point && point.marker &&\n                        node !== point.series.parentNode) {\n                        distanceXY_1 = layout_1.getDistXY(point, node);\n                        distanceR_1 = (layout_1.vectorLength(distanceXY_1) -\n                            node.marker.radius -\n                            point.marker.radius);\n                        if (distanceR_1 < 0) {\n                            node.series.addPoint(merge(point.options, {\n                                plotX: point.plotX,\n                                plotY: point.plotY\n                            }), false);\n                            layout_1.removeElementFromCollection(point, layout_1.nodes);\n                            point.remove();\n                        }\n                    }\n                });\n            }\n            DragNodesComposition.onMouseUp.apply(this, arguments);\n        }\n    };\n    /**\n     * This is the main function responsible\n     * for positioning all of the bubbles\n     * allDataPoints - bubble array, in format [pixel x value,\n     * pixel y value, radius,\n     * related series index, related point index]\n     * @private\n     * @param {Array<Highcharts.PackedBubbleData>} allDataPoints All points from all series\n     * @return {Array<Highcharts.PackedBubbleData>} Positions of all bubbles\n     */\n    PackedBubbleSeries.prototype.placeBubbles = function (allDataPoints) {\n        var checkOverlap = this.checkOverlap, positionBubble = this.positionBubble, bubblePos = [];\n        var stage = 1, j = 0, k = 0, calculatedBubble, arr = [], i;\n        // sort all points\n        var sortedArr = allDataPoints.sort(function (a, b) {\n            return b[2] - a[2];\n        });\n        if (sortedArr.length) {\n            // create first bubble in the middle of the chart\n            bubblePos.push([\n                [\n                    0,\n                    0,\n                    sortedArr[0][2],\n                    sortedArr[0][3],\n                    sortedArr[0][4]\n                ] // point index\n            ]); // 0 level bubble\n            if (sortedArr.length > 1) {\n                bubblePos.push([\n                    [\n                        0,\n                        (0 - sortedArr[1][2] -\n                            sortedArr[0][2]),\n                        // move bubble above first one\n                        sortedArr[1][2],\n                        sortedArr[1][3],\n                        sortedArr[1][4]\n                    ]\n                ]); // 1 level 1st bubble\n                // first two already positioned so starting from 2\n                for (i = 2; i < sortedArr.length; i++) {\n                    sortedArr[i][2] = sortedArr[i][2] || 1;\n                    // in case if radius is calculated as 0.\n                    calculatedBubble = positionBubble(bubblePos[stage][j], bubblePos[stage - 1][k], sortedArr[i]); // calculate initial bubble position\n                    if (checkOverlap(calculatedBubble, bubblePos[stage][0])) {\n                        /* if new bubble is overlapping with first bubble\n                            * in current level (stage)\n                            */\n                        bubblePos.push([]);\n                        k = 0;\n                        /* reset index of bubble, used for\n                            * positioning the bubbles around it,\n                            * we are starting from first bubble in next\n                            * stage because we are changing level to higher\n                            */\n                        bubblePos[stage + 1].push(positionBubble(bubblePos[stage][j], bubblePos[stage][0], sortedArr[i]));\n                        // (last bubble, 1. from curr stage, new bubble)\n                        stage++; // the new level is created, above current\n                        j = 0; // set the index of bubble in curr level to 0\n                    }\n                    else if (stage > 1 &&\n                        bubblePos[stage - 1][k + 1] &&\n                        checkOverlap(calculatedBubble, bubblePos[stage - 1][k + 1])) {\n                        /* if new bubble is overlapping with one of the prev\n                            * stage bubbles, it means that - bubble, used for\n                            * positioning the bubbles around it has changed\n                            * so we need to recalculate it\n                            */\n                        k++;\n                        bubblePos[stage].push(positionBubble(bubblePos[stage][j], bubblePos[stage - 1][k], sortedArr[i]));\n                        // (last bubble, prev stage bubble, new bubble)\n                        j++;\n                    }\n                    else { // simply add calculated bubble\n                        j++;\n                        bubblePos[stage].push(calculatedBubble);\n                    }\n                }\n            }\n            this.chart.stages = bubblePos;\n            // it may not be necessary but adding it just in case -\n            // it is containing all of the bubble levels\n            this.chart.rawPositions =\n                []\n                    .concat.apply([], bubblePos);\n            // bubble positions merged into one array\n            this.resizeRadius();\n            arr = this.chart.rawPositions;\n        }\n        return arr;\n    };\n    /**\n     * Function that checks for a parentMarker and sets the correct opacity.\n     * @private\n     * @param {Highcharts.Pack} point\n     * Candidate point for opacity correction.\n     * @param {string} [state]\n     * The point state, can be either `hover`, `select` or 'normal'. If\n     * undefined, normal state is assumed.\n     *\n     * @return {Highcharts.SVGAttributes}\n     * The presentational attributes to be set on the point.\n     */\n    PackedBubbleSeries.prototype.pointAttribs = function (point, state) {\n        var options = this.options, hasParentMarker = point && point.isParentNode;\n        var markerOptions = options.marker;\n        if (hasParentMarker &&\n            options.layoutAlgorithm &&\n            options.layoutAlgorithm.parentNodeOptions) {\n            markerOptions = options.layoutAlgorithm.parentNodeOptions.marker;\n        }\n        var fillOpacity = markerOptions.fillOpacity, attr = seriesProto.pointAttribs.call(this, point, state);\n        if (fillOpacity !== 1) {\n            attr['fill-opacity'] = fillOpacity;\n        }\n        return attr;\n    };\n    /**\n     * Function that is adding one bubble based on positions and sizes of\n     * two other bubbles, lastBubble is the last added bubble, newOrigin is\n     * the bubble for positioning new bubbles. nextBubble is the curently\n     * added bubble for which we are calculating positions\n     * @private\n     * @param {Array<number>} lastBubble The closest last bubble\n     * @param {Array<number>} newOrigin New bubble\n     * @param {Array<number>} nextBubble The closest next bubble\n     * @return {Array<number>} Bubble with correct positions\n     */\n    PackedBubbleSeries.prototype.positionBubble = function (lastBubble, newOrigin, nextBubble) {\n        var sqrt = Math.sqrt, asin = Math.asin, acos = Math.acos, pow = Math.pow, abs = Math.abs, distance = sqrt(// dist between lastBubble and newOrigin\n        pow((lastBubble[0] - newOrigin[0]), 2) +\n            pow((lastBubble[1] - newOrigin[1]), 2)), alfa = acos(\n        // from cosinus theorem: alfa is an angle used for\n        // calculating correct position\n        (pow(distance, 2) +\n            pow(nextBubble[2] + newOrigin[2], 2) -\n            pow(nextBubble[2] + lastBubble[2], 2)) / (2 * (nextBubble[2] + newOrigin[2]) * distance)), beta = asin(// from sinus theorem.\n        abs(lastBubble[0] - newOrigin[0]) /\n            distance), \n        // providing helping variables, related to angle between\n        // lastBubble and newOrigin\n        gamma = (lastBubble[1] - newOrigin[1]) < 0 ? 0 : Math.PI, \n        // if new origin y is smaller than last bubble y value\n        // (2 and 3 quarter),\n        // add Math.PI to final angle\n        delta = (lastBubble[0] - newOrigin[0]) *\n            (lastBubble[1] - newOrigin[1]) < 0 ?\n            1 : -1, // (1st and 3rd quarter)\n        finalAngle = gamma + alfa + beta * delta, cosA = Math.cos(finalAngle), sinA = Math.sin(finalAngle), posX = newOrigin[0] + (newOrigin[2] + nextBubble[2]) * sinA, \n        // center of new origin + (radius1 + radius2) * sinus A\n        posY = newOrigin[1] - (newOrigin[2] + nextBubble[2]) * cosA;\n        return [\n            posX,\n            posY,\n            nextBubble[2],\n            nextBubble[3],\n            nextBubble[4]\n        ]; // the same as described before\n    };\n    PackedBubbleSeries.prototype.render = function () {\n        var dataLabels = [];\n        seriesProto.render.apply(this, arguments);\n        // #10823 - dataLabels should stay visible\n        // when enabled allowOverlap.\n        if (!this.options.dataLabels.allowOverlap) {\n            this.data.forEach(function (point) {\n                if (isArray(point.dataLabels)) {\n                    point.dataLabels.forEach(function (dataLabel) {\n                        dataLabels.push(dataLabel);\n                    });\n                }\n            });\n            // Only hide overlapping dataLabels for layouts that\n            // use simulation. Spiral packedbubble don't need\n            // additional dataLabel hiding on every simulation step\n            if (this.options.useSimulation) {\n                this.chart.hideOverlappingLabels(dataLabels);\n            }\n        }\n    };\n    /**\n     * The function responsible for resizing the bubble radius.\n     * In shortcut: it is taking the initially\n     * calculated positions of bubbles. Then it is calculating the min max\n     * of both dimensions, creating something in shape of bBox.\n     * The comparison of bBox and the size of plotArea\n     * (later it may be also the size set by customer) is giving the\n     * value how to recalculate the radius so it will match the size\n     * @private\n     */\n    PackedBubbleSeries.prototype.resizeRadius = function () {\n        var chart = this.chart, positions = chart.rawPositions, min = Math.min, max = Math.max, plotLeft = chart.plotLeft, plotTop = chart.plotTop, chartHeight = chart.plotHeight, chartWidth = chart.plotWidth;\n        var minX, maxX, minY, maxY, radius;\n        minX = minY = Number.POSITIVE_INFINITY; // set initial values\n        maxX = maxY = Number.NEGATIVE_INFINITY;\n        for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n            var position = positions_1[_i];\n            radius = position[2];\n            minX = min(minX, position[0] - radius);\n            // (x center-radius) is the min x value used by specific bubble\n            maxX = max(maxX, position[0] + radius);\n            minY = min(minY, position[1] - radius);\n            maxY = max(maxY, position[1] + radius);\n        }\n        var bBox = [maxX - minX, maxY - minY], spaceRatio = [\n            (chartWidth - plotLeft) / bBox[0],\n            (chartHeight - plotTop) / bBox[1]\n        ], smallerDimension = min.apply([], spaceRatio);\n        if (Math.abs(smallerDimension - 1) > 1e-10) {\n            // if bBox is considered not the same width as possible size\n            for (var _a = 0, positions_2 = positions; _a < positions_2.length; _a++) {\n                var position = positions_2[_a];\n                position[2] *= smallerDimension;\n            }\n            this.placeBubbles(positions);\n        }\n        else {\n            /** if no radius recalculation is needed, we need to position\n             * the whole bubbles in center of chart plotarea\n             * for this, we are adding two parameters,\n             * diffY and diffX, that are related to differences\n             * between the initial center and the bounding box\n             */\n            chart.diffY = chartHeight / 2 +\n                plotTop - minY - (maxY - minY) / 2;\n            chart.diffX = chartWidth / 2 +\n                plotLeft - minX - (maxX - minX) / 2;\n        }\n    };\n    /**\n     * The function responsible for calculating series bubble' s bBox.\n     * Needed because of exporting failure when useSimulation\n     * is set to false\n     * @private\n     */\n    PackedBubbleSeries.prototype.seriesBox = function () {\n        var chart = this.chart, data = this.data, max = Math.max, min = Math.min, \n        // bBox = [xMin, xMax, yMin, yMax]\n        bBox = [\n            chart.plotLeft,\n            chart.plotLeft + chart.plotWidth,\n            chart.plotTop,\n            chart.plotTop + chart.plotHeight\n        ];\n        var radius;\n        data.forEach(function (p) {\n            if (defined(p.plotX) &&\n                defined(p.plotY) &&\n                p.marker.radius) {\n                radius = p.marker.radius;\n                bBox[0] = min(bBox[0], p.plotX - radius);\n                bBox[1] = max(bBox[1], p.plotX + radius);\n                bBox[2] = min(bBox[2], p.plotY - radius);\n                bBox[3] = max(bBox[3], p.plotY + radius);\n            }\n        });\n        return isNumber(bBox.width / bBox.height) ?\n            bBox :\n            null;\n    };\n    /**\n     * Needed because of z-indexing issue if point is added in series.group\n     * @private\n     */\n    PackedBubbleSeries.prototype.setVisible = function () {\n        var series = this;\n        seriesProto.setVisible.apply(series, arguments);\n        if (series.parentNodeLayout && series.graph) {\n            if (series.visible) {\n                series.graph.show();\n                if (series.parentNode.dataLabel) {\n                    series.parentNode.dataLabel.show();\n                }\n            }\n            else {\n                series.graph.hide();\n                series.parentNodeLayout\n                    .removeElementFromCollection(series.parentNode, series.parentNodeLayout.nodes);\n                if (series.parentNode.dataLabel) {\n                    series.parentNode.dataLabel.hide();\n                }\n            }\n        }\n        else if (series.layout) {\n            if (series.visible) {\n                series.layout.addElementsToCollection(series.points, series.layout.nodes);\n            }\n            else {\n                series.points.forEach(function (node) {\n                    series.layout.removeElementFromCollection(node, series.layout.nodes);\n                });\n            }\n        }\n    };\n    /**\n     * Extend the base translate method to handle bubble size,\n     * and correct positioning them.\n     * @private\n     */\n    PackedBubbleSeries.prototype.translate = function () {\n        var chart = this.chart, data = this.data, index = this.index, useSimulation = this.options.useSimulation;\n        var point, radius, positions;\n        this.processedXData = this.xData;\n        this.generatePoints();\n        // merged data is an array with all of the data from all series\n        if (!defined(chart.allDataPoints)) {\n            chart.allDataPoints = this.accumulateAllPoints();\n            // calculate radius for all added data\n            this.getPointRadius();\n        }\n        // after getting initial radius, calculate bubble positions\n        if (useSimulation) {\n            positions = chart.allDataPoints;\n        }\n        else {\n            positions = this.placeBubbles(chart.allDataPoints);\n            this.options.draggable = false;\n        }\n        // Set the shape and arguments to be picked up in drawPoints\n        for (var _i = 0, positions_3 = positions; _i < positions_3.length; _i++) {\n            var position = positions_3[_i];\n            if (position[3] === index) {\n                // update the series points with the val from positions\n                // array\n                point = data[position[4]];\n                radius = pick(position[2], void 0);\n                if (!useSimulation) {\n                    point.plotX = (position[0] - chart.plotLeft +\n                        chart.diffX);\n                    point.plotY = (position[1] - chart.plotTop +\n                        chart.diffY);\n                }\n                if (isNumber(radius)) {\n                    point.marker = extend(point.marker, {\n                        radius: radius,\n                        width: 2 * radius,\n                        height: 2 * radius\n                    });\n                    point.radius = radius;\n                }\n            }\n        }\n        if (useSimulation) {\n            this.deferLayout();\n        }\n        fireEvent(this, 'afterTranslate');\n    };\n    PackedBubbleSeries.defaultOptions = merge(BubbleSeries.defaultOptions, PackedBubbleSeriesDefaults);\n    return PackedBubbleSeries;\n}(BubbleSeries));\nextend(PackedBubbleSeries.prototype, {\n    pointClass: PackedBubblePoint,\n    axisTypes: [],\n    directTouch: true,\n    forces: ['barycenter', 'repulsive'],\n    hasDraggableNodes: true,\n    isCartesian: false,\n    noSharedTooltip: true,\n    pointArrayMap: ['value'],\n    pointValKey: 'value',\n    requireSorting: false,\n    trackerGroups: ['group', 'dataLabelsGroup', 'parentNodesGroup'],\n    alignDataLabel: seriesProto.alignDataLabel,\n    indexateNodes: noop,\n    onMouseDown: DragNodesComposition.onMouseDown,\n    onMouseMove: DragNodesComposition.onMouseMove,\n    redrawHalo: DragNodesComposition.redrawHalo,\n    searchPoint: noop // solving #12287\n});\nSeriesRegistry.registerSeriesType('packedbubble', PackedBubbleSeries);\n/* *\n *\n *  Default Export\n *\n * */\nexport default PackedBubbleSeries;\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * Formatter callback function.\n *\n * @callback Highcharts.SeriesPackedBubbleDataLabelsFormatterCallbackFunction\n *\n * @param {Highcharts.SeriesPackedBubbleDataLabelsFormatterContextObject} this\n *        Data label context to format\n *\n * @return {string}\n *         Formatted data label text\n */\n/**\n * Context for the formatter function.\n *\n * @interface Highcharts.SeriesPackedBubbleDataLabelsFormatterContextObject\n * @extends Highcharts.PointLabelObject\n * @since 7.0.0\n */ /**\n* The color of the node.\n* @name Highcharts.SeriesPackedBubbleDataLabelsFormatterContextObject#color\n* @type {Highcharts.ColorString}\n* @since 7.0.0\n*/ /**\n* The point (node) object. The node name, if defined, is available through\n* `this.point.name`. Arrays: `this.point.linksFrom` and `this.point.linksTo`\n* contains all nodes connected to this point.\n* @name Highcharts.SeriesPackedBubbleDataLabelsFormatterContextObject#point\n* @type {Highcharts.Point}\n* @since 7.0.0\n*/ /**\n* The ID of the node.\n* @name Highcharts.SeriesPackedBubbleDataLabelsFormatterContextObject#key\n* @type {string}\n* @since 7.0.0\n*/\n''; // detach doclets above\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport H from '../../Core/Globals.js';\nvar noop = H.noop;\nimport LegendSymbol from '../../Core/Legend/LegendSymbol.js';\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar Series = SeriesRegistry.series, _a = SeriesRegistry.seriesTypes, AreaSeries = _a.area, LineSeries = _a.line, ScatterSeries = _a.scatter;\nimport U from '../../Core/Utilities.js';\nvar extend = U.extend, merge = U.merge;\nimport '../../Core/Legend/Legend.js';\n/* *\n *\n * Class\n *\n * */\nvar PolygonSeries = /** @class */ (function (_super) {\n    __extends(PolygonSeries, _super);\n    function PolygonSeries() {\n        /* *\n         *\n         * Static properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.data = void 0;\n        _this.options = void 0;\n        _this.points = void 0;\n        return _this;\n    }\n    /* *\n     *\n     * Functions\n     *\n     * */\n    PolygonSeries.prototype.getGraphPath = function () {\n        var graphPath = LineSeries.prototype.getGraphPath.call(this), i = graphPath.length + 1;\n        // Close all segments\n        while (i--) {\n            if ((i === graphPath.length || graphPath[i][0] === 'M') && i > 0) {\n                graphPath.splice(i, 0, ['Z']);\n            }\n        }\n        this.areaPath = graphPath;\n        return graphPath;\n    };\n    PolygonSeries.prototype.drawGraph = function () {\n        // Hack into the fill logic in area.drawGraph\n        this.options.fillColor = this.color;\n        AreaSeries.prototype.drawGraph.call(this);\n    };\n    /**\n     * A polygon series can be used to draw any freeform shape in the cartesian\n     * coordinate system. A fill is applied with the `color` option, and\n     * stroke is applied through `lineWidth` and `lineColor` options.\n     *\n     * @sample {highcharts} highcharts/demo/polygon/\n     *         Polygon\n     * @sample {highstock} highcharts/demo/polygon/\n     *         Polygon\n     *\n     * @extends      plotOptions.scatter\n     * @since        4.1.0\n     * @excluding    jitter, softThreshold, threshold, cluster, boostThreshold,\n     *               boostBlending\n     * @product      highcharts highstock\n     * @requires     highcharts-more\n     * @optionparent plotOptions.polygon\n     */\n    PolygonSeries.defaultOptions = merge(ScatterSeries.defaultOptions, {\n        marker: {\n            enabled: false,\n            states: {\n                hover: {\n                    enabled: false\n                }\n            }\n        },\n        stickyTracking: false,\n        tooltip: {\n            followPointer: true,\n            pointFormat: ''\n        },\n        trackByArea: true\n    });\n    return PolygonSeries;\n}(ScatterSeries));\nextend(PolygonSeries.prototype, {\n    type: 'polygon',\n    drawLegendSymbol: LegendSymbol.drawRectangle,\n    drawTracker: Series.prototype.drawTracker,\n    setStackedPoints: noop // No stacking points on polygons (#5310)\n});\nSeriesRegistry.registerSeriesType('polygon', PolygonSeries);\n/* *\n *\n * Export\n *\n * */\nexport default PolygonSeries;\n/* *\n *\n * API Options\n *\n * */\n/**\n * A `polygon` series. If the [type](#series.polygon.type) option is\n * not specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.polygon\n * @excluding dataParser, dataURL, stack, boostThreshold, boostBlending\n * @product   highcharts highstock\n * @requires  highcharts-more\n * @apioption series.polygon\n */\n/**\n * An array of data points for the series. For the `polygon` series\n * type, points can be given in the following ways:\n *\n * 1. An array of numerical values. In this case, the numerical values will be\n *    interpreted as `y` options. The `x` values will be automatically\n *    calculated, either starting at 0 and incremented by 1, or from\n *    `pointStart` and `pointInterval` given in the series options. If the axis\n *    has categories, these will be used. Example:\n *    ```js\n *    data: [0, 5, 3, 5]\n *    ```\n *\n * 2. An array of arrays with 2 values. In this case, the values correspond to\n *    `x,y`. If the first value is a string, it is applied as the name of the\n *    point, and the `x` value is inferred.\n *    ```js\n *    data: [\n *        [0, 10],\n *        [1, 3],\n *        [2, 1]\n *    ]\n *    ```\n *\n * 3. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.polygon.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        y: 1,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        y: 8,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/chart/reflow-true/\n *         Numerical values\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<number|Array<(number|string),(number|null)>|null|*>}\n * @extends   series.line.data\n * @product   highcharts highstock\n * @apioption series.polygon.data\n */\n''; // adds doclets above to transpiled file\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport StackItem from './Stacking/StackItem.js';\nimport U from '../Utilities.js';\nvar addEvent = U.addEvent, objectEach = U.objectEach;\n/**\n * @private\n */\nvar WaterfallAxis;\n(function (WaterfallAxis) {\n    /* *\n     *\n     *  Interfaces\n     *\n     * */\n    /* *\n     *\n     *  Classes\n     *\n     * */\n    /**\n     * @private\n     */\n    var Composition = /** @class */ (function () {\n        /* eslint-disable no-invalid-this, valid-jsdoc */\n        /* *\n         *\n         *  Constructors\n         *\n         * */\n        /**\n         * @private\n         */\n        function Composition(axis) {\n            this.axis = axis;\n            this.stacks = {\n                changed: false\n            };\n        }\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Calls StackItem.prototype.render function that creates and renders\n         * stack total label for each waterfall stack item.\n         *\n         * @private\n         * @function Highcharts.Axis#renderWaterfallStackTotals\n         */\n        Composition.prototype.renderStackTotals = function () {\n            var yAxis = this.axis, waterfallStacks = yAxis.waterfall.stacks, stackTotalGroup = (yAxis.stacking && yAxis.stacking.stackTotalGroup), dummyStackItem = new StackItem(yAxis, yAxis.options.stackLabels || {}, false, 0, void 0);\n            this.dummyStackItem = dummyStackItem;\n            // Render each waterfall stack total\n            if (stackTotalGroup) {\n                objectEach(waterfallStacks, function (type) {\n                    objectEach(type, function (stackItem, key) {\n                        dummyStackItem.total = stackItem.stackTotal;\n                        dummyStackItem.x = +key;\n                        if (stackItem.label) {\n                            dummyStackItem.label = stackItem.label;\n                        }\n                        StackItem.prototype.render.call(dummyStackItem, stackTotalGroup);\n                        stackItem.label = dummyStackItem.label;\n                        delete dummyStackItem.label;\n                    });\n                });\n            }\n            dummyStackItem.total = null;\n        };\n        return Composition;\n    }());\n    WaterfallAxis.Composition = Composition;\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable no-invalid-this, valid-jsdoc */\n    /**\n     * @private\n     */\n    function compose(AxisClass, ChartClass) {\n        addEvent(AxisClass, 'init', onInit);\n        addEvent(AxisClass, 'afterBuildStacks', onAfterBuildStacks);\n        addEvent(AxisClass, 'afterRender', onAfterRender);\n        addEvent(ChartClass, 'beforeRedraw', onBeforeRedraw);\n    }\n    WaterfallAxis.compose = compose;\n    /**\n     * @private\n     */\n    function onAfterBuildStacks() {\n        var axis = this;\n        var stacks = axis.waterfall.stacks;\n        if (stacks) {\n            stacks.changed = false;\n            delete stacks.alreadyChanged;\n        }\n    }\n    /**\n     * @private\n     */\n    function onAfterRender() {\n        var axis = this;\n        var stackLabelOptions = axis.options.stackLabels;\n        if (stackLabelOptions && stackLabelOptions.enabled &&\n            axis.waterfall.stacks) {\n            axis.waterfall.renderStackTotals();\n        }\n    }\n    /**\n     * @private\n     */\n    function onBeforeRedraw() {\n        var axes = this.axes, series = this.series, i = series.length;\n        while (i--) {\n            if (series[i].options.stacking) {\n                axes.forEach(function (axis) {\n                    if (!axis.isXAxis) {\n                        axis.waterfall.stacks.changed = true;\n                    }\n                });\n                i = 0;\n            }\n        }\n    }\n    /**\n     * @private\n     */\n    function onInit() {\n        var axis = this;\n        if (!axis.waterfall) {\n            axis.waterfall = new Composition(axis);\n        }\n    }\n})(WaterfallAxis || (WaterfallAxis = {}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default WaterfallAxis;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ColumnSeries from '../Column/ColumnSeries.js';\nimport Point from '../../Core/Series/Point.js';\nvar isNumber = U.isNumber;\nimport U from '../../Core/Utilities.js';\n/* *\n *\n * Class\n *\n * */\nvar WaterfallPoint = /** @class */ (function (_super) {\n    __extends(WaterfallPoint, _super);\n    function WaterfallPoint() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.options = void 0;\n        _this.series = void 0;\n        return _this;\n    }\n    /* *\n     *\n     * Functions\n     *\n     * */\n    WaterfallPoint.prototype.getClassName = function () {\n        var className = Point.prototype.getClassName.call(this);\n        if (this.isSum) {\n            className += ' highcharts-sum';\n        }\n        else if (this.isIntermediateSum) {\n            className += ' highcharts-intermediate-sum';\n        }\n        return className;\n    };\n    // Pass the null test in ColumnSeries.translate.\n    WaterfallPoint.prototype.isValid = function () {\n        return (isNumber(this.y) ||\n            this.isSum ||\n            Boolean(this.isIntermediateSum));\n    };\n    return WaterfallPoint;\n}(ColumnSeries.prototype.pointClass));\n/* *\n *\n * Export\n *\n * */\nexport default WaterfallPoint;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Axis from '../../Core/Axis/Axis.js';\nimport Chart from '../../Core/Chart/Chart.js';\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar _a = SeriesRegistry.seriesTypes, ColumnSeries = _a.column, LineSeries = _a.line;\nimport U from '../../Core/Utilities.js';\nvar arrayMax = U.arrayMax, arrayMin = U.arrayMin, correctFloat = U.correctFloat, extend = U.extend, isNumber = U.isNumber, merge = U.merge, objectEach = U.objectEach, pick = U.pick;\nimport WaterfallAxis from '../../Core/Axis/WaterfallAxis.js';\nimport WaterfallPoint from './WaterfallPoint.js';\n/**\n * Returns true if the key is a direct property of the object.\n * @private\n * @param {*} obj\n * Object with property to test\n * @param {string} key\n * Property key to test\n * @return {boolean}\n * Whether it is a direct property\n */\nfunction ownProp(obj, key) {\n    return Object.hasOwnProperty.call(obj, key);\n}\n/* eslint-disable no-invalid-this, valid-jsdoc */\n// eslint-disable-next-line valid-jsdoc\n/**\n * Waterfall series type.\n *\n * @private\n */\nvar WaterfallSeries = /** @class */ (function (_super) {\n    __extends(WaterfallSeries, _super);\n    function WaterfallSeries() {\n        /* *\n         *\n         * Static properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /* *\n         *\n         * Properties\n         *\n         * */\n        _this.chart = void 0;\n        _this.data = void 0;\n        _this.options = void 0;\n        _this.points = void 0;\n        _this.stackedYNeg = void 0;\n        _this.stackedYPos = void 0;\n        _this.stackKey = void 0;\n        _this.xData = void 0;\n        _this.yAxis = void 0;\n        _this.yData = void 0;\n        return _this;\n    }\n    /* *\n     *\n     * Functions\n     *\n     * */\n    // After generating points, set y-values for all sums.\n    WaterfallSeries.prototype.generatePoints = function () {\n        // Parent call:\n        ColumnSeries.prototype.generatePoints.apply(this);\n        for (var i = 0, len = this.points.length; i < len; i++) {\n            var point = this.points[i], y = this.processedYData[i];\n            // Override point value for sums. #3710 Update point does not\n            // propagate to sum\n            if (isNumber(y) && (point.isIntermediateSum || point.isSum)) {\n                point.y = correctFloat(y);\n            }\n        }\n    };\n    // Translate data points from raw values\n    WaterfallSeries.prototype.translate = function () {\n        var series = this, options = series.options, yAxis = series.yAxis, minPointLength = pick(options.minPointLength, 5), halfMinPointLength = minPointLength / 2, threshold = options.threshold || 0, stacking = options.stacking, actualStack = yAxis.waterfall.stacks[series.stackKey];\n        var previousIntermediate = threshold, previousY = threshold, y, total, yPos, hPos;\n        // run column series translate\n        ColumnSeries.prototype.translate.apply(series);\n        var points = series.points;\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i], yValue = series.processedYData[i], shapeArgs = point.shapeArgs;\n            if (!shapeArgs || !isNumber(yValue)) {\n                continue;\n            }\n            var range = [0, yValue], pointY = point.y;\n            // code responsible for correct positions of stacked points\n            // starts here\n            if (stacking) {\n                if (actualStack) {\n                    var actualStackX = actualStack[i];\n                    if (stacking === 'overlap') {\n                        total =\n                            actualStackX.stackState[actualStackX.stateIndex--];\n                        y = pointY >= 0 ? total : total - pointY;\n                        if (ownProp(actualStackX, 'absolutePos')) {\n                            delete actualStackX.absolutePos;\n                        }\n                        if (ownProp(actualStackX, 'absoluteNeg')) {\n                            delete actualStackX.absoluteNeg;\n                        }\n                    }\n                    else {\n                        if (pointY >= 0) {\n                            total = actualStackX.threshold +\n                                actualStackX.posTotal;\n                            actualStackX.posTotal -= pointY;\n                            y = total;\n                        }\n                        else {\n                            total = actualStackX.threshold +\n                                actualStackX.negTotal;\n                            actualStackX.negTotal -= pointY;\n                            y = total - pointY;\n                        }\n                        if (!actualStackX.posTotal) {\n                            if (isNumber(actualStackX.absolutePos) &&\n                                ownProp(actualStackX, 'absolutePos')) {\n                                actualStackX.posTotal =\n                                    actualStackX.absolutePos;\n                                delete actualStackX.absolutePos;\n                            }\n                        }\n                        if (!actualStackX.negTotal) {\n                            if (isNumber(actualStackX.absoluteNeg) &&\n                                ownProp(actualStackX, 'absoluteNeg')) {\n                                actualStackX.negTotal =\n                                    actualStackX.absoluteNeg;\n                                delete actualStackX.absoluteNeg;\n                            }\n                        }\n                    }\n                    if (!point.isSum) {\n                        // the connectorThreshold property is later used in\n                        // getCrispPath function to draw a connector line in a\n                        // correct place\n                        actualStackX.connectorThreshold =\n                            actualStackX.threshold + actualStackX.stackTotal;\n                    }\n                    if (yAxis.reversed) {\n                        yPos = (pointY >= 0) ? (y - pointY) : (y + pointY);\n                        hPos = y;\n                    }\n                    else {\n                        yPos = y;\n                        hPos = y - pointY;\n                    }\n                    point.below = yPos <= threshold;\n                    shapeArgs.y = yAxis.translate(yPos, false, true, false, true);\n                    shapeArgs.height = Math.abs(shapeArgs.y -\n                        yAxis.translate(hPos, false, true, false, true));\n                    var dummyStackItem = yAxis.waterfall.dummyStackItem;\n                    if (dummyStackItem) {\n                        dummyStackItem.x = i;\n                        dummyStackItem.label = actualStack[i].label;\n                        dummyStackItem.setOffset(series.pointXOffset || 0, series.barW || 0, series.stackedYNeg[i], series.stackedYPos[i], void 0, this.xAxis);\n                    }\n                }\n            }\n            else {\n                // up points\n                y = Math.max(previousY, previousY + pointY) + range[0];\n                shapeArgs.y = yAxis.translate(y, false, true, false, true);\n                // sum points\n                if (point.isSum) {\n                    shapeArgs.y = yAxis.translate(range[1], false, true, false, true);\n                    shapeArgs.height = Math.min(yAxis.translate(range[0], false, true, false, true), yAxis.len) - shapeArgs.y; // #4256\n                    point.below = range[1] <= threshold;\n                }\n                else if (point.isIntermediateSum) {\n                    if (pointY >= 0) {\n                        yPos = range[1] + previousIntermediate;\n                        hPos = previousIntermediate;\n                    }\n                    else {\n                        yPos = previousIntermediate;\n                        hPos = range[1] + previousIntermediate;\n                    }\n                    if (yAxis.reversed) {\n                        // swapping values\n                        yPos ^= hPos;\n                        hPos ^= yPos;\n                        yPos ^= hPos;\n                    }\n                    shapeArgs.y = yAxis.translate(yPos, false, true, false, true);\n                    shapeArgs.height = Math.abs(shapeArgs.y -\n                        Math.min(yAxis.translate(hPos, false, true, false, true), yAxis.len));\n                    previousIntermediate += range[1];\n                    point.below = yPos <= threshold;\n                    // If it's not the sum point, update previous stack end position\n                    // and get shape height (#3886)\n                }\n                else {\n                    shapeArgs.height = yValue > 0 ?\n                        yAxis.translate(previousY, false, true, false, true) - shapeArgs.y :\n                        yAxis.translate(previousY, false, true, false, true) - yAxis.translate(previousY - yValue, false, true, false, true);\n                    previousY += yValue;\n                    point.below = previousY < threshold;\n                }\n                // #3952 Negative sum or intermediate sum not rendered correctly\n                if (shapeArgs.height < 0) {\n                    shapeArgs.y += shapeArgs.height;\n                    shapeArgs.height *= -1;\n                }\n            }\n            point.plotY = shapeArgs.y =\n                Math.round(shapeArgs.y || 0) - (series.borderWidth % 2) / 2;\n            // #3151\n            shapeArgs.height =\n                Math.max(Math.round(shapeArgs.height || 0), 0.001);\n            point.yBottom = shapeArgs.y + shapeArgs.height;\n            if (shapeArgs.height <= minPointLength && !point.isNull) {\n                shapeArgs.height = minPointLength;\n                shapeArgs.y -= halfMinPointLength;\n                point.plotY = shapeArgs.y;\n                if (point.y < 0) {\n                    point.minPointLengthOffset = -halfMinPointLength;\n                }\n                else {\n                    point.minPointLengthOffset = halfMinPointLength;\n                }\n            }\n            else {\n                if (point.isNull) {\n                    shapeArgs.width = 0;\n                }\n                point.minPointLengthOffset = 0;\n            }\n            // Correct tooltip placement (#3014)\n            var tooltipY = point.plotY + (point.negative ? shapeArgs.height : 0);\n            if (point.below) { // #15334\n                point.plotY += shapeArgs.height;\n            }\n            if (point.tooltipPos) {\n                if (series.chart.inverted) {\n                    point.tooltipPos[0] = yAxis.len - tooltipY;\n                }\n                else {\n                    point.tooltipPos[1] = tooltipY;\n                }\n            }\n            // Check point position after recalculation (#16788)\n            point.isInside = this.isPointInside(point);\n        }\n    };\n    // Call default processData then override yData to reflect waterfall's\n    // extremes on yAxis\n    WaterfallSeries.prototype.processData = function (force) {\n        var series = this, options = series.options, yData = series.yData, \n        // #3710 Update point does not propagate to sum\n        points = options.data, point, dataLength = yData.length, threshold = options.threshold || 0, subSum, sum, dataMin, dataMax, y, i;\n        sum = subSum = dataMin = dataMax = 0;\n        for (i = 0; i < dataLength; i++) {\n            y = yData[i];\n            point = points && points[i] ? points[i] : {};\n            if (y === 'sum' || point.isSum) {\n                yData[i] = correctFloat(sum);\n            }\n            else if (y === 'intermediateSum' ||\n                point.isIntermediateSum) {\n                yData[i] = correctFloat(subSum);\n                subSum = 0;\n            }\n            else {\n                sum += y;\n                subSum += y;\n            }\n            dataMin = Math.min(sum, dataMin);\n            dataMax = Math.max(sum, dataMax);\n        }\n        _super.prototype.processData.call(this, force);\n        // Record extremes only if stacking was not set:\n        if (!options.stacking) {\n            series.dataMin = dataMin + threshold;\n            series.dataMax = dataMax;\n        }\n        return;\n    };\n    // Return y value or string if point is sum\n    WaterfallSeries.prototype.toYData = function (pt) {\n        if (pt.isSum) {\n            return 'sum';\n        }\n        if (pt.isIntermediateSum) {\n            return 'intermediateSum';\n        }\n        return pt.y;\n    };\n    WaterfallSeries.prototype.updateParallelArrays = function (point, i) {\n        _super.prototype.updateParallelArrays.call(this, point, i);\n        // Prevent initial sums from triggering an error (#3245, #7559)\n        if (this.yData[0] === 'sum' || this.yData[0] === 'intermediateSum') {\n            this.yData[0] = null;\n        }\n    };\n    // Postprocess mapping between options and SVG attributes\n    WaterfallSeries.prototype.pointAttribs = function (point, state) {\n        var upColor = this.options.upColor;\n        // Set or reset up color (#3710, update to negative)\n        if (upColor && !point.options.color) {\n            point.color = point.y > 0 ? upColor : void 0;\n        }\n        var attr = ColumnSeries.prototype.pointAttribs.call(this, point, state);\n        // The dashStyle option in waterfall applies to the graph, not\n        // the points\n        delete attr.dashstyle;\n        return attr;\n    };\n    // Return an empty path initially, because we need to know the stroke-width\n    // in order to set the final path.\n    WaterfallSeries.prototype.getGraphPath = function () {\n        return [['M', 0, 0]];\n    };\n    // Draw columns' connector lines\n    WaterfallSeries.prototype.getCrispPath = function () {\n        var data = this.data, yAxis = this.yAxis, length = data.length, graphNormalizer = Math.round(this.graph.strokeWidth()) % 2 / 2, borderNormalizer = Math.round(this.borderWidth) % 2 / 2, reversedXAxis = this.xAxis.reversed, reversedYAxis = this.yAxis.reversed, stacking = this.options.stacking, path = [], connectorThreshold, prevStack, prevStackX, prevPoint, yPos, isPos, prevArgs, pointArgs, i;\n        for (i = 1; i < length; i++) {\n            pointArgs = data[i].shapeArgs;\n            prevPoint = data[i - 1];\n            prevArgs = data[i - 1].shapeArgs;\n            prevStack = yAxis.waterfall.stacks[this.stackKey];\n            isPos = prevPoint.y > 0 ? -prevArgs.height : 0;\n            if (prevStack && prevArgs && pointArgs) {\n                prevStackX = prevStack[i - 1];\n                // y position of the connector is different when series are\n                // stacked, yAxis is reversed and it also depends on point's\n                // value\n                if (stacking) {\n                    connectorThreshold = prevStackX.connectorThreshold;\n                    yPos = Math.round((yAxis.translate(connectorThreshold, false, true, false, true) +\n                        (reversedYAxis ? isPos : 0))) - graphNormalizer;\n                }\n                else {\n                    yPos =\n                        prevArgs.y + prevPoint.minPointLengthOffset +\n                            borderNormalizer - graphNormalizer;\n                }\n                path.push([\n                    'M',\n                    (prevArgs.x || 0) + (reversedXAxis ?\n                        0 :\n                        (prevArgs.width || 0)),\n                    yPos\n                ], [\n                    'L',\n                    (pointArgs.x || 0) + (reversedXAxis ?\n                        (pointArgs.width || 0) :\n                        0),\n                    yPos\n                ]);\n            }\n            if (prevArgs &&\n                path.length &&\n                ((!stacking && prevPoint.y < 0 && !reversedYAxis) ||\n                    (prevPoint.y > 0 && reversedYAxis))) {\n                var nextLast = path[path.length - 2];\n                if (nextLast && typeof nextLast[2] === 'number') {\n                    nextLast[2] += prevArgs.height || 0;\n                }\n                var last = path[path.length - 1];\n                if (last && typeof last[2] === 'number') {\n                    last[2] += prevArgs.height || 0;\n                }\n            }\n        }\n        return path;\n    };\n    // The graph is initially drawn with an empty definition, then updated with\n    // crisp rendering.\n    WaterfallSeries.prototype.drawGraph = function () {\n        LineSeries.prototype.drawGraph.call(this);\n        if (this.graph) {\n            this.graph.attr({\n                d: this.getCrispPath()\n            });\n        }\n    };\n    // Waterfall has stacking along the x-values too.\n    WaterfallSeries.prototype.setStackedPoints = function () {\n        var series = this, options = series.options, waterfallStacks = series.yAxis.waterfall.stacks, seriesThreshold = options.threshold || 0, stackThreshold = seriesThreshold, interSum = stackThreshold, stackKey = series.stackKey, xData = series.xData, xLength = xData.length, actualStackX, totalYVal, actualSum, prevSum, statesLen, posTotal, negTotal, xPoint, yVal, x, alreadyChanged, changed;\n        // Function responsible for calculating correct values for stackState\n        // array of each stack item. The arguments are: firstS - the value for\n        // the first state, nextS - the difference between the previous and the\n        // newest state, sInx - counter used in the for that updates each state\n        // when necessary, sOff - offset that must be added to each state when\n        // they need to be updated (if point isn't a total sum)\n        // eslint-disable-next-line require-jsdoc\n        function calculateStackState(firstS, nextS, sInx, sOff) {\n            if (actualStackX) {\n                if (!statesLen) {\n                    actualStackX.stackState[0] = firstS;\n                    statesLen = actualStackX.stackState.length;\n                }\n                else {\n                    for (sInx; sInx < statesLen; sInx++) {\n                        actualStackX.stackState[sInx] += sOff;\n                    }\n                }\n                actualStackX.stackState.push(actualStackX.stackState[statesLen - 1] + nextS);\n            }\n        }\n        series.yAxis.stacking.usePercentage = false;\n        totalYVal = actualSum = prevSum = stackThreshold;\n        // code responsible for creating stacks for waterfall series\n        if (series.visible ||\n            !series.chart.options.chart.ignoreHiddenSeries) {\n            changed = waterfallStacks.changed;\n            alreadyChanged = waterfallStacks.alreadyChanged;\n            // In case of a redraw, stack for each x value must be emptied (only\n            // for the first series in a specific stack) and recalculated once\n            // more\n            if (alreadyChanged &&\n                alreadyChanged.indexOf(stackKey) < 0) {\n                changed = true;\n            }\n            if (!waterfallStacks[stackKey]) {\n                waterfallStacks[stackKey] = {};\n            }\n            var actualStack = waterfallStacks[stackKey];\n            if (actualStack) {\n                for (var i = 0; i < xLength; i++) {\n                    x = xData[i];\n                    if (!actualStack[x] || changed) {\n                        actualStack[x] = {\n                            negTotal: 0,\n                            posTotal: 0,\n                            stackTotal: 0,\n                            threshold: 0,\n                            stateIndex: 0,\n                            stackState: [],\n                            label: ((changed &&\n                                actualStack[x]) ?\n                                actualStack[x].label :\n                                void 0)\n                        };\n                    }\n                    actualStackX = actualStack[x];\n                    yVal = series.yData[i];\n                    if (yVal >= 0) {\n                        actualStackX.posTotal += yVal;\n                    }\n                    else {\n                        actualStackX.negTotal += yVal;\n                    }\n                    // points do not exist yet, so raw data is used\n                    xPoint = options.data[i];\n                    posTotal = actualStackX.absolutePos = actualStackX.posTotal;\n                    negTotal = actualStackX.absoluteNeg = actualStackX.negTotal;\n                    actualStackX.stackTotal = posTotal + negTotal;\n                    statesLen = actualStackX.stackState.length;\n                    if (xPoint && xPoint.isIntermediateSum) {\n                        calculateStackState(prevSum, actualSum, 0, prevSum);\n                        prevSum = actualSum;\n                        actualSum = seriesThreshold;\n                        // swapping values\n                        stackThreshold ^= interSum;\n                        interSum ^= stackThreshold;\n                        stackThreshold ^= interSum;\n                    }\n                    else if (xPoint && xPoint.isSum) {\n                        calculateStackState(seriesThreshold, totalYVal, statesLen, 0);\n                        stackThreshold = seriesThreshold;\n                    }\n                    else {\n                        calculateStackState(stackThreshold, yVal, 0, totalYVal);\n                        if (xPoint) {\n                            totalYVal += yVal;\n                            actualSum += yVal;\n                        }\n                    }\n                    actualStackX.stateIndex++;\n                    actualStackX.threshold = stackThreshold;\n                    stackThreshold += actualStackX.stackTotal;\n                }\n            }\n            waterfallStacks.changed = false;\n            if (!waterfallStacks.alreadyChanged) {\n                waterfallStacks.alreadyChanged = [];\n            }\n            waterfallStacks.alreadyChanged.push(stackKey);\n        }\n    };\n    // Extremes for a non-stacked series are recorded in processData.\n    // In case of stacking, use Series.stackedYData to calculate extremes.\n    WaterfallSeries.prototype.getExtremes = function () {\n        var stacking = this.options.stacking, yAxis, waterfallStacks, stackedYNeg, stackedYPos;\n        if (stacking) {\n            yAxis = this.yAxis;\n            waterfallStacks = yAxis.waterfall.stacks;\n            stackedYNeg = this.stackedYNeg = [];\n            stackedYPos = this.stackedYPos = [];\n            // the visible y range can be different when stacking is set to\n            // overlap and different when it's set to normal\n            if (stacking === 'overlap') {\n                objectEach(waterfallStacks[this.stackKey], function (stackX) {\n                    stackedYNeg.push(arrayMin(stackX.stackState));\n                    stackedYPos.push(arrayMax(stackX.stackState));\n                });\n            }\n            else {\n                objectEach(waterfallStacks[this.stackKey], function (stackX) {\n                    stackedYNeg.push(stackX.negTotal + stackX.threshold);\n                    stackedYPos.push(stackX.posTotal + stackX.threshold);\n                });\n            }\n            return {\n                dataMin: arrayMin(stackedYNeg),\n                dataMax: arrayMax(stackedYPos)\n            };\n        }\n        // When not stacking, data extremes have already been computed in the\n        // processData function.\n        return {\n            dataMin: this.dataMin,\n            dataMax: this.dataMax\n        };\n    };\n    /**\n     * A waterfall chart displays sequentially introduced positive or negative\n     * values in cumulative columns.\n     *\n     * @sample highcharts/demo/waterfall/\n     *         Waterfall chart\n     * @sample highcharts/plotoptions/waterfall-inverted/\n     *         Horizontal (inverted) waterfall\n     * @sample highcharts/plotoptions/waterfall-stacked/\n     *         Stacked waterfall chart\n     *\n     * @extends      plotOptions.column\n     * @excluding    boostThreshold, boostBlending\n     * @product      highcharts\n     * @requires     highcharts-more\n     * @optionparent plotOptions.waterfall\n     */\n    WaterfallSeries.defaultOptions = merge(ColumnSeries.defaultOptions, {\n        /**\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @apioption plotOptions.waterfall.color\n         */\n        /**\n         * The color used specifically for positive point columns. When not\n         * specified, the general series color is used.\n         *\n         * In styled mode, the waterfall colors can be set with the\n         * `.highcharts-point-negative`, `.highcharts-sum` and\n         * `.highcharts-intermediate-sum` classes.\n         *\n         * @sample {highcharts} highcharts/demo/waterfall/\n         *         Waterfall\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @product   highcharts\n         * @apioption plotOptions.waterfall.upColor\n         */\n        dataLabels: {\n            inside: true\n        },\n        /**\n         * The width of the line connecting waterfall columns.\n         *\n         * @product highcharts\n         */\n        lineWidth: 1,\n        /**\n         * The color of the line that connects columns in a waterfall series.\n         *\n         * In styled mode, the stroke can be set with the `.highcharts-graph`\n         * class.\n         *\n         * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @since   3.0\n         * @product highcharts\n         */\n        lineColor: \"#333333\" /* Palette.neutralColor80 */,\n        /**\n         * A name for the dash style to use for the line connecting the columns\n         * of the waterfall series. Possible values: Dash, DashDot, Dot,\n         * LongDash, LongDashDot, LongDashDotDot, ShortDash, ShortDashDot,\n         * ShortDashDotDot, ShortDot, Solid\n         *\n         * In styled mode, the stroke dash-array can be set with the\n         * `.highcharts-graph` class.\n         *\n         * @type    {Highcharts.DashStyleValue}\n         * @since   3.0\n         * @product highcharts\n         */\n        dashStyle: 'Dot',\n        /**\n         * The color of the border of each waterfall column.\n         *\n         * In styled mode, the border stroke can be set with the\n         * `.highcharts-point` class.\n         *\n         * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @since   3.0\n         * @product highcharts\n         */\n        borderColor: \"#333333\" /* Palette.neutralColor80 */,\n        states: {\n            hover: {\n                lineWidthPlus: 0 // #3126\n            }\n        }\n    });\n    return WaterfallSeries;\n}(ColumnSeries));\nextend(WaterfallSeries.prototype, {\n    getZonesGraphs: LineSeries.prototype.getZonesGraphs,\n    pointValKey: 'y',\n    // Property needed to prevent lines between the columns from disappearing\n    // when negativeColor is used.\n    showLine: true,\n    pointClass: WaterfallPoint\n});\nSeriesRegistry.registerSeriesType('waterfall', WaterfallSeries);\nWaterfallAxis.compose(Axis, Chart);\n/* *\n *\n * Export\n *\n * */\nexport default WaterfallSeries;\n/**\n *\n * API Options\n *\n */\n/**\n * A `waterfall` series. If the [type](#series.waterfall.type) option\n * is not specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.waterfall\n * @excluding dataParser, dataURL, boostThreshold, boostBlending\n * @product   highcharts\n * @requires  highcharts-more\n * @apioption series.waterfall\n */\n/**\n * An array of data points for the series. For the `waterfall` series\n * type, points can be given in the following ways:\n *\n * 1. An array of numerical values. In this case, the numerical values will be\n *    interpreted as `y` options. The `x` values will be automatically\n *    calculated, either starting at 0 and incremented by 1, or from\n *    `pointStart` and `pointInterval` given in the series options. If the axis\n *    has categories, these will be used. Example:\n *    ```js\n *    data: [0, 5, 3, 5]\n *    ```\n *\n * 2. An array of arrays with 2 values. In this case, the values correspond to\n *    `x,y`. If the first value is a string, it is applied as the name of the\n *    point, and the `x` value is inferred.\n *    ```js\n *    data: [\n *        [0, 7],\n *        [1, 8],\n *        [2, 3]\n *    ]\n *    ```\n *\n * 3. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.waterfall.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        y: 8,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        y: 8,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/chart/reflow-true/\n *         Numerical values\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<number|Array<(number|string),(number|null)>|null|*>}\n * @extends   series.line.data\n * @excluding marker\n * @product   highcharts\n * @apioption series.waterfall.data\n */\n/**\n * When this property is true, the points acts as a summary column for\n * the values added or substracted since the last intermediate sum,\n * or since the start of the series. The `y` value is ignored.\n *\n * @sample {highcharts} highcharts/demo/waterfall/\n *         Waterfall\n *\n * @type      {boolean}\n * @default   false\n * @product   highcharts\n * @apioption series.waterfall.data.isIntermediateSum\n */\n/**\n * When this property is true, the point display the total sum across\n * the entire series. The `y` value is ignored.\n *\n * @sample {highcharts} highcharts/demo/waterfall/\n *         Waterfall\n *\n * @type      {boolean}\n * @default   false\n * @product   highcharts\n * @apioption series.waterfall.data.isSum\n */\n''; // adds doclets above to transpiled file\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport AxisDefaults from './AxisDefaults.js';\nimport D from '../Defaults.js';\nvar defaultOptions = D.defaultOptions;\nimport H from '../Globals.js';\nvar noop = H.noop;\nimport U from '../Utilities.js';\nvar addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, extend = U.extend, fireEvent = U.fireEvent, merge = U.merge, pick = U.pick, relativeLength = U.relativeLength, wrap = U.wrap;\n/* *\n *\n *  Composition\n *\n * */\nvar RadialAxis;\n(function (RadialAxis) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    var composedClasses = [];\n    /**\n     * Circular axis around the perimeter of a polar chart.\n     * @private\n     */\n    var defaultCircularOptions = {\n        gridLineWidth: 1,\n        labels: {\n            align: void 0,\n            distance: 15,\n            x: 0,\n            y: void 0,\n            style: {\n                textOverflow: 'none' // wrap lines by default (#7248)\n            }\n        },\n        maxPadding: 0,\n        minPadding: 0,\n        showLastLabel: false,\n        tickLength: 0\n    };\n    /**\n     * The default options extend defaultYAxisOptions.\n     * @private\n     */\n    var defaultRadialGaugeOptions = {\n        labels: {\n            align: 'center',\n            x: 0,\n            y: void 0 // auto\n        },\n        minorGridLineWidth: 0,\n        minorTickInterval: 'auto',\n        minorTickLength: 10,\n        minorTickPosition: 'inside',\n        minorTickWidth: 1,\n        tickLength: 10,\n        tickPosition: 'inside',\n        tickWidth: 2,\n        title: {\n            rotation: 0\n        },\n        zIndex: 2 // behind dials, points in the series group\n    };\n    /**\n     * Radial axis, like a spoke in a polar chart.\n     * @private\n     */\n    var defaultRadialOptions = {\n        /**\n         * In a polar chart, this is the angle of the Y axis in degrees, where\n         * 0 is up and 90 is right. The angle determines the position of the\n         * axis line and the labels, though the coordinate system is unaffected.\n         * Since v8.0.0 this option is also applicable for X axis (inverted\n         * polar).\n         *\n         * @sample {highcharts} highcharts/xaxis/angle/\n         *         Custom X axis' angle on inverted polar chart\n         * @sample {highcharts} highcharts/yaxis/angle/\n         *         Dual axis polar chart\n         *\n         * @type      {number}\n         * @default   0\n         * @since     4.2.7\n         * @product   highcharts\n         * @apioption xAxis.angle\n         */\n        /**\n         * Polar charts only. Whether the grid lines should draw as a polygon\n         * with straight lines between categories, or as circles. Can be either\n         * `circle` or `polygon`. Since v8.0.0 this option is also applicable\n         * for X axis (inverted polar).\n         *\n         * @sample {highcharts} highcharts/demo/polar-spider/\n         *         Polygon grid lines\n         * @sample {highcharts} highcharts/xaxis/gridlineinterpolation/\n         *         Circle and polygon on inverted polar\n         * @sample {highcharts} highcharts/yaxis/gridlineinterpolation/\n         *         Circle and polygon\n         *\n         * @type       {string}\n         * @product    highcharts\n         * @validvalue [\"circle\", \"polygon\"]\n         * @apioption  xAxis.gridLineInterpolation\n         */\n        gridLineInterpolation: 'circle',\n        gridLineWidth: 1,\n        labels: {\n            align: 'right',\n            x: -3,\n            y: -2\n        },\n        showLastLabel: false,\n        title: {\n            x: 4,\n            text: null,\n            rotation: 90\n        }\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * In case of auto connect, add one closestPointRange to the max value\n     * right before tickPositions are computed, so that ticks will extend\n     * passed the real max.\n     * @private\n     */\n    function beforeSetTickPositions() {\n        // If autoConnect is true, polygonal grid lines are connected, and\n        // one closestPointRange is added to the X axis to prevent the last\n        // point from overlapping the first.\n        this.autoConnect = (this.isCircular &&\n            typeof pick(this.userMax, this.options.max) === 'undefined' &&\n            correctFloat(this.endAngleRad - this.startAngleRad) ===\n                correctFloat(2 * Math.PI));\n        // This will lead to add an extra tick to xAxis in order to display\n        // a correct range on inverted polar\n        if (!this.isCircular && this.chart.inverted) {\n            this.max++;\n        }\n        if (this.autoConnect) {\n            this.max += ((this.categories && 1) ||\n                this.pointRange ||\n                this.closestPointRange ||\n                0); // #1197, #2260\n        }\n    }\n    /**\n     * Augments methods for the value axis.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} AxisClass\n     * Axis class to extend.\n     *\n     * @param {Highcharts.Tick} TickClass\n     * Tick class to use.\n     *\n     * @return {Highcharts.Axis}\n     * Axis composition.\n     */\n    function compose(AxisClass, TickClass) {\n        if (composedClasses.indexOf(AxisClass) === -1) {\n            composedClasses.push(AxisClass);\n            addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n            addEvent(AxisClass, 'autoLabelAlign', onAxisAutoLabelAlign);\n            addEvent(AxisClass, 'destroy', onAxisDestroy);\n            addEvent(AxisClass, 'init', onAxisInit);\n            addEvent(AxisClass, 'initialAxisTranslation', onAxisInitialAxisTranslation);\n        }\n        if (composedClasses.indexOf(TickClass) === -1) {\n            composedClasses.push(TickClass);\n            addEvent(TickClass, 'afterGetLabelPosition', onTickAfterGetLabelPosition);\n            addEvent(TickClass, 'afterGetPosition', onTickAfterGetPosition);\n            wrap(TickClass.prototype, 'getMarkPath', wrapTickGetMarkPath);\n        }\n        return AxisClass;\n    }\n    RadialAxis.compose = compose;\n    /**\n     * Attach and return collecting function for labels in radial axis for\n     * anti-collision.\n     *\n     * @private\n     */\n    function createLabelCollector() {\n        var _this = this;\n        return function () {\n            if (_this.isRadial &&\n                _this.tickPositions &&\n                // undocumented option for now, but working\n                _this.options.labels &&\n                _this.options.labels.allowOverlap !== true) {\n                return _this.tickPositions\n                    .map(function (pos) {\n                    return _this.ticks[pos] && _this.ticks[pos].label;\n                })\n                    .filter(function (label) {\n                    return Boolean(label);\n                });\n            }\n        };\n    }\n    /**\n     * Creates an empty collector function.\n     * @private\n     */\n    function createLabelCollectorHidden() {\n        return noop;\n    }\n    /**\n     * Find the correct end values of crosshair in polar.\n     * @private\n     */\n    function getCrosshairPosition(options, x1, y1) {\n        var center = this.pane.center;\n        var value = options.value, shapeArgs, end, x2, y2;\n        if (this.isCircular) {\n            if (!defined(value)) {\n                // When the snap is set to false\n                x2 = options.chartX || 0;\n                y2 = options.chartY || 0;\n                value = this.translate(Math.atan2(y2 - y1, x2 - x1) - this.startAngleRad, true);\n            }\n            else if (options.point) {\n                // When the snap is set to true\n                shapeArgs = options.point.shapeArgs || {};\n                if (shapeArgs.start) {\n                    // Find a true value of the point based on the\n                    // angle\n                    value = this.chart.inverted ?\n                        this.translate(options.point.rectPlotY, true) :\n                        options.point.x;\n                }\n            }\n            end = this.getPosition(value);\n            x2 = end.x;\n            y2 = end.y;\n        }\n        else {\n            if (!defined(value)) {\n                x2 = options.chartX;\n                y2 = options.chartY;\n            }\n            if (defined(x2) && defined(y2)) {\n                // Calculate radius of non-circular axis' crosshair\n                y1 = center[1] + this.chart.plotTop;\n                value = this.translate(Math.min(Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)), center[2] / 2) - center[3] / 2, true);\n            }\n        }\n        return [value, x2 || 0, y2 || 0];\n    }\n    /**\n     * Get the path for the axis line. This method is also referenced in the\n     * getPlotLinePath method.\n     *\n     * @private\n     * @param {number} _lineWidth\n     * Line width is not used.\n     * @param {number} [radius]\n     * Radius of radial path.\n     * @param {number} [innerRadius]\n     * Inner radius of radial path.\n     */\n    function getLinePath(_lineWidth, radius, innerRadius) {\n        var center = this.pane.center, chart = this.chart, left = this.left || 0, top = this.top || 0;\n        var end, r = pick(radius, center[2] / 2 - this.offset), path;\n        if (typeof innerRadius === 'undefined') {\n            innerRadius = this.horiz ? 0 : this.center && -this.center[3] / 2;\n        }\n        // In case when innerSize of pane is set, it must be included\n        if (innerRadius) {\n            r += innerRadius;\n        }\n        if (this.isCircular || typeof radius !== 'undefined') {\n            path = this.chart.renderer.symbols.arc(left + center[0], top + center[1], r, r, {\n                start: this.startAngleRad,\n                end: this.endAngleRad,\n                open: true,\n                innerR: 0\n            });\n            // Bounds used to position the plotLine label next to the line\n            // (#7117)\n            path.xBounds = [left + center[0]];\n            path.yBounds = [top + center[1] - r];\n        }\n        else {\n            end = this.postTranslate(this.angleRad, r);\n            path = [\n                [\n                    'M',\n                    this.center[0] + chart.plotLeft,\n                    this.center[1] + chart.plotTop\n                ],\n                ['L', end.x, end.y]\n            ];\n        }\n        return path;\n    }\n    /**\n     * Wrap the getOffset method to return zero offset for title or labels\n     * in a radial axis.\n     */\n    function getOffset() {\n        var axisProto = this.constructor.prototype;\n        // Call the Axis prototype method (the method we're in now is on the\n        // instance)\n        axisProto.getOffset.call(this);\n        // Title or label offsets are not counted\n        this.chart.axisOffset[this.side] = 0;\n    }\n    /**\n     * Find the path for plot bands along the radial axis.\n     *\n     * @private\n     */\n    function getPlotBandPath(from, to, options) {\n        var chart = this.chart, radiusToPixels = function (radius) {\n            if (typeof radius === 'string') {\n                var r = parseInt(radius, 10);\n                if (percentRegex.test(radius)) {\n                    r = (r * fullRadius) / 100;\n                }\n                return r;\n            }\n            return radius;\n        }, center = this.center, startAngleRad = this.startAngleRad, fullRadius = center[2] / 2, offset = Math.min(this.offset, 0), left = this.left || 0, top = this.top || 0, percentRegex = /%$/, isCircular = this.isCircular; // X axis in a polar chart\n        var start, end, angle, xOnPerimeter, open, path, outerRadius = pick(radiusToPixels(options.outerRadius), fullRadius), innerRadius = radiusToPixels(options.innerRadius), thickness = pick(radiusToPixels(options.thickness), 10);\n        // Polygonal plot bands\n        if (this.options.gridLineInterpolation === 'polygon') {\n            path = this.getPlotLinePath({ value: from }).concat(this.getPlotLinePath({ value: to, reverse: true }));\n            // Circular grid bands\n        }\n        else {\n            // Keep within bounds\n            from = Math.max(from, this.min);\n            to = Math.min(to, this.max);\n            var transFrom = this.translate(from), transTo = this.translate(to);\n            // Plot bands on Y axis (radial axis) - inner and outer\n            // radius depend on to and from\n            if (!isCircular) {\n                outerRadius = transFrom || 0;\n                innerRadius = transTo || 0;\n            }\n            // Handle full circle\n            if (options.shape === 'circle' || !isCircular) {\n                start = -Math.PI / 2;\n                end = Math.PI * 1.5;\n                open = true;\n            }\n            else {\n                start = startAngleRad + (transFrom || 0);\n                end = startAngleRad + (transTo || 0);\n            }\n            outerRadius -= offset; // #5283\n            thickness -= offset; // #5283\n            path = chart.renderer.symbols.arc(left + center[0], top + center[1], outerRadius, outerRadius, {\n                // Math is for reversed yAxis (#3606)\n                start: Math.min(start, end),\n                end: Math.max(start, end),\n                innerR: pick(innerRadius, outerRadius - thickness),\n                open: open\n            });\n            // Provide positioning boxes for the label (#6406)\n            if (isCircular) {\n                angle = (end + start) / 2;\n                xOnPerimeter = (left +\n                    center[0] +\n                    (center[2] / 2) * Math.cos(angle));\n                path.xBounds = angle > -Math.PI / 2 && angle < Math.PI / 2 ?\n                    // Right hemisphere\n                    [xOnPerimeter, chart.plotWidth] :\n                    // Left hemisphere\n                    [0, xOnPerimeter];\n                path.yBounds = [\n                    top + center[1] + (center[2] / 2) * Math.sin(angle)\n                ];\n                // Shift up or down to get the label clear of the perimeter\n                path.yBounds[0] += ((angle > -Math.PI && angle < 0) ||\n                    (angle > Math.PI)) ? -10 : 10;\n            }\n        }\n        return path;\n    }\n    /**\n     * Find the path for plot lines perpendicular to the radial axis.\n     */\n    function getPlotLinePath(options) {\n        var _this = this;\n        var center = this.pane.center, chart = this.chart, inverted = chart.inverted, reverse = options.reverse, background = this.pane.options.background ?\n            (this.pane.options.background[0] ||\n                this.pane.options.background) :\n            {}, innerRadius = background.innerRadius || '0%', outerRadius = background.outerRadius || '100%', x1 = center[0] + chart.plotLeft, y1 = center[1] + chart.plotTop, height = this.height, isCrosshair = options.isCrosshair, paneInnerR = center[3] / 2;\n        var value = options.value, innerRatio, distance, a, b, otherAxis, xy, tickPositions, crossPos, path;\n        var end = this.getPosition(value);\n        var x2 = end.x, y2 = end.y;\n        // Crosshair logic\n        if (isCrosshair) {\n            // Find crosshair's position and perform destructuring\n            // assignment\n            crossPos = this.getCrosshairPosition(options, x1, y1);\n            value = crossPos[0];\n            x2 = crossPos[1];\n            y2 = crossPos[2];\n        }\n        // Spokes\n        if (this.isCircular) {\n            distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n            a = (typeof innerRadius === 'string') ?\n                relativeLength(innerRadius, 1) :\n                (innerRadius / distance);\n            b = (typeof outerRadius === 'string') ?\n                relativeLength(outerRadius, 1) :\n                (outerRadius / distance);\n            // To ensure that gridlines won't be displayed in area\n            // defined by innerSize in case of custom radiuses of pane's\n            // background\n            if (center && paneInnerR) {\n                innerRatio = paneInnerR / distance;\n                if (a < innerRatio) {\n                    a = innerRatio;\n                }\n                if (b < innerRatio) {\n                    b = innerRatio;\n                }\n            }\n            path = [\n                ['M', x1 + a * (x2 - x1), y1 - a * (y1 - y2)],\n                ['L', x2 - (1 - b) * (x2 - x1), y2 + (1 - b) * (y1 - y2)]\n            ];\n            // Concentric circles\n        }\n        else {\n            // Pick the right values depending if it is grid line or\n            // crosshair\n            value = this.translate(value);\n            // This is required in case when xAxis is non-circular to\n            // prevent grid lines (or crosshairs, if enabled) from\n            // rendering above the center after they supposed to be\n            // displayed below the center point\n            if (value) {\n                if (value < 0 || value > height) {\n                    value = 0;\n                }\n            }\n            if (this.options.gridLineInterpolation === 'circle') {\n                // A value of 0 is in the center, so it won't be\n                // visible, but draw it anyway for update and animation\n                // (#2366)\n                path = this.getLinePath(0, value, paneInnerR);\n                // Concentric polygons\n            }\n            else {\n                path = [];\n                // Find the other axis (a circular one) in the same pane\n                chart[inverted ? 'yAxis' : 'xAxis'].forEach(function (a) {\n                    if (a.pane === _this.pane) {\n                        otherAxis = a;\n                    }\n                });\n                if (otherAxis) {\n                    tickPositions = otherAxis.tickPositions;\n                    if (otherAxis.autoConnect) {\n                        tickPositions =\n                            tickPositions.concat([tickPositions[0]]);\n                    }\n                    // Reverse the positions for concatenation of polygonal\n                    // plot bands\n                    if (reverse) {\n                        tickPositions = tickPositions.slice().reverse();\n                    }\n                    if (value) {\n                        value += paneInnerR;\n                    }\n                    for (var i = 0; i < tickPositions.length; i++) {\n                        xy = otherAxis.getPosition(tickPositions[i], value);\n                        path.push(i ? ['L', xy.x, xy.y] : ['M', xy.x, xy.y]);\n                    }\n                }\n            }\n        }\n        return path;\n    }\n    /**\n     * Returns the x, y coordinate of a point given by a value and a pixel\n     * distance from center.\n     *\n     * @private\n     * @param {number} value\n     * Point value.\n     * @param {number} [length]\n     * Distance from center.\n     */\n    function getPosition(value, length) {\n        var translatedVal = this.translate(value);\n        return this.postTranslate(this.isCircular ? translatedVal : this.angleRad, // #2848\n        // In case when translatedVal is negative, the 0 value must be\n        // used instead, in order to deal with lines and labels that\n        // fall out of the visible range near the center of a pane\n        pick(this.isCircular ?\n            length :\n            (translatedVal < 0 ? 0 : translatedVal), this.center[2] / 2) - this.offset);\n    }\n    /**\n     * Find the position for the axis title, by default inside the gauge.\n     */\n    function getTitlePosition() {\n        var center = this.center, chart = this.chart, titleOptions = this.options.title;\n        return {\n            x: chart.plotLeft + center[0] + (titleOptions.x || 0),\n            y: (chart.plotTop +\n                center[1] -\n                ({\n                    high: 0.5,\n                    middle: 0.25,\n                    low: 0\n                }[titleOptions.align] *\n                    center[2]) +\n                (titleOptions.y || 0))\n        };\n    }\n    /**\n     * Modify radial axis.\n     * @private\n     *\n     * @param {Highcharts.Axis} radialAxis\n     * Radial axis to modify.\n     */\n    function modify(axis) {\n        axis.beforeSetTickPositions = beforeSetTickPositions;\n        axis.createLabelCollector = createLabelCollector;\n        axis.getCrosshairPosition = getCrosshairPosition;\n        axis.getLinePath = getLinePath;\n        axis.getOffset = getOffset;\n        axis.getPlotBandPath = getPlotBandPath;\n        axis.getPlotLinePath = getPlotLinePath;\n        axis.getPosition = getPosition;\n        axis.getTitlePosition = getTitlePosition;\n        axis.postTranslate = postTranslate;\n        axis.setAxisSize = setAxisSize;\n        axis.setAxisTranslation = setAxisTranslation;\n        axis.setOptions = setOptions;\n    }\n    /**\n     * Modify radial axis as hidden.\n     * @private\n     *\n     * @param {Highcharts.Axis} radialAxis\n     * Radial axis to modify.\n     */\n    function modifyAsHidden(radialAxis) {\n        radialAxis.isHidden = true;\n        radialAxis.createLabelCollector = createLabelCollectorHidden;\n        radialAxis.getOffset = noop;\n        radialAxis.redraw = renderHidden;\n        radialAxis.render = renderHidden;\n        radialAxis.setScale = noop;\n        radialAxis.setCategories = noop;\n        radialAxis.setTitle = noop;\n    }\n    /**\n     * Finalize modification of axis instance with radial logic.\n     */\n    function onAxisAfterInit() {\n        var chart = this.chart, options = this.options, isHidden = chart.angular && this.isXAxis, pane = this.pane, paneOptions = pane && pane.options;\n        if (!isHidden && pane && (chart.angular || chart.polar)) {\n            var fullCircle = Math.PI * 2, \n            // Start and end angle options are given in degrees relative to\n            // top, while internal computations are in radians relative to\n            // right (like SVG).\n            start = (pick(paneOptions.startAngle, 0) - 90) * Math.PI / 180, end = (pick(paneOptions.endAngle, pick(paneOptions.startAngle, 0) + 360) - 90) * Math.PI / 180;\n            // Y axis in polar charts\n            this.angleRad = (options.angle || 0) * Math.PI / 180;\n            // Gauges\n            this.startAngleRad = start;\n            this.endAngleRad = end;\n            this.offset = options.offset || 0;\n            // Normalize Start and End to <0, 2*PI> range\n            // (in degrees: <0,360>)\n            var normalizedStart = (start % fullCircle + fullCircle) %\n                fullCircle, normalizedEnd = (end % fullCircle + fullCircle) % fullCircle;\n            // Move normalized angles to <-PI, PI> range (<-180, 180>)\n            // to match values returned by Math.atan2()\n            if (normalizedStart > Math.PI) {\n                normalizedStart -= fullCircle;\n            }\n            if (normalizedEnd > Math.PI) {\n                normalizedEnd -= fullCircle;\n            }\n            this.normalizedStartAngleRad = normalizedStart;\n            this.normalizedEndAngleRad = normalizedEnd;\n        }\n    }\n    /**\n     * Wrap auto label align to avoid setting axis-wide rotation on radial axes.\n     * (#4920)\n     */\n    function onAxisAutoLabelAlign(e) {\n        if (this.isRadial) {\n            e.align = void 0;\n            e.preventDefault();\n        }\n    }\n    /**\n     * Remove label collector function on axis remove/update.\n     */\n    function onAxisDestroy() {\n        if (this.chart &&\n            this.chart.labelCollectors) {\n            var index = (this.labelCollector ?\n                this.chart.labelCollectors.indexOf(this.labelCollector) :\n                -1);\n            if (index >= 0) {\n                this.chart.labelCollectors.splice(index, 1);\n            }\n        }\n    }\n    /**\n     * Modify axis instance with radial logic before common axis init.\n     */\n    function onAxisInit(e) {\n        var chart = this.chart, inverted = chart.inverted, angular = chart.angular, polar = chart.polar, isX = this.isXAxis, coll = this.coll, isHidden = angular && isX, chartOptions = chart.options, paneIndex = e.userOptions.pane || 0, pane = this.pane = chart.pane && chart.pane[paneIndex];\n        var isCircular;\n        // Prevent changes for colorAxis\n        if (coll === 'colorAxis') {\n            this.isRadial = false;\n            return;\n        }\n        // Before prototype.init\n        if (angular) {\n            if (isHidden) {\n                modifyAsHidden(this);\n            }\n            else {\n                modify(this);\n            }\n            isCircular = !isX;\n            if (isCircular) {\n                this.defaultPolarOptions = defaultRadialGaugeOptions;\n            }\n        }\n        else if (polar) {\n            modify(this);\n            // Check which axis is circular\n            isCircular = this.horiz;\n            this.defaultPolarOptions = isCircular ?\n                defaultCircularOptions :\n                merge(coll === 'xAxis' ?\n                    AxisDefaults.defaultXAxisOptions :\n                    AxisDefaults.defaultYAxisOptions, defaultRadialOptions);\n            // Apply the stack labels for yAxis in case of inverted chart\n            if (inverted && coll === 'yAxis') {\n                this.defaultPolarOptions.stackLabels = AxisDefaults\n                    .defaultYAxisOptions.stackLabels;\n                this.defaultPolarOptions.reversedStacks = true;\n            }\n        }\n        // Disable certain features on angular and polar axes\n        if (angular || polar) {\n            this.isRadial = true;\n            if (!this.labelCollector) {\n                this.labelCollector = this.createLabelCollector();\n            }\n            if (this.labelCollector) {\n                // Prevent overlapping axis labels (#9761)\n                chart.labelCollectors.push(this.labelCollector);\n            }\n        }\n        else {\n            this.isRadial = false;\n        }\n        // A pointer back to this axis to borrow geometry\n        if (pane && isCircular) {\n            pane.axis = this;\n        }\n        this.isCircular = isCircular;\n    }\n    /**\n     * Prepare axis translation.\n     */\n    function onAxisInitialAxisTranslation() {\n        if (this.isRadial) {\n            this.beforeSetTickPositions();\n        }\n    }\n    /**\n     * Find the center position of the label based on the distance option.\n     */\n    function onTickAfterGetLabelPosition(e) {\n        var label = this.label;\n        if (!label) {\n            return;\n        }\n        var axis = this.axis, labelBBox = label.getBBox(), labelOptions = axis.options.labels, angle = ((axis.translate(this.pos) + axis.startAngleRad +\n            Math.PI / 2) / Math.PI * 180) % 360, correctAngle = Math.round(angle), labelYPosCorrection = !defined(labelOptions.y) ? -labelBBox.height * 0.3 : 0;\n        var optionsY = labelOptions.y, ret, centerSlot = 20, // 20 degrees to each side at the top and bottom\n        align = labelOptions.align, labelDir = 'end', // Direction of the label 'start' or 'end'\n        reducedAngle1 = correctAngle < 0 ?\n            correctAngle + 360 : correctAngle, reducedAngle2 = reducedAngle1, translateY = 0, translateX = 0;\n        if (axis.isRadial) { // Both X and Y axes in a polar chart\n            ret = axis.getPosition(this.pos, (axis.center[2] / 2) +\n                relativeLength(pick(labelOptions.distance, -25), axis.center[2] / 2, -axis.center[2] / 2));\n            // Automatically rotated\n            if (labelOptions.rotation === 'auto') {\n                label.attr({\n                    rotation: angle\n                });\n                // Vertically centered\n            }\n            else if (!defined(optionsY)) {\n                optionsY = (axis.chart.renderer\n                    .fontMetrics(label.styles && label.styles.fontSize).b -\n                    labelBBox.height / 2);\n            }\n            // Automatic alignment\n            if (!defined(align)) {\n                if (axis.isCircular) { // Y axis\n                    if (labelBBox.width >\n                        axis.len * axis.tickInterval / (axis.max - axis.min)) { // #3506\n                        centerSlot = 0;\n                    }\n                    if (angle > centerSlot && angle < 180 - centerSlot) {\n                        align = 'left'; // right hemisphere\n                    }\n                    else if (angle > 180 + centerSlot &&\n                        angle < 360 - centerSlot) {\n                        align = 'right'; // left hemisphere\n                    }\n                    else {\n                        align = 'center'; // top or bottom\n                    }\n                }\n                else {\n                    align = 'center';\n                }\n                label.attr({\n                    align: align\n                });\n            }\n            // Auto alignment for solid-gauges with two labels (#10635)\n            if (align === 'auto' &&\n                axis.tickPositions.length === 2 &&\n                axis.isCircular) {\n                // Angles reduced to 0 - 90 or 180 - 270\n                if (reducedAngle1 > 90 && reducedAngle1 < 180) {\n                    reducedAngle1 = 180 - reducedAngle1;\n                }\n                else if (reducedAngle1 > 270 && reducedAngle1 <= 360) {\n                    reducedAngle1 = 540 - reducedAngle1;\n                }\n                // Angles reduced to 0 - 180\n                if (reducedAngle2 > 180 && reducedAngle2 <= 360) {\n                    reducedAngle2 = 360 - reducedAngle2;\n                }\n                if ((axis.pane.options.startAngle === correctAngle) ||\n                    (axis.pane.options.startAngle === correctAngle + 360) ||\n                    (axis.pane.options.startAngle === correctAngle - 360)) {\n                    labelDir = 'start';\n                }\n                if ((correctAngle >= -90 && correctAngle <= 90) ||\n                    (correctAngle >= -360 && correctAngle <= -270) ||\n                    (correctAngle >= 270 && correctAngle <= 360)) {\n                    align = (labelDir === 'start') ? 'right' : 'left';\n                }\n                else {\n                    align = (labelDir === 'start') ? 'left' : 'right';\n                }\n                // For angles beetwen (90 + n * 180) +- 20\n                if (reducedAngle2 > 70 && reducedAngle2 < 110) {\n                    align = 'center';\n                }\n                // auto Y translation\n                if (reducedAngle1 < 15 ||\n                    (reducedAngle1 >= 180 && reducedAngle1 < 195)) {\n                    translateY = labelBBox.height * 0.3;\n                }\n                else if (reducedAngle1 >= 15 && reducedAngle1 <= 35) {\n                    translateY = labelDir === 'start' ?\n                        0 : labelBBox.height * 0.75;\n                }\n                else if (reducedAngle1 >= 195 && reducedAngle1 <= 215) {\n                    translateY = labelDir === 'start' ?\n                        labelBBox.height * 0.75 : 0;\n                }\n                else if (reducedAngle1 > 35 && reducedAngle1 <= 90) {\n                    translateY = labelDir === 'start' ?\n                        -labelBBox.height * 0.25 : labelBBox.height;\n                }\n                else if (reducedAngle1 > 215 && reducedAngle1 <= 270) {\n                    translateY = labelDir === 'start' ?\n                        labelBBox.height : -labelBBox.height * 0.25;\n                }\n                // auto X translation\n                if (reducedAngle2 < 15) {\n                    translateX = labelDir === 'start' ?\n                        -labelBBox.height * 0.15 : labelBBox.height * 0.15;\n                }\n                else if (reducedAngle2 > 165 && reducedAngle2 <= 180) {\n                    translateX = labelDir === 'start' ?\n                        labelBBox.height * 0.15 : -labelBBox.height * 0.15;\n                }\n                label.attr({ align: align });\n                label.translate(translateX, translateY + labelYPosCorrection);\n            }\n            e.pos.x = ret.x + (labelOptions.x || 0);\n            e.pos.y = ret.y + (optionsY || 0);\n        }\n    }\n    /**\n     * Add special cases within the Tick class' methods for radial axes.\n     */\n    function onTickAfterGetPosition(e) {\n        if (this.axis.getPosition) {\n            extend(e.pos, this.axis.getPosition(this.pos));\n        }\n    }\n    /**\n     * Translate from intermediate plotX (angle), plotY (axis.len - radius)\n     * to final chart coordinates.\n     *\n     * @private\n     * @param {number} angle\n     * Translation angle.\n     * @param {number} radius\n     * Translation radius.\n     */\n    function postTranslate(angle, radius) {\n        var chart = this.chart, center = this.center;\n        angle = this.startAngleRad + angle;\n        return {\n            x: chart.plotLeft + center[0] + Math.cos(angle) * radius,\n            y: chart.plotTop + center[1] + Math.sin(angle) * radius\n        };\n    }\n    /**\n     * Prevent setting Y axis dirty.\n     */\n    function renderHidden() {\n        this.isDirty = false;\n    }\n    /**\n     * Override the setAxisSize method to use the arc's circumference as\n     * length. This allows tickPixelInterval to apply to pixel lengths along\n     * the perimeter.\n     * @private\n     */\n    function setAxisSize() {\n        var axisProto = this.constructor.prototype;\n        var center, start;\n        axisProto.setAxisSize.call(this);\n        if (this.isRadial) {\n            // Set the center array\n            this.pane.updateCenter(this);\n            // In case when the innerSize is set in a polar chart, the axis'\n            // center cannot be a reference to pane's center\n            center = this.center = this.pane.center.slice();\n            // The sector is used in Axis.translate to compute the\n            // translation of reversed axis points (#2570)\n            if (this.isCircular) {\n                this.sector = this.endAngleRad - this.startAngleRad;\n            }\n            else {\n                // When the pane's startAngle or the axis' angle is set then\n                // new x and y values for vertical axis' center must be\n                // calulated\n                start = this.postTranslate(this.angleRad, center[3] / 2);\n                center[0] = start.x - this.chart.plotLeft;\n                center[1] = start.y - this.chart.plotTop;\n            }\n            // Axis len is used to lay out the ticks\n            this.len = this.width = this.height =\n                (center[2] - center[3]) * pick(this.sector, 1) / 2;\n        }\n    }\n    /**\n     * Override setAxisTranslation by setting the translation to the\n     * difference in rotation. This allows the translate method to return\n     * angle for any given value.\n     *\n     * @private\n     */\n    function setAxisTranslation() {\n        var axisProto = this.constructor.prototype;\n        // Call uber method\n        axisProto.setAxisTranslation.call(this);\n        // Set transA and minPixelPadding\n        if (this.center) { // it's not defined the first time\n            if (this.isCircular) {\n                this.transA = (this.endAngleRad - this.startAngleRad) /\n                    ((this.max - this.min) || 1);\n            }\n            else {\n                // The transA here is the length of the axis, so in case\n                // of inner radius, the length must be decreased by it\n                this.transA = ((this.center[2] - this.center[3]) / 2) /\n                    ((this.max - this.min) || 1);\n            }\n            if (this.isXAxis) {\n                this.minPixelPadding = this.transA * this.minPointOffset;\n            }\n            else {\n                // This is a workaround for regression #2593, but categories\n                // still don't position correctly.\n                this.minPixelPadding = 0;\n            }\n        }\n    }\n    /**\n     * Merge and set options.\n     */\n    function setOptions(userOptions) {\n        var options = this.options = merge(this.constructor.defaultOptions, this.defaultPolarOptions, defaultOptions[this.coll], // #16112\n        userOptions);\n        // Make sure the plotBands array is instanciated for each Axis\n        // (#2649)\n        if (!options.plotBands) {\n            options.plotBands = [];\n        }\n        fireEvent(this, 'afterSetOptions');\n    }\n    /**\n     * Wrap the getMarkPath function to return the path of the radial marker.\n     */\n    function wrapTickGetMarkPath(proceed, x, y, tickLength, tickWidth, horiz, renderer) {\n        var axis = this.axis;\n        var endPoint, ret;\n        if (axis.isRadial) {\n            endPoint = axis.getPosition(this.pos, axis.center[2] / 2 + tickLength);\n            ret = [\n                'M',\n                x,\n                y,\n                'L',\n                endPoint.x,\n                endPoint.y\n            ];\n        }\n        else {\n            ret = proceed.call(this, x, y, tickLength, tickWidth, horiz, renderer);\n        }\n        return ret;\n    }\n    /* eslint-enable valid-jsdoc */\n})(RadialAxis || (RadialAxis = {}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default RadialAxis;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport A from '../Core/Animation/AnimationUtilities.js';\nvar animObject = A.animObject;\nimport H from '../Core/Globals.js';\nimport Pane from '../Extensions/Pane.js';\nimport RadialAxis from '../Core/Axis/RadialAxis.js';\nimport U from '../Core/Utilities.js';\nvar addEvent = U.addEvent, defined = U.defined, find = U.find, isNumber = U.isNumber, pick = U.pick, splat = U.splat, uniqueKey = U.uniqueKey, wrap = U.wrap;\n/* *\n *\n *  Constants\n *\n * */\nvar composedClasses = [];\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction clipCircle(renderer, x, y, r, innerR) {\n    var id = uniqueKey(), clipPath = renderer.createElement('clipPath').attr({\n        id: id\n    }).add(renderer.defs), wrapper = innerR ?\n        renderer.arc(x, y, r, innerR, 0, 2 * Math.PI).add(clipPath) :\n        renderer.circle(x, y, r).add(clipPath);\n    wrapper.id = id;\n    wrapper.clipPath = clipPath;\n    return wrapper;\n}\n/**\n * Find correct align and vertical align based on an angle in polar chart\n * @private\n */\nfunction findAlignments(angle, options) {\n    var align, verticalAlign;\n    if (options.align === null) {\n        if (angle > 20 && angle < 160) {\n            align = 'left'; // right hemisphere\n        }\n        else if (angle > 200 && angle < 340) {\n            align = 'right'; // left hemisphere\n        }\n        else {\n            align = 'center'; // top or bottom\n        }\n        options.align = align;\n    }\n    if (options.verticalAlign === null) {\n        if (angle < 45 || angle > 315) {\n            verticalAlign = 'bottom'; // top part\n        }\n        else if (angle > 135 && angle < 225) {\n            verticalAlign = 'top'; // bottom part\n        }\n        else {\n            verticalAlign = 'middle'; // left or right\n        }\n        options.verticalAlign = verticalAlign;\n    }\n    return options;\n}\n/**\n * #6212 Calculate connectors for spline series in polar chart.\n * @private\n * @param {boolean} calculateNeighbours\n *        Check if connectors should be calculated for neighbour points as\n *        well allows short recurence\n */\nfunction getConnectors(segment, index, calculateNeighbours, connectEnds) {\n    var smoothing = 1.5, denom = smoothing + 1, addedNumber = connectEnds ? 1 : 0;\n    var i, leftContX, leftContY, rightContX, rightContY, jointAngle;\n    // Calculate final index of points depending on the initial index value.\n    // Because of calculating neighbours, index may be outisde segment\n    // array.\n    if (index >= 0 && index <= segment.length - 1) {\n        i = index;\n    }\n    else if (index < 0) {\n        i = segment.length - 1 + index;\n    }\n    else {\n        i = 0;\n    }\n    // 1 means control points midway between points, 2 means 1/3 from\n    // the point, 3 is 1/4 etc;\n    var prevPointInd = ((i - 1 < 0) ? segment.length - (1 + addedNumber) : i - 1), nextPointInd = (i + 1 > segment.length - 1) ? addedNumber : i + 1, previousPoint = segment[prevPointInd], nextPoint = segment[nextPointInd], previousX = previousPoint.plotX, previousY = previousPoint.plotY, nextX = nextPoint.plotX, nextY = nextPoint.plotY, plotX = segment[i].plotX, // actual point\n    plotY = segment[i].plotY;\n    leftContX = (smoothing * plotX + previousX) / denom;\n    leftContY = (smoothing * plotY + previousY) / denom;\n    rightContX = (smoothing * plotX + nextX) / denom;\n    rightContY = (smoothing * plotY + nextY) / denom;\n    // distance left control point\n    var dLControlPoint = Math.sqrt(Math.pow(leftContX - plotX, 2) + Math.pow(leftContY - plotY, 2)), dRControlPoint = Math.sqrt(Math.pow(rightContX - plotX, 2) + Math.pow(rightContY - plotY, 2)), leftContAngle = Math.atan2(leftContY - plotY, leftContX - plotX), rightContAngle = Math.atan2(rightContY - plotY, rightContX - plotX);\n    jointAngle = (Math.PI / 2) + ((leftContAngle + rightContAngle) / 2);\n    // Ensure the right direction, jointAngle should be in the same quadrant\n    // as leftContAngle\n    if (Math.abs(leftContAngle - jointAngle) > Math.PI / 2) {\n        jointAngle -= Math.PI;\n    }\n    // Find the corrected control points for a spline straight through the\n    // point\n    leftContX = plotX + Math.cos(jointAngle) * dLControlPoint;\n    leftContY = plotY + Math.sin(jointAngle) * dLControlPoint;\n    rightContX = plotX + Math.cos(Math.PI + jointAngle) * dRControlPoint;\n    rightContY = plotY + Math.sin(Math.PI + jointAngle) * dRControlPoint;\n    // push current point's connectors into returned object\n    var ret = {\n        rightContX: rightContX,\n        rightContY: rightContY,\n        leftContX: leftContX,\n        leftContY: leftContY,\n        plotX: plotX,\n        plotY: plotY\n    };\n    // calculate connectors for previous and next point and push them inside\n    // returned object\n    if (calculateNeighbours) {\n        ret.prevPointCont = getConnectors(segment, prevPointInd, false, connectEnds);\n    }\n    return ret;\n}\nfunction onChartAfterDrawChartBox() {\n    (this.pane || []).forEach(function (pane) {\n        pane.render();\n    });\n}\n/**\n * If polar has polygonal grid lines, force start and endOnTick on radial axis\n * @private\n */\nfunction onChartAfterInit(event) {\n    var xAxis = event.args[0].xAxis, yAxis = event.args[0].yAxis, chart = event.args[0].chart;\n    if (xAxis && yAxis) {\n        if (yAxis.gridLineInterpolation === 'polygon') {\n            xAxis.startOnTick = true;\n            xAxis.endOnTick = true;\n        }\n        else if (xAxis.gridLineInterpolation === 'polygon' &&\n            chart.inverted) {\n            yAxis.startOnTick = true;\n            yAxis.endOnTick = true;\n        }\n    }\n}\nfunction onChartGetAxes() {\n    var _this = this;\n    if (!this.pane) {\n        this.pane = [];\n    }\n    this.options.pane = splat(this.options.pane);\n    this.options.pane.forEach(function (paneOptions) {\n        new Pane(// eslint-disable-line no-new\n        paneOptions, _this);\n    }, this);\n}\n/**\n * Get selection dimensions\n * @private\n */\nfunction onPointerGetSelectionBox(event) {\n    var marker = event.args.marker, xAxis = this.chart.xAxis[0], yAxis = this.chart.yAxis[0], inverted = this.chart.inverted, radialAxis = inverted ? yAxis : xAxis, linearAxis = inverted ? xAxis : yAxis;\n    if (this.chart.polar) {\n        event.preventDefault();\n        var start = (marker.attr ? marker.attr('start') : marker.start) - radialAxis.startAngleRad;\n        var r = (marker.attr ? marker.attr('r') : marker.r);\n        var end = (marker.attr ? marker.attr('end') : marker.end) - radialAxis.startAngleRad;\n        var innerR = (marker.attr ? marker.attr('innerR') : marker.innerR);\n        event.result.x = start + radialAxis.pos;\n        event.result.width = end - start;\n        // innerR goes from pane's center but toValue computes values from top\n        event.result.y = linearAxis.len + linearAxis.pos - innerR;\n        event.result.height = innerR - r;\n    }\n}\n/**\n * Get attrs for Polar selection marker\n * @private\n */\nfunction onPointerGetSelectionMarkerAttrs(event) {\n    var chart = this.chart;\n    if (chart.polar && chart.hoverPane && chart.hoverPane.axis) {\n        event.preventDefault();\n        var center = chart.hoverPane.center, mouseDownX = (this.mouseDownX || 0), mouseDownY = (this.mouseDownY || 0), chartY = event.args.chartY, chartX = event.args.chartX, fullCircle = Math.PI * 2, startAngleRad = chart.hoverPane.axis.startAngleRad, endAngleRad = chart.hoverPane.axis.endAngleRad, linearAxis = chart.inverted ? chart.xAxis[0] : chart.yAxis[0], attrs = {};\n        var shapeType = 'arc';\n        attrs.x = center[0] + chart.plotLeft;\n        attrs.y = center[1] + chart.plotTop;\n        // Adjust the width of the selection marker\n        if (this.zoomHor) {\n            var paneRadRange = startAngleRad > 0 ?\n                endAngleRad - startAngleRad :\n                Math.abs(startAngleRad) + Math.abs(endAngleRad);\n            var startAngle = Math.atan2(mouseDownY - chart.plotTop - center[1], mouseDownX - chart.plotLeft - center[0]) - startAngleRad, endAngle = Math.atan2(chartY - chart.plotTop - center[1], chartX - chart.plotLeft - center[0]) - startAngleRad;\n            attrs.r = center[2] / 2;\n            attrs.innerR = center[3] / 2;\n            if (startAngle <= 0) {\n                startAngle += fullCircle;\n            }\n            if (endAngle <= 0) {\n                endAngle += fullCircle;\n            }\n            if (endAngle < startAngle) {\n                // Swapping angles\n                endAngle = [startAngle, startAngle = endAngle][0];\n            }\n            // If pane is not a full circle we need to let users zoom to the min\n            // We do this by swapping angles after pointer crosses\n            // middle angle (swapAngle) of the missing slice of the pane\n            if (paneRadRange < fullCircle) {\n                var swapAngle = endAngleRad + (fullCircle - paneRadRange) / 2;\n                if (startAngleRad + endAngle > swapAngle) {\n                    endAngle = startAngle;\n                    startAngle = startAngleRad <= 0 ? startAngleRad : 0;\n                }\n            }\n            var start = attrs.start =\n                Math.max(startAngle + startAngleRad, startAngleRad), end = attrs.end =\n                Math.min(endAngle + startAngleRad, endAngleRad);\n            // Adjust the selection shape for polygon grid lines\n            if (linearAxis.options.gridLineInterpolation === 'polygon') {\n                var radialAxis = chart.hoverPane.axis, tickInterval = radialAxis.tickInterval, min = start - radialAxis.startAngleRad + radialAxis.pos, max = end - start;\n                var path = linearAxis.getPlotLinePath({\n                    value: linearAxis.max\n                }), pathStart = radialAxis.toValue(min), pathEnd = radialAxis.toValue(min + max);\n                if (pathStart < radialAxis.getExtremes().min) {\n                    var _a = radialAxis.getExtremes(), min_1 = _a.min, max_1 = _a.max;\n                    pathStart = max_1 - (min_1 - pathStart);\n                }\n                if (pathEnd < radialAxis.getExtremes().min) {\n                    var _b = radialAxis.getExtremes(), min_2 = _b.min, max_2 = _b.max;\n                    pathEnd = max_2 - (min_2 - pathEnd);\n                }\n                if (pathEnd < pathStart) {\n                    // Swapping angles\n                    pathEnd = [pathStart, pathStart = pathEnd][0];\n                }\n                // Get trimmed path\n                path = trimPath(path, pathStart, pathEnd, radialAxis);\n                // Add center to the path\n                path.push([\n                    'L', center[0] + chart.plotLeft,\n                    chart.plotTop + center[1]\n                ]);\n                attrs.d = path;\n                shapeType = 'path';\n            }\n        }\n        // Adjust the height of the selection marker\n        if (this.zoomVert) {\n            var linearAxis_1 = chart.inverted ? chart.xAxis[0] : chart.yAxis[0];\n            var innerR = Math.sqrt(Math.pow(mouseDownX - chart.plotLeft - center[0], 2) +\n                Math.pow(mouseDownY - chart.plotTop - center[1], 2)), r = Math.sqrt(Math.pow(chartX - chart.plotLeft - center[0], 2) +\n                Math.pow(chartY - chart.plotTop - center[1], 2));\n            if (r < innerR) {\n                // Swapping angles\n                innerR = [r, r = innerR][0];\n            }\n            if (r > center[2] / 2) {\n                r = center[2] / 2;\n            }\n            if (innerR < center[3] / 2) {\n                innerR = center[3] / 2;\n            }\n            if (!this.zoomHor) {\n                attrs.start = startAngleRad;\n                attrs.end = endAngleRad;\n            }\n            attrs.r = r;\n            attrs.innerR = innerR;\n            if (linearAxis_1.options.gridLineInterpolation === 'polygon') {\n                var end = linearAxis_1.toValue(linearAxis_1.len + linearAxis_1.pos - innerR), start = linearAxis_1.toValue(linearAxis_1.len + linearAxis_1.pos - r), path = linearAxis_1.getPlotLinePath({\n                    value: start\n                }).concat(linearAxis_1.getPlotLinePath({\n                    value: end,\n                    reverse: true\n                }));\n                attrs.d = path;\n                shapeType = 'path';\n            }\n        }\n        if (this.zoomHor &&\n            this.zoomVert &&\n            linearAxis.options.gridLineInterpolation === 'polygon') {\n            var radialAxis = chart.hoverPane.axis, start = attrs.start || 0, end = attrs.end || 0, min = start - radialAxis.startAngleRad + radialAxis.pos, max = end - start, pathStart = radialAxis.toValue(min), pathEnd = radialAxis.toValue(min + max);\n            // Trim path\n            if (attrs.d instanceof Array) {\n                var innerPath = attrs.d.slice(0, attrs.d.length / 2), outerPath = attrs.d.slice(attrs.d.length / 2, attrs.d.length);\n                outerPath = __spreadArray([], outerPath, true).reverse();\n                var radialAxis_1 = chart.hoverPane.axis;\n                innerPath = trimPath(innerPath, pathStart, pathEnd, radialAxis_1);\n                outerPath = trimPath(outerPath, pathStart, pathEnd, radialAxis_1);\n                if (outerPath) {\n                    (outerPath[0][0]) = 'L';\n                }\n                outerPath = __spreadArray([], outerPath, true).reverse();\n                attrs.d = innerPath.concat(outerPath);\n                shapeType = 'path';\n            }\n        }\n        event.attrs = attrs;\n        event.shapeType = shapeType;\n    }\n}\n/**\n * @private\n */\nfunction onSeriesAfterInit() {\n    var chart = this.chart;\n    if (chart.polar) {\n        this.polar = new PolarAdditions(this);\n        // Add flags that identifies radial inverted series\n        if (chart.inverted) {\n            this.isRadialSeries = true;\n            if (this.is('column')) {\n                this.isRadialBar = true;\n            }\n        }\n    }\n}\n/**\n * Extend translate. The plotX and plotY values are computed as if the polar\n * chart were a cartesian plane, where plotX denotes the angle in radians\n * and (yAxis.len - plotY) is the pixel distance from center.\n * @private\n */\nfunction onSeriesAfterTranslate() {\n    if (this.chart.polar && this.xAxis) {\n        var series = this, chart_1 = series.chart;\n        // Prepare k-d-tree handling. It searches by angle (clientX) in\n        // case of shared tooltip, and by two dimensional distance in case\n        // of non-shared.\n        series.kdByAngle = chart_1.tooltip && chart_1.tooltip.shared;\n        if (series.kdByAngle) {\n            series.searchPoint = searchPointByAngle;\n        }\n        else {\n            series.options.findNearestPointBy = 'xy';\n        }\n        var points = series.points;\n        var i = points.length;\n        while (i--) {\n            // Translate plotX, plotY from angle and radius to true plot\n            // coordinates\n            if (!series.preventPostTranslate) {\n                series.polar.toXY(points[i]);\n            }\n            // Treat points below Y axis min as null (#10082)\n            if (!chart_1.hasParallelCoordinates &&\n                !series.yAxis.reversed) {\n                if (pick(points[i].y, Number.MIN_VALUE) < series.yAxis.min ||\n                    points[i].x < series.xAxis.min ||\n                    points[i].x > series.xAxis.max) {\n                    // Destroy markers\n                    points[i].isNull = true;\n                    // Destroy column's graphic\n                    points[i].plotY = NaN;\n                }\n                else {\n                    // Restore isNull flag\n                    points[i].isNull =\n                        points[i].isValid && !points[i].isValid();\n                }\n            }\n        }\n        // Perform clip after render\n        if (!this.hasClipCircleSetter) {\n            this.hasClipCircleSetter = !!series.eventsToUnbind.push(addEvent(series, 'afterRender', function () {\n                var circ;\n                if (chart_1.polar) {\n                    // For clipping purposes there is a need for\n                    // coordinates from the absolute center\n                    circ = this.yAxis.pane.center;\n                    if (!this.clipCircle) {\n                        this.clipCircle = clipCircle(chart_1.renderer, circ[0], circ[1], circ[2] / 2, circ[3] / 2);\n                    }\n                    else {\n                        this.clipCircle.animate({\n                            x: circ[0],\n                            y: circ[1],\n                            r: circ[2] / 2,\n                            innerR: circ[3] / 2\n                        });\n                    }\n                    this.group.clip(this.clipCircle);\n                    this.setClip = H.noop;\n                }\n            }));\n        }\n    }\n}\n/**\n * Search a k-d tree by the point angle, used for shared tooltips in polar\n * charts\n * @private\n */\nfunction searchPointByAngle(e) {\n    var series = this, chart = series.chart, xAxis = series.xAxis, center = xAxis.pane && xAxis.pane.center, plotX = e.chartX - (center && center[0] || 0) - chart.plotLeft, plotY = e.chartY - (center && center[1] || 0) - chart.plotTop;\n    return series.searchKDTree({\n        clientX: 180 + (Math.atan2(plotX, plotY) * (-180 / Math.PI))\n    });\n}\n/**\n * Trim polygonal path\n * @private\n */\nfunction trimPath(path, start, end, radialAxis) {\n    var tickInterval = radialAxis.tickInterval, ticks = radialAxis.tickPositions;\n    var lastTick = find(ticks, function (tick) { return tick >= end; }), firstTick = find(__spreadArray([], ticks, true).reverse(), function (tick) { return tick <= start; });\n    if (!defined(lastTick)) {\n        lastTick = ticks[ticks.length - 1];\n    }\n    if (!defined(firstTick)) {\n        firstTick = ticks[0];\n        lastTick += tickInterval;\n        path[0][0] = 'L';\n        // To do: figure out why -3 or -2\n        path.unshift(path[path.length - 3]);\n    }\n    path = path.slice(ticks.indexOf(firstTick), ticks.indexOf(lastTick) + 1);\n    path[0][0] = 'M';\n    return path;\n}\n/**\n * Extend chart.get to also search in panes. Used internally in\n * responsiveness and chart.update.\n * @private\n */\nfunction wrapChartGet(proceed, id) {\n    return find(this.pane || [], function (pane) {\n        // @todo remove id or define id type:\n        return pane.options.id === id;\n    }) || proceed.call(this, id);\n}\n/**\n * Align column data labels outside the columns. #1199.\n * @private\n */\nfunction wrapColumnSeriesAlignDataLabel(proceed, point, dataLabel, options, alignTo, isNew) {\n    var chart = this.chart, inside = pick(options.inside, !!this.options.stacking);\n    var angle, shapeArgs, labelPos;\n    if (chart.polar) {\n        angle = point.rectPlotX / Math.PI * 180;\n        if (!chart.inverted) {\n            // Align nicely outside the perimeter of the columns\n            options = findAlignments(angle, options);\n        }\n        else { // Required corrections for data labels of inverted bars\n            // The plotX and plotY are correctly set therefore they\n            // don't need to be swapped (inverted argument is false)\n            this.forceDL = chart.isInsidePlot(point.plotX, point.plotY);\n            // Checks if labels should be positioned inside\n            if (inside && point.shapeArgs) {\n                shapeArgs = point.shapeArgs;\n                // Calculates pixel positions for a data label to be\n                // inside\n                labelPos =\n                    this.yAxis.postTranslate(\n                    // angle\n                    ((shapeArgs.start || 0) + (shapeArgs.end || 0)) / 2 -\n                        this\n                            .xAxis.startAngleRad, \n                    // radius\n                    point.barX +\n                        point.pointWidth / 2);\n                alignTo = {\n                    x: labelPos.x - chart.plotLeft,\n                    y: labelPos.y - chart.plotTop\n                };\n            }\n            else if (point.tooltipPos) {\n                alignTo = {\n                    x: point.tooltipPos[0],\n                    y: point.tooltipPos[1]\n                };\n            }\n            options.align = pick(options.align, 'center');\n            options.verticalAlign =\n                pick(options.verticalAlign, 'middle');\n        }\n        Object\n            .getPrototypeOf(Object.getPrototypeOf(this))\n            .alignDataLabel.call(this, point, dataLabel, options, alignTo, isNew);\n        // Hide label of a point (only inverted) that is outside the\n        // visible y range\n        if (this.isRadialBar && point.shapeArgs &&\n            point.shapeArgs.start === point.shapeArgs.end) {\n            dataLabel.hide();\n        }\n        else {\n            dataLabel.show();\n        }\n    }\n    else {\n        proceed.call(this, point, dataLabel, options, alignTo, isNew);\n    }\n}\n/**\n * Extend the column prototype's translate method\n * @private\n */\nfunction wrapColumnSeriesTranslate(proceed) {\n    var series = this, options = series.options, stacking = options.stacking, chart = series.chart, xAxis = series.xAxis, yAxis = series.yAxis, reversed = yAxis.reversed, center = yAxis.center, startAngleRad = xAxis.startAngleRad, endAngleRad = xAxis.endAngleRad, visibleRange = endAngleRad - startAngleRad;\n    var threshold = options.threshold, thresholdAngleRad = 0, points, point, i, yMin, yMax, start = 0, end = 0, tooltipPos, pointX, pointY, stackValues, stack, barX, innerR, r;\n    series.preventPostTranslate = true;\n    // Run uber method\n    proceed.call(series);\n    // Postprocess plot coordinates\n    if (xAxis.isRadial) {\n        points = series.points;\n        i = points.length;\n        yMin = yAxis.translate(yAxis.min);\n        yMax = yAxis.translate(yAxis.max);\n        threshold = options.threshold || 0;\n        if (chart.inverted) {\n            // Finding a correct threshold\n            if (isNumber(threshold)) {\n                thresholdAngleRad = yAxis.translate(threshold);\n                // Checks if threshold is outside the visible range\n                if (defined(thresholdAngleRad)) {\n                    if (thresholdAngleRad < 0) {\n                        thresholdAngleRad = 0;\n                    }\n                    else if (thresholdAngleRad > visibleRange) {\n                        thresholdAngleRad = visibleRange;\n                    }\n                    // Adding start angle offset\n                    series.translatedThreshold =\n                        thresholdAngleRad + startAngleRad;\n                }\n            }\n        }\n        while (i--) {\n            point = points[i];\n            barX = point.barX;\n            pointX = point.x;\n            pointY = point.y;\n            point.shapeType = 'arc';\n            if (chart.inverted) {\n                point.plotY = yAxis.translate(pointY);\n                if (stacking && yAxis.stacking) {\n                    stack = yAxis.stacking.stacks[(pointY < 0 ? '-' : '') +\n                        series.stackKey];\n                    if (series.visible && stack && stack[pointX]) {\n                        if (!point.isNull) {\n                            stackValues = stack[pointX].points[series.getStackIndicator(void 0, pointX, series.index).key];\n                            // Translating to radial values\n                            start = yAxis.translate(stackValues[0]);\n                            end = yAxis.translate(stackValues[1]);\n                            // If starting point is beyond the\n                            // range, set it to 0\n                            if (defined(start)) {\n                                start = U.clamp(start, 0, visibleRange);\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Initial start and end angles for radial bar\n                    start = thresholdAngleRad;\n                    end = point.plotY;\n                }\n                if (start > end) {\n                    // Swapping start and end\n                    end = [start, start = end][0];\n                }\n                // Prevent from rendering point outside the\n                // acceptable circular range\n                if (!reversed) {\n                    if (start < yMin) {\n                        start = yMin;\n                    }\n                    else if (end > yMax) {\n                        end = yMax;\n                    }\n                    else if (end < yMin || start > yMax) {\n                        start = end = 0;\n                    }\n                }\n                else {\n                    if (end > yMin) {\n                        end = yMin;\n                    }\n                    else if (start < yMax) {\n                        start = yMax;\n                    }\n                    else if (start > yMin || end < yMax) {\n                        start = end = visibleRange;\n                    }\n                }\n                if (yAxis.min > yAxis.max) {\n                    start = end = reversed ? visibleRange : 0;\n                }\n                start += startAngleRad;\n                end += startAngleRad;\n                if (center) {\n                    point.barX = barX += center[3] / 2;\n                }\n                // In case when radius, inner radius or both are\n                // negative, a point is rendered but partially or as\n                // a center point\n                innerR = Math.max(barX, 0);\n                r = Math.max(barX + point.pointWidth, 0);\n                point.shapeArgs = {\n                    x: center && center[0],\n                    y: center && center[1],\n                    r: r,\n                    innerR: innerR,\n                    start: start,\n                    end: end\n                };\n                // Fade out the points if not inside the polar \"plot area\"\n                point.opacity = start === end ? 0 : void 0;\n                // A correct value for stacked or not fully visible\n                // point\n                point.plotY = (defined(series.translatedThreshold) &&\n                    (start < series.translatedThreshold ? start : end)) -\n                    startAngleRad;\n            }\n            else {\n                start = barX + startAngleRad;\n                // Changed the way polar columns are drawn in order to make\n                // it more consistent with the drawing of inverted columns\n                // (they are using the same function now). Also, it was\n                // essential to make the animation work correctly (the\n                // scaling of the group) is replaced by animating each\n                // element separately.\n                point.shapeArgs = series.polar.arc(point.yBottom, point.plotY, start, start + point.pointWidth);\n            }\n            // Provided a correct coordinates for the tooltip\n            series.polar.toXY(point);\n            if (chart.inverted) {\n                tooltipPos = yAxis.postTranslate(point.rectPlotY, barX + point.pointWidth / 2);\n                point.tooltipPos = [\n                    tooltipPos.x - chart.plotLeft,\n                    tooltipPos.y - chart.plotTop\n                ];\n            }\n            else {\n                point.tooltipPos = [point.plotX, point.plotY];\n            }\n            if (center) {\n                point.ttBelow = point.plotY > center[1];\n            }\n        }\n    }\n}\n/**\n * Extend getSegmentPath to allow connecting ends across 0 to provide a\n * closed circle in line-like series.\n * @private\n */\nfunction wrapLineSeriesGetGraphPath(proceed, points) {\n    var series = this;\n    var firstValid, popLastPoint;\n    // Connect the path\n    if (this.chart.polar) {\n        points = points || this.points;\n        // Append first valid point in order to connect the ends\n        for (var i = 0; i < points.length; i++) {\n            if (!points[i].isNull) {\n                firstValid = i;\n                break;\n            }\n        }\n        /**\n         * Polar charts only. Whether to connect the ends of a line series\n         * plot across the extremes.\n         *\n         * @sample {highcharts} highcharts/plotoptions/line-connectends-false/\n         *         Do not connect\n         *\n         * @type      {boolean}\n         * @since     2.3.0\n         * @product   highcharts\n         * @apioption plotOptions.series.connectEnds\n         */\n        if (this.options.connectEnds !== false &&\n            typeof firstValid !== 'undefined') {\n            this.connectEnds = true; // re-used in splines\n            points.splice(points.length, 0, points[firstValid]);\n            popLastPoint = true;\n        }\n        // For area charts, pseudo points are added to the graph, now we\n        // need to translate these\n        points.forEach(function (point) {\n            if (typeof point.polarPlotY === 'undefined') {\n                series.polar.toXY(point);\n            }\n        });\n    }\n    // Run uber method\n    var ret = proceed.apply(this, [].slice.call(arguments, 1));\n    // #6212 points.splice method is adding points to an array. In case of\n    // areaspline getGraphPath method is used two times and in both times\n    // points are added to an array. That is why points.pop is used, to get\n    // unmodified points.\n    if (popLastPoint) {\n        points.pop();\n    }\n    return ret;\n}\n/**\n * Extend getCoordinates to prepare for polar axis values\n * @private\n */\nfunction wrapPointerGetCoordinates(proceed, e) {\n    var chart = this.chart;\n    var ret = {\n        xAxis: [],\n        yAxis: []\n    };\n    if (chart.polar) {\n        chart.axes.forEach(function (axis) {\n            // Skip colorAxis\n            if (axis.coll === 'colorAxis') {\n                return;\n            }\n            var isXAxis = axis.isXAxis, center = axis.center, x = e.chartX - center[0] - chart.plotLeft, y = e.chartY - center[1] - chart.plotTop;\n            ret[isXAxis ? 'xAxis' : 'yAxis'].push({\n                axis: axis,\n                value: axis.translate(isXAxis ?\n                    Math.PI - Math.atan2(x, y) : // angle\n                    // distance from center\n                    Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)), true)\n            });\n        });\n    }\n    else {\n        ret = proceed.call(this, e);\n    }\n    return ret;\n}\n/**\n * Prevent zooming on mobile devices\n * @private\n */\nfunction wrapPointerPinch(proceed, e) {\n    if (this.chart.polar) {\n        return;\n    }\n    proceed.call(this, e);\n}\n/**\n * Define the animate method for regular series\n * @private\n */\nfunction wrapSeriesAnimate(proceed, init) {\n    var series = this, chart = this.chart, group = this.group, markerGroup = this.markerGroup, center = this.xAxis && this.xAxis.center, plotLeft = chart.plotLeft, plotTop = chart.plotTop;\n    var animation = this.options.animation, attribs, paneInnerR, graphic, shapeArgs, r, innerR;\n    // Specific animation for polar charts\n    if (chart.polar) {\n        if (series.isRadialBar) {\n            if (!init) {\n                // Run the pie animation for radial bars\n                series.startAngleRad = pick(series.translatedThreshold, series.xAxis.startAngleRad);\n                H.seriesTypes.pie.prototype.animate.call(series, init);\n            }\n        }\n        else {\n            // Enable animation on polar charts only in SVG. In VML, the scaling\n            // is different, plus animation would be so slow it would't matter.\n            if (chart.renderer.isSVG) {\n                animation = animObject(animation);\n                // A different animation needed for column like series\n                if (series.is('column')) {\n                    if (!init) {\n                        paneInnerR = center[3] / 2;\n                        series.points.forEach(function (point) {\n                            graphic = point.graphic;\n                            shapeArgs = point.shapeArgs;\n                            r = shapeArgs && shapeArgs.r;\n                            innerR = shapeArgs && shapeArgs.innerR;\n                            if (graphic && shapeArgs) {\n                                // start values\n                                graphic.attr({\n                                    r: paneInnerR,\n                                    innerR: paneInnerR\n                                });\n                                // animate\n                                graphic.animate({\n                                    r: r,\n                                    innerR: innerR\n                                }, series.options.animation);\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Initialize the animation\n                    if (init) {\n                        // Scale down the group and place it in the center\n                        attribs = {\n                            translateX: center[0] + plotLeft,\n                            translateY: center[1] + plotTop,\n                            scaleX: 0.001,\n                            scaleY: 0.001\n                        };\n                        group.attr(attribs);\n                        if (markerGroup) {\n                            markerGroup.attr(attribs);\n                        }\n                        // Run the animation\n                    }\n                    else {\n                        attribs = {\n                            translateX: plotLeft,\n                            translateY: plotTop,\n                            scaleX: 1,\n                            scaleY: 1\n                        };\n                        group.animate(attribs, animation);\n                        if (markerGroup) {\n                            markerGroup.animate(attribs, animation);\n                        }\n                    }\n                }\n            }\n        }\n        // For non-polar charts, revert to the basic animation\n    }\n    else {\n        proceed.call(this, init);\n    }\n}\n/**\n * Overridden method for calculating a spline from one point to the next\n * @private\n */\nfunction wrapSplineSeriesGetPointSpline(proceed, segment, point, i) {\n    var ret, connectors;\n    if (this.chart.polar) {\n        // moveTo or lineTo\n        if (!i) {\n            ret = ['M', point.plotX, point.plotY];\n        }\n        else { // curve from last point to this\n            connectors = getConnectors(segment, i, true, this.connectEnds);\n            var rightContX = connectors.prevPointCont &&\n                connectors.prevPointCont.rightContX;\n            var rightContY = connectors.prevPointCont &&\n                connectors.prevPointCont.rightContY;\n            ret = [\n                'C',\n                isNumber(rightContX) ? rightContX : connectors.plotX,\n                isNumber(rightContY) ? rightContY : connectors.plotY,\n                isNumber(connectors.leftContX) ?\n                    connectors.leftContX :\n                    connectors.plotX,\n                isNumber(connectors.leftContY) ?\n                    connectors.leftContY :\n                    connectors.plotY,\n                connectors.plotX,\n                connectors.plotY\n            ];\n        }\n    }\n    else {\n        ret = proceed.call(this, segment, point, i);\n    }\n    return ret;\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * Extensions for polar charts. Additionally, much of the geometry required\n * for polar charts is gathered in RadialAxes.js.\n * @private\n */\nvar PolarAdditions = /** @class */ (function () {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    function PolarAdditions(series) {\n        this.series = series;\n    }\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    PolarAdditions.compose = function (AxisClass, ChartClass, PointerClass, SeriesClass, TickClass, AreaSplineRangeSeriesClass, ColumnSeriesClass, LineSeriesClass, SplineSeriesClass) {\n        RadialAxis.compose(AxisClass, TickClass);\n        if (composedClasses.indexOf(ChartClass) === -1) {\n            composedClasses.push(ChartClass);\n            addEvent(ChartClass, 'afterDrawChartBox', onChartAfterDrawChartBox);\n            addEvent(ChartClass, 'getAxes', onChartGetAxes);\n            addEvent(ChartClass, 'init', onChartAfterInit);\n            var chartProto = ChartClass.prototype;\n            wrap(chartProto, 'get', wrapChartGet);\n        }\n        if (composedClasses.indexOf(PointerClass) === -1) {\n            composedClasses.push(PointerClass);\n            var pointerProto = PointerClass.prototype;\n            wrap(pointerProto, 'getCoordinates', wrapPointerGetCoordinates);\n            wrap(pointerProto, 'pinch', wrapPointerPinch);\n            addEvent(PointerClass, 'getSelectionMarkerAttrs', onPointerGetSelectionMarkerAttrs);\n            addEvent(PointerClass, 'getSelectionBox', onPointerGetSelectionBox);\n        }\n        if (composedClasses.indexOf(SeriesClass) === -1) {\n            composedClasses.push(SeriesClass);\n            addEvent(SeriesClass, 'afterInit', onSeriesAfterInit);\n            addEvent(SeriesClass, 'afterTranslate', onSeriesAfterTranslate, { order: 2 } // Run after translation of ||-coords\n            );\n            var seriesProto = SeriesClass.prototype;\n            wrap(seriesProto, 'animate', wrapSeriesAnimate);\n        }\n        if (ColumnSeriesClass &&\n            composedClasses.indexOf(ColumnSeriesClass) === -1) {\n            composedClasses.push(ColumnSeriesClass);\n            var columnProto = ColumnSeriesClass.prototype;\n            wrap(columnProto, 'alignDataLabel', wrapColumnSeriesAlignDataLabel);\n            wrap(columnProto, 'animate', wrapSeriesAnimate);\n            wrap(columnProto, 'translate', wrapColumnSeriesTranslate);\n        }\n        if (LineSeriesClass &&\n            composedClasses.indexOf(LineSeriesClass) === -1) {\n            composedClasses.push(LineSeriesClass);\n            var lineProto = LineSeriesClass.prototype;\n            wrap(lineProto, 'getGraphPath', wrapLineSeriesGetGraphPath);\n        }\n        if (SplineSeriesClass &&\n            composedClasses.indexOf(SplineSeriesClass) === -1) {\n            composedClasses.push(SplineSeriesClass);\n            var splineProto = SplineSeriesClass.prototype;\n            wrap(splineProto, 'getPointSpline', wrapSplineSeriesGetPointSpline);\n            if (AreaSplineRangeSeriesClass &&\n                composedClasses.indexOf(AreaSplineRangeSeriesClass) === -1) {\n                composedClasses.push(AreaSplineRangeSeriesClass);\n                var areaSplineRangeProto = AreaSplineRangeSeriesClass.prototype;\n                // #6430 Areasplinerange series use unwrapped getPointSpline\n                // method, so we need to set this method again.\n                areaSplineRangeProto.getPointSpline =\n                    splineProto.getPointSpline;\n            }\n        }\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    PolarAdditions.prototype.arc = function (low, high, start, end) {\n        var series = this.series, center = series.xAxis.center, len = series.yAxis.len, paneInnerR = center[3] / 2;\n        var r = len - high + paneInnerR, innerR = len - pick(low, len) + paneInnerR;\n        // Prevent columns from shooting through the pane's center\n        if (series.yAxis.reversed) {\n            if (r < 0) {\n                r = paneInnerR;\n            }\n            if (innerR < 0) {\n                innerR = paneInnerR;\n            }\n        }\n        // Return a new shapeArgs\n        return {\n            x: center[0],\n            y: center[1],\n            r: r,\n            innerR: innerR,\n            start: start,\n            end: end\n        };\n    };\n    /**\n     * Translate a point's plotX and plotY from the internal angle and radius\n     * measures to true plotX, plotY coordinates\n     * @private\n     */\n    PolarAdditions.prototype.toXY = function (point) {\n        var series = this.series, chart = series.chart, xAxis = series.xAxis, yAxis = series.yAxis, plotX = point.plotX, inverted = chart.inverted, pointY = point.y;\n        var plotY = point.plotY, radius = inverted ? plotX : yAxis.len - plotY, clientX;\n        // Corrected y position of inverted series other than column\n        if (inverted && series && !series.isRadialBar) {\n            point.plotY = plotY =\n                isNumber(pointY) ? yAxis.translate(pointY) : 0;\n        }\n        // Save rectangular plotX, plotY for later computation\n        point.rectPlotX = plotX;\n        point.rectPlotY = plotY;\n        if (yAxis.center) {\n            radius += yAxis.center[3] / 2;\n        }\n        // Find the polar plotX and plotY. Avoid setting plotX and plotY to NaN\n        // when plotY is undefined (#15438)\n        if (isNumber(plotY)) {\n            var xy = inverted ? yAxis.postTranslate(plotY, radius) :\n                xAxis.postTranslate(plotX, radius);\n            point.plotX = point.polarPlotX = xy.x - chart.plotLeft;\n            point.plotY = point.polarPlotY = xy.y - chart.plotTop;\n        }\n        // If shared tooltip, record the angle in degrees in order to align X\n        // points. Otherwise, use a standard k-d tree to get the nearest point\n        // in two dimensions.\n        if (series.kdByAngle) {\n            clientX = ((plotX / Math.PI * 180) + xAxis.pane.options.startAngle) % 360;\n            if (clientX < 0) { // #2665\n                clientX += 360;\n            }\n            point.clientX = clientX;\n        }\n        else {\n            point.clientX = point.plotX;\n        }\n    };\n    return PolarAdditions;\n}());\n/* *\n *\n *  Default Export\n *\n * */\nexport default PolarAdditions;\n","/**\n * @license Highcharts JS v10.3.3 (2023-01-20)\n * @module highcharts/highcharts-more\n * @requires highcharts\n *\n * (c) 2009-2021 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n'use strict';\nimport Highcharts from '../Core/Globals.js';\nvar G = Highcharts;\nimport SeriesRegistry from '../Core/Series/SeriesRegistry.js';\nimport '../Extensions/Pane.js';\nimport '../Series/AreaRange/AreaRangeSeries.js';\nimport '../Series/AreaSplineRange/AreaSplineRangeSeries.js';\nimport '../Series/BoxPlot/BoxPlotSeries.js';\nimport BubbleSeries from '../Series/Bubble/BubbleSeries.js';\nBubbleSeries.compose(G.Axis, G.Chart, G.Legend, G.Series);\nimport '../Series/ColumnRange/ColumnRangeSeries.js';\nimport '../Series/ColumnPyramid/ColumnPyramidSeries.js';\nimport '../Series/ErrorBar/ErrorBarSeries.js';\nimport '../Series/Gauge/GaugeSeries.js';\nimport PackedBubbleSeries from '../Series/PackedBubble/PackedBubbleSeries.js';\nimport '../Series/Polygon/PolygonSeries.js';\nimport '../Series/Waterfall/WaterfallSeries.js';\nimport PolarAdditions from '../Series/PolarComposition.js';\nPackedBubbleSeries.compose(G.Axis, G.Chart, G.Legend, G.Series);\nPolarAdditions.compose(G.Axis, G.Chart, G.Pointer, G.Series, G.Tick, SeriesRegistry.seriesTypes.areasplinerange, SeriesRegistry.seriesTypes.column, SeriesRegistry.seriesTypes.line, SeriesRegistry.seriesTypes.spline);\n"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]}