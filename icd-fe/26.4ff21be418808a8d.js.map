{"version":3,"file":"26.4ff21be418808a8d.js","mappings":"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","names":["ColorAxisComposition","color","Color","addEvent","U","extend","merge","pick","splat","ColorAxisClass","composedClasses","onChartAfterGetAxes","_this","this","options","colorAxis","forEach","axisOptions","i","index","onLegendAfterGetAllItems","e","destroyItem","item","allItems","indexOf","splice","colorAxisItems","chart","showInLegend","dataClasses","visible","concat","getDataClassLegendSymbols","push","series","legendType","points","point","length","unshift","onLegendAfterColorizeItem","legendColor","legendItem","symbol","attr","fill","onLegendAfterUpdate","colorAxes","update","arguments","onSeriesAfterTranslate","colorAttribs","translateColors","onSeriesBindAxes","axisTypes","pointSetVisible","vis","method","Boolean","key","buildKDTree","seriesTranslateColors","nullColor","colorKey","data","value","getNestedProperty","isNull","toColor","label","legend","colorizeItem","wrapFxFillSetter","elem","start","tweenTo","end","pos","wrapFxStrokeSetter","compose","ColorAxisType","ChartClass","FxClass","LegendClass","SeriesClass","chartProto","prototype","collectionsWithUpdate","collectionsWithInit","addColorAxis","wrapChartCreateAxis","superCreateAxis","createAxis","type","apply","axis","isX","isDirtyLegend","axes","bindAxes","isDirtyData","redraw","animation","fxProto","fillSetter","strokeSetter","optionalAxis","pointClass","setVisible","order","ColorAxisDefaults","lineWidth","minPadding","maxPadding","gridLineWidth","tickPixelInterval","startOnTick","endOnTick","offset","marker","duration","width","labels","overflow","rotation","minColor","maxColor","tickLength","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","call","TypeError","String","__","constructor","create","Series","SeriesRegistry","isNumber","ColorAxis","_super","userOptions","beforePadding","coll","name","stops","init","horiz","layout","defaultColorAxisOptions","showEmpty","title","enabled","side","reversed","opposite","initDataClasses","initStops","zoomEnabled","len","colorCounter","colorCount","dataClass","colors","styledMode","dataClassColor","colorIndex","hasData","tickPositions","setTickPositions","stop","setOptions","crosshair","setAxisSize","x","y","height","legendOptions","left","top","right","chartWidth","bottom","chartHeight","symbolWidth","symbolHeight","defaultLegendLength","normalizedValue","logarithmic","log2lin","max","min","from","to","getOffset","group","sideOffset","axisOffset","axisParent","legend_1","drawLegendSymbol","render","getMargins","added","labelLeft","labelRight","setLegendColor","one","zero","grad","linearGradient","x1","y1","x2","y2","padding","itemDistance","labelPadding","renderer","rect","baseline","zIndex","add","labelWidth","maxLabelLength","labelHeight","setState","state","getSeriesExtremes","colorValArray","colorValIndex","pointArrayMap","calculatedExtremes","cSeries","yData","j","dataMin","Infinity","dataMax","pointValKey","zoneAxis","minColorValue","maxColorValue","cExtremes","getExtremes","Math","applyExtremes","drawCrosshair","crossPos","plotX","plotY","axisPos","axisLen","toPixels","cross","addedToColorAxis","addClass","getPlotLinePath","translatedValue","newOptions","destroyItems","_i","_a","destroy","slice","remove","legendItems","valueDecimals","valueSuffix","getPointsInDataClass","reduce","s","filter","numberFormatter","LegendSymbol","isDataClass","keepProps","Axis","ColorMapComposition","columnProto","defined","onPointAfterSetState","moveToTopOnHover","graphic","pointMembers","dataLabelOnNull","isValid","pointIsValid","isNaN","seriesMembers","parallelArrays","trackerGroups","seriesColorAttribs","ret","colorProp","pointAttribs","PointClass","clamp","HeatmapPoint","applyOptions","formatPrefix","getCellAttributes","seriesOptions","xPad","colsize","yPad","rowsize","xAxis","yAxis","markerOptions","pointPlacement","pointPlacementToXValue","pointPadding","cellAttr","round","translate","dimensions","dimension","prop","direction","abs","borderWidth","plotPos","widthOrHeight","halfCellSize","haloPath","size","shapeArgs","_b","_c","_d","_e","ttBelow","ColumnSeries","column","ScatterSeries","scatter","symbols","SVGRenderer","fireEvent","HeatmapSeries","valueMax","NaN","valueMin","drawPoints","_hasPointMarkers","valueData","getValidPoints","insideOnly","processedXData","pointRange","axisPointRange","ellipse","circle","r","borderRadius","markerAttribs","hasImage","pointMarkerOptions","seriesMarkerOptions","seriesStateOptions","states","pointStateOptions","widthPlus","heightPlus","plotOptions","seriesPlotOptions","heatmapPlotOptions","heatmap","stroke","lineColor","borderColor","stateOptions","brighten","brightness","get","shape","hasRegularShape","generatePoints","sizeDiff","clientX","shapeType","defaultOptions","dataLabels","formatter","inside","verticalAlign","crop","radius","hover","lineWidthPlus","select","clip","tooltip","pointFormat","halo","directTouch","getExtremesFromAll","specialGroup","alignDataLabel","getSymbol"],"sourceRoot":"webpack:///","sources":["./node_modules/highcharts/es-modules/Core/Axis/Color/ColorAxisComposition.js","./node_modules/highcharts/es-modules/Core/Axis/Color/ColorAxisDefaults.js","./node_modules/highcharts/es-modules/Core/Axis/Color/ColorAxis.js","./node_modules/highcharts/es-modules/Series/ColorMapComposition.js","./node_modules/highcharts/es-modules/Series/Heatmap/HeatmapPoint.js","./node_modules/highcharts/es-modules/Series/Heatmap/HeatmapSeries.js"],"sourcesContent":["/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport Color from '../../Color/Color.js';\nvar color = Color.parse;\nimport U from '../../Utilities.js';\nvar addEvent = U.addEvent, extend = U.extend, merge = U.merge, pick = U.pick, splat = U.splat;\n/* *\n *\n *  Composition\n *\n * */\nvar ColorAxisComposition;\n(function (ColorAxisComposition) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    var composedClasses = [];\n    /* *\n     *\n     *  Variables\n     *\n     * */\n    var ColorAxisClass;\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * @private\n     */\n    function compose(ColorAxisType, ChartClass, FxClass, LegendClass, SeriesClass) {\n        if (!ColorAxisClass) {\n            ColorAxisClass = ColorAxisType;\n        }\n        if (composedClasses.indexOf(ChartClass) === -1) {\n            composedClasses.push(ChartClass);\n            var chartProto = ChartClass.prototype;\n            chartProto.collectionsWithUpdate.push('colorAxis');\n            chartProto.collectionsWithInit.colorAxis = [\n                chartProto.addColorAxis\n            ];\n            addEvent(ChartClass, 'afterGetAxes', onChartAfterGetAxes);\n            wrapChartCreateAxis(ChartClass);\n        }\n        if (composedClasses.indexOf(FxClass) === -1) {\n            composedClasses.push(FxClass);\n            var fxProto = FxClass.prototype;\n            fxProto.fillSetter = wrapFxFillSetter;\n            fxProto.strokeSetter = wrapFxStrokeSetter;\n        }\n        if (composedClasses.indexOf(LegendClass) === -1) {\n            composedClasses.push(LegendClass);\n            addEvent(LegendClass, 'afterGetAllItems', onLegendAfterGetAllItems);\n            addEvent(LegendClass, 'afterColorizeItem', onLegendAfterColorizeItem);\n            addEvent(LegendClass, 'afterUpdate', onLegendAfterUpdate);\n        }\n        if (composedClasses.indexOf(SeriesClass) === -1) {\n            composedClasses.push(SeriesClass);\n            extend(SeriesClass.prototype, {\n                optionalAxis: 'colorAxis',\n                translateColors: seriesTranslateColors\n            });\n            extend(SeriesClass.prototype.pointClass.prototype, {\n                setVisible: pointSetVisible\n            });\n            addEvent(SeriesClass, 'afterTranslate', onSeriesAfterTranslate, { order: 1 });\n            addEvent(SeriesClass, 'bindAxes', onSeriesBindAxes);\n        }\n    }\n    ColorAxisComposition.compose = compose;\n    /**\n     * Extend the chart getAxes method to also get the color axis.\n     * @private\n     */\n    function onChartAfterGetAxes() {\n        var _this = this;\n        var options = this.options;\n        this.colorAxis = [];\n        if (options.colorAxis) {\n            options.colorAxis = splat(options.colorAxis);\n            options.colorAxis.forEach(function (axisOptions, i) {\n                axisOptions.index = i;\n                new ColorAxisClass(_this, axisOptions); // eslint-disable-line no-new\n            });\n        }\n    }\n    /**\n     * Add the color axis. This also removes the axis' own series to prevent\n     * them from showing up individually.\n     * @private\n     */\n    function onLegendAfterGetAllItems(e) {\n        var _this = this;\n        var colorAxes = this.chart.colorAxis || [], destroyItem = function (item) {\n            var i = e.allItems.indexOf(item);\n            if (i !== -1) {\n                // #15436\n                _this.destroyItem(e.allItems[i]);\n                e.allItems.splice(i, 1);\n            }\n        };\n        var colorAxisItems = [], options, i;\n        colorAxes.forEach(function (colorAxis) {\n            options = colorAxis.options;\n            if (options && options.showInLegend) {\n                // Data classes\n                if (options.dataClasses && options.visible) {\n                    colorAxisItems = colorAxisItems.concat(colorAxis.getDataClassLegendSymbols());\n                    // Gradient legend\n                }\n                else if (options.visible) {\n                    // Add this axis on top\n                    colorAxisItems.push(colorAxis);\n                }\n                // If dataClasses are defined or showInLegend option is not set\n                // to true, do not add color axis' series to legend.\n                colorAxis.series.forEach(function (series) {\n                    if (!series.options.showInLegend || options.dataClasses) {\n                        if (series.options.legendType === 'point') {\n                            series.points.forEach(function (point) {\n                                destroyItem(point);\n                            });\n                        }\n                        else {\n                            destroyItem(series);\n                        }\n                    }\n                });\n            }\n        });\n        i = colorAxisItems.length;\n        while (i--) {\n            e.allItems.unshift(colorAxisItems[i]);\n        }\n    }\n    /**\n     * @private\n     */\n    function onLegendAfterColorizeItem(e) {\n        if (e.visible && e.item.legendColor) {\n            e.item.legendItem.symbol.attr({\n                fill: e.item.legendColor\n            });\n        }\n    }\n    /**\n     * Updates in the legend need to be reflected in the color axis. (#6888)\n     * @private\n     */\n    function onLegendAfterUpdate() {\n        var colorAxes = this.chart.colorAxis;\n        if (colorAxes) {\n            colorAxes.forEach(function (colorAxis) {\n                colorAxis.update({}, arguments[2]);\n            });\n        }\n    }\n    /**\n     * Calculate and set colors for points.\n     * @private\n     */\n    function onSeriesAfterTranslate() {\n        if (this.chart.colorAxis &&\n            this.chart.colorAxis.length ||\n            this.colorAttribs) {\n            this.translateColors();\n        }\n    }\n    /**\n     * Add colorAxis to series axisTypes.\n     * @private\n     */\n    function onSeriesBindAxes() {\n        var axisTypes = this.axisTypes;\n        if (!axisTypes) {\n            this.axisTypes = ['colorAxis'];\n        }\n        else if (axisTypes.indexOf('colorAxis') === -1) {\n            axisTypes.push('colorAxis');\n        }\n    }\n    /**\n     * Set the visibility of a single point\n     * @private\n     * @function Highcharts.colorPointMixin.setVisible\n     * @param {boolean} visible\n     */\n    function pointSetVisible(vis) {\n        var point = this, method = vis ? 'show' : 'hide';\n        point.visible = point.options.visible = Boolean(vis);\n        // Show and hide associated elements\n        ['graphic', 'dataLabel'].forEach(function (key) {\n            if (point[key]) {\n                point[key][method]();\n            }\n        });\n        this.series.buildKDTree(); // rebuild kdtree #13195\n    }\n    ColorAxisComposition.pointSetVisible = pointSetVisible;\n    /**\n     * In choropleth maps, the color is a result of the value, so this needs\n     * translation too\n     * @private\n     * @function Highcharts.colorSeriesMixin.translateColors\n     */\n    function seriesTranslateColors() {\n        var series = this, points = this.data.length ? this.data : this.points, nullColor = this.options.nullColor, colorAxis = this.colorAxis, colorKey = this.colorKey;\n        points.forEach(function (point) {\n            var value = point.getNestedProperty(colorKey), color = point.options.color || (point.isNull || point.value === null ?\n                nullColor :\n                (colorAxis && typeof value !== 'undefined') ?\n                    colorAxis.toColor(value, point) :\n                    point.color || series.color);\n            if (color && point.color !== color) {\n                point.color = color;\n                if (series.options.legendType === 'point' &&\n                    point.legendItem &&\n                    point.legendItem.label) {\n                    series.chart.legend.colorizeItem(point, point.visible);\n                }\n            }\n        });\n    }\n    /**\n     * @private\n     */\n    function wrapChartCreateAxis(ChartClass) {\n        var superCreateAxis = ChartClass.prototype.createAxis;\n        ChartClass.prototype.createAxis = function (type, options) {\n            if (type !== 'colorAxis') {\n                return superCreateAxis.apply(this, arguments);\n            }\n            var axis = new ColorAxisClass(this, merge(options.axis, {\n                index: this[type].length,\n                isX: false\n            }));\n            this.isDirtyLegend = true;\n            // Clear before 'bindAxes' (#11924)\n            this.axes.forEach(function (axis) {\n                axis.series = [];\n            });\n            this.series.forEach(function (series) {\n                series.bindAxes();\n                series.isDirtyData = true;\n            });\n            if (pick(options.redraw, true)) {\n                this.redraw(options.animation);\n            }\n            return axis;\n        };\n    }\n    /**\n     * Handle animation of the color attributes directly.\n     * @private\n     */\n    function wrapFxFillSetter() {\n        this.elem.attr('fill', color(this.start).tweenTo(color(this.end), this.pos), void 0, true);\n    }\n    /**\n     * Handle animation of the color attributes directly.\n     * @private\n     */\n    function wrapFxStrokeSetter() {\n        this.elem.attr('stroke', color(this.start).tweenTo(color(this.end), this.pos), void 0, true);\n    }\n})(ColorAxisComposition || (ColorAxisComposition = {}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default ColorAxisComposition;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A color axis for series. Visually, the color\n * axis will appear as a gradient or as separate items inside the\n * legend, depending on whether the axis is scalar or based on data\n * classes.\n *\n * For supported color formats, see the\n * [docs article about colors](https://www.highcharts.com/docs/chart-design-and-style/colors).\n *\n * A scalar color axis is represented by a gradient. The colors either\n * range between the [minColor](#colorAxis.minColor) and the\n * [maxColor](#colorAxis.maxColor), or for more fine grained control the\n * colors can be defined in [stops](#colorAxis.stops). Often times, the\n * color axis needs to be adjusted to get the right color spread for the\n * data. In addition to stops, consider using a logarithmic\n * [axis type](#colorAxis.type), or setting [min](#colorAxis.min) and\n * [max](#colorAxis.max) to avoid the colors being determined by\n * outliers.\n *\n * When [dataClasses](#colorAxis.dataClasses) are used, the ranges are\n * subdivided into separate classes like categories based on their\n * values. This can be used for ranges between two values, but also for\n * a true category. However, when your data is categorized, it may be as\n * convenient to add each category to a separate series.\n *\n * Color axis does not work with: `sankey`, `sunburst`, `dependencywheel`,\n * `networkgraph`, `wordcloud`, `venn`, `gauge` and `solidgauge` series\n * types.\n *\n * Since v7.2.0 `colorAxis` can also be an array of options objects.\n *\n * See [the Axis object](/class-reference/Highcharts.Axis) for\n * programmatic access to the axis.\n *\n * @sample       {highcharts} highcharts/coloraxis/custom-color-key\n *               Column chart with color axis\n * @sample       {highcharts} highcharts/coloraxis/horizontal-layout\n *               Horizontal layout\n * @sample       {highmaps} maps/coloraxis/dataclasscolor\n *               With data classes\n * @sample       {highmaps} maps/coloraxis/mincolor-maxcolor\n *               Min color and max color\n *\n * @extends      xAxis\n * @excluding    alignTicks, allowDecimals, alternateGridColor, breaks,\n *               categories, crosshair, dateTimeLabelFormats, height, left,\n *               lineWidth, linkedTo, maxZoom, minRange, minTickInterval,\n *               offset, opposite, pane, plotBands, plotLines,\n *               reversedStacks, scrollbar, showEmpty, title, top, width,\n *               zoomEnabled\n * @product      highcharts highstock highmaps\n * @type         {*|Array<*>}\n * @optionparent colorAxis\n */\nvar colorAxisDefaults = {\n    /**\n     * Whether to allow decimals on the color axis.\n     * @type      {boolean}\n     * @default   true\n     * @product   highcharts highstock highmaps\n     * @apioption colorAxis.allowDecimals\n     */\n    /**\n     * Determines how to set each data class' color if no individual\n     * color is set. The default value, `tween`, computes intermediate\n     * colors between `minColor` and `maxColor`. The other possible\n     * value, `category`, pulls colors from the global or chart specific\n     * [colors](#colors) array.\n     *\n     * @sample {highmaps} maps/coloraxis/dataclasscolor/\n     *         Category colors\n     *\n     * @type       {string}\n     * @default    tween\n     * @product    highcharts highstock highmaps\n     * @validvalue [\"tween\", \"category\"]\n     * @apioption  colorAxis.dataClassColor\n     */\n    /**\n     * An array of data classes or ranges for the choropleth map. If\n     * none given, the color axis is scalar and values are distributed\n     * as a gradient between the minimum and maximum colors.\n     *\n     * @sample {highmaps} maps/demo/data-class-ranges/\n     *         Multiple ranges\n     *\n     * @sample {highmaps} maps/demo/data-class-two-ranges/\n     *         Two ranges\n     *\n     * @type      {Array<*>}\n     * @product   highcharts highstock highmaps\n     * @apioption colorAxis.dataClasses\n     */\n    /**\n     * The layout of the color axis. Can be `'horizontal'` or `'vertical'`.\n     * If none given, the color axis has the same layout as the legend.\n     *\n     * @sample highcharts/coloraxis/horizontal-layout/\n     *         Horizontal color axis layout with vertical legend\n     *\n     * @type      {string|undefined}\n     * @since     7.2.0\n     * @product   highcharts highstock highmaps\n     * @apioption colorAxis.layout\n     */\n    /**\n     * The color of each data class. If not set, the color is pulled\n     * from the global or chart-specific [colors](#colors) array. In\n     * styled mode, this option is ignored. Instead, use colors defined\n     * in CSS.\n     *\n     * @sample {highmaps} maps/demo/data-class-two-ranges/\n     *         Explicit colors\n     *\n     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @product   highcharts highstock highmaps\n     * @apioption colorAxis.dataClasses.color\n     */\n    /**\n     * The start of the value range that the data class represents,\n     * relating to the point value.\n     *\n     * The range of each `dataClass` is closed in both ends, but can be\n     * overridden by the next `dataClass`.\n     *\n     * @type      {number}\n     * @product   highcharts highstock highmaps\n     * @apioption colorAxis.dataClasses.from\n     */\n    /**\n     * The name of the data class as it appears in the legend.\n     * If no name is given, it is automatically created based on the\n     * `from` and `to` values. For full programmatic control,\n     * [legend.labelFormatter](#legend.labelFormatter) can be used.\n     * In the formatter, `this.from` and `this.to` can be accessed.\n     *\n     * @sample {highmaps} maps/coloraxis/dataclasses-name/\n     *         Named data classes\n     *\n     * @sample {highmaps} maps/coloraxis/dataclasses-labelformatter/\n     *         Formatted data classes\n     *\n     * @type      {string}\n     * @product   highcharts highstock highmaps\n     * @apioption colorAxis.dataClasses.name\n     */\n    /**\n     * The end of the value range that the data class represents,\n     * relating to the point value.\n     *\n     * The range of each `dataClass` is closed in both ends, but can be\n     * overridden by the next `dataClass`.\n     *\n     * @type      {number}\n     * @product   highcharts highstock highmaps\n     * @apioption colorAxis.dataClasses.to\n     */\n    /** @ignore-option */\n    lineWidth: 0,\n    /**\n     * Padding of the min value relative to the length of the axis. A\n     * padding of 0.05 will make a 100px axis 5px longer.\n     *\n     * @product highcharts highstock highmaps\n     */\n    minPadding: 0,\n    /**\n     * The maximum value of the axis in terms of map point values. If\n     * `null`, the max value is automatically calculated. If the\n     * `endOnTick` option is true, the max value might be rounded up.\n     *\n     * @sample {highmaps} maps/coloraxis/gridlines/\n     *         Explicit min and max to reduce the effect of outliers\n     *\n     * @type      {number}\n     * @product   highcharts highstock highmaps\n     * @apioption colorAxis.max\n     */\n    /**\n     * The minimum value of the axis in terms of map point values. If\n     * `null`, the min value is automatically calculated. If the\n     * `startOnTick` option is true, the min value might be rounded\n     * down.\n     *\n     * @sample {highmaps} maps/coloraxis/gridlines/\n     *         Explicit min and max to reduce the effect of outliers\n     *\n     * @type      {number}\n     * @product   highcharts highstock highmaps\n     * @apioption colorAxis.min\n     */\n    /**\n     * Padding of the max value relative to the length of the axis. A\n     * padding of 0.05 will make a 100px axis 5px longer.\n     *\n     * @product highcharts highstock highmaps\n     */\n    maxPadding: 0,\n    /**\n     * Color of the grid lines extending from the axis across the\n     * gradient.\n     *\n     * @sample {highmaps} maps/coloraxis/gridlines/\n     *         Grid lines demonstrated\n     *\n     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @default   #e6e6e6\n     * @product   highcharts highstock highmaps\n     * @apioption colorAxis.gridLineColor\n     */\n    /**\n     * The width of the grid lines extending from the axis across the\n     * gradient of a scalar color axis.\n     *\n     * @sample {highmaps} maps/coloraxis/gridlines/\n     *         Grid lines demonstrated\n     *\n     * @product highcharts highstock highmaps\n     */\n    gridLineWidth: 1,\n    /**\n     * The interval of the tick marks in axis units. When `null`, the\n     * tick interval is computed to approximately follow the\n     * `tickPixelInterval`.\n     *\n     * @type      {number}\n     * @product   highcharts highstock highmaps\n     * @apioption colorAxis.tickInterval\n     */\n    /**\n     * If [tickInterval](#colorAxis.tickInterval) is `null` this option\n     * sets the approximate pixel interval of the tick marks.\n     *\n     * @product highcharts highstock highmaps\n     */\n    tickPixelInterval: 72,\n    /**\n     * Whether to force the axis to start on a tick. Use this option\n     * with the `maxPadding` option to control the axis start.\n     *\n     * @product highcharts highstock highmaps\n     */\n    startOnTick: true,\n    /**\n     * Whether to force the axis to end on a tick. Use this option with\n     * the [maxPadding](#colorAxis.maxPadding) option to control the\n     * axis end.\n     *\n     * @product highcharts highstock highmaps\n     */\n    endOnTick: true,\n    /** @ignore */\n    offset: 0,\n    /**\n     * The triangular marker on a scalar color axis that points to the\n     * value of the hovered area. To disable the marker, set\n     * `marker: null`.\n     *\n     * @sample {highmaps} maps/coloraxis/marker/\n     *         Black marker\n     *\n     * @declare Highcharts.PointMarkerOptionsObject\n     * @product highcharts highstock highmaps\n     */\n    marker: {\n        /**\n         * Animation for the marker as it moves between values. Set to\n         * `false` to disable animation. Defaults to `{ duration: 50 }`.\n         *\n         * @type    {boolean|Partial<Highcharts.AnimationOptionsObject>}\n         * @product highcharts highstock highmaps\n         */\n        animation: {\n            /** @internal */\n            duration: 50\n        },\n        /** @internal */\n        width: 0.01,\n        /**\n         * The color of the marker.\n         *\n         * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @product highcharts highstock highmaps\n         */\n        color: \"#999999\" /* Palette.neutralColor40 */\n    },\n    /**\n     * The axis labels show the number for each tick.\n     *\n     * For more live examples on label options, see [xAxis.labels in the\n     * Highcharts API.](/highcharts#xAxis.labels)\n     *\n     * @extends xAxis.labels\n     * @product highcharts highstock highmaps\n     */\n    labels: {\n        /**\n         * How to handle overflowing labels on horizontal color axis. If set\n         * to `\"allow\"`, it will not be aligned at all. By default it\n         * `\"justify\"` labels inside the chart area. If there is room to\n         * move it, it will be aligned to the edge, else it will be removed.\n         *\n         * @validvalue [\"allow\", \"justify\"]\n         * @product    highcharts highstock highmaps\n         */\n        overflow: 'justify',\n        rotation: 0\n    },\n    /**\n     * The color to represent the minimum of the color axis. Unless\n     * [dataClasses](#colorAxis.dataClasses) or\n     * [stops](#colorAxis.stops) are set, the gradient starts at this\n     * value.\n     *\n     * If dataClasses are set, the color is based on minColor and\n     * maxColor unless a color is set for each data class, or the\n     * [dataClassColor](#colorAxis.dataClassColor) is set.\n     *\n     * @sample {highmaps} maps/coloraxis/mincolor-maxcolor/\n     *         Min and max colors on scalar (gradient) axis\n     * @sample {highmaps} maps/coloraxis/mincolor-maxcolor-dataclasses/\n     *         On data classes\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @product highcharts highstock highmaps\n     */\n    minColor: \"#e6ebf5\" /* Palette.highlightColor10 */,\n    /**\n     * The color to represent the maximum of the color axis. Unless\n     * [dataClasses](#colorAxis.dataClasses) or\n     * [stops](#colorAxis.stops) are set, the gradient ends at this\n     * value.\n     *\n     * If dataClasses are set, the color is based on minColor and\n     * maxColor unless a color is set for each data class, or the\n     * [dataClassColor](#colorAxis.dataClassColor) is set.\n     *\n     * @sample {highmaps} maps/coloraxis/mincolor-maxcolor/\n     *         Min and max colors on scalar (gradient) axis\n     * @sample {highmaps} maps/coloraxis/mincolor-maxcolor-dataclasses/\n     *         On data classes\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @product highcharts highstock highmaps\n     */\n    maxColor: \"#003399\" /* Palette.highlightColor100 */,\n    /**\n     * Color stops for the gradient of a scalar color axis. Use this in\n     * cases where a linear gradient between a `minColor` and `maxColor`\n     * is not sufficient. The stops is an array of tuples, where the\n     * first item is a float between 0 and 1 assigning the relative\n     * position in the gradient, and the second item is the color.\n     *\n     * @sample highcharts/coloraxis/coloraxis-stops/\n     *         Color axis stops\n     * @sample highcharts/coloraxis/color-key-with-stops/\n     *         Color axis stops with custom colorKey\n     * @sample {highmaps} maps/demo/heatmap/\n     *         Heatmap with three color stops\n     *\n     * @type      {Array<Array<number,Highcharts.ColorString>>}\n     * @product   highcharts highstock highmaps\n     * @apioption colorAxis.stops\n     */\n    /**\n     * The pixel length of the main tick marks on the color axis.\n     */\n    tickLength: 5,\n    /**\n     * The type of interpolation to use for the color axis. Can be\n     * `linear` or `logarithmic`.\n     *\n     * @sample highcharts/coloraxis/logarithmic-with-emulate-negative-values/\n     *         Logarithmic color axis with extension to emulate negative\n     *         values\n     *\n     * @type      {Highcharts.ColorAxisTypeValue}\n     * @default   linear\n     * @product   highcharts highstock highmaps\n     * @apioption colorAxis.type\n     */\n    /**\n     * Whether to reverse the axis so that the highest number is closest\n     * to the origin. Defaults to `false` in a horizontal legend and\n     * `true` in a vertical legend, where the smallest value starts on\n     * top.\n     *\n     * @type      {boolean}\n     * @product   highcharts highstock highmaps\n     * @apioption colorAxis.reversed\n     */\n    /**\n     * @product   highcharts highstock highmaps\n     * @excluding afterBreaks, pointBreak, pointInBreak\n     * @apioption colorAxis.events\n     */\n    /**\n     * Fires when the legend item belonging to the colorAxis is clicked.\n     * One parameter, `event`, is passed to the function.\n     *\n     * @type      {Function}\n     * @product   highcharts highstock highmaps\n     * @apioption colorAxis.events.legendItemClick\n     */\n    /**\n     * Whether to display the colorAxis in the legend.\n     *\n     * @sample highcharts/coloraxis/hidden-coloraxis-with-3d-chart/\n     *         Hidden color axis with 3d chart\n     *\n     * @see [heatmap.showInLegend](#series.heatmap.showInLegend)\n     *\n     * @since   4.2.7\n     * @product highcharts highstock highmaps\n     */\n    showInLegend: true\n};\n/* *\n *\n *  Default Export\n *\n * */\nexport default colorAxisDefaults;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Axis from '../Axis.js';\nimport Color from '../../Color/Color.js';\nvar color = Color.parse;\nimport ColorAxisComposition from './ColorAxisComposition.js';\nimport ColorAxisDefaults from './ColorAxisDefaults.js';\nimport H from '../../Globals.js';\nvar noop = H.noop;\nimport LegendSymbol from '../../Legend/LegendSymbol.js';\nimport SeriesRegistry from '../../Series/SeriesRegistry.js';\nvar Series = SeriesRegistry.series;\nimport U from '../../Utilities.js';\nvar extend = U.extend, isNumber = U.isNumber, merge = U.merge, pick = U.pick;\n/* *\n *\n *  Class\n *\n * */\n/* eslint-disable no-invalid-this, valid-jsdoc */\n/**\n * The ColorAxis object for inclusion in gradient legends.\n *\n * @class\n * @name Highcharts.ColorAxis\n * @augments Highcharts.Axis\n *\n * @param {Highcharts.Chart} chart\n * The related chart of the color axis.\n *\n * @param {Highcharts.ColorAxisOptions} userOptions\n * The color axis options for initialization.\n */\nvar ColorAxis = /** @class */ (function (_super) {\n    __extends(ColorAxis, _super);\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    /**\n     * @private\n     */\n    function ColorAxis(chart, userOptions) {\n        var _this = _super.call(this, chart, userOptions) || this;\n        // Prevents unnecessary padding with `hc-more`\n        _this.beforePadding = false;\n        _this.chart = void 0;\n        _this.coll = 'colorAxis';\n        _this.dataClasses = void 0;\n        _this.name = ''; // Prevents 'undefined' in legend in IE8\n        _this.options = void 0;\n        _this.stops = void 0;\n        _this.visible = true;\n        _this.init(chart, userOptions);\n        return _this;\n    }\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    ColorAxis.compose = function (ChartClass, FxClass, LegendClass, SeriesClass) {\n        ColorAxisComposition.compose(ColorAxis, ChartClass, FxClass, LegendClass, SeriesClass);\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Initializes the color axis.\n     *\n     * @function Highcharts.ColorAxis#init\n     *\n     * @param {Highcharts.Chart} chart\n     * The related chart of the color axis.\n     *\n     * @param {Highcharts.ColorAxisOptions} userOptions\n     * The color axis options for initialization.\n     */\n    ColorAxis.prototype.init = function (chart, userOptions) {\n        var axis = this;\n        var legend = chart.options.legend || {}, horiz = userOptions.layout ?\n            userOptions.layout !== 'vertical' :\n            legend.layout !== 'vertical', visible = userOptions.visible;\n        var options = merge(ColorAxis.defaultColorAxisOptions, userOptions, {\n            showEmpty: false,\n            title: null,\n            visible: legend.enabled && visible !== false\n        });\n        axis.coll = 'colorAxis';\n        axis.side = userOptions.side || horiz ? 2 : 1;\n        axis.reversed = userOptions.reversed || !horiz;\n        axis.opposite = !horiz;\n        _super.prototype.init.call(this, chart, options);\n        // #16053: Restore the actual userOptions.visible so the color axis\n        // doesnt stay hidden forever when hiding and showing legend\n        axis.userOptions.visible = visible;\n        // Base init() pushes it to the xAxis array, now pop it again\n        // chart[this.isXAxis ? 'xAxis' : 'yAxis'].pop();\n        // Prepare data classes\n        if (userOptions.dataClasses) {\n            axis.initDataClasses(userOptions);\n        }\n        axis.initStops();\n        // Override original axis properties\n        axis.horiz = horiz;\n        axis.zoomEnabled = false;\n    };\n    /**\n     * @private\n     */\n    ColorAxis.prototype.initDataClasses = function (userOptions) {\n        var axis = this, chart = axis.chart, legendItem = axis.legendItem = axis.legendItem || {}, len = userOptions.dataClasses.length, options = axis.options;\n        var dataClasses, colorCounter = 0, colorCount = chart.options.chart.colorCount;\n        axis.dataClasses = dataClasses = [];\n        legendItem.labels = [];\n        (userOptions.dataClasses || []).forEach(function (dataClass, i) {\n            var colors;\n            dataClass = merge(dataClass);\n            dataClasses.push(dataClass);\n            if (!chart.styledMode && dataClass.color) {\n                return;\n            }\n            if (options.dataClassColor === 'category') {\n                if (!chart.styledMode) {\n                    colors = chart.options.colors;\n                    colorCount = colors.length;\n                    dataClass.color = colors[colorCounter];\n                }\n                dataClass.colorIndex = colorCounter;\n                // increase and loop back to zero\n                colorCounter++;\n                if (colorCounter === colorCount) {\n                    colorCounter = 0;\n                }\n            }\n            else {\n                dataClass.color = color(options.minColor).tweenTo(color(options.maxColor), len < 2 ? 0.5 : i / (len - 1) // #3219\n                );\n            }\n        });\n    };\n    /**\n     * Returns true if the series has points at all.\n     *\n     * @function Highcharts.ColorAxis#hasData\n     *\n     * @return {boolean}\n     * True, if the series has points, otherwise false.\n     */\n    ColorAxis.prototype.hasData = function () {\n        return !!(this.tickPositions || []).length;\n    };\n    /**\n     * Override so that ticks are not added in data class axes (#6914)\n     * @private\n     */\n    ColorAxis.prototype.setTickPositions = function () {\n        if (!this.dataClasses) {\n            return _super.prototype.setTickPositions.call(this);\n        }\n    };\n    /**\n     * @private\n     */\n    ColorAxis.prototype.initStops = function () {\n        var axis = this;\n        axis.stops = axis.options.stops || [\n            [0, axis.options.minColor],\n            [1, axis.options.maxColor]\n        ];\n        axis.stops.forEach(function (stop) {\n            stop.color = color(stop[1]);\n        });\n    };\n    /**\n     * Extend the setOptions method to process extreme colors and color stops.\n     * @private\n     */\n    ColorAxis.prototype.setOptions = function (userOptions) {\n        var axis = this;\n        _super.prototype.setOptions.call(this, userOptions);\n        axis.options.crosshair = axis.options.marker;\n    };\n    /**\n     * @private\n     */\n    ColorAxis.prototype.setAxisSize = function () {\n        var axis = this;\n        var symbol = axis.legendItem && axis.legendItem.symbol;\n        var chart = axis.chart;\n        var legendOptions = chart.options.legend || {};\n        var x, y, width, height;\n        if (symbol) {\n            this.left = x = symbol.attr('x');\n            this.top = y = symbol.attr('y');\n            this.width = width = symbol.attr('width');\n            this.height = height = symbol.attr('height');\n            this.right = chart.chartWidth - x - width;\n            this.bottom = chart.chartHeight - y - height;\n            this.len = this.horiz ? width : height;\n            this.pos = this.horiz ? x : y;\n        }\n        else {\n            // Fake length for disabled legend to avoid tick issues\n            // and such (#5205)\n            this.len = (this.horiz ?\n                legendOptions.symbolWidth :\n                legendOptions.symbolHeight) || ColorAxis.defaultLegendLength;\n        }\n    };\n    /**\n     * @private\n     */\n    ColorAxis.prototype.normalizedValue = function (value) {\n        var axis = this;\n        if (axis.logarithmic) {\n            value = axis.logarithmic.log2lin(value);\n        }\n        return 1 - ((axis.max - value) /\n            ((axis.max - axis.min) || 1));\n    };\n    /**\n     * Translate from a value to a color.\n     * @private\n     */\n    ColorAxis.prototype.toColor = function (value, point) {\n        var axis = this;\n        var dataClasses = axis.dataClasses;\n        var stops = axis.stops;\n        var pos, from, to, color, dataClass, i;\n        if (dataClasses) {\n            i = dataClasses.length;\n            while (i--) {\n                dataClass = dataClasses[i];\n                from = dataClass.from;\n                to = dataClass.to;\n                if ((typeof from === 'undefined' || value >= from) &&\n                    (typeof to === 'undefined' || value <= to)) {\n                    color = dataClass.color;\n                    if (point) {\n                        point.dataClass = i;\n                        point.colorIndex = dataClass.colorIndex;\n                    }\n                    break;\n                }\n            }\n        }\n        else {\n            pos = axis.normalizedValue(value);\n            i = stops.length;\n            while (i--) {\n                if (pos > stops[i][0]) {\n                    break;\n                }\n            }\n            from = stops[i] || stops[i + 1];\n            to = stops[i + 1] || from;\n            // The position within the gradient\n            pos = 1 - (to[0] - pos) / ((to[0] - from[0]) || 1);\n            color = from.color.tweenTo(to.color, pos);\n        }\n        return color;\n    };\n    /**\n     * Override the getOffset method to add the whole axis groups inside the\n     * legend.\n     * @private\n     */\n    ColorAxis.prototype.getOffset = function () {\n        var axis = this;\n        var group = axis.legendItem && axis.legendItem.group;\n        var sideOffset = axis.chart.axisOffset[axis.side];\n        if (group) {\n            // Hook for the getOffset method to add groups to this parent\n            // group\n            axis.axisParent = group;\n            // Call the base\n            _super.prototype.getOffset.call(this);\n            var legend_1 = this.chart.legend;\n            // Adds `maxLabelLength` needed for label padding corrections done\n            // by `render()` and `getMargins()` (#15551).\n            legend_1.allItems.forEach(function (item) {\n                if (item instanceof ColorAxis) {\n                    item.drawLegendSymbol(legend_1, item);\n                }\n            });\n            legend_1.render();\n            this.chart.getMargins(true);\n            // First time only\n            if (!axis.added) {\n                axis.added = true;\n                axis.labelLeft = 0;\n                axis.labelRight = axis.width;\n            }\n            // Reset it to avoid color axis reserving space\n            axis.chart.axisOffset[axis.side] = sideOffset;\n        }\n    };\n    /**\n     * Create the color gradient.\n     * @private\n     */\n    ColorAxis.prototype.setLegendColor = function () {\n        var axis = this;\n        var horiz = axis.horiz;\n        var reversed = axis.reversed;\n        var one = reversed ? 1 : 0;\n        var zero = reversed ? 0 : 1;\n        var grad = horiz ? [one, 0, zero, 0] : [0, zero, 0, one]; // #3190\n        axis.legendColor = {\n            linearGradient: {\n                x1: grad[0],\n                y1: grad[1],\n                x2: grad[2],\n                y2: grad[3]\n            },\n            stops: axis.stops\n        };\n    };\n    /**\n     * The color axis appears inside the legend and has its own legend symbol.\n     * @private\n     */\n    ColorAxis.prototype.drawLegendSymbol = function (legend, item) {\n        var axis = this, legendItem = item.legendItem || {}, padding = legend.padding, legendOptions = legend.options, itemDistance = pick(legendOptions.itemDistance, 10), horiz = axis.horiz, width = pick(legendOptions.symbolWidth, horiz ? ColorAxis.defaultLegendLength : 12), height = pick(legendOptions.symbolHeight, horiz ? 12 : ColorAxis.defaultLegendLength), labelPadding = pick(\n        // @todo: This option is not documented, nor implemented when\n        // vertical\n        legendOptions.labelPadding, horiz ? 16 : 30);\n        this.setLegendColor();\n        // Create the gradient\n        if (!legendItem.symbol) {\n            legendItem.symbol = this.chart.renderer.rect(0, legend.baseline - 11, width, height).attr({\n                zIndex: 1\n            }).add(legendItem.group);\n        }\n        // Set how much space this legend item takes up\n        legendItem.labelWidth = (width +\n            padding +\n            (horiz ?\n                itemDistance :\n                this.options.labels.x + this.maxLabelLength));\n        legendItem.labelHeight = height + padding + (horiz ? labelPadding : 0);\n    };\n    /**\n     * Fool the legend.\n     * @private\n     */\n    ColorAxis.prototype.setState = function (state) {\n        this.series.forEach(function (series) {\n            series.setState(state);\n        });\n    };\n    /**\n     * @private\n     */\n    ColorAxis.prototype.setVisible = function () {\n    };\n    /**\n     * @private\n     */\n    ColorAxis.prototype.getSeriesExtremes = function () {\n        var axis = this;\n        var series = axis.series;\n        var colorValArray, colorKey, colorValIndex, pointArrayMap, calculatedExtremes, cSeries, i = series.length, yData, j;\n        this.dataMin = Infinity;\n        this.dataMax = -Infinity;\n        while (i--) { // x, y, value, other\n            cSeries = series[i];\n            colorKey = cSeries.colorKey = pick(cSeries.options.colorKey, cSeries.colorKey, cSeries.pointValKey, cSeries.zoneAxis, 'y');\n            pointArrayMap = cSeries.pointArrayMap;\n            calculatedExtremes = cSeries[colorKey + 'Min'] &&\n                cSeries[colorKey + 'Max'];\n            if (cSeries[colorKey + 'Data']) {\n                colorValArray = cSeries[colorKey + 'Data'];\n            }\n            else {\n                if (!pointArrayMap) {\n                    colorValArray = cSeries.yData;\n                }\n                else {\n                    colorValArray = [];\n                    colorValIndex = pointArrayMap.indexOf(colorKey);\n                    yData = cSeries.yData;\n                    if (colorValIndex >= 0 && yData) {\n                        for (j = 0; j < yData.length; j++) {\n                            colorValArray.push(pick(yData[j][colorValIndex], yData[j]));\n                        }\n                    }\n                }\n            }\n            // If color key extremes are already calculated, use them.\n            if (calculatedExtremes) {\n                cSeries.minColorValue = cSeries[colorKey + 'Min'];\n                cSeries.maxColorValue = cSeries[colorKey + 'Max'];\n            }\n            else {\n                var cExtremes = Series.prototype.getExtremes.call(cSeries, colorValArray);\n                cSeries.minColorValue = cExtremes.dataMin;\n                cSeries.maxColorValue = cExtremes.dataMax;\n            }\n            if (typeof cSeries.minColorValue !== 'undefined') {\n                this.dataMin =\n                    Math.min(this.dataMin, cSeries.minColorValue);\n                this.dataMax =\n                    Math.max(this.dataMax, cSeries.maxColorValue);\n            }\n            if (!calculatedExtremes) {\n                Series.prototype.applyExtremes.call(cSeries);\n            }\n        }\n    };\n    /**\n     * Internal function to draw a crosshair.\n     *\n     * @function Highcharts.ColorAxis#drawCrosshair\n     *\n     * @param {Highcharts.PointerEventObject} [e]\n     *        The event arguments from the modified pointer event, extended with\n     *        `chartX` and `chartY`\n     *\n     * @param {Highcharts.Point} [point]\n     *        The Point object if the crosshair snaps to points.\n     *\n     * @emits Highcharts.ColorAxis#event:afterDrawCrosshair\n     * @emits Highcharts.ColorAxis#event:drawCrosshair\n     */\n    ColorAxis.prototype.drawCrosshair = function (e, point) {\n        var axis = this, legendItem = axis.legendItem || {}, plotX = point && point.plotX, plotY = point && point.plotY, axisPos = axis.pos, axisLen = axis.len;\n        var crossPos;\n        if (point) {\n            crossPos = axis.toPixels(point.getNestedProperty(point.series.colorKey));\n            if (crossPos < axisPos) {\n                crossPos = axisPos - 2;\n            }\n            else if (crossPos > axisPos + axisLen) {\n                crossPos = axisPos + axisLen + 2;\n            }\n            point.plotX = crossPos;\n            point.plotY = axis.len - crossPos;\n            _super.prototype.drawCrosshair.call(this, e, point);\n            point.plotX = plotX;\n            point.plotY = plotY;\n            if (axis.cross &&\n                !axis.cross.addedToColorAxis &&\n                legendItem.group) {\n                axis.cross\n                    .addClass('highcharts-coloraxis-marker')\n                    .add(legendItem.group);\n                axis.cross.addedToColorAxis = true;\n                if (!axis.chart.styledMode &&\n                    typeof axis.crosshair === 'object') {\n                    axis.cross.attr({\n                        fill: axis.crosshair.color\n                    });\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ColorAxis.prototype.getPlotLinePath = function (options) {\n        var axis = this, left = axis.left, pos = options.translatedValue, top = axis.top;\n        // crosshairs only\n        return isNumber(pos) ? // pos can be 0 (#3969)\n            (axis.horiz ? [\n                ['M', pos - 4, top - 6],\n                ['L', pos + 4, top - 6],\n                ['L', pos, top],\n                ['Z']\n            ] : [\n                ['M', left, pos],\n                ['L', left - 6, pos + 6],\n                ['L', left - 6, pos - 6],\n                ['Z']\n            ]) :\n            _super.prototype.getPlotLinePath.call(this, options);\n    };\n    /**\n     * Updates a color axis instance with a new set of options. The options are\n     * merged with the existing options, so only new or altered options need to\n     * be specified.\n     *\n     * @function Highcharts.ColorAxis#update\n     *\n     * @param {Highcharts.ColorAxisOptions} newOptions\n     * The new options that will be merged in with existing options on the color\n     * axis.\n     *\n     * @param {boolean} [redraw]\n     * Whether to redraw the chart after the color axis is altered. If doing\n     * more operations on the chart, it is a good idea to set redraw to `false`\n     * and call {@link Highcharts.Chart#redraw} after.\n     */\n    ColorAxis.prototype.update = function (newOptions, redraw) {\n        var axis = this, chart = axis.chart, legend = chart.legend;\n        this.series.forEach(function (series) {\n            // Needed for Axis.update when choropleth colors change\n            series.isDirtyData = true;\n        });\n        // When updating data classes, destroy old items and make sure new\n        // ones are created (#3207)\n        if (newOptions.dataClasses && legend.allItems || axis.dataClasses) {\n            axis.destroyItems();\n        }\n        _super.prototype.update.call(this, newOptions, redraw);\n        if (axis.legendItem && axis.legendItem.label) {\n            axis.setLegendColor();\n            legend.colorizeItem(this, true);\n        }\n    };\n    /**\n     * Destroy color axis legend items.\n     * @private\n     */\n    ColorAxis.prototype.destroyItems = function () {\n        var axis = this, chart = axis.chart, legendItem = axis.legendItem || {};\n        if (legendItem.label) {\n            chart.legend.destroyItem(axis);\n        }\n        else if (legendItem.labels) {\n            for (var _i = 0, _a = legendItem.labels; _i < _a.length; _i++) {\n                var item = _a[_i];\n                chart.legend.destroyItem(item);\n            }\n        }\n        chart.isDirtyLegend = true;\n    };\n    //   Removing the whole axis (#14283)\n    ColorAxis.prototype.destroy = function () {\n        this.chart.isDirtyLegend = true;\n        this.destroyItems();\n        _super.prototype.destroy.apply(this, [].slice.call(arguments));\n    };\n    /**\n     * Removes the color axis and the related legend item.\n     *\n     * @function Highcharts.ColorAxis#remove\n     *\n     * @param {boolean} [redraw=true]\n     *        Whether to redraw the chart following the remove.\n     */\n    ColorAxis.prototype.remove = function (redraw) {\n        this.destroyItems();\n        _super.prototype.remove.call(this, redraw);\n    };\n    /**\n     * Get the legend item symbols for data classes.\n     * @private\n     */\n    ColorAxis.prototype.getDataClassLegendSymbols = function () {\n        var axis = this, chart = axis.chart, legendItems = (axis.legendItem &&\n            axis.legendItem.labels ||\n            []), legendOptions = chart.options.legend, valueDecimals = pick(legendOptions.valueDecimals, -1), valueSuffix = pick(legendOptions.valueSuffix, '');\n        var getPointsInDataClass = function (i) {\n            return axis.series.reduce(function (points, s) {\n                points.push.apply(points, s.points.filter(function (point) {\n                    return point.dataClass === i;\n                }));\n                return points;\n            }, []);\n        };\n        var name;\n        if (!legendItems.length) {\n            axis.dataClasses.forEach(function (dataClass, i) {\n                var from = dataClass.from, to = dataClass.to, numberFormatter = chart.numberFormatter;\n                var vis = true;\n                // Assemble the default name. This can be overridden\n                // by legend.options.labelFormatter\n                name = '';\n                if (typeof from === 'undefined') {\n                    name = '< ';\n                }\n                else if (typeof to === 'undefined') {\n                    name = '> ';\n                }\n                if (typeof from !== 'undefined') {\n                    name += numberFormatter(from, valueDecimals) + valueSuffix;\n                }\n                if (typeof from !== 'undefined' && typeof to !== 'undefined') {\n                    name += ' - ';\n                }\n                if (typeof to !== 'undefined') {\n                    name += numberFormatter(to, valueDecimals) + valueSuffix;\n                }\n                // Add a mock object to the legend items\n                legendItems.push(extend({\n                    chart: chart,\n                    name: name,\n                    options: {},\n                    drawLegendSymbol: LegendSymbol.drawRectangle,\n                    visible: true,\n                    isDataClass: true,\n                    // Override setState to set either normal or inactive\n                    // state to all points in this data class\n                    setState: function (state) {\n                        for (var _i = 0, _a = getPointsInDataClass(i); _i < _a.length; _i++) {\n                            var point = _a[_i];\n                            point.setState(state);\n                        }\n                    },\n                    // Override setState to show or hide all points in this\n                    // data class\n                    setVisible: function () {\n                        this.visible = vis = axis.visible = !vis;\n                        for (var _i = 0, _a = getPointsInDataClass(i); _i < _a.length; _i++) {\n                            var point = _a[_i];\n                            point.setVisible(vis);\n                        }\n                        chart.legend.colorizeItem(this, vis);\n                    }\n                }, dataClass));\n            });\n        }\n        return legendItems;\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    ColorAxis.defaultColorAxisOptions = ColorAxisDefaults;\n    ColorAxis.defaultLegendLength = 200;\n    /**\n     * @private\n     */\n    ColorAxis.keepProps = [\n        'legendItem'\n    ];\n    return ColorAxis;\n}(Axis));\n/* *\n *\n *  Registry\n *\n * */\n// Properties to preserve after destroy, for Axis.update (#5881, #6025).\nArray.prototype.push.apply(Axis.keepProps, ColorAxis.keepProps);\n/* *\n *\n *  Default Export\n *\n * */\nexport default ColorAxis;\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * Color axis types\n *\n * @typedef {\"linear\"|\"logarithmic\"} Highcharts.ColorAxisTypeValue\n */\n''; // detach doclet above\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport SeriesRegistry from '../Core/Series/SeriesRegistry.js';\nvar columnProto = SeriesRegistry.seriesTypes.column.prototype;\nimport U from '../Core/Utilities.js';\nvar addEvent = U.addEvent, defined = U.defined;\n/* *\n *\n *  Composition\n *\n * */\nvar ColorMapComposition;\n(function (ColorMapComposition) {\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    var composedClasses = [];\n    ColorMapComposition.pointMembers = {\n        dataLabelOnNull: true,\n        moveToTopOnHover: true,\n        isValid: pointIsValid\n    };\n    ColorMapComposition.seriesMembers = {\n        colorKey: 'value',\n        axisTypes: ['xAxis', 'yAxis', 'colorAxis'],\n        parallelArrays: ['x', 'y', 'value'],\n        pointArrayMap: ['value'],\n        trackerGroups: ['group', 'markerGroup', 'dataLabelsGroup'],\n        colorAttribs: seriesColorAttribs,\n        pointAttribs: columnProto.pointAttribs\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    function compose(SeriesClass) {\n        var PointClass = SeriesClass.prototype.pointClass;\n        if (composedClasses.indexOf(PointClass) === -1) {\n            composedClasses.push(PointClass);\n            addEvent(PointClass, 'afterSetState', onPointAfterSetState);\n        }\n        return SeriesClass;\n    }\n    ColorMapComposition.compose = compose;\n    /**\n     * Move points to the top of the z-index order when hovered.\n     * @private\n     */\n    function onPointAfterSetState(e) {\n        var point = this;\n        if (point.moveToTopOnHover && point.graphic) {\n            point.graphic.attr({\n                zIndex: e && e.state === 'hover' ? 1 : 0\n            });\n        }\n    }\n    /**\n     * Color points have a value option that determines whether or not it is\n     * a null point\n     * @private\n     */\n    function pointIsValid() {\n        return (this.value !== null &&\n            this.value !== Infinity &&\n            this.value !== -Infinity &&\n            // undefined is allowed, but NaN is not (#17279)\n            (this.value === void 0 || !isNaN(this.value)));\n    }\n    /**\n     * Get the color attibutes to apply on the graphic\n     * @private\n     * @function Highcharts.colorMapSeriesMixin.colorAttribs\n     * @param {Highcharts.Point} point\n     * @return {Highcharts.SVGAttributes}\n     *         The SVG attributes\n     */\n    function seriesColorAttribs(point) {\n        var ret = {};\n        if (defined(point.color) &&\n            (!point.state || point.state === 'normal') // #15746\n        ) {\n            ret[this.colorProp || 'fill'] = point.color;\n        }\n        return ret;\n    }\n})(ColorMapComposition || (ColorMapComposition = {}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default ColorMapComposition;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar ScatterPoint = SeriesRegistry.seriesTypes.scatter.prototype.pointClass;\nimport U from '../../Core/Utilities.js';\nvar clamp = U.clamp, defined = U.defined, extend = U.extend, pick = U.pick;\n/* *\n *\n *  Class\n *\n * */\nvar HeatmapPoint = /** @class */ (function (_super) {\n    __extends(HeatmapPoint, _super);\n    function HeatmapPoint() {\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.options = void 0;\n        _this.series = void 0;\n        _this.value = void 0;\n        _this.x = void 0;\n        _this.y = void 0;\n        return _this;\n        /* eslint-enable valid-jsdoc */\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * @private\n     */\n    HeatmapPoint.prototype.applyOptions = function (options, x) {\n        // #17970, if point is null remove its color, because it may be updated\n        if (this.isNull || this.value === null) {\n            delete this.color;\n        }\n        _super.prototype.applyOptions.call(this, options, x);\n        this.formatPrefix = this.isNull || this.value === null ?\n            'null' : 'point';\n        return this;\n    };\n    HeatmapPoint.prototype.getCellAttributes = function () {\n        var point = this, series = point.series, seriesOptions = series.options, xPad = (seriesOptions.colsize || 1) / 2, yPad = (seriesOptions.rowsize || 1) / 2, xAxis = series.xAxis, yAxis = series.yAxis, markerOptions = point.options.marker || series.options.marker, pointPlacement = series.pointPlacementToXValue(), // #7860\n        pointPadding = pick(point.pointPadding, seriesOptions.pointPadding, 0), cellAttr = {\n            x1: clamp(Math.round(xAxis.len -\n                xAxis.translate(point.x - xPad, false, true, false, true, -pointPlacement)), -xAxis.len, 2 * xAxis.len),\n            x2: clamp(Math.round(xAxis.len -\n                xAxis.translate(point.x + xPad, false, true, false, true, -pointPlacement)), -xAxis.len, 2 * xAxis.len),\n            y1: clamp(Math.round(yAxis.translate(point.y - yPad, false, true, false, true)), -yAxis.len, 2 * yAxis.len),\n            y2: clamp(Math.round(yAxis.translate(point.y + yPad, false, true, false, true)), -yAxis.len, 2 * yAxis.len)\n        };\n        var dimensions = [['width', 'x'], ['height', 'y']];\n        // Handle marker's fixed width, and height values including border\n        // and pointPadding while calculating cell attributes.\n        dimensions.forEach(function (dimension) {\n            var prop = dimension[0], direction = dimension[1];\n            var start = direction + '1', end = direction + '2';\n            var side = Math.abs(cellAttr[start] - cellAttr[end]), borderWidth = markerOptions &&\n                markerOptions.lineWidth || 0, plotPos = Math.abs(cellAttr[start] + cellAttr[end]) / 2, widthOrHeight = markerOptions && markerOptions[prop];\n            if (defined(widthOrHeight) && widthOrHeight < side) {\n                var halfCellSize = widthOrHeight / 2 + borderWidth / 2;\n                cellAttr[start] = plotPos - halfCellSize;\n                cellAttr[end] = plotPos + halfCellSize;\n            }\n            // Handle pointPadding\n            if (pointPadding) {\n                if (direction === 'y') {\n                    start = end;\n                    end = direction + '1';\n                }\n                cellAttr[start] += pointPadding;\n                cellAttr[end] -= pointPadding;\n            }\n        });\n        return cellAttr;\n    };\n    /**\n     * @private\n     */\n    HeatmapPoint.prototype.haloPath = function (size) {\n        if (!size) {\n            return [];\n        }\n        var _a = this.shapeArgs || {}, _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c, _d = _a.width, width = _d === void 0 ? 0 : _d, _e = _a.height, height = _e === void 0 ? 0 : _e;\n        return [\n            ['M', x - size, y - size],\n            ['L', x - size, y + height + size],\n            ['L', x + width + size, y + height + size],\n            ['L', x + width + size, y - size],\n            ['Z']\n        ];\n    };\n    /**\n     * Color points have a value option that determines whether or not it is\n     * a null point\n     * @private\n     */\n    HeatmapPoint.prototype.isValid = function () {\n        // undefined is allowed\n        return (this.value !== Infinity &&\n            this.value !== -Infinity);\n    };\n    return HeatmapPoint;\n}(ScatterPoint));\nextend(HeatmapPoint.prototype, {\n    dataLabelOnNull: true,\n    moveToTopOnHover: true,\n    ttBelow: false\n});\n/* *\n *\n *  Default Export\n *\n * */\nexport default HeatmapPoint;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Color from '../../Core/Color/Color.js';\nimport ColorMapComposition from '../ColorMapComposition.js';\nimport HeatmapPoint from './HeatmapPoint.js';\nimport LegendSymbol from '../../Core/Legend/LegendSymbol.js';\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar Series = SeriesRegistry.series, _a = SeriesRegistry.seriesTypes, ColumnSeries = _a.column, ScatterSeries = _a.scatter;\nimport SVGRenderer from '../../Core/Renderer/SVG/SVGRenderer.js';\nvar symbols = SVGRenderer.prototype.symbols;\nimport U from '../../Core/Utilities.js';\nvar extend = U.extend, fireEvent = U.fireEvent, isNumber = U.isNumber, merge = U.merge, pick = U.pick;\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n * @class\n * @name Highcharts.seriesTypes.heatmap\n *\n * @augments Highcharts.Series\n */\nvar HeatmapSeries = /** @class */ (function (_super) {\n    __extends(HeatmapSeries, _super);\n    function HeatmapSeries() {\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.colorAxis = void 0;\n        _this.data = void 0;\n        _this.options = void 0;\n        _this.points = void 0;\n        _this.valueMax = NaN;\n        _this.valueMin = NaN;\n        return _this;\n        /* eslint-enable valid-jsdoc */\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * @private\n     */\n    HeatmapSeries.prototype.drawPoints = function () {\n        var _this = this;\n        // In styled mode, use CSS, otherwise the fill used in the style sheet\n        // will take precedence over the fill attribute.\n        var seriesMarkerOptions = this.options.marker || {};\n        if (seriesMarkerOptions.enabled || this._hasPointMarkers) {\n            Series.prototype.drawPoints.call(this);\n            this.points.forEach(function (point) {\n                if (point.graphic) {\n                    point.graphic[_this.chart.styledMode ? 'css' : 'animate'](_this.colorAttribs(point));\n                    if (point.value === null) { // #15708\n                        point.graphic.addClass('highcharts-null-point');\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @private\n     */\n    HeatmapSeries.prototype.getExtremes = function () {\n        // Get the extremes from the value data\n        var _a = Series.prototype.getExtremes\n            .call(this, this.valueData), dataMin = _a.dataMin, dataMax = _a.dataMax;\n        if (isNumber(dataMin)) {\n            this.valueMin = dataMin;\n        }\n        if (isNumber(dataMax)) {\n            this.valueMax = dataMax;\n        }\n        // Get the extremes from the y data\n        return Series.prototype.getExtremes.call(this);\n    };\n    /**\n     * Override to also allow null points, used when building the k-d-tree for\n     * tooltips in boost mode.\n     * @private\n     */\n    HeatmapSeries.prototype.getValidPoints = function (points, insideOnly) {\n        return Series.prototype.getValidPoints.call(this, points, insideOnly, true);\n    };\n    /**\n     * Define hasData function for non-cartesian series. Returns true if the\n     * series has points at all.\n     * @private\n     */\n    HeatmapSeries.prototype.hasData = function () {\n        return !!this.processedXData.length; // != 0\n    };\n    /**\n     * Override the init method to add point ranges on both axes.\n     * @private\n     */\n    HeatmapSeries.prototype.init = function () {\n        _super.prototype.init.apply(this, arguments);\n        var options = this.options;\n        // #3758, prevent resetting in setData\n        options.pointRange = pick(options.pointRange, options.colsize || 1);\n        // general point range\n        this.yAxis.axisPointRange = options.rowsize || 1;\n        // Bind new symbol names\n        symbols.ellipse = symbols.circle;\n        // @todo\n        //\n        // Setting the border radius here is a workaround. It should be set in\n        // the shapeArgs or returned from `markerAttribs`. However,\n        // Series.drawPoints does not pick up markerAttribs to be passed over to\n        // `renderer.symbol`. Also, image symbols are not positioned by their\n        // top left corner like other symbols are. This should be refactored,\n        // then we could save ourselves some tests for .hasImage etc. And the\n        // evaluation of borderRadius would be moved to `markerAttribs`.\n        if (options.marker) {\n            options.marker.r = options.borderRadius;\n        }\n    };\n    /**\n     * @private\n     */\n    HeatmapSeries.prototype.markerAttribs = function (point, state) {\n        var shapeArgs = point.shapeArgs || {};\n        if (point.hasImage) {\n            return {\n                x: point.plotX,\n                y: point.plotY\n            };\n        }\n        // Setting width and height attributes on image does not affect on its\n        // dimensions.\n        if (state && state !== 'normal') {\n            var pointMarkerOptions = point.options.marker || {}, seriesMarkerOptions = this.options.marker || {}, seriesStateOptions = (seriesMarkerOptions.states &&\n                seriesMarkerOptions.states[state]) || {}, pointStateOptions = (pointMarkerOptions.states &&\n                pointMarkerOptions.states[state]) || {};\n            // Set new width and height basing on state options.\n            var width = (pointStateOptions.width ||\n                seriesStateOptions.width ||\n                shapeArgs.width ||\n                0) + (pointStateOptions.widthPlus ||\n                seriesStateOptions.widthPlus ||\n                0);\n            var height = (pointStateOptions.height ||\n                seriesStateOptions.height ||\n                shapeArgs.height ||\n                0) + (pointStateOptions.heightPlus ||\n                seriesStateOptions.heightPlus ||\n                0);\n            // Align marker by the new size.\n            var x = (shapeArgs.x || 0) + ((shapeArgs.width || 0) - width) / 2, y = (shapeArgs.y || 0) + ((shapeArgs.height || 0) - height) / 2;\n            return { x: x, y: y, width: width, height: height };\n        }\n        return shapeArgs;\n    };\n    /**\n     * @private\n     */\n    HeatmapSeries.prototype.pointAttribs = function (point, state) {\n        var series = this, attr = Series.prototype.pointAttribs.call(series, point, state), seriesOptions = series.options || {}, plotOptions = series.chart.options.plotOptions || {}, seriesPlotOptions = plotOptions.series || {}, heatmapPlotOptions = plotOptions.heatmap || {}, \n        // Get old properties in order to keep backward compatibility\n        borderColor = (point && point.options.borderColor) ||\n            seriesOptions.borderColor ||\n            heatmapPlotOptions.borderColor ||\n            seriesPlotOptions.borderColor, borderWidth = (point && point.options.borderWidth) ||\n            seriesOptions.borderWidth ||\n            heatmapPlotOptions.borderWidth ||\n            seriesPlotOptions.borderWidth ||\n            attr['stroke-width'];\n        // Apply lineColor, or set it to default series color.\n        attr.stroke = ((point && point.marker && point.marker.lineColor) ||\n            (seriesOptions.marker && seriesOptions.marker.lineColor) ||\n            borderColor ||\n            this.color);\n        // Apply old borderWidth property if exists.\n        attr['stroke-width'] = borderWidth;\n        if (state && state !== 'normal') {\n            var stateOptions = merge((seriesOptions.states &&\n                seriesOptions.states[state]), (seriesOptions.marker &&\n                seriesOptions.marker.states &&\n                seriesOptions.marker.states[state]), (point &&\n                point.options.states &&\n                point.options.states[state] || {}));\n            attr.fill =\n                stateOptions.color ||\n                    Color.parse(attr.fill).brighten(stateOptions.brightness || 0).get();\n            attr.stroke = (stateOptions.lineColor || attr.stroke); // #17896\n        }\n        return attr;\n    };\n    /**\n     * @private\n     */\n    HeatmapSeries.prototype.translate = function () {\n        var series = this, options = series.options, symbol = options.marker && options.marker.symbol || 'rect', shape = symbols[symbol] ? symbol : 'rect', hasRegularShape = ['circle', 'square'].indexOf(shape) !== -1;\n        series.generatePoints();\n        series.points.forEach(function (point) {\n            var cellAttr = point.getCellAttributes();\n            var x = Math.min(cellAttr.x1, cellAttr.x2), y = Math.min(cellAttr.y1, cellAttr.y2), width = Math.max(Math.abs(cellAttr.x2 - cellAttr.x1), 0), height = Math.max(Math.abs(cellAttr.y2 - cellAttr.y1), 0);\n            point.hasImage = (point.marker && point.marker.symbol || symbol || '').indexOf('url') === 0;\n            // If marker shape is regular (square), find the shorter cell's\n            // side.\n            if (hasRegularShape) {\n                var sizeDiff = Math.abs(width - height);\n                x = Math.min(cellAttr.x1, cellAttr.x2) +\n                    (width < height ? 0 : sizeDiff / 2);\n                y = Math.min(cellAttr.y1, cellAttr.y2) +\n                    (width < height ? sizeDiff / 2 : 0);\n                width = height = Math.min(width, height);\n            }\n            if (point.hasImage) {\n                point.marker = { width: width, height: height };\n            }\n            point.plotX = point.clientX = (cellAttr.x1 + cellAttr.x2) / 2;\n            point.plotY = (cellAttr.y1 + cellAttr.y2) / 2;\n            point.shapeType = 'path';\n            point.shapeArgs = merge(true, { x: x, y: y, width: width, height: height }, {\n                d: symbols[shape](x, y, width, height, { r: options.borderRadius })\n            });\n        });\n        fireEvent(series, 'afterTranslate');\n    };\n    /**\n     * A heatmap is a graphical representation of data where the individual\n     * values contained in a matrix are represented as colors.\n     *\n     * @productdesc {highcharts}\n     * Requires `modules/heatmap`.\n     *\n     * @sample highcharts/demo/heatmap/\n     *         Simple heatmap\n     * @sample highcharts/demo/heatmap-canvas/\n     *         Heavy heatmap\n     *\n     * @extends      plotOptions.scatter\n     * @excluding    animationLimit, connectEnds, connectNulls, cropThreshold,\n     *               dashStyle, findNearestPointBy, getExtremesFromAll, jitter,\n     *               linecap, lineWidth, pointInterval, pointIntervalUnit,\n     *               pointRange, pointStart, shadow, softThreshold, stacking,\n     *               step, threshold, cluster\n     * @product      highcharts highmaps\n     * @optionparent plotOptions.heatmap\n     */\n    HeatmapSeries.defaultOptions = merge(ScatterSeries.defaultOptions, {\n        /**\n         * Animation is disabled by default on the heatmap series.\n         */\n        animation: false,\n        /**\n         * The border radius for each heatmap item. The border's color and\n         * width can be set in marker options.\n         *\n         * @see [lineColor](#plotOptions.heatmap.marker.lineColor)\n         * @see [lineWidth](#plotOptions.heatmap.marker.lineWidth)\n         */\n        borderRadius: 0,\n        /**\n         * The border width for each heatmap item.\n         */\n        borderWidth: 0,\n        /**\n         * Padding between the points in the heatmap.\n         *\n         * @type      {number}\n         * @default   0\n         * @since     6.0\n         * @apioption plotOptions.heatmap.pointPadding\n         */\n        /**\n         * @default   value\n         * @apioption plotOptions.heatmap.colorKey\n         */\n        /**\n         * The main color of the series. In heat maps this color is rarely used,\n         * as we mostly use the color to denote the value of each point. Unless\n         * options are set in the [colorAxis](#colorAxis), the default value\n         * is pulled from the [options.colors](#colors) array.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @since     4.0\n         * @product   highcharts\n         * @apioption plotOptions.heatmap.color\n         */\n        /**\n         * The column size - how many X axis units each column in the heatmap\n         * should span.\n         *\n         * @sample {highcharts} maps/demo/heatmap/\n         *         One day\n         * @sample {highmaps} maps/demo/heatmap/\n         *         One day\n         *\n         * @type      {number}\n         * @default   1\n         * @since     4.0\n         * @product   highcharts highmaps\n         * @apioption plotOptions.heatmap.colsize\n         */\n        /**\n         * The row size - how many Y axis units each heatmap row should span.\n         *\n         * @sample {highcharts} maps/demo/heatmap/\n         *         1 by default\n         * @sample {highmaps} maps/demo/heatmap/\n         *         1 by default\n         *\n         * @type      {number}\n         * @default   1\n         * @since     4.0\n         * @product   highcharts highmaps\n         * @apioption plotOptions.heatmap.rowsize\n         */\n        /**\n         * The color applied to null points. In styled mode, a general CSS class\n         * is applied instead.\n         *\n         * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         */\n        nullColor: \"#f7f7f7\" /* Palette.neutralColor3 */,\n        dataLabels: {\n            formatter: function () {\n                var numberFormatter = this.series.chart.numberFormatter;\n                var value = this.point.value;\n                return isNumber(value) ? numberFormatter(value, -1) : '';\n            },\n            inside: true,\n            verticalAlign: 'middle',\n            crop: false,\n            /**\n             * @ignore-option\n             */\n            overflow: 'allow',\n            padding: 0 // #3837\n        },\n        /**\n         * @excluding radius, enabledThreshold\n         * @since     8.1\n         */\n        marker: {\n            /**\n             * A predefined shape or symbol for the marker. When undefined, the\n             * symbol is pulled from options.symbols. Other possible values are\n             * `'circle'`, `'square'`,`'diamond'`, `'triangle'`,\n             * `'triangle-down'`, `'rect'`, and `'ellipse'`.\n             *\n             * Additionally, the URL to a graphic can be given on this form:\n             * `'url(graphic.png)'`. Note that for the image to be applied to\n             * exported charts, its URL needs to be accessible by the export\n             * server.\n             *\n             * Custom callbacks for symbol path generation can also be added to\n             * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n             * used by its method name, as shown in the demo.\n             *\n             * @sample {highcharts} highcharts/plotoptions/series-marker-symbol/\n             *         Predefined, graphic and custom markers\n             * @sample {highstock} highcharts/plotoptions/series-marker-symbol/\n             *         Predefined, graphic and custom markers\n             */\n            symbol: 'rect',\n            /** @ignore-option */\n            radius: 0,\n            lineColor: void 0,\n            states: {\n                /**\n                 * @excluding radius, radiusPlus\n                 */\n                hover: {\n                    /**\n                     * Set the marker's fixed width on hover state.\n                     *\n                     * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n                     *         70px fixed marker's width and height on hover\n                     *\n                     * @type      {number|undefined}\n                     * @default   undefined\n                     * @product   highcharts highmaps\n                     * @apioption plotOptions.heatmap.marker.states.hover.width\n                     */\n                    /**\n                     * Set the marker's fixed height on hover state.\n                     *\n                     * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n                     *         70px fixed marker's width and height on hover\n                     *\n                     * @type      {number|undefined}\n                     * @default   undefined\n                     * @product   highcharts highmaps\n                     * @apioption plotOptions.heatmap.marker.states.hover.height\n                     */\n                    /**\n                     * The number of pixels to increase the width of the\n                     * selected point.\n                     *\n                     * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n                     *         20px greater width and height on hover\n                     *\n                     * @type      {number|undefined}\n                     * @default   undefined\n                     * @product   highcharts highmaps\n                     * @apioption plotOptions.heatmap.marker.states.hover.widthPlus\n                     */\n                    /**\n                     * The number of pixels to increase the height of the\n                     * selected point.\n                     *\n                     * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n                    *          20px greater width and height on hover\n                     *\n                     * @type      {number|undefined}\n                     * @default   undefined\n                     * @product   highcharts highmaps\n                     * @apioption plotOptions.heatmap.marker.states.hover.heightPlus\n                     */\n                    /**\n                     * The additional line width for a hovered point.\n                     *\n                     * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-linewidthplus\n                     *         5 pixels wider lineWidth on hover\n                     * @sample {highmaps} maps/plotoptions/heatmap-marker-states-hover-linewidthplus\n                     *         5 pixels wider lineWidth on hover\n                     */\n                    lineWidthPlus: 0\n                },\n                /**\n                 * @excluding radius\n                 */\n                select: {\n                /**\n                 * Set the marker's fixed width on select state.\n                 *\n                 * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n                 *         70px fixed marker's width and height on hover\n                 *\n                 * @type      {number|undefined}\n                 * @default   undefined\n                 * @product   highcharts highmaps\n                 * @apioption plotOptions.heatmap.marker.states.select.width\n                 */\n                /**\n                 * Set the marker's fixed height on select state.\n                 *\n                 * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n                 *         70px fixed marker's width and height on hover\n                 *\n                 * @type      {number|undefined}\n                 * @default   undefined\n                 * @product   highcharts highmaps\n                 * @apioption plotOptions.heatmap.marker.states.select.height\n                 */\n                /**\n                 * The number of pixels to increase the width of the\n                 * selected point.\n                 *\n                 * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n                 *         20px greater width and height on hover\n                 *\n                 * @type      {number|undefined}\n                 * @default   undefined\n                 * @product   highcharts highmaps\n                 * @apioption plotOptions.heatmap.marker.states.select.widthPlus\n                 */\n                /**\n                 * The number of pixels to increase the height of the\n                 * selected point.\n                 *\n                 * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n                 *         20px greater width and height on hover\n                 *\n                 * @type      {number|undefined}\n                 * @default   undefined\n                 * @product   highcharts highmaps\n                 * @apioption plotOptions.heatmap.marker.states.select.heightPlus\n                 */\n                }\n            }\n        },\n        clip: true,\n        /** @ignore-option */\n        pointRange: null,\n        tooltip: {\n            pointFormat: '{point.x}, {point.y}: {point.value}<br/>'\n        },\n        states: {\n            hover: {\n                /** @ignore-option */\n                halo: false,\n                /**\n                 * How much to brighten the point on interaction. Requires the\n                 * main color to be defined in hex or rgb(a) format.\n                 *\n                 * In styled mode, the hover brightening is by default replaced\n                 * with a fill-opacity set in the `.highcharts-point:hover`\n                 * rule.\n                 */\n                brightness: 0.2\n            }\n        }\n    });\n    return HeatmapSeries;\n}(ScatterSeries));\nextend(HeatmapSeries.prototype, {\n    axisTypes: ColorMapComposition.seriesMembers.axisTypes,\n    colorKey: ColorMapComposition.seriesMembers.colorKey,\n    directTouch: true,\n    getExtremesFromAll: true,\n    parallelArrays: ColorMapComposition.seriesMembers.parallelArrays,\n    pointArrayMap: ['y', 'value'],\n    pointClass: HeatmapPoint,\n    specialGroup: 'group',\n    trackerGroups: ColorMapComposition.seriesMembers.trackerGroups,\n    /**\n     * @private\n     */\n    alignDataLabel: ColumnSeries.prototype.alignDataLabel,\n    colorAttribs: ColorMapComposition.seriesMembers.colorAttribs,\n    /**\n     * @private\n     */\n    drawLegendSymbol: LegendSymbol.drawRectangle,\n    getSymbol: Series.prototype.getSymbol\n});\nColorMapComposition.compose(HeatmapSeries);\nSeriesRegistry.registerSeriesType('heatmap', HeatmapSeries);\n/* *\n *\n *  Default Export\n *\n * */\nexport default HeatmapSeries;\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * Heatmap series only. Padding between the points in the heatmap.\n * @name Highcharts.Point#pointPadding\n * @type {number|undefined}\n */\n/**\n * Heatmap series only. The value of the point, resulting in a color\n * controled by options as set in the colorAxis configuration.\n * @name Highcharts.Point#value\n * @type {number|null|undefined}\n */\n/* *\n * @interface Highcharts.PointOptionsObject in parts/Point.ts\n */ /**\n* Heatmap series only. Point padding for a single point.\n* @name Highcharts.PointOptionsObject#pointPadding\n* @type {number|undefined}\n*/ /**\n* Heatmap series only. The value of the point, resulting in a color controled\n* by options as set in the colorAxis configuration.\n* @name Highcharts.PointOptionsObject#value\n* @type {number|null|undefined}\n*/\n''; // detach doclets above\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A `heatmap` series. If the [type](#series.heatmap.type) option is\n * not specified, it is inherited from [chart.type](#chart.type).\n *\n * @productdesc {highcharts}\n * Requires `modules/heatmap`.\n *\n * @extends   series,plotOptions.heatmap\n * @excluding cropThreshold, dataParser, dataURL, pointRange, stack,\n * @product   highcharts highmaps\n * @apioption series.heatmap\n */\n/**\n * An array of data points for the series. For the `heatmap` series\n * type, points can be given in the following ways:\n *\n * 1.  An array of arrays with 3 or 2 values. In this case, the values\n * correspond to `x,y,value`. If the first value is a string, it is\n * applied as the name of the point, and the `x` value is inferred.\n * The `x` value can also be omitted, in which case the inner arrays\n * should be of length 2\\. Then the `x` value is automatically calculated,\n * either starting at 0 and incremented by 1, or from `pointStart`\n * and `pointInterval` given in the series options.\n *\n *  ```js\n *     data: [\n *         [0, 9, 7],\n *         [1, 10, 4],\n *         [2, 6, 3]\n *     ]\n *  ```\n *\n * 2.  An array of objects with named values. The following snippet shows only a\n * few settings, see the complete options set below. If the total number of data\n * points exceeds the series' [turboThreshold](#series.heatmap.turboThreshold),\n * this option is not available.\n *\n *  ```js\n *     data: [{\n *         x: 1,\n *         y: 3,\n *         value: 10,\n *         name: \"Point2\",\n *         color: \"#00FF00\"\n *     }, {\n *         x: 1,\n *         y: 7,\n *         value: 10,\n *         name: \"Point1\",\n *         color: \"#FF00FF\"\n *     }]\n *  ```\n *\n * @sample {highcharts} highcharts/chart/reflow-true/\n *         Numerical values\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<Array<number>|*>}\n * @extends   series.line.data\n * @product   highcharts highmaps\n * @apioption series.heatmap.data\n */\n/**\n * The color of the point. In heat maps the point color is rarely set\n * explicitly, as we use the color to denote the `value`. Options for\n * this are set in the [colorAxis](#colorAxis) configuration.\n *\n * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n * @product   highcharts highmaps\n * @apioption series.heatmap.data.color\n */\n/**\n * The value of the point, resulting in a color controled by options\n * as set in the [colorAxis](#colorAxis) configuration.\n *\n * @type      {number}\n * @product   highcharts highmaps\n * @apioption series.heatmap.data.value\n */\n/**\n * The x value of the point. For datetime axes,\n * the X value is the timestamp in milliseconds since 1970.\n *\n * @type      {number}\n * @product   highcharts highmaps\n * @apioption series.heatmap.data.x\n */\n/**\n * The y value of the point.\n *\n * @type      {number}\n * @product   highcharts highmaps\n * @apioption series.heatmap.data.y\n */\n/**\n * Point padding for a single point.\n *\n * @sample maps/plotoptions/tilemap-pointpadding\n *         Point padding on tiles\n *\n * @type      {number}\n * @product   highcharts highmaps\n * @apioption series.heatmap.data.pointPadding\n */\n/**\n * @excluding radius, enabledThreshold\n * @product   highcharts highmaps\n * @since     8.1\n * @apioption series.heatmap.data.marker\n */\n/**\n * @excluding radius, enabledThreshold\n * @product   highcharts highmaps\n * @since     8.1\n * @apioption series.heatmap.marker\n */\n/**\n * @excluding radius, radiusPlus\n * @product   highcharts highmaps\n * @apioption series.heatmap.marker.states.hover\n */\n/**\n * @excluding radius\n * @product   highcharts highmaps\n * @apioption series.heatmap.marker.states.select\n */\n/**\n * @excluding radius, radiusPlus\n * @product   highcharts highmaps\n * @apioption series.heatmap.data.marker.states.hover\n */\n/**\n * @excluding radius\n * @product   highcharts highmaps\n * @apioption series.heatmap.data.marker.states.select\n */\n/**\n* Set the marker's fixed width on hover state.\n*\n* @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-linewidthplus\n*         5 pixels wider lineWidth on hover\n*\n* @type      {number|undefined}\n* @default   0\n* @product   highcharts highmaps\n* @apioption series.heatmap.marker.states.hover.lineWidthPlus\n*/\n/**\n* Set the marker's fixed width on hover state.\n*\n* @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n*         70px fixed marker's width and height on hover\n*\n* @type      {number|undefined}\n* @default   undefined\n* @product   highcharts highmaps\n* @apioption series.heatmap.marker.states.hover.width\n*/\n/**\n * Set the marker's fixed height on hover state.\n *\n * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n *         70px fixed marker's width and height on hover\n *\n * @type      {number|undefined}\n * @default   undefined\n * @product   highcharts highmaps\n * @apioption series.heatmap.marker.states.hover.height\n */\n/**\n* The number of pixels to increase the width of the\n* hovered point.\n*\n* @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n*         One day\n*\n* @type      {number|undefined}\n* @default   undefined\n* @product   highcharts highmaps\n* @apioption series.heatmap.marker.states.hover.widthPlus\n*/\n/**\n * The number of pixels to increase the height of the\n * hovered point.\n *\n * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n *         One day\n *\n * @type      {number|undefined}\n * @default   undefined\n * @product   highcharts highmaps\n * @apioption series.heatmap.marker.states.hover.heightPlus\n */\n/**\n * The number of pixels to increase the width of the\n * hovered point.\n *\n * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n *         One day\n *\n * @type      {number|undefined}\n * @default   undefined\n * @product   highcharts highmaps\n * @apioption series.heatmap.marker.states.select.widthPlus\n */\n/**\n * The number of pixels to increase the height of the\n * hovered point.\n *\n * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n *         One day\n *\n * @type      {number|undefined}\n * @default   undefined\n * @product   highcharts highmaps\n * @apioption series.heatmap.marker.states.select.heightPlus\n */\n/**\n* Set the marker's fixed width on hover state.\n*\n* @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-linewidthplus\n*         5 pixels wider lineWidth on hover\n*\n* @type      {number|undefined}\n* @default   0\n* @product   highcharts highmaps\n* @apioption series.heatmap.data.marker.states.hover.lineWidthPlus\n*/\n/**\n * Set the marker's fixed width on hover state.\n *\n * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n *         70px fixed marker's width and height on hover\n *\n * @type      {number|undefined}\n * @default   undefined\n * @product   highcharts highmaps\n * @apioption series.heatmap.data.marker.states.hover.width\n */\n/**\n * Set the marker's fixed height on hover state.\n *\n * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n *         70px fixed marker's width and height on hover\n *\n * @type      {number|undefined}\n * @default   undefined\n * @product   highcharts highmaps\n * @apioption series.heatmap.data.marker.states.hover.height\n */\n/**\n * The number of pixels to increase the width of the\n * hovered point.\n *\n * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n *         One day\n *\n * @type      {number|undefined}\n * @default   undefined\n * @product   highcharts highstock\n * @apioption series.heatmap.data.marker.states.hover.widthPlus\n */\n/**\n * The number of pixels to increase the height of the\n * hovered point.\n *\n * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n *         One day\n *\n * @type      {number|undefined}\n * @default   undefined\n * @product   highcharts highstock\n * @apioption series.heatmap.data.marker.states.hover.heightPlus\n */\n/**\n* Set the marker's fixed width on select state.\n*\n* @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n*         70px fixed marker's width and height on hover\n*\n* @type      {number|undefined}\n* @default   undefined\n* @product   highcharts highmaps\n* @apioption series.heatmap.data.marker.states.select.width\n*/\n/**\n * Set the marker's fixed height on select state.\n *\n * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n *         70px fixed marker's width and height on hover\n *\n * @type      {number|undefined}\n * @default   undefined\n * @product   highcharts highmaps\n * @apioption series.heatmap.data.marker.states.select.height\n */\n/**\n * The number of pixels to increase the width of the\n * hovered point.\n *\n * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n *         One day\n *\n * @type      {number|undefined}\n * @default   undefined\n * @product   highcharts highstock\n * @apioption series.heatmap.data.marker.states.select.widthPlus\n */\n/**\n * The number of pixels to increase the height of the\n * hovered point.\n *\n * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n *         One day\n *\n * @type      {number|undefined}\n * @default   undefined\n * @product   highcharts highstock\n * @apioption series.heatmap.data.marker.states.select.heightPlus\n */\n''; // adds doclets above to transpiled file\n"],"x_google_ignoreList":[0,1,2,3,4,5]}