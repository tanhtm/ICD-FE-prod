{"version":3,"file":"683.e5e7ca76eccc5287.js","mappings":"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","names":["RendererRegistry","defaultRenderer","rendererTypes","getRendererType","rendererType","registerRendererType","rendererClass","setAsDefault","H","AnnotationChart","addEvent","U","erase","find","fireEvent","pick","wrap","composedClasses","chartAddAnnotation","userOptions","redraw","annotation","this","initAnnotation","options","annotations","push","graphic","attr","opacity","chartCallback","chart","plotBoxClip","renderer","clipRect","plotBox","controlPointsGroup","g","zIndex","clip","add","forEach","annotationOptions","i","some","drawAnnotations","destroy","event","csvColumnHeaderFormatter","exporting","csv","columnHeaderFormatter","multiLevelHeaders","dataRows","xValues","annotationHeader","lang","exportData","startRowLength","length","annotationSeparator","itemDelimiter","joinAnnotations","join","labelOptions","includeInDataExport","labels","label","text","annotationText_1","points","annotationX","x","xAxisIndex","series","xAxis","index","wasAdded","n","newRow","Array","row","s","maxRowLen","Math","max","newRows","header","columnTitle","topLevelColumnTitle","chartDrawAnnotations","animate","animationConfig","chartRemoveAnnotation","idOrAnnotation","coll","id","onChartAfterInit","wrapPointerOnContainerMouseDown","proceed","hasDraggedAnnotation","apply","prototype","slice","call","arguments","compose","AnnotationClass","ChartClass","PointerClass","indexOf","chartProto","addAnnotation","callbacks","collectionsWithInit","collectionsWithUpdate","removeAnnotation","types","type","defined","visible","animation","crop","draggable","align","allowOverlap","backgroundColor","borderColor","borderRadius","borderWidth","className","formatter","y","overflow","padding","shadow","shape","style","fontSize","fontWeight","color","useHTML","verticalAlign","shapeOptions","stroke","strokeWidth","fill","r","snap","controlPointOptions","events","cursor","height","symbol","width","doc","isTouchDevice","objectEach","removeEvent","EventEmitter","addEvents","emitter","addMouseDownEvent","element","e","onMouseDown","passive","eventHandler","cancelClick","pointer","normalize","target","nonDOMEvents","on","onDrag","styledMode","cssPointer_1","xy","css","isUpdating","removeDocEvents","hcEvents","mouseMoveToRadians","cx","cy","temp","prevDy","prevChartY","prevDx","prevChartX","dy","chartY","dx","chartX","inverted","atan2","mouseMoveToScale","sx","sy","mouseMoveToTranslation","isInsidePlot","plotLeft","plotTop","visiblePlotOnly","translation_1","translate","shapes","preventDefault","button","removeDrag","hasDragged","removeMouseUp","onMouseUp","_e","annotationsOptions","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","TypeError","String","__","constructor","create","merge","ControlPoint","_super","_this","positioner","render","setVisibility","update","seriesProto","SeriesRegistry","MockPoint","plotX","plotY","mock","getPlotBox","applyOptions","getOptions","fromPoint","point","yAxis","pointToPixels","paneCoordinates","plotWidth","plotHeight","translateX","translateY","pointToOptions","command","setAxis","refresh","getLabelConfig","hasDynamicOptions","len","toPixels","isInside","refreshOptions","toValue","rotate","radians","cos","sin","ty","scale","xOrY","axisName","axisOptions","get","toAnchor","anchor","_cx","_cy","isObject","isString","splat","Controllable","itemType","collection","controlPoints","init","addControlPoints","controlPointsOptions","box","Tooltip","relativePosition","absolutePosition","_args","_i","attrsFromOptions","key","mappedKey","map","attrsMap","attrs","tracker","controlPoint","getPointsOptions","linkPoints","pointsOptions","pointOptions","pointConfig","_parentGroup","transform","setControlPointsVisibility","shouldBeDrawn","transformation","p1","p2","_point","transformPoint","translatePoint","translateShape","translateSecondPoint","annotationIndex","chartOptions","newOptions","parentGroup","defaultMarkers","arrow","tagName","attributes","refY","refX","markerWidth","markerHeight","children","extend","uniqueKey","markerEndSetter","createMarkerSetter","markerStartSetter","TRACKER_FILL","markerType","value","onChartAfterGetContainer","defs","svgRendererAddMarker","markerOptions","child","ast","orient","marker","definition","ControllablePath","SVGRendererClass","addMarker","toD","dOption","showPath","position","pointIndex","crispLine","parent","path","addClass","setMarkers","action","placed","item","itemOptions","def","predefinedMarker","markerId","getAttribute","dashStyle","ControllableRect","rect","Boolean","ControllableCircle","circle","setRadius","ControllableEllipse","createElement","getDistanceFromLine","point1","point2","x0","y0","abs","sqrt","getAttrs","position2","x1","y1","x2","y2","rx","angle","atan","PI","ry","getRY","getYAxis","getAbsolutePosition","rotation","rotationOriginX","rotationOriginY","setYRadius","format","F","isNumber","symbolConnector","w","h","yOffset","anchorX","anchorY","lateral","ControllableLabel","alignedPosition","alignOptions","alignFactor","vAlignFactor","vAlign","round","symbols","connector","justifiedOptions","alignAttr","off","bBox","getBBox","getContrast","shapesWithoutBackground","labelrank","itemPosition","alignTo","itemPosRelativeX","itemPosRelativeY","anchorAbsolutePosition","anchorRelativePosition","showItem","_a","_b","distance","negative","ttBelow","ControllableImage","image","src","annotationsFieldsTypes","name","title","NavigationBindingUtilities","getAssignedAxis","coords","filter","coord","extremes","axis","getExtremes","axisMin","min","axisMax","minPointOffset","isInternal","getFieldType","predefinedType","fieldType","string","number","boolean","NBU","navigation","bindingsClassName","bindings","circleAnnotation","start","getCoordinates","coordsX","coordsY","langKey","steps","mockPointOpts","pow","ellipseAnnotation","newR","newRY","rectangleAnnotation","labelAnnotation","defer","popup","simpleShapes","lines","ellipse","rectangle","typeOptions","backgroundColors","setOptions","D","win","isArray","isFunction","onAnnotationRemove","navigationBindings","deselectAnnotation","onChartDestroy","onChartLoad","NavigationBindings","initEvents","initUpdate","onChartRender","disabledClassName","buttonsEnabled_1","container","container_1","boundClassNames","buttonNode","querySelectorAll","cls","noDataState","classList","remove","onNavigationBindingsClosePopup","onNavigationBindingsDeselectButton","selectedButtonElement","selectableAnnotation","annotationType","originalClick","defaultOptions","click","selectAndShowPopup","eventArguments","prevAnnotation","activeAnnotation","formType","annotationToFields","onSubmit","data","actionType","config","fieldsToOptions","fields","crosshairY","enabled","crosshairX","selectedButton","eventsToUnbind","getElementsByClassName","NavigationBindingDefaults","bindingsContainer","subContainer","getButtonEvents","bindingsButtonClick","callback","eventName","bindingsChartClick","bindingsContainerMouseMove","ChartNavigationComposition","addUpdate","clickEvent","svgContainer","boxWrapper","shouldEventBeFired","nextEvent","currentUserDetails","mouseMoveEvent","stockTools","toggleButtonActiveClass","removeClass","parentNode","closestPolyfill","el","ElementProto","Element","elementMatches","matches","msMatchesSelector","webkitMatchesSelector","ret","closest","parentElement","nodeType","setTimeout","stepIndex","end","_container","moveEvent","field","parsedValue","parseFloat","split","pathLength","match","parent_1","nextName","editables","annotationsEditable","nestedEditables","nestedOptions","nonEditables","annotationsNonEditable","visualOptions","traverse","option","parentEditables","parentKey","nextParent","arrayOption","nestedOption","nestedKey","toString","typeOption","typeKey","getClickedClassNames","elemClassName","classNames","concat","removeEvents","unbinder","background","innerBackground","outerBackground","line","verticalLine","measure","fibonacci","tunnel","pitchfork","crookedLine","basicAnnotation","isFirefox","stableSort","addFormFields","parentDiv","storage","isRoot","parentFullName","titleName","addInput","a","reverse","genInput","appendChild","createTextNode","splice","PopupAnnotations","addForm","isInit","popupDiv","lhsCol","bottomRow","addButton","saveButton","addToolbar","showForm","toolbarClass","top","removeButton","iconsURL","editButton","seriesTypes","DropdownProperties","dropdownParameters","addColsContainer","rhsCol","seriesType","rhsColWrapper","params","innerHTML","AST","getNameType","indicatorFullName","listAllSeries","linkedParent","volumeSeriesID","addParamInputs","addIndicatorList","listType","isEdit","plotOptions","filteredSeriesArray","filterSeriesArray","filterSeries","seriesAName","toLowerCase","seriesBName","indicatorList","seriesSet","indicatorType","display","setAttribute","childNodes","noFilterMatch","fieldName","selectBox","addSelection","addSelectionOptions","addSearchBox","clearFilterText","clearFilter","inputWrapper","handleInputChange","inputText","input","htmlFor","labelClassName","textContent","optionName","optionParamList","labelText","selectName","parameterName","selectedOption","currentSeries","seriesOptions","seriesName","indicatorAliases","validFilter","replace","regex","RegExp","alias","is","nameBase","toUpperCase","PopupIndicators","_options","buttonParentDiv","tabs","tabsContainers","getAmount","counter","serie","addContentItem","addMenuItem","tabName","disableTab","menuItem","deselectAll","tabsContent","selectTab","tab","allTabs","switchTabs","PopupTabs","indicatorsCount","indicators","firstTab","Popup","unbind_1","addCloseBtn","closeBtn","closePopup","inputAttributes","inputName","fieldsDiv","getFields","inputList","selectList","linkedTo","volumeTo","fieldsOutput","param","seriesId","select","parameter","showPopup","popupCloseBtn","removeAttribute","offsetHeight","onNavigationBindingsShowPopup","gui","wrapPointerOnContainerMouserDown","inClass","PopupComposition","NagivationBindingsClass","getDeferredAnimation","A","controllableProto","destroyObjectProperties","getLabelsAndShapesOptions","baseOptions","mergedOptions","someBaseOptions","basicOptions","Annotation","group","labelCollector","labelsGroup","shapesGroup","labelsAndShapes","addClipPaths","setClipAxes","clipXAxis","clipYAxis","getClipBox","addLabels","labelsOptions","initLabel","addShapes","initShape","destroyItem","labelCollectors","left","_annotationOrChart","_userOptions","_index","animOptions","setLabelCollector","shapesMap","redrawItems","redrawItem","renderItem","adjustVisibility","hasVisiblePoints","visibility","show","hide","items","renderItems","xAxes","yAxes","linkedAxes","reduce","axes","labelOrShape","setItemControlPointsVisibility","userOptionsIndex","AnnotationDefaults","G","Highcharts","Chart","Pointer","SVGRenderer"],"sourceRoot":"webpack:///","sources":["./node_modules/highcharts/es-modules/Core/Renderer/RendererRegistry.js","./node_modules/highcharts/es-modules/Extensions/Annotations/AnnotationChart.js","./node_modules/highcharts/es-modules/Extensions/Annotations/AnnotationDefaults.js","./node_modules/highcharts/es-modules/Extensions/Annotations/EventEmitter.js","./node_modules/highcharts/es-modules/Extensions/Annotations/ControlPoint.js","./node_modules/highcharts/es-modules/Extensions/Annotations/MockPoint.js","./node_modules/highcharts/es-modules/Extensions/Annotations/Controllables/Controllable.js","./node_modules/highcharts/es-modules/Extensions/Annotations/Controllables/ControllablePath.js","./node_modules/highcharts/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js","./node_modules/highcharts/es-modules/Extensions/Annotations/Controllables/ControllableRect.js","./node_modules/highcharts/es-modules/Extensions/Annotations/Controllables/ControllableCircle.js","./node_modules/highcharts/es-modules/Extensions/Annotations/Controllables/ControllableEllipse.js","./node_modules/highcharts/es-modules/Extensions/Annotations/Controllables/ControllableLabel.js","./node_modules/highcharts/es-modules/Extensions/Annotations/Controllables/ControllableImage.js","./node_modules/highcharts/es-modules/Extensions/Annotations/NavigationBindingsUtilities.js","./node_modules/highcharts/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js","./node_modules/highcharts/es-modules/Extensions/Annotations/NavigationBindings.js","./node_modules/highcharts/es-modules/Extensions/Annotations/Popup/PopupAnnotations.js","./node_modules/highcharts/es-modules/Extensions/Annotations/Popup/PopupIndicators.js","./node_modules/highcharts/es-modules/Extensions/Annotations/Popup/PopupTabs.js","./node_modules/highcharts/es-modules/Extensions/Annotations/Popup/Popup.js","./node_modules/highcharts/es-modules/Extensions/Annotations/Popup/PopupComposition.js","./node_modules/highcharts/es-modules/Extensions/Annotations/Annotation.js","./node_modules/highcharts/es-modules/masters/modules/annotations.src.js"],"sourcesContent":["/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport H from '../Globals.js';\n/* *\n *\n *  Namespace\n *\n * */\nvar RendererRegistry;\n(function (RendererRegistry) {\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    RendererRegistry.rendererTypes = {};\n    /* *\n     *\n     *  Variables\n     *\n     * */\n    var defaultRenderer;\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Gets a registered renderer class. If no renderer type is provided or the\n     * requested renderer was not founded, the default renderer is returned.\n     *\n     * @param {string} [rendererType]\n     * Renderer type or the default renderer.\n     *\n     * @return {Highcharts.Class<Highcharts.SVGRenderer>}\n     * Returns the requested renderer class or the default renderer class.\n     */\n    function getRendererType(rendererType) {\n        if (rendererType === void 0) { rendererType = defaultRenderer; }\n        return (RendererRegistry.rendererTypes[rendererType] || RendererRegistry.rendererTypes[defaultRenderer]);\n    }\n    RendererRegistry.getRendererType = getRendererType;\n    /**\n     * Register a renderer class.\n     *\n     * @param {string} rendererType\n     * Renderer type to register.\n     *\n     * @param {Highcharts.Class<Highcharts.SVGRenderer>} rendererClass\n     * Returns the requested renderer class or the default renderer class.\n     *\n     * @param {boolean} setAsDefault\n     * Sets the renderer class as the default renderer.\n     */\n    function registerRendererType(rendererType, rendererClass, setAsDefault) {\n        RendererRegistry.rendererTypes[rendererType] = rendererClass;\n        if (!defaultRenderer || setAsDefault) {\n            defaultRenderer = rendererType;\n            H.Renderer = rendererClass; // compatibility\n        }\n    }\n    RendererRegistry.registerRendererType = registerRendererType;\n})(RendererRegistry || (RendererRegistry = {}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default RendererRegistry;\n","/* *\n *\n *  (c) 2009-2021 Highsoft, Black Label\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport U from '../../Core/Utilities.js';\nvar addEvent = U.addEvent, erase = U.erase, find = U.find, fireEvent = U.fireEvent, pick = U.pick, wrap = U.wrap;\n/* *\n *\n *  Constants\n *\n * */\nvar composedClasses = [];\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Add an annotation to the chart after render time.\n *\n * @sample highcharts/annotations/add-annotation/\n *         Add annotation\n *\n * @function Highcharts.Chart#addAnnotation\n *\n * @param  {Highcharts.AnnotationsOptions} options\n *         The annotation options for the new, detailed annotation.\n *\n * @param {boolean} [redraw]\n *\n * @return {Highcharts.Annotation}\n *         The newly generated annotation.\n */\nfunction chartAddAnnotation(userOptions, redraw) {\n    var annotation = this.initAnnotation(userOptions);\n    this.options.annotations.push(annotation.options);\n    if (pick(redraw, true)) {\n        annotation.redraw();\n        annotation.graphic.attr({\n            opacity: 1\n        });\n    }\n    return annotation;\n}\n/**\n * @private\n */\nfunction chartCallback() {\n    var chart = this;\n    chart.plotBoxClip = this.renderer.clipRect(this.plotBox);\n    chart.controlPointsGroup = chart.renderer\n        .g('control-points')\n        .attr({ zIndex: 99 })\n        .clip(chart.plotBoxClip)\n        .add();\n    chart.options.annotations.forEach(function (annotationOptions, i) {\n        if (\n        // Verify that it has not been previously added in a responsive rule\n        !chart.annotations.some(function (annotation) {\n            return annotation.options === annotationOptions;\n        })) {\n            var annotation = chart.initAnnotation(annotationOptions);\n            chart.options.annotations[i] = annotation.options;\n        }\n    });\n    chart.drawAnnotations();\n    addEvent(chart, 'redraw', chart.drawAnnotations);\n    addEvent(chart, 'destroy', function () {\n        chart.plotBoxClip.destroy();\n        chart.controlPointsGroup.destroy();\n    });\n    addEvent(chart, 'exportData', function (event) {\n        var annotations = chart.annotations, csvColumnHeaderFormatter = ((this.options.exporting &&\n            this.options.exporting.csv) ||\n            {}).columnHeaderFormatter, \n        // If second row doesn't have xValues\n        // then it is a title row thus multiple level header is in use.\n        multiLevelHeaders = !event.dataRows[1].xValues, annotationHeader = (chart.options.lang &&\n            chart.options.lang.exportData &&\n            chart.options.lang.exportData.annotationHeader), columnHeaderFormatter = function (index) {\n            var s;\n            if (csvColumnHeaderFormatter) {\n                s = csvColumnHeaderFormatter(index);\n                if (s !== false) {\n                    return s;\n                }\n            }\n            s = annotationHeader + ' ' + index;\n            if (multiLevelHeaders) {\n                return {\n                    columnTitle: s,\n                    topLevelColumnTitle: s\n                };\n            }\n            return s;\n        }, startRowLength = event.dataRows[0].length, annotationSeparator = (chart.options.exporting &&\n            chart.options.exporting.csv &&\n            chart.options.exporting.csv.annotations &&\n            chart.options.exporting.csv.annotations.itemDelimiter), joinAnnotations = (chart.options.exporting &&\n            chart.options.exporting.csv &&\n            chart.options.exporting.csv.annotations &&\n            chart.options.exporting.csv.annotations.join);\n        annotations.forEach(function (annotation) {\n            if (annotation.options.labelOptions &&\n                annotation.options.labelOptions.includeInDataExport) {\n                annotation.labels.forEach(function (label) {\n                    if (label.options.text) {\n                        var annotationText_1 = label.options.text;\n                        label.points.forEach(function (points) {\n                            var annotationX = points.x, xAxisIndex = points.series.xAxis ?\n                                points.series.xAxis.options.index :\n                                -1;\n                            var wasAdded = false;\n                            // Annotation not connected to any xAxis -\n                            // add new row.\n                            if (xAxisIndex === -1) {\n                                var n = event.dataRows[0].length, newRow = new Array(n);\n                                for (var i = 0; i < n; ++i) {\n                                    newRow[i] = '';\n                                }\n                                newRow.push(annotationText_1);\n                                newRow.xValues = [];\n                                newRow.xValues[xAxisIndex] = annotationX;\n                                event.dataRows.push(newRow);\n                                wasAdded = true;\n                            }\n                            // Annotation placed on a exported data point\n                            // - add new column\n                            if (!wasAdded) {\n                                event.dataRows.forEach(function (row) {\n                                    if (!wasAdded &&\n                                        row.xValues &&\n                                        xAxisIndex !== void 0 &&\n                                        annotationX === row.xValues[xAxisIndex]) {\n                                        if (joinAnnotations &&\n                                            row.length > startRowLength) {\n                                            row[row.length - 1] += (annotationSeparator +\n                                                annotationText_1);\n                                        }\n                                        else {\n                                            row.push(annotationText_1);\n                                        }\n                                        wasAdded = true;\n                                    }\n                                });\n                            }\n                            // Annotation not placed on any exported data point,\n                            // but connected to the xAxis - add new row\n                            if (!wasAdded) {\n                                var n = event.dataRows[0].length, newRow = new Array(n);\n                                for (var i = 0; i < n; ++i) {\n                                    newRow[i] = '';\n                                }\n                                newRow[0] = annotationX;\n                                newRow.push(annotationText_1);\n                                newRow.xValues = [];\n                                if (xAxisIndex !== void 0) {\n                                    newRow.xValues[xAxisIndex] = annotationX;\n                                }\n                                event.dataRows.push(newRow);\n                            }\n                        });\n                    }\n                });\n            }\n        });\n        var maxRowLen = 0;\n        event.dataRows.forEach(function (row) {\n            maxRowLen = Math.max(maxRowLen, row.length);\n        });\n        var newRows = maxRowLen - event.dataRows[0].length;\n        for (var i = 0; i < newRows; i++) {\n            var header = columnHeaderFormatter(i + 1);\n            if (multiLevelHeaders) {\n                event.dataRows[0].push(header.topLevelColumnTitle);\n                event.dataRows[1].push(header.columnTitle);\n            }\n            else {\n                event.dataRows[0].push(header);\n            }\n        }\n    });\n}\n/**\n * @private\n */\nfunction chartDrawAnnotations() {\n    this.plotBoxClip.attr(this.plotBox);\n    this.annotations.forEach(function (annotation) {\n        annotation.redraw();\n        annotation.graphic.animate({\n            opacity: 1\n        }, annotation.animationConfig);\n    });\n}\n/**\n * Remove an annotation from the chart.\n *\n * @function Highcharts.Chart#removeAnnotation\n *\n * @param {number|string|Highcharts.Annotation} idOrAnnotation\n *        The annotation's id or direct annotation object.\n */\nfunction chartRemoveAnnotation(idOrAnnotation) {\n    var annotations = this.annotations, annotation = (idOrAnnotation.coll === 'annotations') ?\n        idOrAnnotation :\n        find(annotations, function (annotation) {\n            return annotation.options.id === idOrAnnotation;\n        });\n    if (annotation) {\n        fireEvent(annotation, 'remove');\n        erase(this.options.annotations, annotation.options);\n        erase(annotations, annotation);\n        annotation.destroy();\n    }\n}\n/**\n * Create lookups initially\n * @private\n */\nfunction onChartAfterInit() {\n    var chart = this;\n    chart.annotations = [];\n    if (!this.options.annotations) {\n        this.options.annotations = [];\n    }\n}\n/**\n * @private\n */\nfunction wrapPointerOnContainerMouseDown(proceed) {\n    if (!this.chart.hasDraggedAnnotation) {\n        proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n    }\n}\n/* *\n *\n *  Composition\n *\n * */\n/**\n * @private\n */\nvar AnnotationChart;\n(function (AnnotationChart) {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    function compose(AnnotationClass, ChartClass, PointerClass) {\n        if (composedClasses.indexOf(ChartClass) === -1) {\n            composedClasses.push(ChartClass);\n            addEvent(ChartClass, 'afterInit', onChartAfterInit);\n            var chartProto = ChartClass.prototype;\n            chartProto.addAnnotation = chartAddAnnotation;\n            chartProto.callbacks.push(chartCallback);\n            chartProto.collectionsWithInit.annotations = [chartAddAnnotation];\n            chartProto.collectionsWithUpdate.push('annotations');\n            chartProto.drawAnnotations = chartDrawAnnotations;\n            chartProto.removeAnnotation = chartRemoveAnnotation;\n            chartProto.initAnnotation = function chartInitAnnotation(userOptions) {\n                var Constructor = (AnnotationClass.types[userOptions.type] ||\n                    AnnotationClass), annotation = new Constructor(this, userOptions);\n                this.annotations.push(annotation);\n                return annotation;\n            };\n        }\n        if (composedClasses.indexOf(PointerClass) === -1) {\n            composedClasses.push(PointerClass);\n            var pointerProto = PointerClass.prototype;\n            wrap(pointerProto, 'onContainerMouseDown', wrapPointerOnContainerMouseDown);\n        }\n    }\n    AnnotationChart.compose = compose;\n})(AnnotationChart || (AnnotationChart = {}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default AnnotationChart;\n","/* *\n *\n *  Imports\n *\n * */\nimport U from '../../Core/Utilities.js';\nvar defined = U.defined;\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A basic type of an annotation. It allows to add custom labels\n * or shapes. The items  can be tied to points, axis coordinates\n * or chart pixel coordinates.\n *\n * @sample highcharts/annotations/basic/\n *         Basic annotations\n * @sample highcharts/demo/annotations/\n *         Advanced annotations\n * @sample highcharts/css/annotations\n *         Styled mode\n * @sample highcharts/annotations-advanced/controllable\n *         Controllable items\n * @sample {highstock} stock/annotations/fibonacci-retracements\n *         Custom annotation, Fibonacci retracement\n *\n * @type         {Array<*>}\n * @since        6.0.0\n * @requires     modules/annotations\n * @optionparent annotations\n */\nvar AnnotationDefaults = {\n    /**\n     * Sets an ID for an annotation. Can be user later when\n     * removing an annotation in [Chart#removeAnnotation(id)](\n     * /class-reference/Highcharts.Chart#removeAnnotation) method.\n     *\n     * @type      {number|string}\n     * @apioption annotations.id\n     */\n    /**\n     * Whether the annotation is visible.\n     *\n     * @sample highcharts/annotations/visible/\n     *         Set annotation visibility\n     */\n    visible: true,\n    /**\n     * Enable or disable the initial animation when a series is\n     * displayed for the `annotation`. The animation can also be set\n     * as a configuration object. Please note that this option only\n     * applies to the initial animation.\n     * For other animations, see [chart.animation](#chart.animation)\n     * and the animation parameter under the API methods.\n     * The following properties are supported:\n     *\n     * - `defer`: The animation delay time in milliseconds.\n     *\n     * @sample {highcharts} highcharts/annotations/defer/\n     *          Animation defer settings\n     * @type {boolean|Partial<Highcharts.AnimationOptionsObject>}\n     * @since 8.2.0\n     */\n    animation: {},\n    /**\n     * Whether to hide the part of the annotation\n     * that is outside the plot area.\n     *\n     * @sample highcharts/annotations/label-crop-overflow/\n     *         Crop line annotation\n     * @type  {boolean}\n     * @since 9.3.0\n     */\n    crop: true,\n    /**\n     * The animation delay time in milliseconds.\n     * Set to `0` renders annotation immediately.\n     * As `undefined` inherits defer time from the [series.animation.defer](#plotOptions.series.animation.defer).\n     *\n     * @type      {number}\n     * @since 8.2.0\n     * @apioption annotations.animation.defer\n     */\n    /**\n     * Allow an annotation to be draggable by a user. Possible\n     * values are `'x'`, `'xy'`, `'y'` and `''` (disabled).\n     *\n     * @sample highcharts/annotations/draggable/\n     *         Annotations draggable: 'xy'\n     *\n     * @type {Highcharts.AnnotationDraggableValue}\n     */\n    draggable: 'xy',\n    /**\n     * Options for annotation's labels. Each label inherits options\n     * from the labelOptions object. An option from the labelOptions\n     * can be overwritten by config for a specific label.\n     *\n     * @requires modules/annotations\n     */\n    labelOptions: {\n        /**\n         * The alignment of the annotation's label. If right,\n         * the right side of the label should be touching the point.\n         *\n         * @sample highcharts/annotations/label-position/\n         *         Set labels position\n         *\n         * @type {Highcharts.AlignValue}\n         */\n        align: 'center',\n        /**\n         * Whether to allow the annotation's labels to overlap.\n         * To make the labels less sensitive for overlapping,\n         * the can be set to 0.\n         *\n         * @sample highcharts/annotations/tooltip-like/\n         *         Hide overlapping labels\n         */\n        allowOverlap: false,\n        /**\n         * The background color or gradient for the annotation's\n         * label.\n         *\n         * @sample highcharts/annotations/label-presentation/\n         *         Set labels graphic options\n         *\n         * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         */\n        backgroundColor: 'rgba(0, 0, 0, 0.75)',\n        /**\n         * The border color for the annotation's label.\n         *\n         * @sample highcharts/annotations/label-presentation/\n         *         Set labels graphic options\n         *\n         * @type {Highcharts.ColorString}\n         */\n        borderColor: \"#000000\" /* Palette.neutralColor100 */,\n        /**\n         * The border radius in pixels for the annotaiton's label.\n         *\n         * @sample highcharts/annotations/label-presentation/\n         *         Set labels graphic options\n         */\n        borderRadius: 3,\n        /**\n         * The border width in pixels for the annotation's label\n         *\n         * @sample highcharts/annotations/label-presentation/\n         *         Set labels graphic options\n         */\n        borderWidth: 1,\n        /**\n         * A class name for styling by CSS.\n         *\n         * @sample highcharts/css/annotations\n         *         Styled mode annotations\n         *\n         * @since 6.0.5\n         */\n        className: 'highcharts-no-tooltip',\n        /**\n         * Whether to hide the annotation's label\n         * that is outside the plot area.\n         *\n         * @sample highcharts/annotations/label-crop-overflow/\n         *         Crop or justify labels\n         */\n        crop: false,\n        /**\n         * The label's pixel distance from the point.\n         *\n         * @sample highcharts/annotations/label-position/\n         *         Set labels position\n         *\n         * @type      {number}\n         * @apioption annotations.labelOptions.distance\n         */\n        /**\n         * A\n         * [format](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\n         * string for the data label.\n         *\n         * @see [plotOptions.series.dataLabels.format](plotOptions.series.dataLabels.format.html)\n         *\n         * @sample highcharts/annotations/label-text/\n         *         Set labels text\n         *\n         * @type      {string}\n         * @apioption annotations.labelOptions.format\n         */\n        /**\n         * Alias for the format option.\n         *\n         * @see [format](annotations.labelOptions.format.html)\n         *\n         * @sample highcharts/annotations/label-text/\n         *         Set labels text\n         *\n         * @type      {string}\n         * @apioption annotations.labelOptions.text\n         */\n        /**\n         * Callback JavaScript function to format the annotation's\n         * label. Note that if a `format` or `text` are defined,\n         * the format or text take precedence and the formatter is\n         * ignored. `This` refers to a point object.\n         *\n         * @sample highcharts/annotations/label-text/\n         *         Set labels text\n         *\n         * @type    {Highcharts.FormatterCallbackFunction<Highcharts.Point>}\n         * @default function () { return defined(this.y) ? this.y : 'Annotation label'; }\n         */\n        formatter: function () {\n            return defined(this.y) ? '' + this.y : 'Annotation label';\n        },\n        /**\n         * Whether the annotation is visible in the exported data\n         * table.\n         *\n         * @sample highcharts/annotations/include-in-data-export/\n         *         Do not include in the data export\n         *\n         * @since 8.2.0\n         * @requires modules/export-data\n         */\n        includeInDataExport: true,\n        /**\n         * How to handle the annotation's label that flow outside\n         * the plot area. The justify option aligns the label inside\n         * the plot area.\n         *\n         * @sample highcharts/annotations/label-crop-overflow/\n         *         Crop or justify labels\n         *\n         * @validvalue [\"allow\", \"justify\"]\n         */\n        overflow: 'justify',\n        /**\n         * When either the borderWidth or the backgroundColor is\n         * set, this is the padding within the box.\n         *\n         * @sample highcharts/annotations/label-presentation/\n         *         Set labels graphic options\n         */\n        padding: 5,\n        /**\n         * The shadow of the box. The shadow can be an object\n         * configuration containing `color`, `offsetX`, `offsetY`,\n         * `opacity` and `width`.\n         *\n         * @sample highcharts/annotations/label-presentation/\n         *         Set labels graphic options\n         *\n         * @type {boolean|Highcharts.ShadowOptionsObject}\n         */\n        shadow: false,\n        /**\n         * The name of a symbol to use for the border around the\n         * label. Symbols are predefined functions on the Renderer\n         * object.\n         *\n         * @sample highcharts/annotations/shapes/\n         *         Available shapes for labels\n         */\n        shape: 'callout',\n        /**\n         * Styles for the annotation's label.\n         *\n         * @see [plotOptions.series.dataLabels.style](plotOptions.series.dataLabels.style.html)\n         *\n         * @sample highcharts/annotations/label-presentation/\n         *         Set labels graphic options\n         *\n         * @type {Highcharts.CSSObject}\n         */\n        style: {\n            /** @ignore */\n            fontSize: '11px',\n            /** @ignore */\n            fontWeight: 'normal',\n            /** @ignore */\n            color: 'contrast'\n        },\n        /**\n         * Whether to [use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\n         * to render the annotation's label.\n         */\n        useHTML: false,\n        /**\n         * The vertical alignment of the annotation's label.\n         *\n         * @sample highcharts/annotations/label-position/\n         *         Set labels position\n         *\n         * @type {Highcharts.VerticalAlignValue}\n         */\n        verticalAlign: 'bottom',\n        /**\n         * The x position offset of the label relative to the point.\n         * Note that if a `distance` is defined, the distance takes\n         * precedence over `x` and `y` options.\n         *\n         * @sample highcharts/annotations/label-position/\n         *         Set labels position\n         */\n        x: 0,\n        /**\n         * The y position offset of the label relative to the point.\n         * Note that if a `distance` is defined, the distance takes\n         * precedence over `x` and `y` options.\n         *\n         * @sample highcharts/annotations/label-position/\n         *         Set labels position\n         */\n        y: -16\n    },\n    /**\n     * An array of labels for the annotation. For options that apply\n     * to multiple labels, they can be added to the\n     * [labelOptions](annotations.labelOptions.html).\n     *\n     * @type      {Array<*>}\n     * @extends   annotations.labelOptions\n     * @apioption annotations.labels\n     */\n    /**\n     * This option defines the point to which the label will be\n     * connected. It can be either the point which exists in the\n     * series - it is referenced by the point's id - or a new point\n     * with defined x, y properties and optionally axes.\n     *\n     * @sample highcharts/annotations/mock-point/\n     *         Attach annotation to a mock point\n     * @sample highcharts/annotations/mock-points/\n     *         Attach annotation to a mock point with different ways\n     *\n     * @declare   Highcharts.AnnotationMockPointOptionsObject\n     * @type      {\n     *               string|\n     *               Highcharts.AnnotationMockPointOptionsObject|\n     *               Highcharts.AnnotationMockPointFunction\n     *            }\n     * @requires  modules/annotations\n     * @apioption annotations.labels.point\n     */\n    /**\n     * An array of shapes for the annotation. For options that apply\n     * to multiple shapes, then can be added to the\n     * [shapeOptions](annotations.shapeOptions.html).\n     *\n     * @type      {Array<*>}\n     * @extends   annotations.shapeOptions\n     * @apioption annotations.shapes\n     */\n    /**\n     * This option defines the point to which the shape will be\n     * connected. It can be either the point which exists in the\n     * series - it is referenced by the point's id - or a new point\n     * with defined x, y properties and optionally axes.\n     *\n     * @sample highcharts/annotations/mock-points/\n     *         Attach annotation to a mock point with different ways\n     *\n     * @declare   Highcharts.AnnotationMockPointOptionsObject\n     * @type      {\n     *               string|\n     *               Highcharts.AnnotationMockPointOptionsObject|\n     *               Highcharts.AnnotationMockPointFunction\n     *            }\n     * @extends   annotations.labels.point\n     * @requires  modules/annotations\n     * @apioption annotations.shapes.point\n     */\n    /**\n     * An array of points for the shape\n     * or a callback function that returns that shape point.\n     *\n     * This option is available\n     * for shapes which can use multiple points such as path. A\n     * point can be either a point object or a point's id.\n     *\n     * @see [annotations.shapes.point](annotations.shapes.point.html)\n     *\n     * @type      {Array<Highcharts.AnnotationShapePointOptions>}\n     * @extends   annotations.labels.point\n     * @apioption annotations.shapes.points\n     */\n    /**\n     * The URL for an image to use as the annotation shape. Note,\n     * type has to be set to `'image'`.\n     *\n     * @see [annotations.shapes.type](annotations.shapes.type)\n     * @sample highcharts/annotations/shape-src/\n     *         Define a marker image url for annotations\n     *\n     * @type      {string}\n     * @apioption annotations.shapes.src\n     */\n    /**\n     * Id of the marker which will be drawn at the final vertex of\n     * the path. Custom markers can be defined in defs property.\n     *\n     * @see [defs.markers](defs.markers.html)\n     *\n     * @sample highcharts/annotations/custom-markers/\n     *         Define a custom marker for annotations\n     *\n     * @type      {string}\n     * @apioption annotations.shapes.markerEnd\n     */\n    /**\n     * Id of the marker which will be drawn at the first vertex of\n     * the path. Custom markers can be defined in defs property.\n     *\n     * @see [defs.markers](defs.markers.html)\n     *\n     * @sample {highcharts} highcharts/annotations/custom-markers/\n     *         Define a custom marker for annotations\n     *\n     * @type      {string}\n     * @apioption annotations.shapes.markerStart\n     */\n    /**\n     * Options for annotation's shapes. Each shape inherits options\n     * from the shapeOptions object. An option from the shapeOptions\n     * can be overwritten by config for a specific shape.\n     *\n     * @requires  modules/annotations\n     */\n    shapeOptions: {\n        /**\n         *\n         * The radius of the shape in y direction.\n         * Used for the ellipse.\n         *\n         * @sample highcharts/annotations/ellipse/\n         *         Ellipse annotation\n         *\n         * @type      {number}\n         * @apioption annotations.shapeOptions.ry\n         **/\n        /**\n         *\n         * The xAxis index to which the points should be attached.\n         * Used for the ellipse.\n         *\n         * @type      {number}\n         * @apioption annotations.shapeOptions.xAxis\n         **/\n        /**\n         * The yAxis index to which the points should be attached.\n         * Used for the ellipse.\n         *\n         * @type      {number}\n         * @apioption annotations.shapeOptions.yAxis\n         **/\n        /**\n         * The width of the shape.\n         *\n         * @sample highcharts/annotations/shape/\n         *         Basic shape annotation\n         *\n         * @type      {number}\n         * @apioption annotations.shapeOptions.width\n         **/\n        /**\n         * The height of the shape.\n         *\n         * @sample highcharts/annotations/shape/\n         *         Basic shape annotation\n         *\n         * @type      {number}\n         * @apioption annotations.shapeOptions.height\n         */\n        /**\n         * The type of the shape.\n         * Avaliable options are circle, rect and ellipse.\n         *\n         * @sample highcharts/annotations/shape/\n         *         Basic shape annotation\n         *\n         * @sample highcharts/annotations/ellipse/\n         *         Ellipse annotation\n         *\n         * @type      {string}\n         * @default   rect\n         * @apioption annotations.shapeOptions.type\n         */\n        /**\n         * The URL for an image to use as the annotation shape.\n         * Note, type has to be set to `'image'`.\n         *\n         * @see [annotations.shapeOptions.type](annotations.shapeOptions.type)\n         * @sample highcharts/annotations/shape-src/\n         *         Define a marker image url for annotations\n         *\n         * @type      {string}\n         * @apioption annotations.shapeOptions.src\n         */\n        /**\n         * Name of the dash style to use for the shape's stroke.\n         *\n         * @sample {highcharts} highcharts/plotoptions/series-dashstyle-all/\n         *         Possible values demonstrated\n         *\n         * @type      {Highcharts.DashStyleValue}\n         * @apioption annotations.shapeOptions.dashStyle\n         */\n        /**\n         * The color of the shape's stroke.\n         *\n         * @sample highcharts/annotations/shape/\n         *         Basic shape annotation\n         *\n         * @type {Highcharts.ColorString}\n         */\n        stroke: 'rgba(0, 0, 0, 0.75)',\n        /**\n         * The pixel stroke width of the shape.\n         *\n         * @sample highcharts/annotations/shape/\n         *         Basic shape annotation\n         */\n        strokeWidth: 1,\n        /**\n         * The color of the shape's fill.\n         *\n         * @sample highcharts/annotations/shape/\n         *         Basic shape annotation\n         *\n         * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         */\n        fill: 'rgba(0, 0, 0, 0.75)',\n        /**\n         * The radius of the shape.\n         *\n         * @sample highcharts/annotations/shape/\n         *         Basic shape annotation\n         */\n        r: 0,\n        /**\n         * Defines additional snapping area around an annotation\n         * making this annotation to focus. Defined in pixels.\n         */\n        snap: 2\n    },\n    /**\n     * Options for annotation's control points. Each control point\n     * inherits options from controlPointOptions object.\n     * Options from the controlPointOptions can be overwritten\n     * by options in a specific control point.\n     *\n     * @declare  Highcharts.AnnotationControlPointOptionsObject\n     * @requires modules/annotations\n     */\n    controlPointOptions: {\n        /**\n         * @type      {Highcharts.AnnotationControlPointPositionerFunction}\n         * @apioption annotations.controlPointOptions.positioner\n         */\n        /**\n         * @type {Highcharts.Dictionary<Function>}\n         */\n        events: {},\n        /**\n         * @type {Highcharts.SVGAttributes}\n         */\n        style: {\n            cursor: 'pointer',\n            fill: \"#ffffff\" /* Palette.backgroundColor */,\n            stroke: \"#000000\" /* Palette.neutralColor100 */,\n            'stroke-width': 2\n        },\n        height: 10,\n        symbol: 'circle',\n        visible: false,\n        width: 10\n    },\n    /**\n     * Event callback when annotation is added to the chart.\n     *\n     * @type      {Highcharts.EventCallbackFunction<Highcharts.Annotation>}\n     * @since     7.1.0\n     * @apioption annotations.events.add\n     */\n    /**\n     * Event callback when annotation is updated (e.g. drag and\n     * droppped or resized by control points).\n     *\n     * @type      {Highcharts.EventCallbackFunction<Highcharts.Annotation>}\n     * @since     7.1.0\n     * @apioption annotations.events.afterUpdate\n     */\n    /**\n     * Fires when the annotation is clicked.\n     *\n     * @type      {Highcharts.EventCallbackFunction<Highcharts.Annotation>}\n     * @since     7.1.0\n     * @apioption annotations.events.click\n     */\n    /**\n     * Event callback when annotation is removed from the chart.\n     *\n     * @type      {Highcharts.EventCallbackFunction<Highcharts.Annotation>}\n     * @since     7.1.0\n     * @apioption annotations.events.remove\n     */\n    /**\n     * Events available in annotations.\n     *\n     * @requires modules/annotations\n     */\n    events: {},\n    /**\n     * The Z index of the annotation.\n     */\n    zIndex: 6\n};\n/* *\n *\n *  Default Export\n *\n * */\nexport default AnnotationDefaults;\n","/* *\n *\n *  (c) 2009-2021 Highsoft, Black Label\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport H from '../../Core/Globals.js';\nvar doc = H.doc, isTouchDevice = H.isTouchDevice;\nimport U from '../../Core/Utilities.js';\nvar addEvent = U.addEvent, fireEvent = U.fireEvent, objectEach = U.objectEach, pick = U.pick, removeEvent = U.removeEvent;\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n */\nvar EventEmitter = /** @class */ (function () {\n    function EventEmitter() {\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Add emitter events.\n     * @private\n     */\n    EventEmitter.prototype.addEvents = function () {\n        var emitter = this, addMouseDownEvent = function (element) {\n            addEvent(element, isTouchDevice ? 'touchstart' : 'mousedown', function (e) {\n                emitter.onMouseDown(e);\n            }, { passive: false });\n        };\n        addMouseDownEvent(this.graphic.element);\n        (emitter.labels || []).forEach(function (label) {\n            if (label.options.useHTML && label.graphic.text) {\n                // Mousedown event bound to HTML element (#13070).\n                addMouseDownEvent(label.graphic.text.element);\n            }\n        });\n        objectEach(emitter.options.events, function (event, type) {\n            var eventHandler = function (e) {\n                if (type !== 'click' || !emitter.cancelClick) {\n                    event.call(emitter, emitter.chart.pointer.normalize(e), emitter.target);\n                }\n            };\n            if ((emitter.nonDOMEvents || []).indexOf(type) === -1) {\n                emitter.graphic.on(type, eventHandler);\n            }\n            else {\n                addEvent(emitter, type, eventHandler, { passive: false });\n            }\n        });\n        if (emitter.options.draggable) {\n            addEvent(emitter, 'drag', emitter.onDrag);\n            if (!emitter.graphic.renderer.styledMode) {\n                var cssPointer_1 = {\n                    cursor: {\n                        x: 'ew-resize',\n                        y: 'ns-resize',\n                        xy: 'move'\n                    }[emitter.options.draggable]\n                };\n                emitter.graphic.css(cssPointer_1);\n                (emitter.labels || []).forEach(function (label) {\n                    if (label.options.useHTML && label.graphic.text) {\n                        label.graphic.text.css(cssPointer_1);\n                    }\n                });\n            }\n        }\n        if (!emitter.isUpdating) {\n            fireEvent(emitter, 'add');\n        }\n    };\n    /**\n     * Destroy the event emitter.\n     */\n    EventEmitter.prototype.destroy = function () {\n        this.removeDocEvents();\n        removeEvent(this);\n        this.hcEvents = null;\n    };\n    /**\n     * Map mouse move event to the radians.\n     * @private\n     */\n    EventEmitter.prototype.mouseMoveToRadians = function (e, cx, cy) {\n        var prevDy = e.prevChartY - cy, prevDx = e.prevChartX - cx, dy = e.chartY - cy, dx = e.chartX - cx, temp;\n        if (this.chart.inverted) {\n            temp = prevDx;\n            prevDx = prevDy;\n            prevDy = temp;\n            temp = dx;\n            dx = dy;\n            dy = temp;\n        }\n        return Math.atan2(dy, dx) - Math.atan2(prevDy, prevDx);\n    };\n    /**\n     * Map mouse move to the scale factors.\n     * @private\n     */\n    EventEmitter.prototype.mouseMoveToScale = function (e, cx, cy) {\n        var prevDx = e.prevChartX - cx, prevDy = e.prevChartY - cy, dx = e.chartX - cx, dy = e.chartY - cy;\n        var sx = (dx || 1) / (prevDx || 1), sy = (dy || 1) / (prevDy || 1);\n        if (this.chart.inverted) {\n            var temp = sy;\n            sy = sx;\n            sx = temp;\n        }\n        return {\n            x: sx,\n            y: sy\n        };\n    };\n    /**\n     * Map mouse move event to the distance between two following events.\n     * @private\n     */\n    EventEmitter.prototype.mouseMoveToTranslation = function (e) {\n        var dx = e.chartX - e.prevChartX, dy = e.chartY - e.prevChartY, temp;\n        if (this.chart.inverted) {\n            temp = dy;\n            dy = dx;\n            dx = temp;\n        }\n        return {\n            x: dx,\n            y: dy\n        };\n    };\n    /**\n     * Drag and drop event. All basic annotations should share this\n     * capability as well as the extended ones.\n     * @private\n     */\n    EventEmitter.prototype.onDrag = function (e) {\n        if (this.chart.isInsidePlot(e.chartX - this.chart.plotLeft, e.chartY - this.chart.plotTop, {\n            visiblePlotOnly: true\n        })) {\n            var translation_1 = this.mouseMoveToTranslation(e);\n            if (this.options.draggable === 'x') {\n                translation_1.y = 0;\n            }\n            if (this.options.draggable === 'y') {\n                translation_1.x = 0;\n            }\n            var emitter = this;\n            if (emitter.points.length) {\n                emitter.translate(translation_1.x, translation_1.y);\n            }\n            else {\n                emitter.shapes.forEach(function (shape) {\n                    return shape.translate(translation_1.x, translation_1.y);\n                });\n                emitter.labels.forEach(function (label) {\n                    return label.translate(translation_1.x, translation_1.y);\n                });\n            }\n            this.redraw(false);\n        }\n    };\n    /**\n     * Mouse down handler.\n     * @private\n     */\n    EventEmitter.prototype.onMouseDown = function (e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        }\n        // On right click, do nothing:\n        if (e.button === 2) {\n            return;\n        }\n        var emitter = this, pointer = emitter.chart.pointer;\n        e = pointer.normalize(e);\n        var prevChartX = e.chartX, prevChartY = e.chartY;\n        emitter.cancelClick = false;\n        emitter.chart.hasDraggedAnnotation = true;\n        emitter.removeDrag = addEvent(doc, isTouchDevice ? 'touchmove' : 'mousemove', function (e) {\n            emitter.hasDragged = true;\n            e = pointer.normalize(e);\n            e.prevChartX = prevChartX;\n            e.prevChartY = prevChartY;\n            fireEvent(emitter, 'drag', e);\n            prevChartX = e.chartX;\n            prevChartY = e.chartY;\n        }, isTouchDevice ? { passive: false } : void 0);\n        emitter.removeMouseUp = addEvent(doc, isTouchDevice ? 'touchend' : 'mouseup', function (e) {\n            // Sometimes the target is the annotation and sometimes its the\n            // controllable\n            var annotation = pick(emitter.target && emitter.target.annotation, emitter.target);\n            if (annotation) {\n                // Keep annotation selected after dragging control point\n                annotation.cancelClick = emitter.hasDragged;\n            }\n            emitter.cancelClick = emitter.hasDragged;\n            emitter.hasDragged = false;\n            emitter.chart.hasDraggedAnnotation = false;\n            // ControlPoints vs Annotation:\n            fireEvent(pick(annotation, // #15952\n            emitter), 'afterUpdate');\n            emitter.onMouseUp(e);\n        }, isTouchDevice ? { passive: false } : void 0);\n    };\n    /**\n     * Mouse up handler.\n     */\n    EventEmitter.prototype.onMouseUp = function (_e) {\n        var chart = this.chart, annotation = this.target || this, annotationsOptions = chart.options.annotations, index = chart.annotations.indexOf(annotation);\n        this.removeDocEvents();\n        annotationsOptions[index] = annotation.options;\n    };\n    /**\n     * Remove emitter document events.\n     * @private\n     */\n    EventEmitter.prototype.removeDocEvents = function () {\n        if (this.removeDrag) {\n            this.removeDrag = this.removeDrag();\n        }\n        if (this.removeMouseUp) {\n            this.removeMouseUp = this.removeMouseUp();\n        }\n    };\n    return EventEmitter;\n}());\n/* *\n *\n *  Default Export\n *\n * */\nexport default EventEmitter;\n","/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventEmitter from './EventEmitter.js';\nimport U from '../../Core/Utilities.js';\nvar merge = U.merge, pick = U.pick;\n/* *\n *\n *  Class\n *\n * */\n/**\n * A control point class which is a connection between controllable\n * transform methods and a user actions.\n *\n * @requires modules/annotations\n *\n * @class\n * @name Highcharts.AnnotationControlPoint\n *\n * @hideconstructor\n *\n * @param {Highcharts.Chart} chart\n * A chart instance.\n *\n * @param {Highcharts.AnnotationControllable} target\n * A controllable instance which is a target for a control point.\n *\n * @param {Highcharts.AnnotationControlPointOptionsObject} options\n * An options object.\n *\n * @param {number} [index]\n * Point index.\n */\nvar ControlPoint = /** @class */ (function (_super) {\n    __extends(ControlPoint, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    function ControlPoint(chart, target, options, index) {\n        var _this = _super.call(this) || this;\n        _this.graphic = void 0;\n        /**\n         * List of events for `anntation.options.events` that should not be\n         * added to `annotation.graphic` but to the `annotation`.\n         * @private\n         * @name Highcharts.AnnotationControlPoint#nonDOMEvents\n         * @type {Array<string>}\n         */\n        _this.nonDOMEvents = ['drag'];\n        _this.chart = chart;\n        _this.target = target;\n        _this.options = options;\n        _this.index = pick(options.index, index);\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Destroy the control point.\n     * @private\n     */\n    ControlPoint.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.graphic) {\n            this.graphic = this.graphic.destroy();\n        }\n        this.chart = null;\n        this.target = null;\n        this.options = null;\n    };\n    /**\n     * Redraw the control point.\n     * @private\n     * @param {boolean} [animation]\n     */\n    ControlPoint.prototype.redraw = function (animation) {\n        this.graphic[animation ? 'animate' : 'attr'](this.options.positioner.call(this, this.target));\n    };\n    /**\n     * Render the control point.\n     * @private\n     */\n    ControlPoint.prototype.render = function () {\n        var chart = this.chart, options = this.options;\n        this.graphic = chart.renderer\n            .symbol(options.symbol, 0, 0, options.width, options.height)\n            .add(chart.controlPointsGroup)\n            .css(options.style);\n        this.setVisibility(options.visible);\n        // npm test -- --tests \"highcharts/annotations-advanced/*\"\n        this.addEvents();\n    };\n    /**\n     * Set the visibility of the control point.\n     *\n     * @function Highcharts.AnnotationControlPoint#setVisibility\n     *\n     * @param {boolean} visible\n     * Visibility of the control point.\n     *\n     */\n    ControlPoint.prototype.setVisibility = function (visible) {\n        this.graphic[visible ? 'show' : 'hide']();\n        this.options.visible = visible;\n    };\n    /**\n     * Update the control point.\n     *\n     * @function Highcharts.AnnotationControlPoint#update\n     *\n     * @param {Partial<Highcharts.AnnotationControlPointOptionsObject>} userOptions\n     * New options for the control point.\n     */\n    ControlPoint.prototype.update = function (userOptions) {\n        var chart = this.chart, target = this.target, index = this.index, options = merge(true, this.options, userOptions);\n        this.destroy();\n        this.constructor(chart, target, options, index);\n        this.render(chart.controlPointsGroup);\n        this.redraw();\n    };\n    return ControlPoint;\n}(EventEmitter));\n/* *\n *\n *  Default Export\n *\n * */\nexport default ControlPoint;\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * Callback to modify annotation's possitioner controls.\n *\n * @callback Highcharts.AnnotationControlPointPositionerFunction\n * @param {Highcharts.AnnotationControlPoint} this\n * @param {Highcharts.AnnotationControllable} target\n * @return {Highcharts.PositionObject}\n */\n(''); // keeps doclets above in JS file\n","/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar seriesProto = SeriesRegistry.series.prototype;\nimport U from '../../Core/Utilities.js';\nvar defined = U.defined, fireEvent = U.fireEvent;\n/* *\n *\n *  Class\n *\n * */\n/**\n * A trimmed point object which imitates {@link Highchart.Point} class. It is\n * created when there is a need of pointing to some chart's position using axis\n * values or pixel values\n *\n * @requires modules/annotations\n *\n * @private\n * @class\n * @name Highcharts.AnnotationMockPoint\n *\n * @hideconstructor\n *\n * @param {Highcharts.Chart} chart\n * The chart instance.\n *\n * @param {Highcharts.AnnotationControllable|null} target\n * The related controllable.\n *\n * @param {Highcharts.AnnotationMockPointOptionsObject|Function} options\n * The options object.\n */\nvar MockPoint = /** @class */ (function () {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    function MockPoint(chart, target, options) {\n        this.plotX = void 0;\n        this.plotY = void 0;\n        /* *\n         *\n         * Functions\n         *\n         * */\n        /**\n         * A flag indicating that a point is not the real one.\n         *\n         * @type {boolean}\n         * @default true\n         */\n        this.mock = true;\n        /**\n         * A mock series instance imitating a real series from a real point.\n         *\n         * @name Annotation.AnnotationMockPoint#series\n         * @type {Highcharts.AnnotationMockSeries}\n         */\n        this.series = {\n            visible: true,\n            chart: chart,\n            getPlotBox: seriesProto.getPlotBox\n        };\n        /**\n         * @name Annotation.AnnotationMockPoint#target\n         * @type {Highcharts.AnnotationControllable|null}\n         */\n        this.target = target || null;\n        /**\n         * Options for the mock point.\n         *\n         * @name Annotation.AnnotationMockPoint#options\n         * @type {Highcharts.AnnotationsMockPointOptionsObject}\n         */\n        this.options = options;\n        /**\n         * If an xAxis is set it represents the point's value in terms of the\n         * xAxis.\n         *\n         * @name Annotation.AnnotationMockPoint#x\n         * @type {number|undefined}\n         */\n        /**\n         * If an yAxis is set it represents the point's value in terms of the\n         * yAxis.\n         *\n         * @name Annotation.AnnotationMockPoint#y\n         * @type {number|undefined}\n         */\n        /**\n         * It represents the point's pixel x coordinate relative to its plot\n         * box.\n         *\n         * @name Annotation.AnnotationMockPoint#plotX\n         * @type {number|undefined}\n         */\n        /**\n         * It represents the point's pixel y position relative to its plot box.\n         *\n         * @name Annotation.AnnotationMockPoint#plotY\n         * @type {number|undefined}\n         */\n        /**\n         * Whether the point is inside the plot box.\n         *\n         * @name Annotation.AnnotationMockPoint#isInside\n         * @type {boolean|undefined}\n         */\n        this.applyOptions(this.getOptions());\n    }\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * Create a mock point from a real Highcharts point.\n     *\n     * @private\n     * @static\n     *\n     * @param {Highcharts.Point} point\n     *\n     * @return {Highcharts.AnnotationMockPoint}\n     * A mock point instance.\n     */\n    MockPoint.fromPoint = function (point) {\n        return new MockPoint(point.series.chart, null, {\n            x: point.x,\n            y: point.y,\n            xAxis: point.series.xAxis,\n            yAxis: point.series.yAxis\n        });\n    };\n    /**\n     * Get the pixel position from the point like object.\n     *\n     * @private\n     * @static\n     *\n     * @param {Highcharts.AnnotationPointType} point\n     *\n     * @param {boolean} [paneCoordinates]\n     *        Whether the pixel position should be relative\n     *\n     * @return {Highcharts.PositionObject} pixel position\n     */\n    MockPoint.pointToPixels = function (point, paneCoordinates) {\n        var series = point.series, chart = series.chart;\n        var x = point.plotX || 0, y = point.plotY || 0, plotBox;\n        if (chart.inverted) {\n            if (point.mock) {\n                x = point.plotY;\n                y = point.plotX;\n            }\n            else {\n                x = chart.plotWidth - (point.plotY || 0);\n                y = chart.plotHeight - (point.plotX || 0);\n            }\n        }\n        if (series && !paneCoordinates) {\n            plotBox = series.getPlotBox();\n            x += plotBox.translateX;\n            y += plotBox.translateY;\n        }\n        return {\n            x: x,\n            y: y\n        };\n    };\n    /**\n     * Get fresh mock point options from the point like object.\n     *\n     * @private\n     * @static\n     *\n     * @param {Highcharts.AnnotationPointType} point\n     *\n     * @return {Highcharts.AnnotationMockPointOptionsObject}\n     * A mock point's options.\n     */\n    MockPoint.pointToOptions = function (point) {\n        return {\n            x: point.x,\n            y: point.y,\n            xAxis: point.series.xAxis,\n            yAxis: point.series.yAxis\n        };\n    };\n    /**\n     * Apply options for the point.\n     * @private\n     * @param {Highcharts.AnnotationMockPointOptionsObject} options\n     */\n    MockPoint.prototype.applyOptions = function (options) {\n        this.command = options.command;\n        this.setAxis(options, 'x');\n        this.setAxis(options, 'y');\n        this.refresh();\n    };\n    /**\n     * Returns a label config object - the same as\n     * Highcharts.Point.prototype.getLabelConfig\n     * @private\n     * @return {Highcharts.AnnotationMockLabelOptionsObject}\n     * The point's label config\n     */\n    MockPoint.prototype.getLabelConfig = function () {\n        return {\n            x: this.x,\n            y: this.y,\n            point: this\n        };\n    };\n    /**\n     * Get the point's options.\n     * @private\n     * @return {Highcharts.AnnotationMockPointOptionsObject}\n     * The mock point's options.\n     */\n    MockPoint.prototype.getOptions = function () {\n        return this.hasDynamicOptions() ?\n            this.options(this.target) :\n            this.options;\n    };\n    /**\n     * Check if the point has dynamic options.\n     * @private\n     * @return {boolean}\n     * A positive flag if the point has dynamic options.\n     */\n    MockPoint.prototype.hasDynamicOptions = function () {\n        return typeof this.options === 'function';\n    };\n    /**\n     * Check if the point is inside its pane.\n     * @private\n     * @return {boolean} A flag indicating whether the point is inside the pane.\n     */\n    MockPoint.prototype.isInsidePlot = function () {\n        var plotX = this.plotX, plotY = this.plotY, xAxis = this.series.xAxis, yAxis = this.series.yAxis, e = {\n            x: plotX,\n            y: plotY,\n            isInsidePlot: true,\n            options: {}\n        };\n        if (xAxis) {\n            e.isInsidePlot = defined(plotX) && plotX >= 0 && plotX <= xAxis.len;\n        }\n        if (yAxis) {\n            e.isInsidePlot =\n                e.isInsidePlot &&\n                    defined(plotY) &&\n                    plotY >= 0 && plotY <= yAxis.len;\n        }\n        fireEvent(this.series.chart, 'afterIsInsidePlot', e);\n        return e.isInsidePlot;\n    };\n    /**\n     * Refresh point values and coordinates based on its options.\n     * @private\n     */\n    MockPoint.prototype.refresh = function () {\n        var series = this.series, xAxis = series.xAxis, yAxis = series.yAxis, options = this.getOptions();\n        if (xAxis) {\n            this.x = options.x;\n            this.plotX = xAxis.toPixels(options.x, true);\n        }\n        else {\n            this.x = void 0;\n            this.plotX = options.x;\n        }\n        if (yAxis) {\n            this.y = options.y;\n            this.plotY = yAxis.toPixels(options.y, true);\n        }\n        else {\n            this.y = null;\n            this.plotY = options.y;\n        }\n        this.isInside = this.isInsidePlot();\n    };\n    /**\n     * Refresh point options based on its plot coordinates.\n     * @private\n     */\n    MockPoint.prototype.refreshOptions = function () {\n        var series = this.series, xAxis = series.xAxis, yAxis = series.yAxis;\n        this.x = this.options.x = xAxis ?\n            this.options.x = xAxis.toValue(this.plotX, true) :\n            this.plotX;\n        this.y = this.options.y = yAxis ?\n            yAxis.toValue(this.plotY, true) :\n            this.plotY;\n    };\n    /**\n     * Rotate the point.\n     * @private\n     * @param {number} cx origin x rotation\n     * @param {number} cy origin y rotation\n     * @param {number} radians\n     */\n    MockPoint.prototype.rotate = function (cx, cy, radians) {\n        if (!this.hasDynamicOptions()) {\n            var cos = Math.cos(radians), sin = Math.sin(radians), x = this.plotX - cx, y = this.plotY - cy, tx = x * cos - y * sin, ty = x * sin + y * cos;\n            this.plotX = tx + cx;\n            this.plotY = ty + cy;\n            this.refreshOptions();\n        }\n    };\n    /**\n     * Scale the point.\n     *\n     * @private\n     *\n     * @param {number} cx\n     * Origin x transformation.\n     *\n     * @param {number} cy\n     * Origin y transformation.\n     *\n     * @param {number} sx\n     * Scale factor x.\n     *\n     * @param {number} sy\n     * Scale factor y.\n     */\n    MockPoint.prototype.scale = function (cx, cy, sx, sy) {\n        if (!this.hasDynamicOptions()) {\n            var x = this.plotX * sx, y = this.plotY * sy, tx = (1 - sx) * cx, ty = (1 - sy) * cy;\n            this.plotX = tx + x;\n            this.plotY = ty + y;\n            this.refreshOptions();\n        }\n    };\n    /**\n     * Set x or y axis.\n     * @private\n     * @param {Highcharts.AnnotationMockPointOptionsObject} options\n     * @param {string} xOrY\n     * 'x' or 'y' string literal\n     */\n    MockPoint.prototype.setAxis = function (options, xOrY) {\n        var axisName = (xOrY + 'Axis'), axisOptions = options[axisName], chart = this.series.chart;\n        this.series[axisName] =\n            typeof axisOptions === 'object' ?\n                axisOptions :\n                defined(axisOptions) ?\n                    (chart[axisName][axisOptions] ||\n                        // @todo v--- (axisName)[axisOptions] ?\n                        chart.get(axisOptions)) :\n                    null;\n    };\n    /**\n     * Transform the mock point to an anchor (relative position on the chart).\n     * @private\n     * @return {Array<number>}\n     * A quadruple of numbers which denotes x, y, width and height of the box\n     **/\n    MockPoint.prototype.toAnchor = function () {\n        var anchor = [this.plotX, this.plotY, 0, 0];\n        if (this.series.chart.inverted) {\n            anchor[0] = this.plotY;\n            anchor[1] = this.plotX;\n        }\n        return anchor;\n    };\n    /**\n     * Translate the point.\n     *\n     * @private\n     *\n     * @param {number|undefined} cx\n     * Origin x transformation.\n     *\n     * @param {number|undefined} cy\n     * Origin y transformation.\n     *\n     * @param {number} dx\n     * Translation for x coordinate.\n     *\n     * @param {number} dy\n     * Translation for y coordinate.\n     **/\n    MockPoint.prototype.translate = function (_cx, _cy, dx, dy) {\n        if (!this.hasDynamicOptions()) {\n            this.plotX += dx;\n            this.plotY += dy;\n            this.refreshOptions();\n        }\n    };\n    return MockPoint;\n}());\n/* *\n *\n *  Default Export\n *\n * */\nexport default MockPoint;\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * @private\n * @interface Highcharts.AnnotationMockLabelOptionsObject\n */ /**\n* Point instance of the point.\n* @name Highcharts.AnnotationMockLabelOptionsObject#point\n* @type {Highcharts.AnnotationMockPoint}\n*/ /**\n* X value translated to x axis scale.\n* @name Highcharts.AnnotationMockLabelOptionsObject#x\n* @type {number|null}\n*/ /**\n* Y value translated to y axis scale.\n* @name Highcharts.AnnotationMockLabelOptionsObject#y\n* @type {number|null}\n*/\n/**\n * Object of shape point.\n *\n * @interface Highcharts.AnnotationMockPointOptionsObject\n */ /**\n* The x position of the point. Units can be either in axis\n* or chart pixel coordinates.\n*\n* @type      {number}\n* @name      Highcharts.AnnotationMockPointOptionsObject.x\n*/ /**\n* The y position of the point. Units can be either in axis\n* or chart pixel coordinates.\n*\n* @type      {number}\n* @name      Highcharts.AnnotationMockPointOptionsObject.y\n*/ /**\n* This number defines which xAxis the point is connected to.\n* It refers to either the axis id or the index of the axis in\n* the xAxis array. If the option is not configured or the axis\n* is not found the point's x coordinate refers to the chart\n* pixels.\n*\n* @type      {number|string|null}\n* @name      Highcharts.AnnotationMockPointOptionsObject.xAxis\n*/ /**\n* This number defines which yAxis the point is connected to.\n* It refers to either the axis id or the index of the axis in\n* the yAxis array. If the option is not configured or the axis\n* is not found the point's y coordinate refers to the chart\n* pixels.\n*\n* @type      {number|string|null}\n* @name      Highcharts.AnnotationMockPointOptionsObject.yAxis\n*/\n/**\n * Callback function that returns the annotation shape point.\n *\n * @callback Highcharts.AnnotationMockPointFunction\n *\n * @param  {Highcharts.Annotation} annotation\n *         An annotation instance.\n *\n * @return {Highcharts.AnnotationMockPointOptionsObject}\n *         Annotations shape point.\n */\n/**\n * A mock series instance imitating a real series from a real point.\n * @private\n * @interface Highcharts.AnnotationMockSeries\n */ /**\n* Whether a series is visible.\n* @name Highcharts.AnnotationMockSeries#visible\n* @type {boolean}\n*/ /**\n* A chart instance.\n* @name Highcharts.AnnotationMockSeries#chart\n* @type {Highcharts.Chart}\n*/ /**\n* @name Highcharts.AnnotationMockSeries#getPlotBox\n* @type {Function}\n*/\n/**\n * Indicates if this is a mock point for an annotation.\n * @name Highcharts.Point#mock\n * @type {boolean|undefined}\n */\n(''); // keeps doclets above in JS file\n","/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport ControlPoint from '../ControlPoint.js';\nimport MockPoint from '../MockPoint.js';\nimport Tooltip from '../../../Core/Tooltip.js';\nimport U from '../../../Core/Utilities.js';\nvar isObject = U.isObject, isString = U.isString, merge = U.merge, splat = U.splat;\n/* *\n *\n *  Class\n *\n * */\n/**\n * It provides methods for handling points, control points\n * and points transformations.\n * @private\n */\nvar Controllable = /** @class */ (function () {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    function Controllable(annotation, options, index, itemType) {\n        this.graphic = void 0;\n        this.annotation = annotation;\n        this.chart = annotation.chart;\n        this.collection = (itemType === 'label' ? 'labels' : 'shapes');\n        this.options = options;\n        this.points = [];\n        this.controlPoints = [];\n        this.index = index;\n        this.itemType = itemType;\n        this.init(annotation, options, index);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Add control points to a controllable.\n     * @private\n     */\n    Controllable.prototype.addControlPoints = function () {\n        var _this = this;\n        var controlPoints = this.controlPoints, controlPointsOptions = this.options.controlPoints || [];\n        controlPointsOptions.forEach(function (controlPointOptions, i) {\n            var options = merge(_this.options.controlPointOptions, controlPointOptions);\n            if (!options.index) {\n                options.index = i;\n            }\n            controlPointsOptions[i] = options;\n            controlPoints.push(new ControlPoint(_this.chart, _this, options));\n        });\n    };\n    /**\n     * Returns object which denotes anchor position - relative and absolute.\n     * @private\n     * @param {Highcharts.AnnotationPointType} point\n     *        A point like object.\n     * @return {Highcharts.AnnotationAnchorObject}\n     *         A controllable anchor\n     */\n    Controllable.prototype.anchor = function (point) {\n        var plotBox = point.series.getPlotBox(), chart = point.series.chart, box = point.mock ?\n            point.toAnchor() :\n            Tooltip.prototype.getAnchor.call({\n                chart: point.series.chart\n            }, point), anchor = {\n            x: box[0] + (this.options.x || 0),\n            y: box[1] + (this.options.y || 0),\n            height: box[2] || 0,\n            width: box[3] || 0\n        };\n        return {\n            relativePosition: anchor,\n            absolutePosition: merge(anchor, {\n                x: anchor.x + (point.mock ? plotBox.translateX : chart.plotLeft),\n                y: anchor.y + (point.mock ? plotBox.translateY : chart.plotTop)\n            })\n        };\n    };\n    /**\n     * Redirect attr usage on the controllable graphic element.\n     * @private\n     */\n    Controllable.prototype.attr = function () {\n        var _args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            _args[_i] = arguments[_i];\n        }\n        this.graphic.attr.apply(this.graphic, arguments);\n    };\n    /**\n     * Utility function for mapping item's options\n     * to element's attribute\n     * @private\n     * @param {Highcharts.AnnotationsLabelsOptions|Highcharts.AnnotationsShapesOptions} options\n     * @return {Highcharts.SVGAttributes}\n     *         Mapped options.\n     */\n    Controllable.prototype.attrsFromOptions = function (options) {\n        var map = this.constructor.attrsMap, attrs = {}, styledMode = this.chart.styledMode;\n        var key, mappedKey;\n        for (key in options) { // eslint-disable-line guard-for-in\n            mappedKey = map[key];\n            if (typeof map[key] !== 'undefined' &&\n                (!styledMode ||\n                    ['fill', 'stroke', 'stroke-width']\n                        .indexOf(mappedKey) === -1)) {\n                attrs[mappedKey] = options[key];\n            }\n        }\n        return attrs;\n    };\n    /**\n     * Destroy a controllable.\n     * @private\n     */\n    Controllable.prototype.destroy = function () {\n        if (this.graphic) {\n            this.graphic = this.graphic.destroy();\n        }\n        if (this.tracker) {\n            this.tracker = this.tracker.destroy();\n        }\n        this.controlPoints.forEach(function (controlPoint) { return controlPoint.destroy(); });\n        this.chart = null;\n        this.points = null;\n        this.controlPoints = null;\n        this.options = null;\n        if (this.annotation) {\n            this.annotation = null;\n        }\n    };\n    /**\n     * Get the controllable's points options.\n     * @private\n     * @return {Array<Highcharts.PointOptionsObject>}\n     *         An array of points' options.\n     */\n    Controllable.prototype.getPointsOptions = function () {\n        var options = this.options;\n        return (options.points ||\n            (options.point && splat(options.point)));\n    };\n    /**\n     * Init the controllable\n     * @private\n     */\n    Controllable.prototype.init = function (annotation, options, index) {\n        this.annotation = annotation;\n        this.chart = annotation.chart;\n        this.options = options;\n        this.points = [];\n        this.controlPoints = [];\n        this.index = index;\n        this.linkPoints();\n        this.addControlPoints();\n    };\n    /**\n     * Find point-like objects based on points options.\n     * @private\n     * @return {Array<Annotation.PointLike>}\n     *         An array of point-like objects.\n     */\n    Controllable.prototype.linkPoints = function () {\n        var pointsOptions = this.getPointsOptions(), points = this.points, len = (pointsOptions && pointsOptions.length) || 0;\n        var i, point;\n        for (i = 0; i < len; i++) {\n            point = this.point(pointsOptions[i], points[i]);\n            if (!point) {\n                points.length = 0;\n                return;\n            }\n            if (point.mock) {\n                point.refresh();\n            }\n            points[i] = point;\n        }\n        return points;\n    };\n    /**\n     * Map point's options to a point-like object.\n     * @private\n     * @param {string|Function|Highcharts.AnnotationMockPointOptionsObject|Highcharts.AnnotationPointType} pointOptions\n     *        Point's options.\n     * @param {Highcharts.AnnotationPointType} point\n     *        A point-like instance.\n     * @return {Highcharts.AnnotationPointType|null}\n     *         If the point is found/set returns this point, otherwise null\n     */\n    Controllable.prototype.point = function (pointOptions, point) {\n        if (pointOptions && pointOptions.series) {\n            return pointOptions;\n        }\n        if (!point || point.series === null) {\n            if (isObject(pointOptions)) {\n                point = new MockPoint(this.chart, this, pointOptions);\n            }\n            else if (isString(pointOptions)) {\n                point = this.chart.get(pointOptions) || null;\n            }\n            else if (typeof pointOptions === 'function') {\n                var pointConfig = pointOptions.call(point, this);\n                point = pointConfig.series ?\n                    pointConfig :\n                    new MockPoint(this.chart, this, pointOptions);\n            }\n        }\n        return point;\n    };\n    /**\n     * Render a controllable.\n     * @private\n     */\n    Controllable.prototype.render = function (_parentGroup) {\n        this.controlPoints.forEach(function (controlPoint) { return controlPoint.render(); });\n    };\n    /**\n     * Redraw a controllable.\n     * @private\n     */\n    Controllable.prototype.redraw = function (animation) {\n        this.controlPoints.forEach(function (controlPoint) { return controlPoint.redraw(animation); });\n    };\n    /**\n     * Rotate a controllable.\n     * @private\n     * @param {number} cx\n     *        Origin x rotation\n     * @param {number} cy\n     *        Origin y rotation\n     * @param {number} radians\n     **/\n    Controllable.prototype.rotate = function (cx, cy, radians) {\n        this.transform('rotate', cx, cy, radians);\n    };\n    /**\n     * Scale a controllable.\n     * @private\n     * @param {number} cx\n     *        Origin x rotation\n     * @param {number} cy\n     *        Origin y rotation\n     * @param {number} sx\n     *        Scale factor x\n     * @param {number} sy\n     *        Scale factor y\n     */\n    Controllable.prototype.scale = function (cx, cy, sx, sy) {\n        this.transform('scale', cx, cy, sx, sy);\n    };\n    /**\n     * Set control points' visibility.\n     * @private\n     */\n    Controllable.prototype.setControlPointsVisibility = function (visible) {\n        this.controlPoints.forEach(function (controlPoint) {\n            controlPoint.setVisibility(visible);\n        });\n    };\n    /**\n     * Check if a controllable should be rendered/redrawn.\n     * @private\n     * @return {boolean}\n     *         Whether a controllable should be drawn.\n     */\n    Controllable.prototype.shouldBeDrawn = function () {\n        return !!this.points.length;\n    };\n    /**\n     * Transform a controllable with a specific transformation.\n     * @private\n     * @param {string} transformation\n     *        A transformation name\n     * @param {number|null} cx\n     *        Origin x transformation\n     * @param {number|null} cy\n     *        Origin y transformation\n     * @param {number} p1\n     *        Param for the transformation\n     * @param {number} [p2]\n     *        Param for the transformation\n     */\n    Controllable.prototype.transform = function (transformation, cx, cy, p1, p2) {\n        var _this = this;\n        if (this.chart.inverted) {\n            var temp = cx;\n            cx = cy;\n            cy = temp;\n        }\n        this.points.forEach(function (_point, i) { return (_this.transformPoint(transformation, cx, cy, p1, p2, i)); }, this);\n    };\n    /**\n     * Transform a point with a specific transformation\n     * If a transformed point is a real point it is replaced with\n     * the mock point.\n     * @private\n     * @param {string} transformation\n     *        A transformation name\n     * @param {number|null} cx\n     *        Origin x transformation\n     * @param {number|null} cy\n     *        Origin y transformation\n     * @param {number} p1\n     *        Param for the transformation\n     * @param {number|undefined} p2\n     *        Param for the transformation\n     * @param {number} i\n     *        Index of the point\n     */\n    Controllable.prototype.transformPoint = function (transformation, cx, cy, p1, p2, i) {\n        var point = this.points[i];\n        if (!point.mock) {\n            point = this.points[i] = MockPoint.fromPoint(point);\n        }\n        point[transformation](cx, cy, p1, p2);\n    };\n    /**\n     * Translate a controllable.\n     * @private\n     * @param {number} dx\n     *        Translation for x coordinate\n     * @param {number} dy\n     *        Translation for y coordinate\n     **/\n    Controllable.prototype.translate = function (dx, dy) {\n        this.transform('translate', null, null, dx, dy);\n    };\n    /**\n     * Translate a specific point within a controllable.\n     * @private\n     * @param {number} dx\n     *        Translation for x coordinate\n     * @param {number} dy\n     *        Translation for y coordinate\n     * @param {number} i\n     *        Index of the point\n     **/\n    Controllable.prototype.translatePoint = function (dx, dy, i) {\n        this.transformPoint('translate', null, null, dx, dy, i);\n    };\n    /**\n     * Translate shape within controllable item.\n     * Replaces `controllable.translate` method.\n     * @private\n     * @param {number} dx\n     *        Translation for x coordinate\n     * @param {number} dy\n     *        Translation for y coordinate\n     * @param {boolean|undefined} translateSecondPoint\n     *        If the shape has two points attached to it, this option allows you\n     *        to translate also the second point.\n     */\n    Controllable.prototype.translateShape = function (dx, dy, translateSecondPoint) {\n        var chart = this.annotation.chart, \n        // Annotation.options\n        shapeOptions = this.annotation.userOptions, \n        // Chart.options.annotations\n        annotationIndex = chart.annotations.indexOf(this.annotation), chartOptions = chart.options.annotations[annotationIndex];\n        this.translatePoint(dx, dy, 0);\n        if (translateSecondPoint) {\n            this.translatePoint(dx, dy, 1);\n        }\n        // Options stored in:\n        // - chart (for exporting)\n        // - current config (for redraws)\n        chartOptions[this.collection][this.index]\n            .point = this.options.point;\n        shapeOptions[this.collection][this.index]\n            .point = this.options.point;\n    };\n    /**\n     * Update a controllable.\n     * @private\n     */\n    Controllable.prototype.update = function (newOptions) {\n        var annotation = this.annotation, options = merge(true, this.options, newOptions), parentGroup = this.graphic.parentGroup;\n        this.destroy();\n        this.constructor(annotation, options, this.index, this.itemType);\n        this.render(parentGroup);\n        this.redraw();\n    };\n    return Controllable;\n}());\n/* *\n *\n *  Default Export\n *\n * */\nexport default Controllable;\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * An object which denots a controllable's anchor positions - relative and\n * absolute.\n *\n * @private\n * @interface Highcharts.AnnotationAnchorObject\n */ /**\n* Relative to the plot area position\n* @name Highcharts.AnnotationAnchorObject#relativePosition\n* @type {Highcharts.BBoxObject}\n*/ /**\n* Absolute position\n* @name Highcharts.AnnotationAnchorObject#absolutePosition\n* @type {Highcharts.BBoxObject}\n*/\n/**\n * @interface Highcharts.AnnotationControllable\n */ /**\n* @name Highcharts.AnnotationControllable#annotation\n* @type {Highcharts.Annotation}\n*/ /**\n* @name Highcharts.AnnotationControllable#chart\n* @type {Highcharts.Chart}\n*/ /**\n* @name Highcharts.AnnotationControllable#collection\n* @type {string}\n*/ /**\n* @private\n* @name Highcharts.AnnotationControllable#controlPoints\n* @type {Array<Highcharts.AnnotationControlPoint>}\n*/ /**\n* @name Highcharts.AnnotationControllable#points\n* @type {Array<Highcharts.Point>}\n*/\n(''); // keeps doclets above in JS file\n","/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Controllable from './Controllable.js';\nimport ControllableDefaults from './ControllableDefaults.js';\nvar defaultMarkers = ControllableDefaults.defaultMarkers;\nimport H from '../../../Core/Globals.js';\nimport U from '../../../Core/Utilities.js';\nvar addEvent = U.addEvent, defined = U.defined, extend = U.extend, merge = U.merge, uniqueKey = U.uniqueKey;\n/* *\n *\n *  Constants\n *\n * */\nvar composedClasses = [];\nvar markerEndSetter = createMarkerSetter('marker-end');\nvar markerStartSetter = createMarkerSetter('marker-start');\n// See TRACKER_FILL in highcharts.src.js\nvar TRACKER_FILL = 'rgba(192,192,192,' + (H.svg ? 0.0001 : 0.002) + ')';\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction createMarkerSetter(markerType) {\n    return function (value) {\n        this.attr(markerType, 'url(#' + value + ')');\n    };\n}\n/**\n * @private\n */\nfunction onChartAfterGetContainer() {\n    this.options.defs = merge(defaultMarkers, this.options.defs || {});\n    // objectEach(this.options.defs, function (def): void {\n    //     const attributes = def.attributes;\n    //     if (\n    //         def.tagName === 'marker' &&\n    //         attributes &&\n    //         attributes.id &&\n    //         attributes.display !== 'none'\n    //     ) {\n    //         this.renderer.addMarker(attributes.id, def);\n    //     }\n    // }, this);\n}\n/**\n * @private\n */\nfunction svgRendererAddMarker(id, markerOptions) {\n    var options = { attributes: { id: id } };\n    var attrs = {\n        stroke: markerOptions.color || 'none',\n        fill: markerOptions.color || 'rgba(0, 0, 0, 0.75)'\n    };\n    options.children = (markerOptions.children &&\n        markerOptions.children.map(function (child) {\n            return merge(attrs, child);\n        }));\n    var ast = merge(true, {\n        attributes: {\n            markerWidth: 20,\n            markerHeight: 20,\n            refX: 0,\n            refY: 0,\n            orient: 'auto'\n        }\n    }, markerOptions, options);\n    var marker = this.definition(ast);\n    marker.id = id;\n    return marker;\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * A controllable path class.\n *\n * @requires modules/annotations\n *\n * @private\n * @class\n * @name Highcharts.AnnotationControllablePath\n *\n * @param {Highcharts.Annotation}\n * Related annotation.\n *\n * @param {Highcharts.AnnotationsShapeOptions} options\n * A path's options object.\n *\n * @param {number} index\n * Index of the path.\n */\nvar ControllablePath = /** @class */ (function (_super) {\n    __extends(ControllablePath, _super);\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    function ControllablePath(annotation, options, index) {\n        var _this = _super.call(this, annotation, options, index, 'shape') || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.type = 'path';\n        return _this;\n    }\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    ControllablePath.compose = function (ChartClass, SVGRendererClass) {\n        if (composedClasses.indexOf(ChartClass) === -1) {\n            composedClasses.push(ChartClass);\n            addEvent(ChartClass, 'afterGetContainer', onChartAfterGetContainer);\n        }\n        if (composedClasses.indexOf(SVGRendererClass) === -1) {\n            composedClasses.push(SVGRendererClass);\n            var svgRendererProto = SVGRendererClass.prototype;\n            svgRendererProto.addMarker = svgRendererAddMarker;\n        }\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Map the controllable path to 'd' path attribute.\n     *\n     * @return {Highcharts.SVGPathArray|null}\n     * A path's d attribute.\n     */\n    ControllablePath.prototype.toD = function () {\n        var dOption = this.options.d;\n        if (dOption) {\n            return typeof dOption === 'function' ?\n                dOption.call(this) :\n                dOption;\n        }\n        var points = this.points, len = points.length, d = [];\n        var showPath = len, point = points[0], position = showPath && this.anchor(point).absolutePosition, pointIndex = 0, command;\n        if (position) {\n            d.push(['M', position.x, position.y]);\n            while (++pointIndex < len && showPath) {\n                point = points[pointIndex];\n                command = point.command || 'L';\n                position = this.anchor(point).absolutePosition;\n                if (command === 'M') {\n                    d.push([command, position.x, position.y]);\n                }\n                else if (command === 'L') {\n                    d.push([command, position.x, position.y]);\n                }\n                else if (command === 'Z') {\n                    d.push([command]);\n                }\n                showPath = point.series.visible;\n            }\n        }\n        return (showPath && this.graphic ?\n            this.chart.renderer.crispLine(d, this.graphic.strokeWidth()) :\n            null);\n    };\n    ControllablePath.prototype.shouldBeDrawn = function () {\n        return _super.prototype.shouldBeDrawn.call(this) || !!this.options.d;\n    };\n    ControllablePath.prototype.render = function (parent) {\n        var options = this.options, attrs = this.attrsFromOptions(options);\n        this.graphic = this.annotation.chart.renderer\n            .path([['M', 0, 0]])\n            .attr(attrs)\n            .add(parent);\n        if (options.className) {\n            this.graphic.addClass(options.className);\n        }\n        this.tracker = this.annotation.chart.renderer\n            .path([['M', 0, 0]])\n            .addClass('highcharts-tracker-line')\n            .attr({\n            zIndex: 2\n        })\n            .add(parent);\n        if (!this.annotation.chart.styledMode) {\n            this.tracker.attr({\n                'stroke-linejoin': 'round',\n                stroke: TRACKER_FILL,\n                fill: TRACKER_FILL,\n                'stroke-width': this.graphic.strokeWidth() +\n                    options.snap * 2\n            });\n        }\n        _super.prototype.render.call(this);\n        extend(this.graphic, { markerStartSetter: markerStartSetter, markerEndSetter: markerEndSetter });\n        this.setMarkers(this);\n    };\n    ControllablePath.prototype.redraw = function (animation) {\n        if (this.graphic) {\n            var d = this.toD(), action = animation ? 'animate' : 'attr';\n            if (d) {\n                this.graphic[action]({ d: d });\n                this.tracker[action]({ d: d });\n            }\n            else {\n                this.graphic.attr({ d: 'M 0 ' + -9e9 });\n                this.tracker.attr({ d: 'M 0 ' + -9e9 });\n            }\n            this.graphic.placed = this.tracker.placed = !!d;\n        }\n        _super.prototype.redraw.call(this, animation);\n    };\n    /**\n     * Set markers.\n     * @private\n     * @param {Highcharts.AnnotationControllablePath} item\n     */\n    ControllablePath.prototype.setMarkers = function (item) {\n        var itemOptions = item.options, chart = item.chart, defs = chart.options.defs, fill = itemOptions.fill, color = defined(fill) && fill !== 'none' ?\n            fill :\n            itemOptions.stroke;\n        var setMarker = function (markerType) {\n            var markerId = itemOptions[markerType], def, predefinedMarker, key, marker;\n            if (markerId) {\n                for (key in defs) { // eslint-disable-line guard-for-in\n                    def = defs[key];\n                    if ((markerId === (def.attributes && def.attributes.id) ||\n                        // Legacy, for\n                        // unit-tests/annotations/annotations-shapes\n                        markerId === def.id) &&\n                        def.tagName === 'marker') {\n                        predefinedMarker = def;\n                        break;\n                    }\n                }\n                if (predefinedMarker) {\n                    marker = item[markerType] = chart.renderer\n                        .addMarker((itemOptions.id || uniqueKey()) + '-' + markerId, merge(predefinedMarker, { color: color }));\n                    item.attr(markerType, marker.getAttribute('id'));\n                }\n            }\n        };\n        ['markerStart', 'markerEnd']\n            .forEach(setMarker);\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * A map object which allows to map options attributes to element attributes\n     *\n     * @name Highcharts.AnnotationControllablePath.attrsMap\n     * @type {Highcharts.Dictionary<string>}\n     */\n    ControllablePath.attrsMap = {\n        dashStyle: 'dashstyle',\n        strokeWidth: 'stroke-width',\n        stroke: 'stroke',\n        fill: 'fill',\n        zIndex: 'zIndex'\n    };\n    return ControllablePath;\n}(Controllable));\n/* *\n *\n *  Default Export\n *\n * */\nexport default ControllablePath;\n","/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n/**\n * Options for configuring markers for annotations.\n *\n * An example of the arrow marker:\n * <pre>\n * {\n *   arrow: {\n *     id: 'arrow',\n *     tagName: 'marker',\n *     refY: 5,\n *     refX: 5,\n *     markerWidth: 10,\n *     markerHeight: 10,\n *     children: [{\n *       tagName: 'path',\n *       attrs: {\n *         d: 'M 0 0 L 10 5 L 0 10 Z',\n *         'stroke-width': 0\n *       }\n *     }]\n *   }\n * }\n * </pre>\n *\n * @sample highcharts/annotations/custom-markers/\n *         Define a custom marker for annotations\n *\n * @sample highcharts/css/annotations-markers/\n *         Define markers in a styled mode\n *\n * @type         {Highcharts.Dictionary<Highcharts.ASTNode>}\n * @since        6.0.0\n * @optionparent defs\n */\nvar defaultMarkers = {\n    /**\n     * @type {Highcharts.ASTNode}\n     */\n    arrow: {\n        tagName: 'marker',\n        attributes: {\n            id: 'arrow',\n            refY: 5,\n            refX: 9,\n            markerWidth: 10,\n            markerHeight: 10\n        },\n        /**\n         * @type {Array<Highcharts.DefsOptions>}\n         */\n        children: [{\n                tagName: 'path',\n                attributes: {\n                    d: 'M 0 0 L 10 5 L 0 10 Z',\n                    'stroke-width': 0\n                }\n            }]\n    },\n    /**\n     * @type {Highcharts.ASTNode}\n     */\n    'reverse-arrow': {\n        tagName: 'marker',\n        attributes: {\n            id: 'reverse-arrow',\n            refY: 5,\n            refX: 1,\n            markerWidth: 10,\n            markerHeight: 10\n        },\n        children: [{\n                tagName: 'path',\n                attributes: {\n                    // reverse triangle (used as an arrow)\n                    d: 'M 0 5 L 10 0 L 10 10 Z',\n                    'stroke-width': 0\n                }\n            }]\n    }\n};\n/* *\n *\n *  Default Export\n *\n * */\nvar ControllableDefaults = {\n    defaultMarkers: defaultMarkers\n};\nexport default ControllableDefaults;\n","/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Controllable from './Controllable.js';\nimport ControllablePath from './ControllablePath.js';\nimport U from '../../../Core/Utilities.js';\nvar merge = U.merge;\n/* *\n *\n *  Class\n *\n * */\n/**\n * A controllable rect class.\n *\n * @requires modules/annotations\n *\n * @private\n * @class\n * @name Highcharts.AnnotationControllableRect\n *\n * @param {Highcharts.Annotation} annotation\n * An annotation instance.\n *\n * @param {Highcharts.AnnotationsShapeOptions} options\n * A rect's options.\n *\n * @param {number} index\n * Index of the rectangle\n */\nvar ControllableRect = /** @class */ (function (_super) {\n    __extends(ControllableRect, _super);\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    function ControllableRect(annotation, options, index) {\n        var _this = _super.call(this, annotation, options, index, 'shape') || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.type = 'rect';\n        _this.translate = _super.prototype.translateShape;\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    ControllableRect.prototype.render = function (parent) {\n        var attrs = this.attrsFromOptions(this.options);\n        this.graphic = this.annotation.chart.renderer\n            .rect(0, -9e9, 0, 0)\n            .attr(attrs)\n            .add(parent);\n        _super.prototype.render.call(this);\n    };\n    ControllableRect.prototype.redraw = function (animation) {\n        if (this.graphic) {\n            var position = this.anchor(this.points[0]).absolutePosition;\n            if (position) {\n                this.graphic[animation ? 'animate' : 'attr']({\n                    x: position.x,\n                    y: position.y,\n                    width: this.options.width,\n                    height: this.options.height\n                });\n            }\n            else {\n                this.attr({\n                    x: 0,\n                    y: -9e9\n                });\n            }\n            this.graphic.placed = Boolean(position);\n        }\n        _super.prototype.redraw.call(this, animation);\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * A map object which allows to map options attributes to element attributes\n     *\n     * @type {Annotation.ControllableRect.AttrsMap}\n     */\n    ControllableRect.attrsMap = merge(ControllablePath.attrsMap, {\n        width: 'width',\n        height: 'height'\n    });\n    return ControllableRect;\n}(Controllable));\n/* *\n *\n *  Default Export\n *\n * */\nexport default ControllableRect;\n","/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Controllable from './Controllable.js';\nimport ControllablePath from './ControllablePath.js';\nimport U from '../../../Core/Utilities.js';\nvar merge = U.merge;\n/* *\n *\n *  Class\n *\n * */\n/**\n * A controllable circle class.\n *\n * @requires modules/annotations\n *\n * @private\n * @class\n * @name Highcharts.AnnotationControllableCircle\n *\n * @param {Highcharts.Annotation} annotation an annotation instance\n * @param {Highcharts.AnnotationsShapeOptions} options a shape's options\n * @param {number} index of the circle\n */\nvar ControllableCircle = /** @class */ (function (_super) {\n    __extends(ControllableCircle, _super);\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    function ControllableCircle(annotation, options, index) {\n        var _this = _super.call(this, annotation, options, index, 'shape') || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.type = 'circle';\n        _this.translate = _super.prototype.translateShape;\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    ControllableCircle.prototype.redraw = function (animation) {\n        if (this.graphic) {\n            var position = this.anchor(this.points[0]).absolutePosition;\n            if (position) {\n                this.graphic[animation ? 'animate' : 'attr']({\n                    x: position.x,\n                    y: position.y,\n                    r: this.options.r\n                });\n            }\n            else {\n                this.graphic.attr({\n                    x: 0,\n                    y: -9e9\n                });\n            }\n            this.graphic.placed = !!position;\n        }\n        _super.prototype.redraw.call(this, animation);\n    };\n    /**\n     * @private\n     */\n    ControllableCircle.prototype.render = function (parent) {\n        var attrs = this.attrsFromOptions(this.options);\n        this.graphic = this.annotation.chart.renderer\n            .circle(0, -9e9, 0)\n            .attr(attrs)\n            .add(parent);\n        _super.prototype.render.call(this);\n    };\n    /**\n     * Set the radius.\n     * @private\n     * @param {number} r\n     *        A radius to be set\n     */\n    ControllableCircle.prototype.setRadius = function (r) {\n        this.options.r = r;\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * A map object which allows to map options attributes to element\n     * attributes.\n     *\n     * @name Highcharts.AnnotationControllableCircle.attrsMap\n     * @type {Highcharts.Dictionary<string>}\n     */\n    ControllableCircle.attrsMap = merge(ControllablePath.attrsMap, { r: 'r' });\n    return ControllableCircle;\n}(Controllable));\n/* *\n *\n *  Default Export\n *\n * */\nexport default ControllableCircle;\n","/* *\n *\n * Author: Pawel Lysy\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Controllable from './Controllable.js';\nimport ControllablePath from './ControllablePath.js';\nimport U from '../../../Core/Utilities.js';\nvar merge = U.merge, defined = U.defined;\n/* *\n *\n *  Class\n *\n * */\n/**\n * A controllable ellipse class.\n *\n * @requires modules/annotations\n *\n * @private\n * @class\n * @name Highcharts.AnnotationControllableEllipse\n *\n * @param {Highcharts.Annotation} annotation an annotation instance\n * @param {Highcharts.AnnotationsShapeOptions} options a shape's options\n * @param {number} index of the Ellipse\n */\nvar ControllableEllipse = /** @class */ (function (_super) {\n    __extends(ControllableEllipse, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    function ControllableEllipse(annotation, options, index) {\n        var _this = _super.call(this, annotation, options, index, 'shape') || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.type = 'ellipse';\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    ControllableEllipse.prototype.init = function (annotation, options, index) {\n        if (defined(options.yAxis)) {\n            options.points.forEach(function (point) {\n                point.yAxis = options.yAxis;\n            });\n        }\n        if (defined(options.xAxis)) {\n            options.points.forEach(function (point) {\n                point.xAxis = options.xAxis;\n            });\n        }\n        _super.prototype.init.call(this, annotation, options, index);\n    };\n    /**\n     * Render the element\n     * @private\n     * @param parent\n     *        Parent SVG element.\n     */\n    ControllableEllipse.prototype.render = function (parent) {\n        this.graphic = this.annotation.chart.renderer.createElement('ellipse')\n            .attr(this.attrsFromOptions(this.options))\n            .add(parent);\n        _super.prototype.render.call(this);\n    };\n    /**\n     * Translate the points. Mostly used to handle dragging of the ellipse.\n     * @private\n     */\n    ControllableEllipse.prototype.translate = function (dx, dy) {\n        _super.prototype.translateShape.call(this, dx, dy, true);\n    };\n    /**\n     * Get the distance from the line to the point.\n     * @private\n     * @param point1\n     *        First point which is on the line\n     * @param point2\n     *        Second point\n     * @param x0\n     *        Point's x value from which you want to calculate the distance from\n     * @param y0\n     *        Point's y value from which you want to calculate the distance from\n     */\n    ControllableEllipse.prototype.getDistanceFromLine = function (point1, point2, x0, y0) {\n        return Math.abs((point2.y - point1.y) * x0 - (point2.x - point1.x) * y0 +\n            point2.x * point1.y - point2.y * point1.x) / Math.sqrt((point2.y - point1.y) * (point2.y - point1.y) +\n            (point2.x - point1.x) * (point2.x - point1.x));\n    };\n    /**\n     * The fuction calculates the svg attributes of the ellipse, and returns all\n     * parameters neccessary to draw the ellipse.\n     * @private\n     * @param position\n     *        Absolute position of the first point in points array\n     * @param position2\n     *        Absolute position of the second point in points array\n     */\n    ControllableEllipse.prototype.getAttrs = function (position, position2) {\n        var x1 = position.x, y1 = position.y, x2 = position2.x, y2 = position2.y, cx = (x1 + x2) / 2, cy = (y1 + y2) / 2, rx = Math.sqrt((x1 - x2) * (x1 - x2) / 4 + (y1 - y2) * (y1 - y2) / 4), tan = (y2 - y1) / (x2 - x1);\n        var angle = Math.atan(tan) * 180 / Math.PI;\n        if (cx < x1) {\n            angle += 180;\n        }\n        var ry = this.getRY();\n        return { cx: cx, cy: cy, rx: rx, ry: ry, angle: angle };\n    };\n    /**\n     * Get the value of minor radius of the ellipse.\n     * @private\n     */\n    ControllableEllipse.prototype.getRY = function () {\n        var yAxis = this.getYAxis();\n        return defined(yAxis) ?\n            Math.abs(yAxis.toPixels(this.options.ry) - yAxis.toPixels(0)) :\n            this.options.ry;\n    };\n    /**\n     * Get the yAxis object to which the ellipse is pinned.\n     * @private\n     */\n    ControllableEllipse.prototype.getYAxis = function () {\n        var yAxisIndex = this.options.yAxis;\n        return this.chart.yAxis[yAxisIndex];\n    };\n    /**\n     * Get the absolute coordinates of the MockPoint\n     * @private\n     * @param point\n     *        MockPoint that is added through options\n     */\n    ControllableEllipse.prototype.getAbsolutePosition = function (point) {\n        return this.anchor(point).absolutePosition;\n    };\n    /**\n     * Redraw the element\n     * @private\n     * @param animation\n     *        Display an annimation\n     */\n    ControllableEllipse.prototype.redraw = function (animation) {\n        if (this.graphic) {\n            var position = this.getAbsolutePosition(this.points[0]), position2 = this.getAbsolutePosition(this.points[1]), attrs = this.getAttrs(position, position2);\n            if (position) {\n                this.graphic[animation ? 'animate' : 'attr']({\n                    cx: attrs.cx,\n                    cy: attrs.cy,\n                    rx: attrs.rx,\n                    ry: attrs.ry,\n                    rotation: attrs.angle,\n                    rotationOriginX: attrs.cx,\n                    rotationOriginY: attrs.cy\n                });\n            }\n            else {\n                this.graphic.attr({\n                    x: 0,\n                    y: -9e9\n                });\n            }\n            this.graphic.placed = Boolean(position);\n        }\n        _super.prototype.redraw.call(this, animation);\n    };\n    /**\n     * Set the radius Y.\n     * @private\n     * @param {number} ry\n     *        A radius in y direction to be set\n     */\n    ControllableEllipse.prototype.setYRadius = function (ry) {\n        var shapes = this.annotation.userOptions.shapes;\n        this.options.ry = ry;\n        if (shapes && shapes[0]) {\n            shapes[0].ry = ry;\n            shapes[0].ry = ry;\n        }\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * A map object which allows to map options attributes to element\n     * attributes.\n     *\n     * @name Highcharts.AnnotationControllableEllipse.attrsMap\n     * @type {Highcharts.Dictionary<string>}\n     */\n    ControllableEllipse.attrsMap = merge(ControllablePath.attrsMap, {\n        ry: 'ry'\n    });\n    return ControllableEllipse;\n}(Controllable));\n/* *\n *\n *  Default Export\n *\n * */\nexport default ControllableEllipse;\n","/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Controllable from './Controllable.js';\nimport F from '../../../Core/FormatUtilities.js';\nvar format = F.format;\nimport MockPoint from '../MockPoint.js';\nimport Tooltip from '../../../Core/Tooltip.js';\nimport U from '../../../Core/Utilities.js';\nvar extend = U.extend, isNumber = U.isNumber, pick = U.pick;\n/* *\n *\n *  Constants\n *\n * */\nvar composedClasses = [];\n/* *\n *\n *  Functions\n *\n * */\n/**\n * General symbol definition for labels with connector\n * @private\n */\nfunction symbolConnector(x, y, w, h, options) {\n    var anchorX = options && options.anchorX, anchorY = options && options.anchorY;\n    var path, yOffset, lateral = w / 2;\n    if (isNumber(anchorX) && isNumber(anchorY)) {\n        path = [['M', anchorX, anchorY]];\n        // Prefer 45 deg connectors\n        yOffset = y - anchorY;\n        if (yOffset < 0) {\n            yOffset = -h - yOffset;\n        }\n        if (yOffset < w) {\n            lateral = anchorX < x + (w / 2) ? yOffset : w - yOffset;\n        }\n        // Anchor below label\n        if (anchorY > y + h) {\n            path.push(['L', x + lateral, y + h]);\n            // Anchor above label\n        }\n        else if (anchorY < y) {\n            path.push(['L', x + lateral, y]);\n            // Anchor left of label\n        }\n        else if (anchorX < x) {\n            path.push(['L', x, y + h / 2]);\n            // Anchor right of label\n        }\n        else if (anchorX > x + w) {\n            path.push(['L', x + w, y + h / 2]);\n        }\n    }\n    return path || [];\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * A controllable label class.\n *\n * @requires modules/annotations\n *\n * @private\n * @class\n * @name Highcharts.AnnotationControllableLabel\n *\n * @param {Highcharts.Annotation} annotation\n * An annotation instance.\n * @param {Highcharts.AnnotationsLabelOptions} options\n * A label's options.\n * @param {number} index\n * Index of the label.\n */\nvar ControllableLabel = /** @class */ (function (_super) {\n    __extends(ControllableLabel, _super);\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    function ControllableLabel(annotation, options, index) {\n        return _super.call(this, annotation, options, index, 'label') || this;\n    }\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * Returns new aligned position based alignment options and box to align to.\n     * It is almost a one-to-one copy from SVGElement.prototype.align\n     * except it does not use and mutate an element\n     *\n     * @param {Highcharts.AnnotationAlignObject} alignOptions\n     *\n     * @param {Highcharts.BBoxObject} box\n     *\n     * @return {Highcharts.PositionObject}\n     * Aligned position.\n     */\n    ControllableLabel.alignedPosition = function (alignOptions, box) {\n        var align = alignOptions.align, vAlign = alignOptions.verticalAlign;\n        var x = (box.x || 0) + (alignOptions.x || 0), y = (box.y || 0) + (alignOptions.y || 0), alignFactor, vAlignFactor;\n        if (align === 'right') {\n            alignFactor = 1;\n        }\n        else if (align === 'center') {\n            alignFactor = 2;\n        }\n        if (alignFactor) {\n            x += (box.width - (alignOptions.width || 0)) / alignFactor;\n        }\n        if (vAlign === 'bottom') {\n            vAlignFactor = 1;\n        }\n        else if (vAlign === 'middle') {\n            vAlignFactor = 2;\n        }\n        if (vAlignFactor) {\n            y += (box.height - (alignOptions.height || 0)) / vAlignFactor;\n        }\n        return {\n            x: Math.round(x),\n            y: Math.round(y)\n        };\n    };\n    ControllableLabel.compose = function (SVGRendererClass) {\n        if (composedClasses.indexOf(SVGRendererClass) === -1) {\n            composedClasses.push(SVGRendererClass);\n            var svgRendererProto = SVGRendererClass.prototype;\n            svgRendererProto.symbols.connector = symbolConnector;\n        }\n    };\n    /**\n     * Returns new alignment options for a label if the label is outside the\n     * plot area. It is almost a one-to-one copy from\n     * Series.prototype.justifyDataLabel except it does not mutate the label and\n     * it works with absolute instead of relative position.\n     */\n    ControllableLabel.justifiedOptions = function (chart, label, alignOptions, alignAttr) {\n        var align = alignOptions.align, verticalAlign = alignOptions.verticalAlign, padding = label.box ? 0 : (label.padding || 0), bBox = label.getBBox(), \n        //\n        options = {\n            align: align,\n            verticalAlign: verticalAlign,\n            x: alignOptions.x,\n            y: alignOptions.y,\n            width: label.width,\n            height: label.height\n        }, \n        //\n        x = (alignAttr.x || 0) - chart.plotLeft, y = (alignAttr.y || 0) - chart.plotTop;\n        var off;\n        // Off left\n        off = x + padding;\n        if (off < 0) {\n            if (align === 'right') {\n                options.align = 'left';\n            }\n            else {\n                options.x = (options.x || 0) - off;\n            }\n        }\n        // Off right\n        off = x + bBox.width - padding;\n        if (off > chart.plotWidth) {\n            if (align === 'left') {\n                options.align = 'right';\n            }\n            else {\n                options.x = (options.x || 0) + chart.plotWidth - off;\n            }\n        }\n        // Off top\n        off = y + padding;\n        if (off < 0) {\n            if (verticalAlign === 'bottom') {\n                options.verticalAlign = 'top';\n            }\n            else {\n                options.y = (options.y || 0) - off;\n            }\n        }\n        // Off bottom\n        off = y + bBox.height - padding;\n        if (off > chart.plotHeight) {\n            if (verticalAlign === 'top') {\n                options.verticalAlign = 'bottom';\n            }\n            else {\n                options.y = (options.y || 0) + chart.plotHeight - off;\n            }\n        }\n        return options;\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Translate the point of the label by deltaX and deltaY translations.\n     * The point is the label's anchor.\n     *\n     * @param {number} dx translation for x coordinate\n     * @param {number} dy translation for y coordinate\n     */\n    ControllableLabel.prototype.translatePoint = function (dx, dy) {\n        _super.prototype.translatePoint.call(this, dx, dy, 0);\n    };\n    /**\n     * Translate x and y position relative to the label's anchor.\n     *\n     * @param {number} dx translation for x coordinate\n     * @param {number} dy translation for y coordinate\n     */\n    ControllableLabel.prototype.translate = function (dx, dy) {\n        var chart = this.annotation.chart, \n        // Annotation.options\n        labelOptions = this.annotation.userOptions, \n        // Chart.options.annotations\n        annotationIndex = chart.annotations.indexOf(this.annotation), chartAnnotations = chart.options.annotations, chartOptions = chartAnnotations[annotationIndex];\n        if (chart.inverted) {\n            var temp = dx;\n            dx = dy;\n            dy = temp;\n        }\n        // Local options:\n        this.options.x += dx;\n        this.options.y += dy;\n        // Options stored in chart:\n        chartOptions[this.collection][this.index].x = this.options.x;\n        chartOptions[this.collection][this.index].y = this.options.y;\n        labelOptions[this.collection][this.index].x = this.options.x;\n        labelOptions[this.collection][this.index].y = this.options.y;\n    };\n    ControllableLabel.prototype.render = function (parent) {\n        var options = this.options, attrs = this.attrsFromOptions(options), style = options.style;\n        this.graphic = this.annotation.chart.renderer\n            .label('', 0, -9999, // #10055\n        options.shape, null, null, options.useHTML, null, 'annotation-label')\n            .attr(attrs)\n            .add(parent);\n        if (!this.annotation.chart.styledMode) {\n            if (style.color === 'contrast') {\n                style.color = this.annotation.chart.renderer.getContrast(ControllableLabel.shapesWithoutBackground.indexOf(options.shape) > -1 ? '#FFFFFF' : options.backgroundColor);\n            }\n            this.graphic\n                .css(options.style)\n                .shadow(options.shadow);\n        }\n        if (options.className) {\n            this.graphic.addClass(options.className);\n        }\n        this.graphic.labelrank = options.labelrank;\n        _super.prototype.render.call(this);\n    };\n    ControllableLabel.prototype.redraw = function (animation) {\n        var options = this.options, text = this.text || options.format || options.text, label = this.graphic, point = this.points[0];\n        if (!label) {\n            this.redraw(animation);\n            return;\n        }\n        label.attr({\n            text: text ?\n                format(String(text), point.getLabelConfig(), this.annotation.chart) :\n                options.formatter.call(point, this)\n        });\n        var anchor = this.anchor(point);\n        var attrs = this.position(anchor);\n        if (attrs) {\n            label.alignAttr = attrs;\n            attrs.anchorX = anchor.absolutePosition.x;\n            attrs.anchorY = anchor.absolutePosition.y;\n            label[animation ? 'animate' : 'attr'](attrs);\n        }\n        else {\n            label.attr({\n                x: 0,\n                y: -9999 // #10055\n            });\n        }\n        label.placed = !!attrs;\n        _super.prototype.redraw.call(this, animation);\n    };\n    /**\n     * All basic shapes don't support alignTo() method except label.\n     * For a controllable label, we need to subtract translation from\n     * options.\n     */\n    ControllableLabel.prototype.anchor = function (_point) {\n        var anchor = _super.prototype.anchor.apply(this, arguments), x = this.options.x || 0, y = this.options.y || 0;\n        anchor.absolutePosition.x -= x;\n        anchor.absolutePosition.y -= y;\n        anchor.relativePosition.x -= x;\n        anchor.relativePosition.y -= y;\n        return anchor;\n    };\n    /**\n     * Returns the label position relative to its anchor.\n     */\n    ControllableLabel.prototype.position = function (anchor) {\n        var item = this.graphic, chart = this.annotation.chart, point = this.points[0], itemOptions = this.options, anchorAbsolutePosition = anchor.absolutePosition, anchorRelativePosition = anchor.relativePosition;\n        var itemPosition, alignTo, itemPosRelativeX, itemPosRelativeY, showItem = point.series.visible &&\n            MockPoint.prototype.isInsidePlot.call(point);\n        if (item && showItem) {\n            var _a = item.width, width = _a === void 0 ? 0 : _a, _b = item.height, height = _b === void 0 ? 0 : _b;\n            if (itemOptions.distance) {\n                itemPosition = Tooltip.prototype.getPosition.call({\n                    chart: chart,\n                    distance: pick(itemOptions.distance, 16)\n                }, width, height, {\n                    plotX: anchorRelativePosition.x,\n                    plotY: anchorRelativePosition.y,\n                    negative: point.negative,\n                    ttBelow: point.ttBelow,\n                    h: (anchorRelativePosition.height ||\n                        anchorRelativePosition.width)\n                });\n            }\n            else if (itemOptions.positioner) {\n                itemPosition = itemOptions.positioner.call(this);\n            }\n            else {\n                alignTo = {\n                    x: anchorAbsolutePosition.x,\n                    y: anchorAbsolutePosition.y,\n                    width: 0,\n                    height: 0\n                };\n                itemPosition = ControllableLabel.alignedPosition(extend(itemOptions, {\n                    width: width,\n                    height: height\n                }), alignTo);\n                if (this.options.overflow === 'justify') {\n                    itemPosition = ControllableLabel.alignedPosition(ControllableLabel.justifiedOptions(chart, item, itemOptions, itemPosition), alignTo);\n                }\n            }\n            if (itemOptions.crop) {\n                itemPosRelativeX = itemPosition.x - chart.plotLeft;\n                itemPosRelativeY = itemPosition.y - chart.plotTop;\n                showItem =\n                    chart.isInsidePlot(itemPosRelativeX, itemPosRelativeY) &&\n                        chart.isInsidePlot(itemPosRelativeX + width, itemPosRelativeY + height);\n            }\n        }\n        return showItem ? itemPosition : null;\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * A map object which allows to map options attributes to element attributes\n     *\n     * @type {Highcharts.Dictionary<string>}\n     */\n    ControllableLabel.attrsMap = {\n        backgroundColor: 'fill',\n        borderColor: 'stroke',\n        borderWidth: 'stroke-width',\n        zIndex: 'zIndex',\n        borderRadius: 'r',\n        padding: 'padding'\n    };\n    /**\n     * Shapes which do not have background - the object is used for proper\n     * setting of the contrast color.\n     *\n     * @type {Array<string>}\n     */\n    ControllableLabel.shapesWithoutBackground = ['connector'];\n    return ControllableLabel;\n}(Controllable));\n/* *\n *\n *  Default Export\n *\n * */\nexport default ControllableLabel;\n","/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Controllable from './Controllable.js';\nimport ControllableLabel from './ControllableLabel.js';\n/* *\n *\n *  Class\n *\n * */\n/**\n * A controllable image class.\n *\n * @requires modules/annotations\n *\n * @private\n * @class\n * @name Highcharts.AnnotationControllableImage\n *\n * @param {Highcharts.Annotation} annotation\n * An annotation instance.\n *\n * @param {Highcharts.AnnotationsShapeOptions} options\n * A controllable's options.\n *\n * @param {number} index\n * Index of the image.\n */\nvar ControllableImage = /** @class */ (function (_super) {\n    __extends(ControllableImage, _super);\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    function ControllableImage(annotation, options, index) {\n        var _this = _super.call(this, annotation, options, index, 'shape') || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.type = 'image';\n        _this.translate = _super.prototype.translateShape;\n        return _this;\n    }\n    ControllableImage.prototype.render = function (parent) {\n        var attrs = this.attrsFromOptions(this.options), options = this.options;\n        this.graphic = this.annotation.chart.renderer\n            .image(options.src, 0, -9e9, options.width, options.height)\n            .attr(attrs)\n            .add(parent);\n        this.graphic.width = options.width;\n        this.graphic.height = options.height;\n        _super.prototype.render.call(this);\n    };\n    ControllableImage.prototype.redraw = function (animation) {\n        if (this.graphic) {\n            var anchor = this.anchor(this.points[0]), position = ControllableLabel.prototype.position.call(this, anchor);\n            if (position) {\n                this.graphic[animation ? 'animate' : 'attr']({\n                    x: position.x,\n                    y: position.y\n                });\n            }\n            else {\n                this.graphic.attr({\n                    x: 0,\n                    y: -9e9\n                });\n            }\n            this.graphic.placed = Boolean(position);\n        }\n        _super.prototype.redraw.call(this, animation);\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * A map object which allows to map options attributes to element attributes\n     *\n     * @name Highcharts.AnnotationControllableImage.attrsMap\n     * @type {Highcharts.Dictionary<string>}\n     */\n    ControllableImage.attrsMap = {\n        width: 'width',\n        height: 'height',\n        zIndex: 'zIndex'\n    };\n    return ControllableImage;\n}(Controllable));\n/* *\n *\n *  Default Export\n *\n * */\nexport default ControllableImage;\n","/* *\n *\n *  (c) 2009-2021 Highsoft, Black Label\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport U from '../../Core/Utilities.js';\nvar defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n/* *\n *\n *  Constants\n *\n * */\n/**\n * Define types for editable fields per annotation. There is no need to define\n * numbers, because they won't change their type to string.\n * @private\n */\nvar annotationsFieldsTypes = {\n    backgroundColor: 'string',\n    borderColor: 'string',\n    borderRadius: 'string',\n    color: 'string',\n    fill: 'string',\n    fontSize: 'string',\n    labels: 'string',\n    name: 'string',\n    stroke: 'string',\n    title: 'string'\n};\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Returns the first xAxis or yAxis that was clicked with its value.\n *\n * @private\n *\n * @param {Array<Highcharts.PointerAxisCoordinateObject>} coords\n *        All the chart's x or y axes with a current pointer's axis value.\n *\n * @return {Highcharts.PointerAxisCoordinateObject}\n *         Object with a first found axis and its value that pointer\n *         is currently pointing.\n */\nfunction getAssignedAxis(coords) {\n    return coords.filter(function (coord) {\n        var extremes = coord.axis.getExtremes(), axisMin = extremes.min, axisMax = extremes.max, \n        // Correct axis edges when axis has series\n        // with pointRange (like column)\n        minPointOffset = pick(coord.axis.minPointOffset, 0);\n        return isNumber(axisMin) && isNumber(axisMax) &&\n            coord.value >= (axisMin - minPointOffset) &&\n            coord.value <= (axisMax + minPointOffset) &&\n            // don't count navigator axis\n            !coord.axis.options.isInternal;\n    })[0]; // If the axes overlap, return the first axis that was found.\n}\n/**\n * Get field type according to value\n *\n * @private\n *\n * @param {'boolean'|'number'|'string'} value\n * Atomic type (one of: string, number, boolean)\n *\n * @return {'checkbox'|'number'|'text'}\n * Field type (one of: text, number, checkbox)\n */\nfunction getFieldType(key, value) {\n    var predefinedType = annotationsFieldsTypes[key];\n    var fieldType = typeof value;\n    if (defined(predefinedType)) {\n        fieldType = predefinedType;\n    }\n    return {\n        'string': 'text',\n        'number': 'number',\n        'boolean': 'checkbox'\n    }[fieldType];\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar NavigationBindingUtilities = {\n    annotationsFieldsTypes: annotationsFieldsTypes,\n    getAssignedAxis: getAssignedAxis,\n    getFieldType: getFieldType\n};\nexport default NavigationBindingUtilities;\n","/* *\n *\n *  (c) 2009-2021 Highsoft, Black Label\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport NBU from './NavigationBindingsUtilities.js';\nvar getAssignedAxis = NBU.getAssignedAxis;\nimport U from '../../Core/Utilities.js';\nvar isNumber = U.isNumber, merge = U.merge;\n/* *\n *\n *  Constants\n *\n * */\n/**\n * @optionparent lang\n */\nvar lang = {\n    /**\n     * Configure the Popup strings in the chart. Requires the\n     * `annotations.js` or `annotations-advanced.src.js` module to be\n     * loaded.\n     * @since   7.0.0\n     * @product highcharts highstock\n     */\n    navigation: {\n        /**\n         * Translations for all field names used in popup.\n         *\n         * @product highcharts highstock\n         */\n        popup: {\n            simpleShapes: 'Simple shapes',\n            lines: 'Lines',\n            circle: 'Circle',\n            ellipse: 'Ellipse',\n            rectangle: 'Rectangle',\n            label: 'Label',\n            shapeOptions: 'Shape options',\n            typeOptions: 'Details',\n            fill: 'Fill',\n            format: 'Text',\n            strokeWidth: 'Line width',\n            stroke: 'Line color',\n            title: 'Title',\n            name: 'Name',\n            labelOptions: 'Label options',\n            labels: 'Labels',\n            backgroundColor: 'Background color',\n            backgroundColors: 'Background colors',\n            borderColor: 'Border color',\n            borderRadius: 'Border radius',\n            borderWidth: 'Border width',\n            style: 'Style',\n            padding: 'Padding',\n            fontSize: 'Font size',\n            color: 'Color',\n            height: 'Height',\n            shapes: 'Shape options'\n        }\n    }\n};\n/**\n * @optionparent navigation\n * @product      highcharts highstock\n */\nvar navigation = {\n    /**\n     * A CSS class name where all bindings will be attached to. Multiple\n     * charts on the same page should have separate class names to prevent\n     * duplicating events.\n     *\n     * Default value of versions < 7.0.4 `highcharts-bindings-wrapper`\n     *\n     * @since     7.0.0\n     * @type      {string}\n     */\n    bindingsClassName: 'highcharts-bindings-container',\n    /**\n     * Bindings definitions for custom HTML buttons. Each binding implements\n     * simple event-driven interface:\n     *\n     * - `className`: classname used to bind event to\n     *\n     * - `init`: initial event, fired on button click\n     *\n     * - `start`: fired on first click on a chart\n     *\n     * - `steps`: array of sequential events fired one after another on each\n     *   of users clicks\n     *\n     * - `end`: last event to be called after last step event\n     *\n     * @type         {Highcharts.Dictionary<Highcharts.NavigationBindingsOptionsObject>|*}\n     *\n     * @sample {highstock} stock/stocktools/stocktools-thresholds\n     *               Custom bindings\n     * @sample {highcharts} highcharts/annotations/bindings/\n     *               Simple binding\n     * @sample {highcharts} highcharts/annotations/bindings-custom-annotation/\n     *               Custom annotation binding\n     *\n     * @since        7.0.0\n     * @requires     modules/annotations\n     * @product      highcharts highstock\n     */\n    bindings: {\n        /**\n         * A circle annotation bindings. Includes `start` and one event in\n         * `steps` array.\n         *\n         * @type    {Highcharts.NavigationBindingsOptionsObject}\n         * @default {\"className\": \"highcharts-circle-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n         */\n        circleAnnotation: {\n            /** @ignore-option */\n            className: 'highcharts-circle-annotation',\n            /** @ignore-option */\n            start: function (e) {\n                var coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis), navigation = this.chart.options.navigation;\n                // Exit if clicked out of axes area\n                if (!coordsX || !coordsY) {\n                    return;\n                }\n                return this.chart.addAnnotation(merge({\n                    langKey: 'circle',\n                    type: 'basicAnnotation',\n                    shapes: [{\n                            type: 'circle',\n                            point: {\n                                x: coordsX.value,\n                                y: coordsY.value,\n                                xAxis: coordsX.axis.options.index,\n                                yAxis: coordsY.axis.options.index\n                            },\n                            r: 5\n                        }]\n                }, navigation.annotationsOptions, navigation.bindings.circleAnnotation\n                    .annotationsOptions));\n            },\n            /** @ignore-option */\n            steps: [\n                function (e, annotation) {\n                    var shapes = annotation.options.shapes, mockPointOpts = ((shapes && shapes[0] && shapes[0].point) ||\n                        {});\n                    var distance;\n                    if (isNumber(mockPointOpts.xAxis) &&\n                        isNumber(mockPointOpts.yAxis)) {\n                        var inverted = this.chart.inverted, x = this.chart.xAxis[mockPointOpts.xAxis]\n                            .toPixels(mockPointOpts.x), y = this.chart.yAxis[mockPointOpts.yAxis]\n                            .toPixels(mockPointOpts.y);\n                        distance = Math.max(Math.sqrt(Math.pow(inverted ? y - e.chartX : x - e.chartX, 2) +\n                            Math.pow(inverted ? x - e.chartY : y - e.chartY, 2)), 5);\n                    }\n                    annotation.update({\n                        shapes: [{\n                                r: distance\n                            }]\n                    });\n                }\n            ]\n        },\n        /**\n         * A ellipse annotation bindings. Includes `start` and two events in\n         * `steps` array. First updates the second point, responsible for a\n         * rx width, and second updates the ry width.\n         *\n         * @type    {Highcharts.NavigationBindingsOptionsObject}\n         * @default {\"className\": \"highcharts-ellipse-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n         */\n        ellipseAnnotation: {\n            className: 'highcharts-ellipse-annotation',\n            start: function (e) {\n                var coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis), navigation = this.chart.options.navigation;\n                if (!coordsX || !coordsY) {\n                    return;\n                }\n                return this.chart.addAnnotation(merge({\n                    langKey: 'ellipse',\n                    type: 'basicAnnotation',\n                    shapes: [\n                        {\n                            type: 'ellipse',\n                            xAxis: coordsX.axis.options.index,\n                            yAxis: coordsY.axis.options.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }, {\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }],\n                            ry: 1\n                        }\n                    ]\n                }, navigation.annotationsOptions, navigation.bindings.ellipseAnnotation\n                    .annotationOptions));\n            },\n            steps: [\n                function (e, annotation) {\n                    var target = annotation.shapes[0], position = target.getAbsolutePosition(target.points[1]);\n                    target.translatePoint(e.chartX - position.x, e.chartY - position.y, 1);\n                    target.redraw(false);\n                },\n                function (e, annotation) {\n                    var target = annotation.shapes[0], position = target.getAbsolutePosition(target.points[0]), position2 = target.getAbsolutePosition(target.points[1]), newR = target.getDistanceFromLine(position, position2, e.chartX, e.chartY), yAxis = target.getYAxis(), newRY = Math.abs(yAxis.toValue(0) - yAxis.toValue(newR));\n                    target.setYRadius(newRY);\n                    target.redraw(false);\n                }\n            ]\n        },\n        /**\n         * A rectangle annotation bindings. Includes `start` and one event\n         * in `steps` array.\n         *\n         * @type    {Highcharts.NavigationBindingsOptionsObject}\n         * @default {\"className\": \"highcharts-rectangle-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n         */\n        rectangleAnnotation: {\n            /** @ignore-option */\n            className: 'highcharts-rectangle-annotation',\n            /** @ignore-option */\n            start: function (e) {\n                var coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                // Exit if clicked out of axes area\n                if (!coordsX || !coordsY) {\n                    return;\n                }\n                var x = coordsX.value, y = coordsY.value, xAxis = coordsX.axis.options.index, yAxis = coordsY.axis.options.index, navigation = this.chart.options.navigation;\n                return this.chart.addAnnotation(merge({\n                    langKey: 'rectangle',\n                    type: 'basicAnnotation',\n                    shapes: [{\n                            type: 'path',\n                            points: [\n                                { xAxis: xAxis, yAxis: yAxis, x: x, y: y },\n                                { xAxis: xAxis, yAxis: yAxis, x: x, y: y },\n                                { xAxis: xAxis, yAxis: yAxis, x: x, y: y },\n                                { xAxis: xAxis, yAxis: yAxis, x: x, y: y },\n                                { command: 'Z' }\n                            ]\n                        }]\n                }, navigation\n                    .annotationsOptions, navigation\n                    .bindings\n                    .rectangleAnnotation\n                    .annotationsOptions));\n            },\n            /** @ignore-option */\n            steps: [\n                function (e, annotation) {\n                    var shapes = annotation.options.shapes, points = ((shapes && shapes[0] && shapes[0].points) ||\n                        []), coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    if (coordsX && coordsY) {\n                        var x = coordsX.value, y = coordsY.value;\n                        // Top right point\n                        points[1].x = x;\n                        // Bottom right point (cursor position)\n                        points[2].x = x;\n                        points[2].y = y;\n                        // Bottom left\n                        points[3].y = y;\n                        annotation.update({\n                            shapes: [{\n                                    points: points\n                                }]\n                        });\n                    }\n                }\n            ]\n        },\n        /**\n         * A label annotation bindings. Includes `start` event only.\n         *\n         * @type    {Highcharts.NavigationBindingsOptionsObject}\n         * @default {\"className\": \"highcharts-label-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n         */\n        labelAnnotation: {\n            /** @ignore-option */\n            className: 'highcharts-label-annotation',\n            /** @ignore-option */\n            start: function (e) {\n                var coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis), navigation = this.chart.options.navigation;\n                // Exit if clicked out of axes area\n                if (!coordsX || !coordsY) {\n                    return;\n                }\n                return this.chart.addAnnotation(merge({\n                    langKey: 'label',\n                    type: 'basicAnnotation',\n                    labelOptions: {\n                        format: '{y:.2f}'\n                    },\n                    labels: [{\n                            point: {\n                                xAxis: coordsX.axis.options.index,\n                                yAxis: coordsY.axis.options.index,\n                                x: coordsX.value,\n                                y: coordsY.value\n                            },\n                            overflow: 'none',\n                            crop: true\n                        }]\n                }, navigation\n                    .annotationsOptions, navigation\n                    .bindings\n                    .labelAnnotation\n                    .annotationsOptions));\n            }\n        }\n    },\n    /**\n     * Path where Highcharts will look for icons. Change this to use icons\n     * from a different server.\n     *\n     * @type      {string}\n     * @default   https://code.highcharts.com/10.3.3/gfx/stock-icons/\n     * @since     7.1.3\n     * @apioption navigation.iconsURL\n     */\n    /**\n     * A `showPopup` event. Fired when selecting for example an annotation.\n     *\n     * @type      {Function}\n     * @apioption navigation.events.showPopup\n     */\n    /**\n     * A `closePopup` event. Fired when Popup should be hidden, for example\n     * when clicking on an annotation again.\n     *\n     * @type      {Function}\n     * @apioption navigation.events.closePopup\n     */\n    /**\n     * Event fired on a button click.\n     *\n     * @type      {Function}\n     * @sample    highcharts/annotations/gui/\n     *            Change icon in a dropddown on event\n     * @sample    highcharts/annotations/gui-buttons/\n     *            Change button class on event\n     * @apioption navigation.events.selectButton\n     */\n    /**\n     * Event fired when button state should change, for example after\n     * adding an annotation.\n     *\n     * @type      {Function}\n     * @sample    highcharts/annotations/gui/\n     *            Change icon in a dropddown on event\n     * @sample    highcharts/annotations/gui-buttons/\n     *            Change button class on event\n     * @apioption navigation.events.deselectButton\n     */\n    /**\n     * Events to communicate between Stock Tools and custom GUI.\n     *\n     * @since        7.0.0\n     * @product      highcharts highstock\n     * @optionparent navigation.events\n     */\n    events: {},\n    /**\n     * Additional options to be merged into all annotations.\n     *\n     * @sample stock/stocktools/navigation-annotation-options\n     *         Set red color of all line annotations\n     *\n     * @type      {Highcharts.AnnotationsOptions}\n     * @extends   annotations\n     * @exclude   crookedLine, elliottWave, fibonacci, infinityLine,\n     *            measure, pitchfork, tunnel, verticalLine, basicAnnotation\n     * @requires     modules/annotations\n     * @apioption navigation.annotationsOptions\n     */\n    annotationsOptions: {\n        animation: {\n            defer: 0\n        }\n    }\n};\n/* *\n *\n *  Default Export\n *\n * */\nvar NavigationBindingDefaults = {\n    lang: lang,\n    navigation: navigation\n};\nexport default NavigationBindingDefaults;\n","/* *\n *\n *  (c) 2009-2021 Highsoft, Black Label\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport ChartNavigationComposition from '../../Core/Chart/ChartNavigationComposition.js';\nimport D from '../../Core/Defaults.js';\nvar setOptions = D.setOptions;\nimport F from '../../Core/FormatUtilities.js';\nvar format = F.format;\nimport H from '../../Core/Globals.js';\nvar doc = H.doc, win = H.win;\nimport NavigationBindingDefaults from './NavigationBindingsDefaults.js';\nimport NBU from './NavigationBindingsUtilities.js';\nvar getFieldType = NBU.getFieldType;\nimport U from '../../Core/Utilities.js';\nvar addEvent = U.addEvent, attr = U.attr, defined = U.defined, fireEvent = U.fireEvent, isArray = U.isArray, isFunction = U.isFunction, isNumber = U.isNumber, isObject = U.isObject, merge = U.merge, objectEach = U.objectEach, pick = U.pick;\n/* *\n *\n *  Constants\n *\n * */\nvar composedClasses = [];\n/* *\n *\n *  Functions\n *\n * */\n/**\n * IE 9-11 polyfill for Element.closest():\n * @private\n */\nfunction closestPolyfill(el, s) {\n    var ElementProto = win.Element.prototype, elementMatches = ElementProto.matches ||\n        ElementProto.msMatchesSelector ||\n        ElementProto.webkitMatchesSelector;\n    var ret = null;\n    if (ElementProto.closest) {\n        ret = ElementProto.closest.call(el, s);\n    }\n    else {\n        do {\n            if (elementMatches.call(el, s)) {\n                return el;\n            }\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n    }\n    return ret;\n}\n/**\n * @private\n */\nfunction onAnnotationRemove() {\n    if (this.chart.navigationBindings) {\n        this.chart.navigationBindings.deselectAnnotation();\n    }\n}\n/**\n * @private\n */\nfunction onChartDestroy() {\n    if (this.navigationBindings) {\n        this.navigationBindings.destroy();\n    }\n}\n/**\n * @private\n */\nfunction onChartLoad() {\n    var options = this.options;\n    if (options && options.navigation && options.navigation.bindings) {\n        this.navigationBindings = new NavigationBindings(this, options.navigation);\n        this.navigationBindings.initEvents();\n        this.navigationBindings.initUpdate();\n    }\n}\n/**\n * @private\n */\nfunction onChartRender() {\n    var navigationBindings = this.navigationBindings, disabledClassName = 'highcharts-disabled-btn';\n    if (this && navigationBindings) {\n        // Check if the buttons should be enabled/disabled based on\n        // visible series.\n        var buttonsEnabled_1 = false;\n        this.series.forEach(function (series) {\n            if (!series.options.isInternal && series.visible) {\n                buttonsEnabled_1 = true;\n            }\n        });\n        if (this.navigationBindings &&\n            this.navigationBindings.container &&\n            this.navigationBindings.container[0]) {\n            var container_1 = this.navigationBindings.container[0];\n            objectEach(navigationBindings.boundClassNames, function (value, key) {\n                // Get the HTML element coresponding to the className taken\n                // from StockToolsBindings.\n                var buttonNode = container_1.querySelectorAll('.' + key);\n                if (buttonNode) {\n                    for (var i = 0; i < buttonNode.length; i++) {\n                        var button = buttonNode[i], cls = button.className;\n                        if (value.noDataState === 'normal') {\n                            // If button has noDataState: 'normal', and has\n                            // disabledClassName, remove this className.\n                            if (cls.indexOf(disabledClassName) !== -1) {\n                                button.classList.remove(disabledClassName);\n                            }\n                        }\n                        else if (!buttonsEnabled_1) {\n                            if (cls.indexOf(disabledClassName) === -1) {\n                                button.className += ' ' + disabledClassName;\n                            }\n                        }\n                        else {\n                            // Enable all buttons by deleting the className.\n                            if (cls.indexOf(disabledClassName) !== -1) {\n                                button.classList.remove(disabledClassName);\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n}\n/**\n * @private\n */\nfunction onNavigationBindingsClosePopup() {\n    this.deselectAnnotation();\n}\n/**\n * @private\n */\nfunction onNavigationBindingsDeselectButton() {\n    this.selectedButtonElement = null;\n}\n/**\n * Show edit-annotation form:\n * @private\n */\nfunction selectableAnnotation(annotationType) {\n    var originalClick = annotationType.prototype.defaultOptions.events &&\n        annotationType.prototype.defaultOptions.events.click;\n    /**\n     * Select and show popup\n     * @private\n     */\n    function selectAndShowPopup(eventArguments) {\n        var annotation = this, navigation = annotation.chart.navigationBindings, prevAnnotation = navigation.activeAnnotation;\n        if (originalClick) {\n            originalClick.call(annotation, eventArguments);\n        }\n        if (prevAnnotation !== annotation) {\n            // Select current:\n            navigation.deselectAnnotation();\n            navigation.activeAnnotation = annotation;\n            annotation.setControlPointsVisibility(true);\n            fireEvent(navigation, 'showPopup', {\n                annotation: annotation,\n                formType: 'annotation-toolbar',\n                options: navigation.annotationToFields(annotation),\n                onSubmit: function (data) {\n                    if (data.actionType === 'remove') {\n                        navigation.activeAnnotation = false;\n                        navigation.chart.removeAnnotation(annotation);\n                    }\n                    else {\n                        var config = {};\n                        navigation.fieldsToOptions(data.fields, config);\n                        navigation.deselectAnnotation();\n                        var typeOptions = config.typeOptions;\n                        if (annotation.options.type === 'measure') {\n                            // Manually disable crooshars according to\n                            // stroke width of the shape:\n                            typeOptions.crosshairY.enabled = (typeOptions.crosshairY\n                                .strokeWidth !== 0);\n                            typeOptions.crosshairX.enabled = (typeOptions.crosshairX\n                                .strokeWidth !== 0);\n                        }\n                        annotation.update(config);\n                    }\n                }\n            });\n        }\n        else {\n            // Deselect current:\n            fireEvent(navigation, 'closePopup');\n        }\n        // Let bubble event to chart.click:\n        eventArguments.activeAnnotation = true;\n    }\n    merge(true, annotationType.prototype.defaultOptions.events, {\n        click: selectAndShowPopup\n    });\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n */\nvar NavigationBindings = /** @class */ (function () {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    function NavigationBindings(chart, options) {\n        this.boundClassNames = void 0;\n        this.selectedButton = void 0;\n        this.chart = chart;\n        this.options = options;\n        this.eventsToUnbind = [];\n        this.container =\n            this.chart.container.getElementsByClassName(this.options.bindingsClassName || '');\n        if (!this.container.length) {\n            this.container = doc.getElementsByClassName(this.options.bindingsClassName || '');\n        }\n    }\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    NavigationBindings.compose = function (AnnotationClass, ChartClass) {\n        if (composedClasses.indexOf(AnnotationClass) === -1) {\n            composedClasses.push(AnnotationClass);\n            addEvent(AnnotationClass, 'remove', onAnnotationRemove);\n            // Basic shapes:\n            selectableAnnotation(AnnotationClass);\n            // Advanced annotations:\n            objectEach(AnnotationClass.types, function (annotationType) {\n                selectableAnnotation(annotationType);\n            });\n        }\n        if (composedClasses.indexOf(ChartClass) === -1) {\n            composedClasses.push(ChartClass);\n            addEvent(ChartClass, 'destroy', onChartDestroy);\n            addEvent(ChartClass, 'load', onChartLoad);\n            addEvent(ChartClass, 'render', onChartRender);\n        }\n        if (composedClasses.indexOf(NavigationBindings) === -1) {\n            composedClasses.push(NavigationBindings);\n            addEvent(NavigationBindings, 'closePopup', onNavigationBindingsClosePopup);\n            addEvent(NavigationBindings, 'deselectButton', onNavigationBindingsDeselectButton);\n        }\n        if (composedClasses.indexOf(setOptions) === -1) {\n            composedClasses.push(setOptions);\n            setOptions(NavigationBindingDefaults);\n        }\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Initi all events conencted to NavigationBindings.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#initEvents\n     */\n    NavigationBindings.prototype.initEvents = function () {\n        var navigation = this, chart = navigation.chart, bindingsContainer = navigation.container, options = navigation.options;\n        // Shorthand object for getting events for buttons:\n        navigation.boundClassNames = {};\n        objectEach((options.bindings || {}), function (value) {\n            navigation.boundClassNames[value.className] = value;\n        });\n        // Handle multiple containers with the same class names:\n        [].forEach.call(bindingsContainer, function (subContainer) {\n            navigation.eventsToUnbind.push(addEvent(subContainer, 'click', function (event) {\n                var bindings = navigation.getButtonEvents(subContainer, event);\n                if (bindings &&\n                    bindings.button.className\n                        .indexOf('highcharts-disabled-btn') === -1) {\n                    navigation.bindingsButtonClick(bindings.button, bindings.events, event);\n                }\n            }));\n        });\n        objectEach((options.events || {}), function (callback, eventName) {\n            if (isFunction(callback)) {\n                navigation.eventsToUnbind.push(addEvent(navigation, eventName, callback, { passive: false }));\n            }\n        });\n        navigation.eventsToUnbind.push(addEvent(chart.container, 'click', function (e) {\n            if (!chart.cancelClick &&\n                chart.isInsidePlot(e.chartX - chart.plotLeft, e.chartY - chart.plotTop, {\n                    visiblePlotOnly: true\n                })) {\n                navigation.bindingsChartClick(this, e);\n            }\n        }));\n        navigation.eventsToUnbind.push(addEvent(chart.container, H.isTouchDevice ? 'touchmove' : 'mousemove', function (e) {\n            navigation.bindingsContainerMouseMove(this, e);\n        }, H.isTouchDevice ? { passive: false } : void 0));\n    };\n    /**\n     * Common chart.update() delegation, shared between bindings and exporting.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#initUpdate\n     */\n    NavigationBindings.prototype.initUpdate = function () {\n        var navigation = this;\n        ChartNavigationComposition\n            .compose(this.chart).navigation\n            .addUpdate(function (options) {\n            navigation.update(options);\n        });\n    };\n    /**\n     * Hook for click on a button, method selcts/unselects buttons,\n     * then calls `bindings.init` callback.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#bindingsButtonClick\n     *\n     * @param {Highcharts.HTMLDOMElement} [button]\n     *        Clicked button\n     *\n     * @param {Object} events\n     *        Events passed down from bindings (`init`, `start`, `step`, `end`)\n     *\n     * @param {Highcharts.PointerEventObject} clickEvent\n     *        Browser's click event\n     */\n    NavigationBindings.prototype.bindingsButtonClick = function (button, events, clickEvent) {\n        var navigation = this, chart = navigation.chart, svgContainer = chart.renderer.boxWrapper;\n        var shouldEventBeFired = true;\n        if (navigation.selectedButtonElement) {\n            if (navigation.selectedButtonElement.classList === button.classList) {\n                shouldEventBeFired = false;\n            }\n            fireEvent(navigation, 'deselectButton', { button: navigation.selectedButtonElement });\n            if (navigation.nextEvent) {\n                // Remove in-progress annotations adders:\n                if (navigation.currentUserDetails &&\n                    navigation.currentUserDetails.coll === 'annotations') {\n                    chart.removeAnnotation(navigation.currentUserDetails);\n                }\n                navigation.mouseMoveEvent = navigation.nextEvent = false;\n            }\n        }\n        if (shouldEventBeFired) {\n            navigation.selectedButton = events;\n            navigation.selectedButtonElement = button;\n            fireEvent(navigation, 'selectButton', { button: button });\n            // Call \"init\" event, for example to open modal window\n            if (events.init) {\n                events.init.call(navigation, button, clickEvent);\n            }\n            if (events.start || events.steps) {\n                chart.renderer.boxWrapper.addClass('highcharts-draw-mode');\n            }\n        }\n        else {\n            chart.stockTools &&\n                chart.stockTools.toggleButtonActiveClass(button);\n            svgContainer.removeClass('highcharts-draw-mode');\n            navigation.nextEvent = false;\n            navigation.mouseMoveEvent = false;\n            navigation.selectedButton = null;\n        }\n    };\n    /**\n     * Hook for click on a chart, first click on a chart calls `start` event,\n     * then on all subsequent clicks iterate over `steps` array.\n     * When finished, calls `end` event.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#bindingsChartClick\n     *\n     * @param {Highcharts.Chart} chart\n     *        Chart that click was performed on.\n     *\n     * @param {Highcharts.PointerEventObject} clickEvent\n     *        Browser's click event.\n     */\n    NavigationBindings.prototype.bindingsChartClick = function (chart, clickEvent) {\n        chart = this.chart;\n        var navigation = this, activeAnnotation = navigation.activeAnnotation, selectedButton = navigation.selectedButton, svgContainer = chart.renderer.boxWrapper;\n        if (activeAnnotation) {\n            // Click outside popups, should close them and deselect the\n            // annotation\n            if (!activeAnnotation.cancelClick && // #15729\n                !clickEvent.activeAnnotation &&\n                // Element could be removed in the child action, e.g. button\n                clickEvent.target.parentNode &&\n                // TO DO: Polyfill for IE11?\n                !closestPolyfill(clickEvent.target, '.highcharts-popup')) {\n                fireEvent(navigation, 'closePopup');\n            }\n            else if (activeAnnotation.cancelClick) {\n                // Reset cancelClick after the other event handlers have run\n                setTimeout(function () {\n                    activeAnnotation.cancelClick = false;\n                }, 0);\n            }\n        }\n        if (!selectedButton || !selectedButton.start) {\n            return;\n        }\n        if (!navigation.nextEvent) {\n            // Call init method:\n            navigation.currentUserDetails = selectedButton.start.call(navigation, clickEvent);\n            // If steps exists (e.g. Annotations), bind them:\n            if (navigation.currentUserDetails && selectedButton.steps) {\n                navigation.stepIndex = 0;\n                navigation.steps = true;\n                navigation.mouseMoveEvent = navigation.nextEvent =\n                    selectedButton.steps[navigation.stepIndex];\n            }\n            else {\n                fireEvent(navigation, 'deselectButton', { button: navigation.selectedButtonElement });\n                svgContainer.removeClass('highcharts-draw-mode');\n                navigation.steps = false;\n                navigation.selectedButton = null;\n                // First click is also the last one:\n                if (selectedButton.end) {\n                    selectedButton.end.call(navigation, clickEvent, navigation.currentUserDetails);\n                }\n            }\n        }\n        else {\n            navigation.nextEvent(clickEvent, navigation.currentUserDetails);\n            if (navigation.steps) {\n                navigation.stepIndex++;\n                if (selectedButton.steps[navigation.stepIndex]) {\n                    // If we have more steps, bind them one by one:\n                    navigation.mouseMoveEvent = navigation.nextEvent = selectedButton.steps[navigation.stepIndex];\n                }\n                else {\n                    fireEvent(navigation, 'deselectButton', { button: navigation.selectedButtonElement });\n                    svgContainer.removeClass('highcharts-draw-mode');\n                    // That was the last step, call end():\n                    if (selectedButton.end) {\n                        selectedButton.end.call(navigation, clickEvent, navigation.currentUserDetails);\n                    }\n                    navigation.nextEvent = false;\n                    navigation.mouseMoveEvent = false;\n                    navigation.selectedButton = null;\n                }\n            }\n        }\n    };\n    /**\n     * Hook for mouse move on a chart's container. It calls current step.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#bindingsContainerMouseMove\n     *\n     * @param {Highcharts.HTMLDOMElement} container\n     *        Chart's container.\n     *\n     * @param {global.Event} moveEvent\n     *        Browser's move event.\n     */\n    NavigationBindings.prototype.bindingsContainerMouseMove = function (_container, moveEvent) {\n        if (this.mouseMoveEvent) {\n            this.mouseMoveEvent(moveEvent, this.currentUserDetails);\n        }\n    };\n    /**\n     * Translate fields (e.g. `params.period` or `marker.styles.color`) to\n     * Highcharts options object (e.g. `{ params: { period } }`).\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#fieldsToOptions<T>\n     *\n     * @param {Highcharts.Dictionary<string>} fields\n     *        Fields from popup form.\n     *\n     * @param {T} config\n     *        Default config to be modified.\n     *\n     * @return {T}\n     *         Modified config\n     */\n    NavigationBindings.prototype.fieldsToOptions = function (fields, config) {\n        objectEach(fields, function (value, field) {\n            var parsedValue = parseFloat(value), path = field.split('.'), pathLength = path.length - 1;\n            // If it's a number (not \"format\" options), parse it:\n            if (isNumber(parsedValue) &&\n                !value.match(/px/g) &&\n                !field.match(/format/g)) {\n                value = parsedValue;\n            }\n            // Remove values like 0\n            if (value !== 'undefined') {\n                var parent_1 = config;\n                path.forEach(function (name, index) {\n                    var nextName = pick(path[index + 1], '');\n                    if (pathLength === index) {\n                        // Last index, put value:\n                        parent_1[name] = value;\n                    }\n                    else if (!parent_1[name]) {\n                        // Create middle property:\n                        parent_1[name] = nextName.match(/\\d/g) ? [] : {};\n                        parent_1 = parent_1[name];\n                    }\n                    else {\n                        // Jump into next property\n                        parent_1 = parent_1[name];\n                    }\n                });\n            }\n        });\n        return config;\n    };\n    /**\n     * Shorthand method to deselect an annotation.\n     *\n     * @function Highcharts.NavigationBindings#deselectAnnotation\n     */\n    NavigationBindings.prototype.deselectAnnotation = function () {\n        if (this.activeAnnotation) {\n            this.activeAnnotation.setControlPointsVisibility(false);\n            this.activeAnnotation = false;\n        }\n    };\n    /**\n     * Generates API config for popup in the same format as options for\n     * Annotation object.\n     *\n     * @function Highcharts.NavigationBindings#annotationToFields\n     *\n     * @param {Highcharts.Annotation} annotation\n     *        Annotations object\n     *\n     * @return {Highcharts.Dictionary<string>}\n     *         Annotation options to be displayed in popup box\n     */\n    NavigationBindings.prototype.annotationToFields = function (annotation) {\n        var options = annotation.options, editables = NavigationBindings.annotationsEditable, nestedEditables = editables.nestedOptions, type = pick(options.type, options.shapes && options.shapes[0] &&\n            options.shapes[0].type, options.labels && options.labels[0] &&\n            options.labels[0].type, 'label'), nonEditables = NavigationBindings.annotationsNonEditable[options.langKey] || [], visualOptions = {\n            langKey: options.langKey,\n            type: type\n        };\n        /**\n         * Nested options traversing. Method goes down to the options and copies\n         * allowed options (with values) to new object, which is last parameter:\n         * \"parent\".\n         *\n         * @private\n         *\n         * @param {*} option\n         *        Atomic type or object/array\n         *\n         * @param {string} key\n         *        Option name, for example \"visible\" or \"x\", \"y\"\n         *\n         * @param {Object} parentEditables\n         *        Editables from NavigationBindings.annotationsEditable\n         *\n         * @param {Object} parent\n         *        Where new options will be assigned\n         */\n        function traverse(option, key, parentEditables, parent, parentKey) {\n            var nextParent;\n            if (parentEditables &&\n                option &&\n                nonEditables.indexOf(key) === -1 &&\n                ((parentEditables.indexOf &&\n                    parentEditables.indexOf(key)) >= 0 ||\n                    parentEditables[key] || // nested array\n                    parentEditables === true // simple array\n                )) {\n                // Roots:\n                if (isArray(option)) {\n                    parent[key] = [];\n                    option.forEach(function (arrayOption, i) {\n                        if (!isObject(arrayOption)) {\n                            // Simple arrays, e.g. [String, Number, Boolean]\n                            traverse(arrayOption, 0, nestedEditables[key], parent[key], key);\n                        }\n                        else {\n                            // Advanced arrays, e.g. [Object, Object]\n                            parent[key][i] = {};\n                            objectEach(arrayOption, function (nestedOption, nestedKey) {\n                                traverse(nestedOption, nestedKey, nestedEditables[key], parent[key][i], key);\n                            });\n                        }\n                    });\n                }\n                else if (isObject(option)) {\n                    nextParent = {};\n                    if (isArray(parent)) {\n                        parent.push(nextParent);\n                        nextParent[key] = {};\n                        nextParent = nextParent[key];\n                    }\n                    else {\n                        parent[key] = nextParent;\n                    }\n                    objectEach(option, function (nestedOption, nestedKey) {\n                        traverse(nestedOption, nestedKey, key === 0 ?\n                            parentEditables :\n                            nestedEditables[key], nextParent, key);\n                    });\n                }\n                else {\n                    // Leaf:\n                    if (key === 'format') {\n                        parent[key] = [\n                            format(option, annotation.labels[0].points[0]).toString(),\n                            'text'\n                        ];\n                    }\n                    else if (isArray(parent)) {\n                        parent.push([option, getFieldType(parentKey, option)]);\n                    }\n                    else {\n                        parent[key] = [option, getFieldType(key, option)];\n                    }\n                }\n            }\n        }\n        objectEach(options, function (option, key) {\n            if (key === 'typeOptions') {\n                visualOptions[key] = {};\n                objectEach(options[key], function (typeOption, typeKey) {\n                    traverse(typeOption, typeKey, nestedEditables, visualOptions[key], typeKey);\n                });\n            }\n            else {\n                traverse(option, key, editables[type], visualOptions, key);\n            }\n        });\n        return visualOptions;\n    };\n    /**\n     * Get all class names for all parents in the element. Iterates until finds\n     * main container.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#getClickedClassNames\n     *\n     * @param {Highcharts.HTMLDOMElement} container\n     * Container that event is bound to.\n     *\n     * @param {global.Event} event\n     * Browser's event.\n     *\n     * @return {Array<Array<string, Highcharts.HTMLDOMElement>>}\n     * Array of class names with corresponding elements\n     */\n    NavigationBindings.prototype.getClickedClassNames = function (container, event) {\n        var element = event.target, classNames = [], elemClassName;\n        while (element) {\n            elemClassName = attr(element, 'class');\n            if (elemClassName) {\n                classNames = classNames.concat(elemClassName\n                    .split(' ')\n                    // eslint-disable-next-line no-loop-func\n                    .map(function (name) { return ([name, element]); }));\n            }\n            element = element.parentNode;\n            if (element === container) {\n                return classNames;\n            }\n        }\n        return classNames;\n    };\n    /**\n     * Get events bound to a button. It's a custom event delegation to find all\n     * events connected to the element.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#getButtonEvents\n     *\n     * @param {Highcharts.HTMLDOMElement} container\n     *        Container that event is bound to.\n     *\n     * @param {global.Event} event\n     *        Browser's event.\n     *\n     * @return {Object}\n     *         Object with events (init, start, steps, and end)\n     */\n    NavigationBindings.prototype.getButtonEvents = function (container, event) {\n        var navigation = this, classNames = this.getClickedClassNames(container, event);\n        var bindings;\n        classNames.forEach(function (className) {\n            if (navigation.boundClassNames[className[0]] && !bindings) {\n                bindings = {\n                    events: navigation.boundClassNames[className[0]],\n                    button: className[1]\n                };\n            }\n        });\n        return bindings;\n    };\n    /**\n     * Bindings are just events, so the whole update process is simply\n     * removing old events and adding new ones.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#update\n     */\n    NavigationBindings.prototype.update = function (options) {\n        this.options = merge(true, this.options, options);\n        this.removeEvents();\n        this.initEvents();\n    };\n    /**\n     * Remove all events created in the navigation.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#removeEvents\n     */\n    NavigationBindings.prototype.removeEvents = function () {\n        this.eventsToUnbind.forEach(function (unbinder) { return unbinder(); });\n    };\n    /**\n     * @private\n     * @function Highcharts.NavigationBindings#destroy\n     */\n    NavigationBindings.prototype.destroy = function () {\n        this.removeEvents();\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    // Define which options from annotations should show up in edit box:\n    NavigationBindings.annotationsEditable = {\n        // `typeOptions` are always available\n        // Nested and shared options:\n        nestedOptions: {\n            labelOptions: ['style', 'format', 'backgroundColor'],\n            labels: ['style'],\n            label: ['style'],\n            style: ['fontSize', 'color'],\n            background: ['fill', 'strokeWidth', 'stroke'],\n            innerBackground: ['fill', 'strokeWidth', 'stroke'],\n            outerBackground: ['fill', 'strokeWidth', 'stroke'],\n            shapeOptions: ['fill', 'strokeWidth', 'stroke'],\n            shapes: ['fill', 'strokeWidth', 'stroke'],\n            line: ['strokeWidth', 'stroke'],\n            backgroundColors: [true],\n            connector: ['fill', 'strokeWidth', 'stroke'],\n            crosshairX: ['strokeWidth', 'stroke'],\n            crosshairY: ['strokeWidth', 'stroke']\n        },\n        // Simple shapes:\n        circle: ['shapes'],\n        ellipse: ['shapes'],\n        verticalLine: [],\n        label: ['labelOptions'],\n        // Measure\n        measure: ['background', 'crosshairY', 'crosshairX'],\n        // Others:\n        fibonacci: [],\n        tunnel: ['background', 'line', 'height'],\n        pitchfork: ['innerBackground', 'outerBackground'],\n        rect: ['shapes'],\n        // Crooked lines, elliots, arrows etc:\n        crookedLine: [],\n        basicAnnotation: ['shapes', 'labelOptions']\n    };\n    // Define non editable fields per annotation, for example Rectangle inherits\n    // options from Measure, but crosshairs are not available\n    NavigationBindings.annotationsNonEditable = {\n        rectangle: ['crosshairX', 'crosshairY', 'labelOptions'],\n        ellipse: ['labelOptions'],\n        circle: ['labelOptions']\n    };\n    return NavigationBindings;\n}());\n/* *\n *\n *  Default Export\n *\n * */\nexport default NavigationBindings;\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * A config object for navigation bindings in annotations.\n *\n * @interface Highcharts.NavigationBindingsOptionsObject\n */ /**\n* ClassName of the element for a binding.\n* @name Highcharts.NavigationBindingsOptionsObject#className\n* @type {string|undefined}\n*/ /**\n* Last event to be fired after last step event.\n* @name Highcharts.NavigationBindingsOptionsObject#end\n* @type {Function|undefined}\n*/ /**\n* Initial event, fired on a button click.\n* @name Highcharts.NavigationBindingsOptionsObject#init\n* @type {Function|undefined}\n*/ /**\n* Event fired on first click on a chart.\n* @name Highcharts.NavigationBindingsOptionsObject#start\n* @type {Function|undefined}\n*/ /**\n* Last event to be fired after last step event. Array of step events to be\n* called sequentially after each user click.\n* @name Highcharts.NavigationBindingsOptionsObject#steps\n* @type {Array<Function>|undefined}\n*/\n(''); // keeps doclets above in JS file\n","/* *\n *\n *  Popup generator for Stock tools\n *\n *  (c) 2009-2021 Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport H from '../../../Core/Globals.js';\nvar doc = H.doc, isFirefox = H.isFirefox;\nimport U from '../../../Core/Utilities.js';\nvar createElement = U.createElement, isArray = U.isArray, isObject = U.isObject, objectEach = U.objectEach, pick = U.pick, stableSort = U.stableSort;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Create annotation simple form.\n * It contains fields with param names.\n * @private\n * @param {Highcharts.Chart} chart\n * Chart\n * @param {Object} options\n * Options\n * @param {Function} callback\n * On click callback\n * @param {boolean} [isInit]\n * If it is a form declared for init annotation\n */\nfunction addForm(chart, options, callback, isInit) {\n    if (!chart) {\n        return;\n    }\n    var popupDiv = this.container, lang = this.lang;\n    // create title of annotations\n    var lhsCol = createElement('h2', {\n        className: 'highcharts-popup-main-title'\n    }, void 0, popupDiv);\n    lhsCol.appendChild(doc.createTextNode(lang[options.langKey] || options.langKey || ''));\n    // left column\n    lhsCol = createElement('div', {\n        className: ('highcharts-popup-lhs-col highcharts-popup-lhs-full')\n    }, void 0, popupDiv);\n    var bottomRow = createElement('div', {\n        className: 'highcharts-popup-bottom-row'\n    }, void 0, popupDiv);\n    addFormFields.call(this, lhsCol, chart, '', options, [], true);\n    this.addButton(bottomRow, isInit ?\n        (lang.addButton || 'Add') :\n        (lang.saveButton || 'Save'), isInit ? 'add' : 'save', popupDiv, callback);\n}\n/**\n * Create annotation simple form. It contains two buttons\n * (edit / remove) and text label.\n * @private\n * @param {Highcharts.Chart} - chart\n * @param {Highcharts.AnnotationsOptions} - options\n * @param {Function} - on click callback\n */\nfunction addToolbar(chart, options, callback) {\n    var _this = this;\n    var lang = this.lang, popupDiv = this.container, showForm = this.showForm, toolbarClass = 'highcharts-annotation-toolbar';\n    // set small size\n    if (popupDiv.className.indexOf(toolbarClass) === -1) {\n        popupDiv.className += ' ' + toolbarClass;\n    }\n    // set position\n    if (chart) {\n        popupDiv.style.top = chart.plotTop + 10 + 'px';\n    }\n    // create label\n    createElement('span', void 0, void 0, popupDiv).appendChild(doc.createTextNode(pick(\n    // Advanced annotations:\n    lang[options.langKey] || options.langKey, \n    // Basic shapes:\n    options.shapes && options.shapes[0].type, '')));\n    // add buttons\n    var button = this.addButton(popupDiv, lang.removeButton || 'Remove', 'remove', popupDiv, callback);\n    button.className += ' highcharts-annotation-remove-button';\n    button.style['background-image'] = 'url(' +\n        this.iconsURL + 'destroy.svg)';\n    button = this.addButton(popupDiv, lang.editButton || 'Edit', 'edit', popupDiv, function () {\n        showForm.call(_this, 'annotation-edit', chart, options, callback);\n    });\n    button.className += ' highcharts-annotation-edit-button';\n    button.style['background-image'] = 'url(' +\n        this.iconsURL + 'edit.svg)';\n}\n/**\n * Create annotation's form fields.\n * @private\n * @param {Highcharts.HTMLDOMElement} parentDiv\n * Div where inputs are placed\n * @param {Highcharts.Chart} chart\n * Chart\n * @param {string} parentNode\n * Name of parent to create chain of names\n * @param {Highcharts.AnnotationsOptions} options\n * Options\n * @param {Array<unknown>} storage\n * Array where all items are stored\n * @param {boolean} [isRoot]\n * Recursive flag for root\n */\nfunction addFormFields(parentDiv, chart, parentNode, options, storage, isRoot) {\n    var _this = this;\n    if (!chart) {\n        return;\n    }\n    var addInput = this.addInput, lang = this.lang;\n    var parentFullName, titleName;\n    objectEach(options, function (value, option) {\n        // create name like params.styles.fontSize\n        parentFullName = parentNode !== '' ? parentNode + '.' + option : option;\n        if (isObject(value)) {\n            if (\n            // value is object of options\n            !isArray(value) ||\n                // array of objects with params. i.e labels in Fibonacci\n                (isArray(value) && isObject(value[0]))) {\n                titleName = lang[option] || option;\n                if (!titleName.match(/\\d/g)) {\n                    storage.push([\n                        true,\n                        titleName,\n                        parentDiv\n                    ]);\n                }\n                addFormFields.call(_this, parentDiv, chart, parentFullName, value, storage, false);\n            }\n            else {\n                storage.push([\n                    _this,\n                    parentFullName,\n                    'annotation',\n                    parentDiv,\n                    value\n                ]);\n            }\n        }\n    });\n    if (isRoot) {\n        stableSort(storage, function (a) { return (a[1].match(/format/g) ? -1 : 1); });\n        if (isFirefox) {\n            storage.reverse(); // (#14691)\n        }\n        storage.forEach(function (genInput) {\n            if (genInput[0] === true) {\n                createElement('span', {\n                    className: 'highcharts-annotation-title'\n                }, void 0, genInput[2]).appendChild(doc.createTextNode(genInput[1]));\n            }\n            else {\n                genInput[4] = {\n                    value: genInput[4][0],\n                    type: genInput[4][1]\n                };\n                addInput.apply(genInput[0], genInput.splice(1));\n            }\n        });\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar PopupAnnotations = {\n    addForm: addForm,\n    addToolbar: addToolbar\n};\nexport default PopupAnnotations;\n","/* *\n *\n *  Popup generator for Stock tools\n *\n *  (c) 2009-2021 Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport AST from '../../../Core/Renderer/HTML/AST.js';\nimport H from '../../../Core/Globals.js';\nvar doc = H.doc;\nimport NU from '../NavigationBindingsUtilities.js';\nvar annotationsFieldsTypes = NU.annotationsFieldsTypes;\nimport SeriesRegistry from '../../../Core/Series/SeriesRegistry.js';\nvar seriesTypes = SeriesRegistry.seriesTypes;\nimport U from '../../../Core/Utilities.js';\nvar addEvent = U.addEvent, createElement = U.createElement, defined = U.defined, isArray = U.isArray, isObject = U.isObject, objectEach = U.objectEach, stableSort = U.stableSort;\n/* *\n *\n *  Enums\n *\n * */\n/**\n * Enum for properties which should have dropdown list.\n * @private\n */\nvar DropdownProperties;\n(function (DropdownProperties) {\n    DropdownProperties[DropdownProperties[\"params.algorithm\"] = 0] = \"params.algorithm\";\n    DropdownProperties[DropdownProperties[\"params.average\"] = 1] = \"params.average\";\n})(DropdownProperties || (DropdownProperties = {}));\n/**\n * List of available algorithms for the specific indicator.\n * @private\n */\nvar dropdownParameters = {\n    'algorithm-pivotpoints': ['standard', 'fibonacci', 'camarilla'],\n    'average-disparityindex': ['sma', 'ema', 'dema', 'tema', 'wma']\n};\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Create two columns (divs) in HTML.\n * @private\n * @param {Highcharts.HTMLDOMElement} container\n * Container of columns\n * @return {Highcharts.Dictionary<Highcharts.HTMLDOMElement>}\n * Reference to two HTML columns (lhsCol, rhsCol)\n */\nfunction addColsContainer(container) {\n    // left column\n    var lhsCol = createElement('div', {\n        className: 'highcharts-popup-lhs-col'\n    }, void 0, container);\n    // right column\n    var rhsCol = createElement('div', {\n        className: 'highcharts-popup-rhs-col'\n    }, void 0, container);\n    // wrapper content\n    createElement('div', {\n        className: 'highcharts-popup-rhs-col-wrapper'\n    }, void 0, rhsCol);\n    return {\n        lhsCol: lhsCol,\n        rhsCol: rhsCol\n    };\n}\n/**\n * Create indicator's form. It contains two tabs (ADD and EDIT) with\n * content.\n * @private\n */\nfunction addForm(chart, _options, callback) {\n    var lang = this.lang;\n    var buttonParentDiv;\n    if (!chart) {\n        return;\n    }\n    // add tabs\n    this.tabs.init.call(this, chart);\n    // get all tabs content divs\n    var tabsContainers = this.container\n        .querySelectorAll('.highcharts-tab-item-content');\n    // ADD tab\n    addColsContainer(tabsContainers[0]);\n    addSearchBox.call(this, chart, tabsContainers[0]);\n    addIndicatorList.call(this, chart, tabsContainers[0], 'add');\n    buttonParentDiv = tabsContainers[0]\n        .querySelectorAll('.highcharts-popup-rhs-col')[0];\n    this.addButton(buttonParentDiv, lang.addButton || 'add', 'add', buttonParentDiv, callback);\n    // EDIT tab\n    addColsContainer(tabsContainers[1]);\n    addIndicatorList.call(this, chart, tabsContainers[1], 'edit');\n    buttonParentDiv = tabsContainers[1]\n        .querySelectorAll('.highcharts-popup-rhs-col')[0];\n    this.addButton(buttonParentDiv, lang.saveButton || 'save', 'edit', buttonParentDiv, callback);\n    this.addButton(buttonParentDiv, lang.removeButton || 'remove', 'remove', buttonParentDiv, callback);\n}\n/**\n * Create typical inputs for chosen indicator. Fields are extracted from\n * defaultOptions (ADD mode) or current indicator (ADD mode). Two extra\n * fields are added:\n * - hidden input - contains indicator type (required for callback)\n * - select - list of series which can be linked with indicator\n * @private\n * @param {Highcharts.Chart} chart\n * Chart\n * @param {Highcharts.Series} series\n * Indicator\n * @param {string} seriesType\n * Indicator type like: sma, ema, etc.\n * @param {Highcharts.HTMLDOMElement} rhsColWrapper\n * Element where created HTML list is added\n */\nfunction addFormFields(chart, series, seriesType, rhsColWrapper) {\n    var fields = series.params || series.options.params;\n    // reset current content\n    rhsColWrapper.innerHTML = AST.emptyHTML;\n    // create title (indicator name in the right column)\n    createElement('h3', {\n        className: 'highcharts-indicator-title'\n    }, void 0, rhsColWrapper).appendChild(doc.createTextNode(getNameType(series, seriesType).indicatorFullName));\n    // input type\n    createElement('input', {\n        type: 'hidden',\n        name: 'highcharts-type-' + seriesType,\n        value: seriesType\n    }, void 0, rhsColWrapper);\n    // list all series with id\n    listAllSeries.call(this, seriesType, 'series', chart, rhsColWrapper, series, series.linkedParent && series.linkedParent.options.id);\n    if (fields.volumeSeriesID) {\n        listAllSeries.call(this, seriesType, 'volume', chart, rhsColWrapper, series, series.linkedParent && fields.volumeSeriesID);\n    }\n    // add param fields\n    addParamInputs.call(this, chart, 'params', fields, seriesType, rhsColWrapper);\n}\n/**\n * Create HTML list of all indicators (ADD mode) or added indicators\n * (EDIT mode).\n *\n * @private\n *\n * @param {Highcharts.AnnotationChart} chart\n *        The chart object.\n *\n * @param {string} [optionName]\n *        Name of the option into which selection is being added.\n *\n * @param {HTMLDOMElement} [parentDiv]\n *        HTML parent element.\n *\n * @param {string} listType\n *        Type of list depending on the selected bookmark.\n *        Might be 'add' or 'edit'.\n *\n * @param {string|undefined} filter\n *        Applied filter string from the input.\n *        For the first iteration, it's an empty string.\n */\nfunction addIndicatorList(chart, parentDiv, listType, filter) {\n    var popup = this, lang = popup.lang, lhsCol = parentDiv.querySelectorAll('.highcharts-popup-lhs-col')[0], rhsCol = parentDiv.querySelectorAll('.highcharts-popup-rhs-col')[0], isEdit = listType === 'edit', series = (isEdit ?\n        chart.series : // EDIT mode\n        chart.options.plotOptions || {} // ADD mode\n    );\n    if (!chart && series) {\n        return;\n    }\n    var item, filteredSeriesArray = [];\n    // Filter and sort the series.\n    if (!isEdit && !isArray(series)) {\n        // Apply filters only for the 'add' indicator list.\n        filteredSeriesArray = filterSeries.call(this, series, filter);\n    }\n    else if (isArray(series)) {\n        filteredSeriesArray = filterSeriesArray.call(this, series);\n    }\n    // Sort indicators alphabeticaly.\n    stableSort(filteredSeriesArray, function (a, b) {\n        var seriesAName = a.indicatorFullName.toLowerCase(), seriesBName = b.indicatorFullName.toLowerCase();\n        return (seriesAName < seriesBName) ?\n            -1 : (seriesAName > seriesBName) ? 1 : 0;\n    });\n    // If the list exists remove it from the DOM\n    // in order to create a new one with different filters.\n    if (lhsCol.children[1]) {\n        lhsCol.children[1].remove();\n    }\n    // Create wrapper for list.\n    var indicatorList = createElement('ul', {\n        className: 'highcharts-indicator-list'\n    }, void 0, lhsCol);\n    var rhsColWrapper = rhsCol.querySelectorAll('.highcharts-popup-rhs-col-wrapper')[0];\n    filteredSeriesArray.forEach(function (seriesSet) {\n        var indicatorFullName = seriesSet.indicatorFullName, indicatorType = seriesSet.indicatorType, series = seriesSet.series;\n        item = createElement('li', {\n            className: 'highcharts-indicator-list'\n        }, void 0, indicatorList);\n        item.appendChild(doc.createTextNode(indicatorFullName));\n        ['click', 'touchstart'].forEach(function (eventName) {\n            addEvent(item, eventName, function () {\n                var button = rhsColWrapper.parentNode\n                    .children[1];\n                addFormFields.call(popup, chart, series, indicatorType, rhsColWrapper);\n                if (button) {\n                    button.style.display = 'block';\n                }\n                // add hidden input with series.id\n                if (isEdit && series.options) {\n                    createElement('input', {\n                        type: 'hidden',\n                        name: 'highcharts-id-' + indicatorType,\n                        value: series.options.id\n                    }, void 0, rhsColWrapper).setAttribute('highcharts-data-series-id', series.options.id);\n                }\n            });\n        });\n    });\n    // select first item from the list\n    if (indicatorList.childNodes.length > 0) {\n        indicatorList.childNodes[0].click();\n    }\n    else if (!isEdit) {\n        AST.setElementHTML(rhsColWrapper.parentNode.children[0], lang.noFilterMatch || '');\n        rhsColWrapper.parentNode.children[1]\n            .style.display = 'none';\n    }\n}\n/**\n * Recurent function which lists all fields, from params object and\n * create them as inputs. Each input has unique `data-name` attribute,\n * which keeps chain of fields i.e params.styles.fontSize.\n * @private\n * @param {Highcharts.Chart} chart\n * Chart\n * @param {string} parentNode\n * Name of parent to create chain of names\n * @param {Highcharts.PopupFieldsDictionary<string>} fields\n * Params which are based for input create\n * @param {string} type\n * Indicator type like: sma, ema, etc.\n * @param {Highcharts.HTMLDOMElement} parentDiv\n * Element where created HTML list is added\n */\nfunction addParamInputs(chart, parentNode, fields, type, parentDiv) {\n    var _this = this;\n    if (!chart) {\n        return;\n    }\n    var addInput = this.addInput;\n    objectEach(fields, function (value, fieldName) {\n        var predefinedType = annotationsFieldsTypes[fieldName];\n        var fieldType = type;\n        if (predefinedType) {\n            fieldType = predefinedType;\n        }\n        // create name like params.styles.fontSize\n        var parentFullName = parentNode + '.' + fieldName;\n        if (defined(value) && // skip if field is unnecessary, #15362\n            parentFullName) {\n            if (isObject(value)) {\n                // (15733) 'Periods' has an arrayed value. Label must be\n                // created here.\n                addInput.call(_this, parentFullName, type, parentDiv, {});\n                addParamInputs.call(_this, chart, parentFullName, value, type, parentDiv);\n            }\n            // If the option is listed in dropdown enum,\n            // add the selection box for it.\n            if (parentFullName in DropdownProperties) {\n                // Add selection boxes.\n                var selectBox = addSelection.call(_this, type, parentFullName, parentDiv);\n                // Add possible dropdown options.\n                addSelectionOptions.call(_this, chart, parentNode, selectBox, type, fieldName, value);\n            }\n            else if (\n            // Skip volume field which is created by addFormFields.\n            parentFullName !== 'params.volumeSeriesID' &&\n                !isArray(value) // Skip params declared in array.\n            ) {\n                addInput.call(_this, parentFullName, type, parentDiv, {\n                    value: value,\n                    type: 'number'\n                } // all inputs are text type\n                );\n            }\n        }\n    });\n}\n/**\n * Add searchbox HTML element and its' label.\n *\n * @private\n *\n * @param {Highcharts.AnnotationChart} chart\n *        The chart object.\n *\n * @param {HTMLDOMElement} parentDiv\n *        HTML parent element.\n */\nfunction addSearchBox(chart, parentDiv) {\n    var popup = this, lhsCol = parentDiv.querySelectorAll('.highcharts-popup-lhs-col')[0], options = 'searchIndicators', inputAttributes = {\n        value: '',\n        type: 'text',\n        htmlFor: 'search-indicators',\n        labelClassName: 'highcharts-input-search-indicators-label'\n    }, clearFilterText = this.lang.clearFilter, inputWrapper = createElement('div', {\n        className: 'highcharts-input-wrapper'\n    }, void 0, lhsCol);\n    var handleInputChange = function (inputText) {\n        // Apply some filters.\n        addIndicatorList.call(popup, chart, popup.container, 'add', inputText);\n    };\n    // Add input field with the label and button.\n    var input = this.addInput(options, 'input', inputWrapper, inputAttributes), button = createElement('a', {\n        textContent: clearFilterText\n    }, void 0, inputWrapper);\n    input.classList.add('highcharts-input-search-indicators');\n    button.classList.add('clear-filter-button');\n    // Add input change events.\n    addEvent(input, 'input', function (e) {\n        handleInputChange(this.value);\n        // Show clear filter button.\n        if (this.value.length) {\n            button.style.display = 'inline-block';\n        }\n        else {\n            button.style.display = 'none';\n        }\n    });\n    // Add clear filter click event.\n    ['click', 'touchstart'].forEach(function (eventName) {\n        addEvent(button, eventName, function () {\n            // Clear the input.\n            input.value = '';\n            handleInputChange('');\n            // Hide clear filter button- no longer nececary.\n            button.style.display = 'none';\n        });\n    });\n}\n/**\n * Add selection HTML element and its' label.\n *\n * @private\n *\n * @param {string} indicatorType\n * Type of the indicator i.e. sma, ema...\n *\n * @param {string} [optionName]\n * Name of the option into which selection is being added.\n *\n * @param {HTMLDOMElement} [parentDiv]\n * HTML parent element.\n */\nfunction addSelection(indicatorType, optionName, parentDiv) {\n    var optionParamList = optionName.split('.'), labelText = optionParamList[optionParamList.length - 1], selectName = 'highcharts-' + optionName + '-type-' + indicatorType, lang = this.lang;\n    // Add a label for the selection box.\n    createElement('label', {\n        htmlFor: selectName\n    }, null, parentDiv).appendChild(doc.createTextNode(lang[labelText] || optionName));\n    // Create a selection box.\n    var selectBox = createElement('select', {\n        name: selectName,\n        className: 'highcharts-popup-field',\n        id: 'highcharts-select-' + optionName\n    }, null, parentDiv);\n    selectBox.setAttribute('id', 'highcharts-select-' + optionName);\n    return selectBox;\n}\n/**\n * Get and add selection options.\n *\n * @private\n *\n * @param {Highcharts.AnnotationChart} chart\n *        The chart object.\n *\n * @param {string} [optionName]\n *        Name of the option into which selection is being added.\n *\n * @param {HTMLSelectElement} [selectBox]\n *        HTML select box element to which the options are being added.\n *\n * @param {string|undefined} indicatorType\n *        Type of the indicator i.e. sma, ema...\n *\n * @param {string|undefined} parameterName\n *        Name of the parameter which should be applied.\n *\n * @param {string|undefined} selectedOption\n *        Default value in dropdown.\n */\nfunction addSelectionOptions(chart, optionName, selectBox, indicatorType, parameterName, selectedOption, currentSeries) {\n    // Get and apply selection options for the possible series.\n    if (optionName === 'series' || optionName === 'volume') {\n        // List all series which have id - mandatory for indicator.\n        chart.series.forEach(function (series) {\n            var seriesOptions = series.options, seriesName = seriesOptions.name ||\n                seriesOptions.params ?\n                series.name :\n                seriesOptions.id || '';\n            if (seriesOptions.id !== 'highcharts-navigator-series' &&\n                seriesOptions.id !== (currentSeries &&\n                    currentSeries.options &&\n                    currentSeries.options.id)) {\n                if (!defined(selectedOption) &&\n                    optionName === 'volume' &&\n                    series.type === 'column') {\n                    selectedOption = seriesOptions.id;\n                }\n                createElement('option', {\n                    value: seriesOptions.id\n                }, void 0, selectBox).appendChild(doc.createTextNode(seriesName));\n            }\n        });\n    }\n    else if (indicatorType && parameterName) {\n        // Get and apply options for the possible parameters.\n        var dropdownKey = parameterName + '-' + indicatorType, parameterOption = dropdownParameters[dropdownKey];\n        parameterOption.forEach(function (element) {\n            createElement('option', {\n                value: element\n            }, void 0, selectBox).appendChild(doc.createTextNode(element));\n        });\n    }\n    // Add the default dropdown value if defined.\n    if (defined(selectedOption)) {\n        selectBox.value = selectedOption;\n    }\n}\n/**\n * Filter object of series which are not indicators.\n * If the filter string exists, check against it.\n *\n * @private\n *\n * @param {Highcharts.FilteredSeries} series\n *        All series are available in the plotOptions.\n *\n * @param {string|undefined} filter\n *        Applied filter string from the input.\n *        For the first iteration, it's an empty string.\n *\n * @return {Array<Highcharts.FilteredSeries>} filteredSeriesArray\n *         Returns array of filtered series based on filter string.\n */\nfunction filterSeries(series, filter) {\n    var popup = this, indicators = popup.indicators, lang = popup.chart && popup.chart.options.lang, indicatorAliases = lang &&\n        lang.navigation &&\n        lang.navigation.popup &&\n        lang.navigation.popup.indicatorAliases, filteredSeriesArray = [];\n    var filteredSeries;\n    objectEach(series, function (series, value) {\n        var seriesOptions = series && series.options;\n        // Allow only indicators.\n        if (series.params || seriesOptions &&\n            seriesOptions.params) {\n            var _a = getNameType(series, value), indicatorFullName = _a.indicatorFullName, indicatorType = _a.indicatorType;\n            if (filter) {\n                // Replace invalid characters.\n                var validFilter = filter.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n                var regex = new RegExp(validFilter, 'i'), alias = indicatorAliases &&\n                    indicatorAliases[indicatorType] &&\n                    indicatorAliases[indicatorType].join(' ') || '';\n                if (indicatorFullName.match(regex) ||\n                    alias.match(regex)) {\n                    filteredSeries = {\n                        indicatorFullName: indicatorFullName,\n                        indicatorType: indicatorType,\n                        series: series\n                    };\n                    filteredSeriesArray.push(filteredSeries);\n                }\n            }\n            else {\n                filteredSeries = {\n                    indicatorFullName: indicatorFullName,\n                    indicatorType: indicatorType,\n                    series: series\n                };\n                filteredSeriesArray.push(filteredSeries);\n            }\n        }\n    });\n    return filteredSeriesArray;\n}\n/**\n * Filter an array of series and map its names and types.\n *\n * @private\n *\n * @param {Highcharts.FilteredSeries} series\n *        All series that are available in the plotOptions.\n *\n * @return {Array<Highcharts.FilteredSeries>} filteredSeriesArray\n *         Returns array of filtered series based on filter string.\n */\nfunction filterSeriesArray(series) {\n    var filteredSeriesArray = [];\n    // Allow only indicators.\n    series.forEach(function (series) {\n        if (series.is('sma')) {\n            filteredSeriesArray.push({\n                indicatorFullName: series.name,\n                indicatorType: series.type,\n                series: series\n            });\n        }\n    });\n    return filteredSeriesArray;\n}\n/**\n * Get amount of indicators added to chart.\n * @private\n * @return {number} - Amount of indicators\n */\nfunction getAmount() {\n    var counter = 0;\n    this.series.forEach(function (serie) {\n        if (serie.params ||\n            serie.options.params) {\n            counter++;\n        }\n    });\n    return counter;\n}\n/**\n * Extract full name and type of requested indicator.\n *\n * @private\n *\n * @param {Highcharts.Series} series\n * Series which name is needed(EDITmode - defaultOptions.series,\n * ADDmode - indicator series).\n *\n * @param {string} [indicatorType]\n * Type of the indicator i.e. sma, ema...\n *\n * @return {Highcharts.Dictionary<string>}\n * Full name and series type.\n */\nfunction getNameType(series, indicatorType) {\n    var options = series.options;\n    // add mode\n    var seriesName = (seriesTypes[indicatorType] &&\n        seriesTypes[indicatorType].prototype.nameBase) ||\n        indicatorType.toUpperCase(), seriesType = indicatorType;\n    // edit\n    if (options && options.type) {\n        seriesType = series.options.type;\n        seriesName = series.name;\n    }\n    return {\n        indicatorFullName: seriesName,\n        indicatorType: seriesType\n    };\n}\n/**\n * Create the selection box for the series,\n * add options and apply the default one.\n *\n * @private\n *\n * @param {string} indicatorType\n *        Type of the indicator i.e. sma, ema...\n *\n * @param {string} [optionName]\n *        Name of the option into which selection is being added.\n *\n * @param {Highcharts.AnnotationChart} chart\n *        The chart object.\n *\n * @param {HTMLDOMElement} [parentDiv]\n *        HTML parent element.\n *\n * @param {string|undefined} selectedOption\n *        Default value in dropdown.\n */\nfunction listAllSeries(indicatorType, optionName, chart, parentDiv, currentSeries, selectedOption) {\n    var popup = this, indicators = popup.indicators;\n    // Won't work without the chart.\n    if (!chart) {\n        return;\n    }\n    // Add selection boxes.\n    var selectBox = addSelection.call(popup, indicatorType, optionName, parentDiv);\n    // Add possible dropdown options.\n    addSelectionOptions.call(popup, chart, optionName, selectBox, void 0, void 0, void 0, currentSeries);\n    // Add the default dropdown value if defined.\n    if (defined(selectedOption)) {\n        selectBox.value = selectedOption;\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar PopupIndicators = {\n    addForm: addForm,\n    getAmount: getAmount\n};\nexport default PopupIndicators;\n","/* *\n *\n *  Popup generator for Stock tools\n *\n *  (c) 2009-2021 Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport H from '../../../Core/Globals.js';\nvar doc = H.doc;\nimport U from '../../../Core/Utilities.js';\nvar addEvent = U.addEvent, createElement = U.createElement;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Create tab content\n * @private\n * @return {HTMLDOMElement} - created HTML tab-content element\n */\nfunction addContentItem() {\n    var popupDiv = this.container;\n    return createElement('div', {\n        // #12100\n        className: 'highcharts-tab-item-content highcharts-no-mousewheel'\n    }, void 0, popupDiv);\n}\n/**\n * Create tab menu item\n * @private\n * @param {string} tabName\n * `add` or `edit`\n * @param {number} [disableTab]\n * Disable tab when 0\n * @return {Highcharts.HTMLDOMElement}\n * Created HTML tab-menu element\n */\nfunction addMenuItem(tabName, disableTab) {\n    var popupDiv = this.container, lang = this.lang;\n    var className = 'highcharts-tab-item';\n    if (disableTab === 0) {\n        className += ' highcharts-tab-disabled';\n    }\n    // tab 1\n    var menuItem = createElement('span', {\n        className: className\n    }, void 0, popupDiv);\n    menuItem.appendChild(doc.createTextNode(lang[tabName + 'Button'] || tabName));\n    menuItem.setAttribute('highcharts-data-tab-type', tabName);\n    return menuItem;\n}\n/**\n * Set all tabs as invisible.\n * @private\n */\nfunction deselectAll() {\n    var popupDiv = this.container, tabs = popupDiv\n        .querySelectorAll('.highcharts-tab-item'), tabsContent = popupDiv\n        .querySelectorAll('.highcharts-tab-item-content');\n    for (var i = 0; i < tabs.length; i++) {\n        tabs[i].classList.remove('highcharts-tab-item-active');\n        tabsContent[i].classList.remove('highcharts-tab-item-show');\n    }\n}\n/**\n * Init tabs. Create tab menu items, tabs containers\n * @private\n * @param {Highcharts.Chart} chart\n * Reference to current chart\n */\nfunction init(chart) {\n    if (!chart) {\n        return;\n    }\n    var indicatorsCount = this.indicators.getAmount.call(chart);\n    // create menu items\n    var firstTab = addMenuItem.call(this, 'add'); // run by default\n    addMenuItem.call(this, 'edit', indicatorsCount);\n    // create tabs containers\n    addContentItem.call(this);\n    addContentItem.call(this);\n    switchTabs.call(this, indicatorsCount);\n    // activate first tab\n    selectTab.call(this, firstTab, 0);\n}\n/**\n * Set tab as visible\n * @private\n * @param {globals.Element} - current tab\n * @param {number} - Index of tab in menu\n */\nfunction selectTab(tab, index) {\n    var allTabs = this.container\n        .querySelectorAll('.highcharts-tab-item-content');\n    tab.className += ' highcharts-tab-item-active';\n    allTabs[index].className += ' highcharts-tab-item-show';\n}\n/**\n * Add click event to each tab\n * @private\n * @param {number} disableTab\n * Disable tab when 0\n */\nfunction switchTabs(disableTab) {\n    var popup = this, popupDiv = this.container, tabs = popupDiv.querySelectorAll('.highcharts-tab-item');\n    tabs.forEach(function (tab, i) {\n        if (disableTab === 0 &&\n            tab.getAttribute('highcharts-data-tab-type') === 'edit') {\n            return;\n        }\n        ['click', 'touchstart'].forEach(function (eventName) {\n            addEvent(tab, eventName, function () {\n                // reset class on other elements\n                deselectAll.call(popup);\n                selectTab.call(popup, this, i);\n            });\n        });\n    });\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar PopupTabs = {\n    init: init\n};\nexport default PopupTabs;\n","/* *\n *\n *  Popup generator for Stock tools\n *\n *  (c) 2009-2021 Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport AST from '../../../Core/Renderer/HTML/AST.js';\nimport D from '../../../Core/Defaults.js';\nvar getOptions = D.getOptions;\nimport H from '../../../Core/Globals.js';\nvar doc = H.doc;\nimport PopupAnnotations from './PopupAnnotations.js';\nimport PopupIndicators from './PopupIndicators.js';\nimport PopupTabs from './PopupTabs.js';\nimport U from '../../../Core/Utilities.js';\nvar addEvent = U.addEvent, createElement = U.createElement, extend = U.extend, fireEvent = U.fireEvent, pick = U.pick;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Get values from all inputs and selections then create JSON.\n *\n * @private\n *\n * @param {Highcharts.HTMLDOMElement} parentDiv\n * The container where inputs and selections are created.\n *\n * @param {string} type\n * Type of the popup bookmark (add|edit|remove).\n */\nfunction getFields(parentDiv, type) {\n    var inputList = Array.prototype.slice.call(parentDiv.querySelectorAll('input')), selectList = Array.prototype.slice.call(parentDiv.querySelectorAll('select')), optionSeries = '#highcharts-select-series > option:checked', optionVolume = '#highcharts-select-volume > option:checked', linkedTo = parentDiv.querySelectorAll(optionSeries)[0], volumeTo = parentDiv.querySelectorAll(optionVolume)[0];\n    var fieldsOutput = {\n        actionType: type,\n        linkedTo: linkedTo && linkedTo.getAttribute('value') || '',\n        fields: {}\n    };\n    inputList.forEach(function (input) {\n        var param = input.getAttribute('highcharts-data-name'), seriesId = input.getAttribute('highcharts-data-series-id');\n        // params\n        if (seriesId) {\n            fieldsOutput.seriesId = input.value;\n        }\n        else if (param) {\n            fieldsOutput.fields[param] = input.value;\n        }\n        else {\n            // type like sma / ema\n            fieldsOutput.type = input.value;\n        }\n    });\n    selectList.forEach(function (select) {\n        var id = select.id;\n        // Get inputs only for the parameters, not for series and volume.\n        if (id !== 'highcharts-select-series' &&\n            id !== 'highcharts-select-volume') {\n            var parameter = id.split('highcharts-select-')[1];\n            fieldsOutput.fields[parameter] = select.value;\n        }\n    });\n    if (volumeTo) {\n        fieldsOutput.fields['params.volumeSeriesID'] = volumeTo\n            .getAttribute('value') || '';\n    }\n    return fieldsOutput;\n}\n/* *\n *\n *  Class\n *\n * */\nvar Popup = /** @class */ (function () {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    function Popup(parentDiv, iconsURL, chart) {\n        this.chart = chart;\n        this.iconsURL = iconsURL;\n        this.lang = getOptions().lang.navigation.popup;\n        // create popup div\n        this.container = createElement('div', {\n            className: 'highcharts-popup highcharts-no-tooltip'\n        }, void 0, parentDiv);\n        addEvent(this.container, 'mousedown', function () {\n            var activeAnnotation = chart &&\n                chart.navigationBindings &&\n                chart.navigationBindings.activeAnnotation;\n            if (activeAnnotation) {\n                activeAnnotation.cancelClick = true;\n                var unbind_1 = addEvent(H.doc, 'click', function () {\n                    setTimeout(function () {\n                        activeAnnotation.cancelClick = false;\n                    }, 0);\n                    unbind_1();\n                });\n            }\n        });\n        // add close button\n        this.addCloseBtn();\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Initialize the popup. Create base div and add close button.\n     * @private\n     * @param {Highcharts.HTMLDOMElement} parentDiv\n     * Container where popup should be placed\n     * @param {string} iconsURL\n     * Icon URL\n     */\n    Popup.prototype.init = function (parentDiv, iconsURL, chart) {\n        Popup.call(this, parentDiv, iconsURL, chart);\n    };\n    /**\n     * Create HTML element and attach click event (close popup).\n     * @private\n     */\n    Popup.prototype.addCloseBtn = function () {\n        var _this = this;\n        var iconsURL = this.iconsURL;\n        // create close popup btn\n        var closeBtn = createElement('div', {\n            className: 'highcharts-popup-close'\n        }, void 0, this.container);\n        closeBtn.style['background-image'] = 'url(' +\n            (iconsURL.match(/png|svg|jpeg|jpg|gif/ig) ?\n                iconsURL : iconsURL + 'close.svg') + ')';\n        ['click', 'touchstart'].forEach(function (eventName) {\n            addEvent(closeBtn, eventName, function () {\n                if (_this.chart) {\n                    var navigationBindings = _this.chart.navigationBindings;\n                    fireEvent(navigationBindings, 'closePopup');\n                    if (navigationBindings &&\n                        navigationBindings.selectedButtonElement) {\n                        fireEvent(navigationBindings, 'deselectButton', { button: navigationBindings.selectedButtonElement });\n                    }\n                }\n                else {\n                    _this.closePopup();\n                }\n            });\n        });\n    };\n    /**\n     * Create input with label.\n     *\n     * @private\n     *\n     * @param {string} option\n     *        Chain of fields i.e params.styles.fontSize separeted by the dot.\n     *\n     * @param {string} indicatorType\n     *        Type of the indicator i.e. sma, ema...\n     *\n     * @param {HTMLDOMElement} parentDiv\n     *        HTML parent element.\n     *\n     * @param {Highcharts.InputAttributes} inputAttributes\n     *        Attributes of the input.\n     *\n     * @return {HTMLInputElement}\n     *         Return created input element.\n     */\n    Popup.prototype.addInput = function (option, indicatorType, parentDiv, inputAttributes) {\n        var optionParamList = option.split('.'), optionName = optionParamList[optionParamList.length - 1], lang = this.lang, inputName = 'highcharts-' + indicatorType + '-' + pick(inputAttributes.htmlFor, optionName);\n        if (!optionName.match(/^\\d+$/)) {\n            // add label\n            createElement('label', {\n                htmlFor: inputName,\n                className: inputAttributes.labelClassName\n            }, void 0, parentDiv).appendChild(doc.createTextNode(lang[optionName] || optionName));\n        }\n        // add input\n        var input = createElement('input', {\n            name: inputName,\n            value: inputAttributes.value,\n            type: inputAttributes.type,\n            className: 'highcharts-popup-field'\n        }, void 0, parentDiv);\n        input.setAttribute('highcharts-data-name', option);\n        return input;\n    };\n    /**\n     * Create button.\n     * @private\n     * @param {Highcharts.HTMLDOMElement} parentDiv\n     * Container where elements should be added\n     * @param {string} label\n     * Text placed as button label\n     * @param {string} type\n     * add | edit | remove\n     * @param {Function} callback\n     * On click callback\n     * @param {Highcharts.HTMLDOMElement} fieldsDiv\n     * Container where inputs are generated\n     * @return {Highcharts.HTMLDOMElement}\n     * HTML button\n     */\n    Popup.prototype.addButton = function (parentDiv, label, type, fieldsDiv, callback) {\n        var _this = this;\n        var button = createElement('button', void 0, void 0, parentDiv);\n        button.appendChild(doc.createTextNode(label));\n        if (callback) {\n            ['click', 'touchstart'].forEach(function (eventName) {\n                addEvent(button, eventName, function () {\n                    _this.closePopup();\n                    return callback(getFields(fieldsDiv, type));\n                });\n            });\n        }\n        return button;\n    };\n    /**\n     * Reset content of the current popup and show.\n     * @private\n     */\n    Popup.prototype.showPopup = function () {\n        var popupDiv = this.container, toolbarClass = 'highcharts-annotation-toolbar', popupCloseBtn = popupDiv\n            .querySelectorAll('.highcharts-popup-close')[0];\n        this.formType = void 0;\n        // reset content\n        popupDiv.innerHTML = AST.emptyHTML;\n        // reset toolbar styles if exists\n        if (popupDiv.className.indexOf(toolbarClass) >= 0) {\n            popupDiv.classList.remove(toolbarClass);\n            // reset toolbar inline styles\n            popupDiv.removeAttribute('style');\n        }\n        // add close button\n        popupDiv.appendChild(popupCloseBtn);\n        popupDiv.style.display = 'block';\n        popupDiv.style.height = '';\n    };\n    /**\n     * Hide popup.\n     * @private\n     */\n    Popup.prototype.closePopup = function () {\n        this.container.style.display = 'none';\n    };\n    /**\n     * Create content and show popup.\n     * @private\n     * @param {string} - type of popup i.e indicators\n     * @param {Highcharts.Chart} - chart\n     * @param {Highcharts.AnnotationsOptions} - options\n     * @param {Function} - on click callback\n     */\n    Popup.prototype.showForm = function (type, chart, options, callback) {\n        if (!chart) {\n            return;\n        }\n        // show blank popup\n        this.showPopup();\n        // indicator form\n        if (type === 'indicators') {\n            this.indicators.addForm.call(this, chart, options, callback);\n        }\n        // annotation small toolbar\n        if (type === 'annotation-toolbar') {\n            this.annotations.addToolbar.call(this, chart, options, callback);\n        }\n        // annotation edit form\n        if (type === 'annotation-edit') {\n            this.annotations.addForm.call(this, chart, options, callback);\n        }\n        // flags form - add / edit\n        if (type === 'flag') {\n            this.annotations.addForm.call(this, chart, options, callback, true);\n        }\n        this.formType = type;\n        // Explicit height is needed to make inner elements scrollable\n        this.container.style.height = this.container.offsetHeight + 'px';\n    };\n    return Popup;\n}());\nextend(Popup.prototype, {\n    annotations: PopupAnnotations,\n    indicators: PopupIndicators,\n    tabs: PopupTabs\n});\n/* *\n *\n *  Default Export\n *\n * */\nexport default Popup;\n","/* *\n *\n *  Popup generator for Stock tools\n *\n *  (c) 2009-2021 Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nimport Popup from './Popup.js';\nimport U from '../../../Core/Utilities.js';\nvar addEvent = U.addEvent, wrap = U.wrap;\n/* *\n *\n *  Constants\n *\n * */\nvar composedClasses = [];\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction compose(NagivationBindingsClass, PointerClass) {\n    if (composedClasses.indexOf(NagivationBindingsClass) === -1) {\n        composedClasses.push(NagivationBindingsClass);\n        addEvent(NagivationBindingsClass, 'closePopup', onNavigationBindingsClosePopup);\n        addEvent(NagivationBindingsClass, 'showPopup', onNavigationBindingsShowPopup);\n    }\n    if (composedClasses.indexOf(PointerClass) === -1) {\n        composedClasses.push(PointerClass);\n        wrap(PointerClass.prototype, 'onContainerMouseDown', wrapPointerOnContainerMouserDown);\n    }\n}\n/**\n * @private\n */\nfunction onNavigationBindingsClosePopup() {\n    if (this.popup) {\n        this.popup.closePopup();\n    }\n}\n/**\n * @private\n */\nfunction onNavigationBindingsShowPopup(config) {\n    if (!this.popup) {\n        // Add popup to main container\n        this.popup = new Popup(this.chart.container, (this.chart.options.navigation.iconsURL ||\n            (this.chart.options.stockTools &&\n                this.chart.options.stockTools.gui.iconsURL) ||\n            'https://code.highcharts.com/10.3.3/gfx/stock-icons/'), this.chart);\n    }\n    this.popup.showForm(config.formType, this.chart, config.options, config.onSubmit);\n}\n/**\n * onContainerMouseDown blocks internal popup events, due to e.preventDefault.\n * Related issue #4606\n * @private\n */\nfunction wrapPointerOnContainerMouserDown(proceed, e) {\n    // elements is not in popup\n    if (!this.inClass(e.target, 'highcharts-popup')) {\n        proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar PopupComposition = {\n    compose: compose\n};\nexport default PopupComposition;\n","/* *\n *\n *  (c) 2009-2021 Highsoft, Black Label\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport A from '../../Core/Animation/AnimationUtilities.js';\nvar getDeferredAnimation = A.getDeferredAnimation;\nimport AnnotationChart from './AnnotationChart.js';\nimport AnnotationDefaults from './AnnotationDefaults.js';\nimport Controllable from './Controllables/Controllable.js';\nvar controllableProto = Controllable.prototype;\nimport ControllableRect from './Controllables/ControllableRect.js';\nimport ControllableCircle from './Controllables/ControllableCircle.js';\nimport ControllableEllipse from './Controllables/ControllableEllipse.js';\nimport ControllablePath from './Controllables/ControllablePath.js';\nimport ControllableImage from './Controllables/ControllableImage.js';\nimport ControllableLabel from './Controllables/ControllableLabel.js';\nimport ControlPoint from './ControlPoint.js';\nimport EventEmitter from './EventEmitter.js';\nimport MockPoint from './MockPoint.js';\nimport NavigationBindings from './NavigationBindings.js';\nimport PopupComposition from './Popup/PopupComposition.js';\nimport U from '../../Core/Utilities.js';\nvar addEvent = U.addEvent, destroyObjectProperties = U.destroyObjectProperties, erase = U.erase, extend = U.extend, find = U.find, fireEvent = U.fireEvent, merge = U.merge, pick = U.pick, splat = U.splat, wrap = U.wrap;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Hide or show annotaiton attached to points.\n * @private\n */\nfunction adjustVisibility(item) {\n    var label = item.graphic, hasVisiblePoints = item.points.some(function (point) { return (point.series.visible !== false &&\n        point.visible !== false); });\n    if (label) {\n        if (!hasVisiblePoints) {\n            label.hide();\n        }\n        else if (label.visibility === 'hidden') {\n            label.show();\n        }\n    }\n}\n/**\n * @private\n */\nfunction getLabelsAndShapesOptions(baseOptions, newOptions) {\n    var mergedOptions = {};\n    ['labels', 'shapes'].forEach(function (name) {\n        var someBaseOptions = baseOptions[name];\n        if (someBaseOptions) {\n            if (newOptions[name]) {\n                mergedOptions[name] = splat(newOptions[name]).map(function (basicOptions, i) {\n                    return merge(someBaseOptions[i], basicOptions);\n                });\n            }\n            else {\n                mergedOptions[name] = baseOptions[name];\n            }\n        }\n    });\n    return mergedOptions;\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * An annotation class which serves as a container for items like labels or\n * shapes. Created items are positioned on the chart either by linking them to\n * existing points or created mock points\n *\n * @class\n * @name Highcharts.Annotation\n *\n * @param {Highcharts.Chart} chart\n *        A chart instance\n * @param {Highcharts.AnnotationsOptions} userOptions\n *        The annotation options\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    function Annotation(chart, userOptions) {\n        var _this = _super.call(this) || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.annotation = void 0;\n        _this.coll = 'annotations';\n        _this.collection = void 0;\n        _this.animationConfig = void 0;\n        _this.graphic = void 0;\n        _this.group = void 0;\n        _this.labelCollector = void 0;\n        _this.labelsGroup = void 0;\n        _this.shapesGroup = void 0;\n        /**\n         * The chart that the annotation belongs to.\n         *\n         * @name Highcharts.Annotation#chart\n         * @type {Highcharts.Chart}\n         */\n        _this.chart = chart;\n        /**\n         * The array of points which defines the annotation.\n         * @private\n         * @name Highcharts.Annotation#points\n         * @type {Array<Highcharts.Point>}\n         */\n        _this.points = [];\n        /**\n         * The array of control points.\n         * @private\n         * @name Highcharts.Annotation#controlPoints\n         * @type {Array<Annotation.ControlPoint>}\n         */\n        _this.controlPoints = [];\n        _this.coll = 'annotations';\n        /**\n         * The array of labels which belong to the annotation.\n         * @private\n         * @name Highcharts.Annotation#labels\n         * @type {Array<Highcharts.AnnotationLabelType>}\n         */\n        _this.labels = [];\n        /**\n         * The array of shapes which belong to the annotation.\n         * @private\n         * @name Highcharts.Annotation#shapes\n         * @type {Array<Highcharts.AnnotationShapeType>}\n         */\n        _this.shapes = [];\n        /**\n         * The options for the annotations.\n         *\n         * @name Highcharts.Annotation#options\n         * @type {Highcharts.AnnotationsOptions}\n         */\n        _this.options = merge(_this.defaultOptions, userOptions);\n        /**\n         * The user options for the annotations.\n         *\n         * @name Highcharts.Annotation#userOptions\n         * @type {Highcharts.AnnotationsOptions}\n         */\n        _this.userOptions = userOptions;\n        // Handle labels and shapes - those are arrays\n        // Merging does not work with arrays (stores reference)\n        var labelsAndShapes = getLabelsAndShapesOptions(_this.options, userOptions);\n        _this.options.labels = labelsAndShapes.labels;\n        _this.options.shapes = labelsAndShapes.shapes;\n        /**\n         * The callback that reports to the overlapping-labels module which\n         * labels it should account for.\n         * @private\n         * @name Highcharts.Annotation#labelCollector\n         * @type {Function}\n         */\n        /**\n         * The group svg element.\n         *\n         * @name Highcharts.Annotation#group\n         * @type {Highcharts.SVGElement}\n         */\n        /**\n         * The group svg element of the annotation's shapes.\n         *\n         * @name Highcharts.Annotation#shapesGroup\n         * @type {Highcharts.SVGElement}\n         */\n        /**\n         * The group svg element of the annotation's labels.\n         *\n         * @name Highcharts.Annotation#labelsGroup\n         * @type {Highcharts.SVGElement}\n         */\n        _this.init(chart, _this.options);\n        return _this;\n    }\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    Annotation.compose = function (ChartClass, PointerClass, SVGRendererClass) {\n        AnnotationChart.compose(Annotation, ChartClass, PointerClass);\n        ControllableLabel.compose(SVGRendererClass);\n        ControllablePath.compose(ChartClass, SVGRendererClass);\n        NavigationBindings.compose(Annotation, ChartClass);\n        PopupComposition.compose(NavigationBindings, PointerClass);\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    Annotation.prototype.addClipPaths = function () {\n        this.setClipAxes();\n        if (this.clipXAxis &&\n            this.clipYAxis &&\n            this.options.crop // #15399\n        ) {\n            this.clipRect = this.chart.renderer.clipRect(this.getClipBox());\n        }\n    };\n    /**\n     * @private\n     */\n    Annotation.prototype.addLabels = function () {\n        var _this = this;\n        var labelsOptions = (this.options.labels || []);\n        labelsOptions.forEach(function (labelOptions, i) {\n            var label = _this.initLabel(labelOptions, i);\n            merge(true, labelsOptions[i], label.options);\n        });\n    };\n    /**\n     * @private\n     */\n    Annotation.prototype.addShapes = function () {\n        var _this = this;\n        var shapes = this.options.shapes || [];\n        shapes.forEach(function (shapeOptions, i) {\n            var shape = _this.initShape(shapeOptions, i);\n            merge(true, shapes[i], shape.options);\n        });\n    };\n    /**\n     * Destroy the annotation. This function does not touch the chart\n     * that the annotation belongs to (all annotations are kept in\n     * the chart.annotations array) - it is recommended to use\n     * {@link Highcharts.Chart#removeAnnotation} instead.\n     * @private\n     */\n    Annotation.prototype.destroy = function () {\n        var chart = this.chart, destroyItem = function (item) {\n            item.destroy();\n        };\n        this.labels.forEach(destroyItem);\n        this.shapes.forEach(destroyItem);\n        this.clipXAxis = null;\n        this.clipYAxis = null;\n        erase(chart.labelCollectors, this.labelCollector);\n        _super.prototype.destroy.call(this);\n        controllableProto.destroy.call(this);\n        destroyObjectProperties(this, chart);\n    };\n    /**\n     * Destroy a single item.\n     * @private\n     */\n    Annotation.prototype.destroyItem = function (item) {\n        // erase from shapes or labels array\n        erase(this[item.itemType + 's'], item);\n        item.destroy();\n    };\n    /**\n     * @private\n     */\n    Annotation.prototype.getClipBox = function () {\n        if (this.clipXAxis && this.clipYAxis) {\n            return {\n                x: this.clipXAxis.left,\n                y: this.clipYAxis.top,\n                width: this.clipXAxis.width,\n                height: this.clipYAxis.height\n            };\n        }\n    };\n    /**\n     * Initialize the annotation.\n     * @private\n     */\n    Annotation.prototype.init = function (_annotationOrChart, _userOptions, _index) {\n        var chart = this.chart, animOptions = this.options.animation;\n        this.linkPoints();\n        this.addControlPoints();\n        this.addShapes();\n        this.addLabels();\n        this.setLabelCollector();\n        this.animationConfig = getDeferredAnimation(chart, animOptions);\n    };\n    /**\n     * Initialisation of a single label\n     * @private\n     */\n    Annotation.prototype.initLabel = function (labelOptions, index) {\n        var options = merge(this.options.labelOptions, {\n            controlPointOptions: this.options.controlPointOptions\n        }, labelOptions), label = new ControllableLabel(this, options, index);\n        label.itemType = 'label';\n        this.labels.push(label);\n        return label;\n    };\n    /**\n     * Initialisation of a single shape\n     * @private\n     * @param {Object} shapeOptions\n     * a confg object for a single shape\n     * @param {number} index\n     * annotation may have many shapes, this is the shape's index saved in\n     * shapes.index.\n     */\n    Annotation.prototype.initShape = function (shapeOptions, index) {\n        var options = merge(this.options.shapeOptions, {\n            controlPointOptions: this.options.controlPointOptions\n        }, shapeOptions), shape = new (Annotation.shapesMap[options.type])(this, options, index);\n        shape.itemType = 'shape';\n        this.shapes.push(shape);\n        return shape;\n    };\n    /**\n     * @private\n     */\n    Annotation.prototype.redraw = function (animation) {\n        this.linkPoints();\n        if (!this.graphic) {\n            this.render();\n        }\n        if (this.clipRect) {\n            this.clipRect.animate(this.getClipBox());\n        }\n        this.redrawItems(this.shapes, animation);\n        this.redrawItems(this.labels, animation);\n        controllableProto.redraw.call(this, animation);\n    };\n    /**\n     * Redraw a single item.\n     * @private\n     */\n    Annotation.prototype.redrawItem = function (item, animation) {\n        item.linkPoints();\n        if (!item.shouldBeDrawn()) {\n            this.destroyItem(item);\n        }\n        else {\n            if (!item.graphic) {\n                this.renderItem(item);\n            }\n            item.redraw(pick(animation, true) && item.graphic.placed);\n            if (item.points.length) {\n                adjustVisibility(item);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Annotation.prototype.redrawItems = function (items, animation) {\n        var i = items.length;\n        // needs a backward loop\n        // labels/shapes array might be modified\n        // due to destruction of the item\n        while (i--) {\n            this.redrawItem(items[i], animation);\n        }\n    };\n    /**\n     * See {@link Highcharts.Chart#removeAnnotation}.\n     * @private\n     */\n    Annotation.prototype.remove = function () {\n        // Let chart.update() remove annoations on demand\n        return this.chart.removeAnnotation(this);\n    };\n    /**\n     * @private\n     */\n    Annotation.prototype.render = function () {\n        var renderer = this.chart.renderer;\n        this.graphic = renderer\n            .g('annotation')\n            .attr({\n            opacity: 0,\n            zIndex: this.options.zIndex,\n            visibility: this.options.visible ?\n                'inherit' :\n                'hidden'\n        })\n            .add();\n        this.shapesGroup = renderer\n            .g('annotation-shapes')\n            .add(this.graphic);\n        if (this.options.crop) { // #15399\n            this.shapesGroup.clip(this.chart.plotBoxClip);\n        }\n        this.labelsGroup = renderer\n            .g('annotation-labels')\n            .attr({\n            // hideOverlappingLabels requires translation\n            translateX: 0,\n            translateY: 0\n        })\n            .add(this.graphic);\n        this.addClipPaths();\n        if (this.clipRect) {\n            this.graphic.clip(this.clipRect);\n        }\n        // Render shapes and labels before adding events (#13070).\n        this.renderItems(this.shapes);\n        this.renderItems(this.labels);\n        this.addEvents();\n        controllableProto.render.call(this);\n    };\n    /**\n     * @private\n     */\n    Annotation.prototype.renderItem = function (item) {\n        item.render(item.itemType === 'label' ?\n            this.labelsGroup :\n            this.shapesGroup);\n    };\n    /**\n     * @private\n     */\n    Annotation.prototype.renderItems = function (items) {\n        var i = items.length;\n        while (i--) {\n            this.renderItem(items[i]);\n        }\n    };\n    /**\n     * @private\n     */\n    Annotation.prototype.setClipAxes = function () {\n        var xAxes = this.chart.xAxis, yAxes = this.chart.yAxis, linkedAxes = (this.options.labels || [])\n            .concat(this.options.shapes || [])\n            .reduce(function (axes, labelOrShape) {\n            var point = labelOrShape &&\n                (labelOrShape.point ||\n                    (labelOrShape.points && labelOrShape.points[0]));\n            return [\n                xAxes[point && point.xAxis] || axes[0],\n                yAxes[point && point.yAxis] || axes[1]\n            ];\n        }, []);\n        this.clipXAxis = linkedAxes[0];\n        this.clipYAxis = linkedAxes[1];\n    };\n    /**\n     * @private\n     */\n    Annotation.prototype.setControlPointsVisibility = function (visible) {\n        var setItemControlPointsVisibility = function (item) {\n            item.setControlPointsVisibility(visible);\n        };\n        controllableProto.setControlPointsVisibility.call(this, visible);\n        this.shapes.forEach(setItemControlPointsVisibility);\n        this.labels.forEach(setItemControlPointsVisibility);\n    };\n    /**\n     * @private\n     */\n    Annotation.prototype.setLabelCollector = function () {\n        var annotation = this;\n        annotation.labelCollector = function () {\n            return annotation.labels.reduce(function (labels, label) {\n                if (!label.options.allowOverlap) {\n                    labels.push(label.graphic);\n                }\n                return labels;\n            }, []);\n        };\n        annotation.chart.labelCollectors.push(annotation.labelCollector);\n    };\n    /**\n     * Set an annotation options.\n     * @private\n     * @param {Highcharts.AnnotationsOptions} userOptions\n     *        User options for an annotation\n     */\n    Annotation.prototype.setOptions = function (userOptions) {\n        this.options = merge(this.defaultOptions, userOptions);\n    };\n    /**\n     * Set the annotation's visibility.\n     * @private\n     * @param {boolean} [visible]\n     * Whether to show or hide an annotation. If the param is omitted, the\n     * annotation's visibility is toggled.\n     */\n    Annotation.prototype.setVisibility = function (visible) {\n        var options = this.options, navigation = this.chart.navigationBindings, visibility = pick(visible, !options.visible);\n        this.graphic.attr('visibility', visibility ? 'inherit' : 'hidden');\n        if (!visibility) {\n            this.setControlPointsVisibility(false);\n            if (navigation.activeAnnotation === this &&\n                navigation.popup &&\n                navigation.popup.formType === 'annotation-toolbar') {\n                fireEvent(navigation, 'closePopup');\n            }\n        }\n        options.visible = visibility;\n    };\n    /**\n     * Updates an annotation.\n     *\n     * @function Highcharts.Annotation#update\n     *\n     * @param {Partial<Highcharts.AnnotationsOptions>} userOptions\n     *        New user options for the annotation.\n     *\n     */\n    Annotation.prototype.update = function (userOptions, redraw) {\n        var chart = this.chart, labelsAndShapes = getLabelsAndShapesOptions(this.userOptions, userOptions), userOptionsIndex = chart.annotations.indexOf(this), options = merge(true, this.userOptions, userOptions);\n        options.labels = labelsAndShapes.labels;\n        options.shapes = labelsAndShapes.shapes;\n        this.destroy();\n        this.constructor(chart, options);\n        // Update options in chart options, used in exporting (#9767):\n        chart.options.annotations[userOptionsIndex] = options;\n        this.isUpdating = true;\n        if (pick(redraw, true)) {\n            chart.redraw();\n        }\n        fireEvent(this, 'afterUpdate');\n        this.isUpdating = false;\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * @private\n     */\n    Annotation.ControlPoint = ControlPoint;\n    /**\n     * @private\n     */\n    Annotation.MockPoint = MockPoint;\n    /**\n     * An object uses for mapping between a shape type and a constructor.\n     * To add a new shape type extend this object with type name as a key\n     * and a constructor as its value.\n     */\n    Annotation.shapesMap = {\n        'rect': ControllableRect,\n        'circle': ControllableCircle,\n        'ellipse': ControllableEllipse,\n        'path': ControllablePath,\n        'image': ControllableImage\n    };\n    /**\n     * @private\n     */\n    Annotation.types = {};\n    return Annotation;\n}(EventEmitter));\nmerge(true, Annotation.prototype, Controllable.prototype, \n// restore original Annotation implementation after mixin overwrite:\nmerge(Annotation.prototype, {\n    /**\n     * List of events for `annotation.options.events` that should not be\n     * added to `annotation.graphic` but to the `annotation`.\n     *\n     * @private\n     * @type {Array<string>}\n     */\n    nonDOMEvents: ['add', 'afterUpdate', 'drag', 'remove'],\n    defaultOptions: AnnotationDefaults\n}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default Annotation;\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * Possible directions for draggable annotations. An empty string (`''`)\n * makes the annotation undraggable.\n *\n * @typedef {''|'x'|'xy'|'y'} Highcharts.AnnotationDraggableValue\n * @requires modules/annotations\n */\n/**\n * @private\n * @typedef {\n *          Highcharts.AnnotationControllableCircle|\n *          Highcharts.AnnotationControllableImage|\n *          Highcharts.AnnotationControllablePath|\n *          Highcharts.AnnotationControllableRect\n *     } Highcharts.AnnotationShapeType\n * @requires modules/annotations\n */\n/**\n * @private\n * @typedef {\n *          Highcharts.AnnotationControllableLabel\n *     } Highcharts.AnnotationLabelType\n * @requires modules/annotations\n */\n/**\n * A point-like object, a mock point or a point used in series.\n * @private\n * @typedef {\n *          Highcharts.AnnotationMockPoint|\n *          Highcharts.Point\n *     } Highcharts.AnnotationPointType\n * @requires modules/annotations\n */\n/**\n * Shape point as string, object or function.\n *\n * @typedef {\n *          string|\n *          Highcharts.AnnotationMockPointOptionsObject|\n *          Highcharts.AnnotationMockPointFunction\n *     } Highcharts.AnnotationShapePointOptions\n */\n(''); // keeps doclets above in JS file\n","/**\n * @license Highcharts JS v10.3.3 (2023-01-20)\n * @module highcharts/modules/annotations\n * @requires highcharts\n *\n * Annotations module\n *\n * (c) 2009-2021 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n'use strict';\nimport Highcharts from '../../Core/Globals.js';\nimport Annotation from '../../Extensions/Annotations/Annotation.js';\nvar G = Highcharts;\nG.Annotation = Annotation;\nAnnotation.compose(G.Chart, G.Pointer, G.SVGRenderer);\n"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]}