{"version":3,"file":"common.88bed4d808a77c82.js","mappings":"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","names":["ChartNavigationComposition","compose","chart","navigation","Additions","this","updates","prototype","addUpdate","updateFn","push","update","options","redraw","_this","forEach","call","lineWidth","findNearestPointBy","jitter","x","y","marker","enabled","tooltip","headerFormat","pointFormat","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","TypeError","String","__","constructor","create","_a","SeriesRegistry","ColumnSeries","column","LineSeries","line","addEvent","U","extend","merge","ScatterSeries","_super","apply","arguments","data","points","applyJitter","series","len","length","point","i","dim","j","axis","min","max","translatedJitter","plotProp","toUpperCase","isNull","transA","isLog","Math","unrandom","seed","rand","sin","floor","clientX","plotX","drawGraph","graph","destroy","defaultOptions","ScatterSeriesDefaults","drawTracker","sorted","requireSorting","noSharedTooltip","trackerGroups","takeOrdinalPosition"],"sourceRoot":"webpack:///","sources":["./node_modules/highcharts/es-modules/Core/Chart/ChartNavigationComposition.js","./node_modules/highcharts/es-modules/Series/Scatter/ScatterSeriesDefaults.js","./node_modules/highcharts/es-modules/Series/Scatter/ScatterSeries.js"],"sourcesContent":["/**\n *\n *  (c) 2010-2021 Pawe≈Ç Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n/* *\n *\n *  Composition\n *\n * */\nvar ChartNavigationComposition;\n(function (ChartNavigationComposition) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * @private\n     */\n    function compose(chart) {\n        if (!chart.navigation) {\n            chart.navigation = new Additions(chart);\n        }\n        return chart;\n    }\n    ChartNavigationComposition.compose = compose;\n    /* *\n     *\n     *  Class\n     *\n     * */\n    /**\n     * Initializes `chart.navigation` object which delegates `update()` methods\n     * to all other common classes (used in exporting and navigationBindings).\n     * @private\n     */\n    var Additions = /** @class */ (function () {\n        /* *\n         *\n         *  Constructor\n         *\n         * */\n        function Additions(chart) {\n            this.updates = [];\n            this.chart = chart;\n        }\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Registers an `update()` method in the `chart.navigation` object.\n         *\n         * @private\n         * @param {UpdateFunction} updateFn\n         * The `update()` method that will be called in `chart.update()`.\n         */\n        Additions.prototype.addUpdate = function (updateFn) {\n            this.chart.navigation.updates.push(updateFn);\n        };\n        /**\n         * @private\n         */\n        Additions.prototype.update = function (options, redraw) {\n            var _this = this;\n            this.updates.forEach(function (updateFn) {\n                updateFn.call(_this.chart, options, redraw);\n            });\n        };\n        return Additions;\n    }());\n    ChartNavigationComposition.Additions = Additions;\n})(ChartNavigationComposition || (ChartNavigationComposition = {}));\n/* *\n *\n *  Default Export\n *\n * */\nexport default ChartNavigationComposition;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A scatter plot uses cartesian coordinates to display values for two\n * variables for a set of data.\n *\n * @sample {highcharts} highcharts/demo/scatter/\n *         Scatter plot\n *\n * @extends      plotOptions.line\n * @excluding    cropThreshold, pointPlacement, shadow, useOhlcData\n * @product      highcharts highstock\n * @optionparent plotOptions.scatter\n */\nvar ScatterSeriesDefaults = {\n    /**\n     * The width of the line connecting the data points.\n     *\n     * @sample {highcharts} highcharts/plotoptions/scatter-linewidth-none/\n     *         0 by default\n     * @sample {highcharts} highcharts/plotoptions/scatter-linewidth-1/\n     *         1px\n     *\n     * @product highcharts highstock\n     */\n    lineWidth: 0,\n    findNearestPointBy: 'xy',\n    /**\n     * Apply a jitter effect for the rendered markers. When plotting\n     * discrete values, a little random noise may help telling the points\n     * apart. The jitter setting applies a random displacement of up to `n`\n     * axis units in either direction. So for example on a horizontal X\n     * axis, setting the `jitter.x` to 0.24 will render the point in a\n     * random position between 0.24 units to the left and 0.24 units to the\n     * right of the true axis position. On a category axis, setting it to\n     * 0.5 will fill up the bin and make the data appear continuous.\n     *\n     * When rendered on top of a box plot or a column series, a jitter value\n     * of 0.24 will correspond to the underlying series' default\n     * [groupPadding](\n     * https://api.highcharts.com/highcharts/plotOptions.column.groupPadding)\n     * and [pointPadding](\n     * https://api.highcharts.com/highcharts/plotOptions.column.pointPadding)\n     * settings.\n     *\n     * @sample {highcharts} highcharts/demo/scatter-jitter\n     *         Jitter on a scatter plot\n     *\n     * @sample {highcharts} highcharts/series-scatter/jitter-boxplot\n     *         Jittered scatter plot on top of a box plot\n     *\n     * @product highcharts highstock\n     * @since 7.0.2\n     */\n    jitter: {\n        /**\n         * The maximal X offset for the random jitter effect.\n         */\n        x: 0,\n        /**\n         * The maximal Y offset for the random jitter effect.\n         */\n        y: 0\n    },\n    marker: {\n        enabled: true // Overrides auto-enabling in line series (#3647)\n    },\n    /**\n     * Sticky tracking of mouse events. When true, the `mouseOut` event\n     * on a series isn't triggered until the mouse moves over another\n     * series, or out of the plot area. When false, the `mouseOut` event on\n     * a series is triggered when the mouse leaves the area around the\n     * series' graph or markers. This also implies the tooltip. When\n     * `stickyTracking` is false and `tooltip.shared` is false, the tooltip\n     * will be hidden when moving the mouse between series.\n     *\n     * @type      {boolean}\n     * @default   false\n     * @product   highcharts highstock highmaps\n     * @apioption plotOptions.scatter.stickyTracking\n     */\n    /**\n     * A configuration object for the tooltip rendering of each single\n     * series. Properties are inherited from [tooltip](#tooltip).\n     * Overridable properties are `headerFormat`, `pointFormat`,\n     * `yDecimals`, `xDateFormat`, `yPrefix` and `ySuffix`. Unlike other\n     * series, in a scatter plot the series.name by default shows in the\n     * headerFormat and point.x and point.y in the pointFormat.\n     *\n     * @product highcharts highstock highmaps\n     */\n    tooltip: {\n        /**\n         * @product highcharts highstock\n         */\n        headerFormat: '<span style=\"color:{point.color}\">\\u25CF</span> ' +\n            '<span style=\"font-size: 10px\"> {series.name}</span><br/>',\n        pointFormat: 'x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>'\n    }\n};\n/**\n * A `scatter` series. If the [type](#series.scatter.type) option is\n * not specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.scatter\n * @excluding cropThreshold, dataParser, dataURL, useOhlcData\n * @product   highcharts highstock\n * @apioption series.scatter\n */\n/**\n * An array of data points for the series. For the `scatter` series\n * type, points can be given in the following ways:\n *\n * 1. An array of numerical values. In this case, the numerical values will be\n *    interpreted as `y` options. The `x` values will be automatically\n *    calculated, either starting at 0 and incremented by 1, or from\n *    `pointStart` and `pointInterval` given in the series options. If the axis\n *    has categories, these will be used. Example:\n *    ```js\n *    data: [0, 5, 3, 5]\n *    ```\n *\n * 2. An array of arrays with 2 values. In this case, the values correspond to\n *    `x,y`. If the first value is a string, it is applied as the name of the\n *    point, and the `x` value is inferred.\n *    ```js\n *    data: [\n *        [0, 0],\n *        [1, 8],\n *        [2, 9]\n *    ]\n *    ```\n *\n * 3. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.scatter.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        y: 2,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        y: 4,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/chart/reflow-true/\n *         Numerical values\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<number|Array<(number|string),(number|null)>|null|*>}\n * @extends   series.line.data\n * @product   highcharts highstock\n * @apioption series.scatter.data\n */\n''; // keeps doclets above in JS file\n/* *\n *\n *  Default Export\n *\n * */\nexport default ScatterSeriesDefaults;\n","/* *\n *\n *  (c) 2010-2021 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ScatterSeriesDefaults from './ScatterSeriesDefaults.js';\nimport SeriesRegistry from '../../Core/Series/SeriesRegistry.js';\nvar _a = SeriesRegistry.seriesTypes, ColumnSeries = _a.column, LineSeries = _a.line;\nimport U from '../../Core/Utilities.js';\nvar addEvent = U.addEvent, extend = U.extend, merge = U.merge;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Scatter series type.\n *\n * @private\n */\nvar ScatterSeries = /** @class */ (function (_super) {\n    __extends(ScatterSeries, _super);\n    function ScatterSeries() {\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.data = void 0;\n        _this.options = void 0;\n        _this.points = void 0;\n        return _this;\n        /* eslint-enable valid-jsdoc */\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Optionally add the jitter effect.\n     * @private\n     */\n    ScatterSeries.prototype.applyJitter = function () {\n        var series = this, jitter = this.options.jitter, len = this.points.length;\n        /**\n         * Return a repeatable, pseudo-random number based on an integer\n         * seed.\n         * @private\n         */\n        function unrandom(seed) {\n            var rand = Math.sin(seed) * 10000;\n            return rand - Math.floor(rand);\n        }\n        if (jitter) {\n            this.points.forEach(function (point, i) {\n                ['x', 'y'].forEach(function (dim, j) {\n                    var axis, plotProp = 'plot' + dim.toUpperCase(), min, max, translatedJitter;\n                    if (jitter[dim] && !point.isNull) {\n                        axis = series[dim + 'Axis'];\n                        translatedJitter =\n                            jitter[dim] * axis.transA;\n                        if (axis && !axis.isLog) {\n                            // Identify the outer bounds of the jitter range\n                            min = Math.max(0, point[plotProp] - translatedJitter);\n                            max = Math.min(axis.len, point[plotProp] + translatedJitter);\n                            // Find a random position within this range\n                            point[plotProp] = min +\n                                (max - min) * unrandom(i + j * len);\n                            // Update clientX for the tooltip k-d-tree\n                            if (dim === 'x') {\n                                point.clientX = point.plotX;\n                            }\n                        }\n                    }\n                });\n            });\n        }\n    };\n    /**\n     * @private\n     */\n    ScatterSeries.prototype.drawGraph = function () {\n        if (this.options.lineWidth) {\n            _super.prototype.drawGraph.call(this);\n        }\n        else if (this.graph) {\n            this.graph = this.graph.destroy();\n        }\n    };\n    ScatterSeries.defaultOptions = merge(LineSeries.defaultOptions, ScatterSeriesDefaults);\n    return ScatterSeries;\n}(LineSeries));\nextend(ScatterSeries.prototype, {\n    drawTracker: ColumnSeries.prototype.drawTracker,\n    sorted: false,\n    requireSorting: false,\n    noSharedTooltip: true,\n    trackerGroups: ['group', 'markerGroup', 'dataLabelsGroup'],\n    takeOrdinalPosition: false // #2342\n});\n/* *\n *\n *  Events\n *\n * */\n/* eslint-disable no-invalid-this */\naddEvent(ScatterSeries, 'afterTranslate', function () {\n    this.applyJitter();\n});\nSeriesRegistry.registerSeriesType('scatter', ScatterSeries);\n/* *\n *\n *  Default Export\n *\n * */\nexport default ScatterSeries;\n"],"x_google_ignoreList":[0,1,2]}